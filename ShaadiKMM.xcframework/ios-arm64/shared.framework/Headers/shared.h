#import <Foundation/NSArray.h>
#import <Foundation/NSDictionary.h>
#import <Foundation/NSError.h>
#import <Foundation/NSObject.h>
#import <Foundation/NSSet.h>
#import <Foundation/NSString.h>
#import <Foundation/NSValue.h>

@class SharedIMobileCountryOptionsLayerViewModelAction, SharedIMobileCountryOptionsLayerViewModelActionOnInputChange, SharedIMobileCountryOptionsLayerViewModelActionSearch, SharedIMobileCountryOptionsLayerViewModelUIEvent, SharedSelection, SharedIMobileCountryOptionsLayerViewModelUIState, SharedAppCoroutineDispatchers, SharedViewModel, SharedCommonFlow<T>, SharedBaseViewModel<T, E>, SharedIPage1_2RedesignViewModelAction, SharedIPage1_2RedesignViewModelActionContinue, SharedIPage1_2RedesignViewModelActionFocusChangedDOBDay, SharedIPage1_2RedesignViewModelActionFocusChangedDOBMonth, SharedIPage1_2RedesignViewModelActionFocusChangedDOBYear, SharedIPage1_2RedesignViewModelActionFocusChangedFirstName, SharedIPage1_2RedesignViewModelActionFocusChangedLastName, SharedIPage1_2RedesignViewModelActionInit, SharedIPage1_2RedesignViewModelActionInputChangedDOBDay, SharedIPage1_2RedesignViewModelActionInputChangedDOBMonth, SharedIPage1_2RedesignViewModelActionInputChangedDOBYear, SharedIPage1_2RedesignViewModelActionInputChangedFirstName, SharedIPage1_2RedesignViewModelActionInputChangedLastName, SharedIPage1_2RedesignViewModelFormField, SharedIPage1_2RedesignViewModelUIEvent, SharedIPage1_2RedesignViewModelUIEventForceFocusDobMonth, SharedIPage1_2RedesignViewModelUIEventForceFocusDobYear, SharedIPage1_2RedesignViewModelUIEventNavigateToPage3, SharedIPage1_2RedesignViewModelUIEventValidationError, SharedIPage1_1RedesignViewModelButtonInputField, SharedIPage1_2RedesignViewModelUIState, SharedRegInputDataHolder, SharedIPage1_3RedesignViewModelAction, SharedIPage1_3RedesignViewModelActionContinue, SharedIPage1_3RedesignViewModelActionInit, SharedIPage1_3RedesignViewModelActionValueChangedCountry, SharedIPage1_3RedesignViewModelActionValueChangedMotherTongue, SharedIPage1_3RedesignViewModelActionValueChangedReligion, SharedIPage1_3RedesignViewModelDropDownField, SharedIPage1_3RedesignViewModelDropDownFieldCountry, SharedIPage1_3RedesignViewModelDropDownFieldMotherTongue, SharedIPage1_3RedesignViewModelUIEvent, SharedIPage1_3RedesignViewModelUIEventNavigateToPage4, SharedIPage1_3RedesignViewModelUIEventValidationError, SharedIPage1_3RedesignViewModelUIState, SharedIPage1_1RedesignViewModelAction, SharedIPage1_1RedesignViewModelActionContinue, SharedIPage1_1RedesignViewModelActionValueChangedGender, SharedIPage1_1RedesignViewModelActionValueChangedProfileFor, SharedIPage1_1RedesignViewModelDropDownField, SharedIPage1_1RedesignViewModelDropDownFieldGender, SharedIPage1_1RedesignViewModelUIEvent, SharedIPage1_1RedesignViewModelUIEventNavigateToPage2, SharedIPage1_1RedesignViewModelUIEventValidationError, SharedIPage1_1RedesignViewModelUIState, SharedPage1_1RedesignViewModelCompanion, SharedIPage1_4RedesignViewModelAction, SharedIPage1_4RedesignViewModelActionAutoMobileDetection, SharedIPage1_4RedesignViewModelActionFocusChangedEmailId, SharedIPage1_4RedesignViewModelActionFocusChangedMobileNumber, SharedIPage1_4RedesignViewModelActionInputChangedEmailId, SharedIPage1_4RedesignViewModelActionInputChangedMobileNumber, SharedIPage1_4RedesignViewModelActionSubmit, SharedIPage1_4RedesignViewModelActionValueChangedMobileCountry, SharedIPage1_4RedesignViewModelCompanion, SharedIPage1_4RedesignViewModelDropDownFieldMobileCountry, SharedIPage1_4RedesignViewModelFormFieldEmail, SharedIPage1_4RedesignViewModelFormFieldMobileNumber, SharedIPage1_4RedesignViewModelSubmitButtonInputField, SharedIPage1_4RedesignViewModelUIEvent, SharedIPage1_4RedesignViewModelUIEventMessage, SharedIPage1_4RedesignViewModelUIEventProfileCreated, SharedIPage1_4RedesignViewModelUIEventValidationError, SharedIPage1_4RedesignViewModelUIState, SharedDeviceConstants, SharedIPage1_1ViewModelAction, SharedIPage1_1ViewModelActionContinue, SharedIPage1_1ViewModelActionFocusChangedFirstName, SharedIPage1_1ViewModelActionFocusChangedLastName, SharedIPage1_1ViewModelActionValueChangedGender, SharedIPage1_1ViewModelActionValueChangedMotherTongue, SharedIPage1_1ViewModelActionValueChangedProfileFor, SharedIPage1_1ViewModelActionValueChangedReligion, SharedIPage1_1ViewModelDropDownField, SharedIPage1_1ViewModelDropDownFieldGender, SharedIPage1_1ViewModelDropDownFieldMobileCountry, SharedIPage1_1ViewModelDropDownFieldMotherTongue, SharedIPage1_1ViewModelFormField, SharedIPage1_1ViewModelFormFieldFirstName, SharedIPage1_1ViewModelFormFieldMobileNumber, SharedIPage1_1ViewModelUIEvent, SharedIPage1_1ViewModelUIEventNavigateToPage2, SharedIPage1_1ViewModelUIEventValidationError, SharedIPage1_1ViewModelUIState, SharedIPage1_2ViewModelAction, SharedIPage1_2ViewModelActionFocusChangedEmailId, SharedIPage1_2ViewModelActionFocusChangedMobileNumber, SharedIPage1_2ViewModelActionSubmit, SharedIPage1_2ViewModelActionUpdateValues, SharedIPage1_2ViewModelActionValueChangedCountry, SharedIPage1_2ViewModelActionValueChangedDOBDay, SharedIPage1_2ViewModelActionValueChangedDOBMonth, SharedIPage1_2ViewModelActionValueChangedDOBYear, SharedIPage1_2ViewModelActionValueChangedMobileCountry, SharedIPage1_2ViewModelCompanion, SharedIPage1_2ViewModelFormFieldEmail, SharedIPage1_2ViewModelUIEvent, SharedIPage1_2ViewModelUIEventMessage, SharedIPage1_2ViewModelUIEventProfileCreated, SharedIPage1_2ViewModelUIEventValidationError, SharedIPage1_2ViewModelUIState, SharedEmployeeCompanion, SharedEmployee, SharedEmployeeListCompanion, SharedEmployeeList, SharedICreateRegSessionResponseDTO, SharedExperimentBucket, SharedKotlinEnumCompanion, SharedKotlinEnum<E>, SharedKotlinArray<T>, SharedICreateRegSessionRequestDTO, SharedIRegisterProfileRequestDTO, SharedIRegisterProfileResponseDTO, SharedIRegisterProfileCompanion, SharedIRegisterProfileErrorResponseDTO, SharedSignupType, SharedIRegisterProfileMetaData, SharedDomainType, SharedRegInputData, SharedIRegisterProfileSucccessResponseDTO, SharedIDeviceCountryDetectorResponseDTO, SharedRegPage1TrackingPayload, SharedIRegPage1TrackingRequestDTO, SharedIDateValidatorRequestDTO, SharedIDateValidatorResponseDTO, SharedIDateValidatorRequestDTO2, SharedIDateValidatorRequestDTO3, SharedIDateValidatorDateValidatorError, SharedIDateValidatorErrorDTO, SharedIDateValidatorSuccessDTO, SharedIEmailValidatorRequestDTO, SharedIEmailValidatorResponseDTO, SharedIEmailValidatorEmailValidatorError, SharedIPhoneNumberValidatorRequestDTO, SharedIPhoneNumberValidatorResponseDTO, SharedIPhoneNumberValidatorPhoneNumberValidatorError, SharedGenderEnum, SharedAppNetworkResult<T>, SharedProfileRegisteredResponse, SharedSoaHeaders, SharedProfileRegisteredResponseProfileData, SharedProfileRegisteredResponseCompanion, SharedProfileRegisteredResponseAccountCompanion, SharedProfileRegisteredResponseAccount, SharedProfileRegisteredResponseProfileDataCompanion, SharedGuestToken, SharedDataWrapper<T>, SharedKotlinUnit, SharedGuestTokenCompanion, SharedCountryDaoModel, SharedQuery<__covariant RowType>, SharedCountryPhoneCodeDaoModel, SharedMotherTongueDaoModel, SharedPhotoPrivacyOptionDaoModel, SharedReligionDaoModel, SharedMasterDatabaseCompanion, SharedCountry, SharedMotherTongue, SharedPhotoPrivacyOption, SharedReligion, SharedSelection2<T>, SharedLookupMasterNetworkModel, SharedCountryNetworkModelCompanion, SharedCountryNetworkModel, SharedGenericLookupItemNetworkModelCompanion, SharedGenericLookupItemNetworkModel, SharedMasterData, SharedPrivacyNetworkModel, SharedLookupMasterNetworkModelCompanion, SharedReligionNetworkModel, SharedMotherTongueNetworkModel, SharedMasterDataCompanion, SharedMotherTongueNetworkModelCompanion, SharedPrivacyNetworkModelCompanion, SharedReligionNetworkModelCompanion, SharedCountryPhoneCode, SharedCountryPhoneCodeMasterNetworkModel, SharedCountryPhoneCodeNetworkModel, SharedCountryPhoneCodeMasterNetworkModelCompanion, SharedCountryPhoneCodeNetworkModelCompanion, SharedApiMessages, SharedKotlinException, SharedState, SharedNetworkResult<T, E>, SharedAppServerError, SharedLoading<T>, SharedNetworkException<T>, SharedSuccess<T>, SharedUnsuccessful<T>, SharedHttpClient, SharedSnowplowBaseTrackingData, SharedErrorModel, SharedAppServerErrorCompanion, SharedDataWrapperCompanion, SharedErrorModelCompanion, SharedCoroutineDependency, SharedLaunchWhen, SharedCoroutineDispatcher, SharedHttpClientEngineConfig, SharedIos, SharedIosClientEngineConfig, SharedProxyConfig, SharedKotlinNothing, NSMutableURLRequest, NSURLSessionConfiguration, NSURLSession, NSURLSessionTask, NSURLAuthenticationChallenge, NSURLCredential, SharedKotlinThrowable, SharedIOException, NSError, SharedPinnedCertificateCompanion, SharedPinnedCertificate, SharedLogLevel, SharedLoggerCompanion, SharedHttpRequestBuilder, SharedLoggingCompanion, SharedAttributeKey<T>, SharedLogging, SharedLoggingConfig, SharedTypeInfo, SharedOutgoingContent, SharedContentType, SharedJson, SharedKotlinxSerializerCompanion, SharedJsonFeatureFeature, SharedJsonFeature, SharedJsonFeatureConfig, SharedFloatToleranceMatcher, SharedDiffCompanion, SharedDiff, SharedUUIDVersion, SharedKotlinRegex, SharedPercentage, SharedKotlinAbstractCoroutineContextElement, SharedAfterPropertyContextElementKey, SharedAfterPropertyContextElement, SharedRandomSource, SharedEdgeConfig, SharedGen<__covariant A>, SharedArbCompanion, SharedSample<__covariant A>, SharedBeforePropertyContextElementKey, SharedBeforePropertyContextElement, SharedConstraintsCompanion, SharedEdgeConfigCompanion, SharedExhaustiveCompanion, SharedArb<__covariant A>, SharedShrinkingMode, SharedPropTest, SharedPropTestConfig, SharedPropertyResult, SharedPropertyTesting, SharedRTree<__covariant A>, SharedKotlinRandom, SharedRandomSourceCompanion, SharedShrinkingModeBounded, SharedShrinkingModeOff, SharedShrinkingModeUnbounded, SharedStandardLabelsReporter, SharedShrinkResult<__covariant A>, SharedStepResult<A>, SharedArbitraryBuilderCompanion, SharedArbitraryBuilder<A>, SharedCodepointCompanion, SharedCodepoint, SharedDoubleShrinker, SharedFloatShrinker, SharedGeoLocation, SharedKotlinIntRange, SharedKotlinLongRange, SharedKotlinRuntimeException, SharedSingleShotArbContinuation<F, A>, SharedStringShrinker, SharedKotlinUIntRange, SharedKotlinULongRange, SharedPrinted, SharedActual, SharedKotlinError, SharedKotlinAssertionError, SharedAssertionsConfig, SharedErrorCollectionMode, SharedExceptions, SharedExpected, SharedMultiAssertionErrorCompanion, SharedNoopAssertionsCounter, SharedNoopErrorCollector, SharedArrayPrint, SharedBooleanPrint, SharedBytePrint, SharedCharPrint, SharedDoublePrint, SharedFloatPrint, SharedIntPrint, SharedKClassPrint, SharedLongPrint, SharedMapPrint, SharedNullPrint, SharedPrinters, SharedShortPrint, SharedStringPrint, SharedToStringPrint, SharedExponentialIntervalCompanion, SharedFibonacciIntervalCompanion, SharedPatienceConfig, SharedUntilListenerCompanion, SharedContinually<T>, SharedContinuallyState, SharedContinuallyListenerCompanion, SharedKotlinTimeMark, SharedEventuallyConfig, SharedEventuallyState<T>, SharedIterableEq, SharedNumberEq, SharedSequenceEq, SharedStringEq, SharedThrowableEq, SharedHeaders1, SharedHeaders10, SharedHeaders11, SharedHeaders12, SharedHeaders13, SharedHeaders14, SharedHeaders15, SharedHeaders16, SharedHeaders17, SharedHeaders18, SharedHeaders19, SharedHeaders2, SharedHeaders20, SharedHeaders21, SharedHeaders22, SharedHeaders3, SharedHeaders4, SharedHeaders5, SharedHeaders6, SharedHeaders7, SharedHeaders8, SharedHeaders9, SharedRow1<__covariant A>, SharedRow10<__covariant A, __covariant B, __covariant C, __covariant D, __covariant E, __covariant F, __covariant G, __covariant H, __covariant I, __covariant J>, SharedRow11<__covariant A, __covariant B, __covariant C, __covariant D, __covariant E, __covariant F, __covariant G, __covariant H, __covariant I, __covariant J, __covariant K>, SharedRow12<__covariant A, __covariant B, __covariant C, __covariant D, __covariant E, __covariant F, __covariant G, __covariant H, __covariant I, __covariant J, __covariant K, __covariant L>, SharedRow13<__covariant A, __covariant B, __covariant C, __covariant D, __covariant E, __covariant F, __covariant G, __covariant H, __covariant I, __covariant J, __covariant K, __covariant L, __covariant M>, SharedRow14<__covariant A, __covariant B, __covariant C, __covariant D, __covariant E, __covariant F, __covariant G, __covariant H, __covariant I, __covariant J, __covariant K, __covariant L, __covariant M, __covariant N>, SharedRow15<__covariant A, __covariant B, __covariant C, __covariant D, __covariant E, __covariant F, __covariant G, __covariant H, __covariant I, __covariant J, __covariant K, __covariant L, __covariant M, __covariant N, __covariant O>, SharedRow16<__covariant A, __covariant B, __covariant C, __covariant D, __covariant E, __covariant F, __covariant G, __covariant H, __covariant I, __covariant J, __covariant K, __covariant L, __covariant M, __covariant N, __covariant O, __covariant P>, SharedRow17<__covariant A, __covariant B, __covariant C, __covariant D, __covariant E, __covariant F, __covariant G, __covariant H, __covariant I, __covariant J, __covariant K, __covariant L, __covariant M, __covariant N, __covariant O, __covariant P, __covariant Q>, SharedRow18<__covariant A, __covariant B, __covariant C, __covariant D, __covariant E, __covariant F, __covariant G, __covariant H, __covariant I, __covariant J, __covariant K, __covariant L, __covariant M, __covariant N, __covariant O, __covariant P, __covariant Q, __covariant R>, SharedRow19<__covariant A, __covariant B, __covariant C, __covariant D, __covariant E, __covariant F, __covariant G, __covariant H, __covariant I, __covariant J, __covariant K, __covariant L, __covariant M, __covariant N, __covariant O, __covariant P, __covariant Q, __covariant R, __covariant S>, SharedRow2<__covariant A, __covariant B>, SharedRow20<__covariant A, __covariant B, __covariant C, __covariant D, __covariant E, __covariant F, __covariant G, __covariant H, __covariant I, __covariant J, __covariant K, __covariant L, __covariant M, __covariant N, __covariant O, __covariant P, __covariant Q, __covariant R, __covariant S, __covariant T>, SharedRow21<__covariant A, __covariant B, __covariant C, __covariant D, __covariant E, __covariant F, __covariant G, __covariant H, __covariant I, __covariant J, __covariant K, __covariant L, __covariant M, __covariant N, __covariant O, __covariant P, __covariant Q, __covariant R, __covariant S, __covariant T, __covariant U>, SharedRow22<__covariant A, __covariant B, __covariant C, __covariant D, __covariant E, __covariant F, __covariant G, __covariant H, __covariant I, __covariant J, __covariant K, __covariant L, __covariant M, __covariant N, __covariant O, __covariant P, __covariant Q, __covariant R, __covariant S, __covariant T, __covariant U, __covariant V>, SharedRow3<__covariant A, __covariant B, __covariant C>, SharedRow4<__covariant A, __covariant B, __covariant C, __covariant D>, SharedRow5<__covariant A, __covariant B, __covariant C, __covariant D, __covariant E>, SharedRow6<__covariant A, __covariant B, __covariant C, __covariant D, __covariant E, __covariant F>, SharedRow7<__covariant A, __covariant B, __covariant C, __covariant D, __covariant E, __covariant F, __covariant G>, SharedRow8<__covariant A, __covariant B, __covariant C, __covariant D, __covariant E, __covariant F, __covariant G, __covariant H>, SharedRow9<__covariant A, __covariant B, __covariant C, __covariant D, __covariant E, __covariant F, __covariant G, __covariant H, __covariant I>, SharedTable1<__covariant A>, SharedTable10<__covariant A, __covariant B, __covariant C, __covariant D, __covariant E, __covariant F, __covariant G, __covariant H, __covariant I, __covariant J>, SharedTable11<__covariant A, __covariant B, __covariant C, __covariant D, __covariant E, __covariant F, __covariant G, __covariant H, __covariant I, __covariant J, __covariant K>, SharedTable12<__covariant A, __covariant B, __covariant C, __covariant D, __covariant E, __covariant F, __covariant G, __covariant H, __covariant I, __covariant J, __covariant K, __covariant L>, SharedTable13<__covariant A, __covariant B, __covariant C, __covariant D, __covariant E, __covariant F, __covariant G, __covariant H, __covariant I, __covariant J, __covariant K, __covariant L, __covariant M>, SharedTable14<__covariant A, __covariant B, __covariant C, __covariant D, __covariant E, __covariant F, __covariant G, __covariant H, __covariant I, __covariant J, __covariant K, __covariant L, __covariant M, __covariant N>, SharedTable15<__covariant A, __covariant B, __covariant C, __covariant D, __covariant E, __covariant F, __covariant G, __covariant H, __covariant I, __covariant J, __covariant K, __covariant L, __covariant M, __covariant N, __covariant O>, SharedTable16<__covariant A, __covariant B, __covariant C, __covariant D, __covariant E, __covariant F, __covariant G, __covariant H, __covariant I, __covariant J, __covariant K, __covariant L, __covariant M, __covariant N, __covariant O, __covariant P>, SharedTable17<__covariant A, __covariant B, __covariant C, __covariant D, __covariant E, __covariant F, __covariant G, __covariant H, __covariant I, __covariant J, __covariant K, __covariant L, __covariant M, __covariant N, __covariant O, __covariant P, __covariant Q>, SharedTable18<__covariant A, __covariant B, __covariant C, __covariant D, __covariant E, __covariant F, __covariant G, __covariant H, __covariant I, __covariant J, __covariant K, __covariant L, __covariant M, __covariant N, __covariant O, __covariant P, __covariant Q, __covariant R>, SharedTable19<__covariant A, __covariant B, __covariant C, __covariant D, __covariant E, __covariant F, __covariant G, __covariant H, __covariant I, __covariant J, __covariant K, __covariant L, __covariant M, __covariant N, __covariant O, __covariant P, __covariant Q, __covariant R, __covariant S>, SharedTable2<__covariant A, __covariant B>, SharedTable20<__covariant A, __covariant B, __covariant C, __covariant D, __covariant E, __covariant F, __covariant G, __covariant H, __covariant I, __covariant J, __covariant K, __covariant L, __covariant M, __covariant N, __covariant O, __covariant P, __covariant Q, __covariant R, __covariant S, __covariant T>, SharedTable21<__covariant A, __covariant B, __covariant C, __covariant D, __covariant E, __covariant F, __covariant G, __covariant H, __covariant I, __covariant J, __covariant K, __covariant L, __covariant M, __covariant N, __covariant O, __covariant P, __covariant Q, __covariant R, __covariant S, __covariant T, __covariant U>, SharedTable22<__covariant A, __covariant B, __covariant C, __covariant D, __covariant E, __covariant F, __covariant G, __covariant H, __covariant I, __covariant J, __covariant K, __covariant L, __covariant M, __covariant N, __covariant O, __covariant P, __covariant Q, __covariant R, __covariant S, __covariant T, __covariant U, __covariant V>, SharedTable3<__covariant A, __covariant B, __covariant C>, SharedTable4<__covariant A, __covariant B, __covariant C, __covariant D>, SharedTable5<__covariant A, __covariant B, __covariant C, __covariant D, __covariant E>, SharedTable6<__covariant A, __covariant B, __covariant C, __covariant D, __covariant E, __covariant F>, SharedTable7<__covariant A, __covariant B, __covariant C, __covariant D, __covariant E, __covariant F, __covariant G>, SharedTable8<__covariant A, __covariant B, __covariant C, __covariant D, __covariant E, __covariant F, __covariant G, __covariant H>, SharedTable9<__covariant A, __covariant B, __covariant C, __covariant D, __covariant E, __covariant F, __covariant G, __covariant H, __covariant I>, SharedElementResult<__covariant T>, SharedPlatform, SharedProperty, SharedBasicReflection, SharedBasicStackTraces, SharedKotlinPair<__covariant A, __covariant B>, SharedHttpClientConfig<T>, SharedHttpClientCall, SharedHttpReceivePipeline, SharedHttpRequestPipeline, SharedHttpResponsePipeline, SharedHttpSendPipeline, SharedKotlinIllegalStateException, SharedHttpClientCallCompanion, SharedHttpResponse, SharedHttpEngineCall, SharedKotlinUnsupportedOperationException, SharedKotlinIllegalArgumentException, SharedUrl, SharedCacheControl, SharedHttpStatusCode, SharedOutgoingContentNoContent, SharedEmptyContent, SharedHttpMethod, SharedHttpRequestData, SharedHeadersBuilder, SharedHttpRequestBuilderCompanion, SharedURLBuilder, SharedPipelinePhase, SharedPipeline<TSubject, TContext>, SharedHttpRequestPipelinePhases, SharedGMTDate, SharedHttpProtocolVersion, SharedHttpSendPipelinePhases, SharedFormPart<T>, SharedInputProvider, SharedByteReadPacket, SharedKotlinByteArray, SharedOutgoingContentByteArrayContent, SharedOutgoingContentWriteChannelContent, SharedPartData, SharedHttpResponseData, SharedHttpReceivePipelinePhases, SharedHttpResponseContainer, SharedHttpResponsePipelinePhases, SharedProxyBuilder, SharedProxyType, Sharedengines, SharedBodyProgressFeature, SharedBodyProgress, SharedResponseException, SharedDataConversion, SharedDataConversion_, SharedDataConversion_Configuration, SharedDefaultRequestFeature, SharedDefaultRequest, SharedExpectSuccessCompanion, SharedExpectSuccess, SharedHttpCallValidatorCompanion, SharedHttpCallValidator, SharedHttpCallValidatorConfig, SharedHttpPlainTextFeature, SharedCharset, SharedHttpPlainText, SharedHttpPlainTextConfig, SharedHttpRedirectFeature, SharedHttpRedirect, SharedKotlinCancellationException, SharedHttpSendFeature, SharedHttpSend, SharedHttpTimeoutFeature, SharedHttpTimeout, SharedHttpTimeoutHttpTimeoutCapabilityConfiguration, SharedHttpTimeoutHttpTimeoutCapabilityConfigurationCompanion, SharedUserAgentFeature, SharedUserAgent, SharedUserAgentConfig, SharedCookie, SharedHttpCookiesCompanion, SharedHttpCookies, SharedHttpCookiesConfig, SharedResponseObserverFeature, SharedResponseObserver, SharedResponseObserverConfig, SharedHttpCacheStorage, SharedHttpCacheCompanion, SharedHttpCache, SharedHttpCacheConfig, SharedHttpCacheStorageCompanion, SharedHttpCacheEntry, SharedFrame, SharedWebSocketCapability, SharedWebSocketExtensionsCapability, SharedWebSocketsFeature, SharedWebSocketExtensionsConfig, SharedWebSockets, SharedWebSocketsConfig, SharedHttpHeadersMap, SharedConnectionOptionsCompanion, SharedConnectionOptions, SharedHttpMessage, SharedCloseReasonCodes, SharedCloseReason, SharedCloseReasonCodesCompanion, SharedFrameType, SharedFrameCompanion, SharedFrameTypeCompanion, SharedWebSocketExtensionHeader, SharedCacheControl_Visibility, SharedCacheControl_, SharedHeaderValueParam, SharedHeaderValueWithParametersCompanion, SharedHeaderValueWithParameters, SharedContentDispositionCompanion, SharedContentDisposition, SharedContentDispositionParameters, SharedContentRange, SharedContentRangeBounded, SharedContentRangeSuffix, SharedContentRangeTailFrom, SharedContentTypeCompanion, SharedContentTypeApplication, SharedContentTypeAudio, SharedContentTypeImage, SharedContentTypeMessage, SharedContentTypeMultiPart, SharedContentTypeText, SharedContentTypeVideo, SharedCookieEncoding, SharedEmptyHeaders, SharedUrlEncodingOption, SharedEmptyParameters, SharedHeaderValue, SharedHeadersCompanion, SharedStringValuesBuilder, SharedStringValuesImpl, SharedStringValuesSingleImpl, SharedHttpHeaders, SharedHttpMethodCompanion, SharedHttpProtocolVersionCompanion, SharedHttpStatusCodeCompanion, SharedLinkHeaderParameters, SharedLinkHeaderRel, SharedParametersCompanion, SharedParametersBuilder, SharedRangeUnits, SharedRangesSpecifier, SharedURLProtocol, SharedURLBuilderCompanion, SharedURLProtocolCompanion, SharedUrlCompanion, SharedAuthScheme, SharedHeaderValueEncoding, SharedHttpAuthHeaderCompanion, SharedHttpAuthHeaderParameterized, SharedHttpAuthHeader, SharedHttpAuthHeaderParameters, SharedCachingOptions, SharedMultiPartDataEmpty, SharedAlwaysFailNonceManager, SharedGenerateOnlyNonceManager, SharedHash, SharedIdentity, SharedPlatformUtils, SharedStringValuesCompanion, SharedChannelIOException, SharedDelegatingConversionServiceConfiguration<T>, SharedDefaultConversionService, SharedGMTDateCompanion, SharedWeekDay, SharedMonth, SharedGMTDateParserCompanion, SharedMonthCompanion, SharedWeekDayCompanion, SharedLock, SharedMemory, SharedIoBuffer, SharedByteOrder, SharedBuffer, SharedBytePacketBuilder, SharedByteReadChannelCompanion, SharedMemoryCompanion, SharedChunkBuffer, SharedAbstractInputCompanion, SharedKotlinCharArray, SharedAbstractOutput, SharedBufferCompanion, SharedByteOrderCompanion, SharedBytePacketBuilderBase, SharedBytePacketBuilderPlatformBase, SharedAbstractInput, SharedByteReadPacketBaseCompanion, SharedByteReadPacketBase, SharedByteReadPacketPlatformBase, SharedByteReadPacketCompanion, SharedChunkBufferCompanion, SharedIoBufferCompanion, SharedSynchronizedObject, SharedCharsetCompanion, SharedCharsetDecoder, SharedCharsetEncoder, SharedCharsets, SharedMalformedInputException, SharedPosixExceptionCompanion, SharedPosixException, SharedTransacterTransaction, SharedConnectionWrapper, SharedDatabaseConfiguration, SharedJobSupport, SharedCoroutineStart, SharedCoroutineDispatcherKey, SharedKotlinAbstractCoroutineContextKey<B, E>, SharedCoroutineExceptionHandlerKey, SharedCoroutineNameKey, SharedCoroutineName, SharedDispatchers, SharedMainCoroutineDispatcher, SharedGlobalScope, SharedJobKey, SharedNonCancellable, SharedNonDisposableHandle, SharedTimeoutCancellationException, SharedBufferOverflow, SharedChannelFactory, SharedKotlinNoSuchElementException, SharedSharingCommand, SharedSharingStartedCompanion, SharedChannelFlow<T>, SharedAtomicDesc, SharedLockFreeLinkedListNodePrepareOp, SharedAtomicOp<__contravariant T>, SharedOpDescriptor, SharedLockFreeLinkedListNode, SharedLockFreeLinkedListNodeAddLastDesc<T>, SharedLockFreeLinkedListNodeRemoveFirstDesc<T>, SharedLockFreeLinkedListNodeAbstractAtomicDesc, SharedSynchronizedObjectLockState, SharedKotlinAtomicReference<T>, SharedThreadSafeHeap<T>, SharedAbstractSharedLinkedListNode<T>, SharedSharedLruCacheCacheEntry<K, V>, SharedComparableMatcherResultCompanion, SharedMatcherCompanion, SharedMatcherResultCompanion, SharedTraceBase, SharedTraceBaseNone, SharedSynchronizedObjectStatus, SharedSerializersModule, SharedJsonConfiguration, SharedJsonDefault, SharedJsonElement, SharedJsonElementCompanion, SharedJsonPrimitiveCompanion, SharedJsonPrimitive, SharedJsonNull, SharedFieldType, SharedJournalMode, SharedDatabaseConfigurationExtended, SharedDatabaseConfigurationLogging, SharedDatabaseConfigurationLifecycle, SharedDatabaseConfigurationEncryption, SharedSynchronousFlag, SharedDatabaseFileContext, SharedFieldTypeCompanion, SharedJournalModeCompanion, SharedConcurrentDatabaseConnection, SharedSqliteDatabase, SharedOpenFlags, SharedSqliteDatabaseConfig, SharedSQLiteException, SharedSqliteErrorType, SharedNativeStatement, SharedNativeDatabaseManager, SharedNativeDatabaseConnectionTransaction, SharedNativeDatabaseConnection, SharedAbstractPolymorphicSerializer<T>, SharedAbstractCollectionSerializer<Element, Collection, Builder>, SharedTaggedDecoder<Tag>, SharedTaggedEncoder<Tag>, SharedSerialKind, SharedPolymorphicKind, SharedPolymorphicKindOPEN, SharedPolymorphicKindSEALED, SharedPrimitiveKind, SharedPrimitiveKindBOOLEAN, SharedPrimitiveKindBYTE, SharedPrimitiveKindCHAR, SharedPrimitiveKindDOUBLE, SharedPrimitiveKindFLOAT, SharedPrimitiveKindINT, SharedPrimitiveKindLONG, SharedPrimitiveKindSHORT, SharedPrimitiveKindSTRING, SharedSerialKindCONTEXTUAL, SharedSerialKindENUM, SharedStructureKind, SharedStructureKindCLASS, SharedStructureKindLIST, SharedStructureKindMAP, SharedStructureKindOBJECT, SharedLongAsStringSerializer, SharedCompositeDecoderCompanion, SharedKotlinTriple<__covariant A, __covariant B, __covariant C>, SharedKotlinNumber, SharedKotlinRegexOption, SharedKotlinRegexCompanion, SharedKotlinRandomDefault, SharedPropertyContext, SharedExhaustive<__covariant A>, SharedKotlinBooleanArray, SharedKotlinCharRange, SharedKotlinDoubleArray, SharedKotlinFloatArray, SharedKotlinIntArray, SharedKotlinLongArray, SharedKotlinShortArray, SharedDefaultClientWebSocketSession, SharedFormBuilder, SharedHttpResponse_, SharedHttpStatement, SharedNetworkAddress, SharedFrameClose, SharedFrameText, SharedKotlinLongProgressionCompanion, SharedKotlinLongIterator, SharedKotlinLongProgression, SharedKotlinLongRangeCompanion, SharedKotlinByteIterator, SharedKotlinAtomicLong, SharedByteChannelSequentialBase, SharedKotlinIntIterator, SharedKotlinIntProgressionCompanion, SharedKotlinIntProgression, SharedKotlinIntRangeCompanion, SharedAfterVersion, SharedAfterVersionWithDriver, SharedAtomic<V>, SharedAtomicInt, SharedAtomicLong, SharedAtomicReference_<V>, SharedThreadLocalRef<T>, SharedJsonArrayBuilder, SharedJsonObjectBuilder, SharedSerializersModuleBuilder, SharedPolymorphicModuleBuilder<__contravariant Base>, SharedClassSerialDescriptorBuilder, SharedKotlinBooleanCompanion, SharedKotlinByteCompanion, SharedKotlinCharCompanion, SharedKotlinDoubleCompanion, SharedKotlinFloatCompanion, SharedKotlinIntCompanion, SharedKotlinLongCompanion, SharedKotlinShortCompanion, SharedKotlinStringCompanion, SharedKotlinUByteCompanion, SharedKotlinUIntCompanion, SharedKotlinULongCompanion, SharedKotlinUShortCompanion, SharedBeFailure, SharedBeSuccess<T>, SharedToleranceMatcher, SharedCounter, SharedKotlinStringBuilder, SharedFibonacciInterval, SharedExponentialInterval, SharedFixedInterval, SharedConnectTimeoutException, SharedSocketTimeoutException, SharedRequest, SharedResponse, SharedKotlinCValuesRef<T>, SharedCloseableCoroutineDispatcher, SharedEnumColumnAdapter<T>, NSRecursiveLock, SharedTraceFormat, SharedAtomicArray<T>, SharedJsonBuilder, SharedKotlinUIntProgressionCompanion, SharedKotlinUIntProgression, SharedKotlinUIntRangeCompanion, SharedKotlinULongProgressionCompanion, SharedKotlinULongProgression, SharedKotlinULongRangeCompanion, SharedKotlinKTypeProjection, SharedKotlinCharIterator, SharedKotlinMatchResultDestructured, SharedKotlinBooleanIterator, SharedKotlinCharProgressionCompanion, SharedKotlinCharProgression, SharedKotlinCharRangeCompanion, SharedKotlinDoubleIterator, SharedKotlinFloatIterator, SharedKotlinShortIterator, SharedKotlinAutofreeScope, SharedKotlinKVariance, SharedKotlinKTypeProjectionCompanion, SharedKotlinMatchGroup, SharedKotlinDeferScope;

@protocol SharedStateFlow, SharedFlow, SharedIFlowViewModel, SharedCoroutineScope, SharedIMobileCountryOptionsLayerViewModel, SharedICountryPhoneCodeRepository, SharedIPage1_2RedesignViewModel, SharedIRegPage1Tracking, SharedIDateValidator, SharedIPage1_3RedesignViewModel, SharedILookupRepository, SharedIDeviceCountryDetector, SharedIPage1_1RedesignViewModel, SharedIPage1_4RedesignViewModel, SharedIPhoneNumberValidator, SharedIEmailValidator, SharedIRegisterProfile, SharedILogger, SharedIPage1_1ViewModel, SharedIPage1_2ViewModel, SharedIDateProvider, SharedKSerializer, SharedICreateRegSession, SharedKotlinComparable, SharedIRegistrationRepository, SharedIGuestRepository, SharedIRegPage1Tracker, SharedIRegistrationApi, SharedINetworkGateway, SharedIApiDomains, SharedIGuestApi, SharedTransactionWithoutReturn, SharedTransactionWithReturn, SharedTransacter, SharedCountryDaoModelQueries, SharedCountryPhoneCodeDaoModelQueries, SharedMotherTongueDaoModelQueries, SharedPhotoPrivacyOptionDaoModelQueries, SharedReligionDaoModelQueries, SharedMasterDatabase, SharedSqlDriver, SharedSqlDriverSchema, SharedILookupApi, SharedILocalStorage, SharedIReligionDao, SharedIMotherTongueDao, SharedICountryDao, SharedIPhotoPrivacyOptionDao, SharedIDao, SharedIJsonLoader, SharedICountryPhoneCodeDao, SharedICountryPhoneCodeApi, SharedIDatabaseDriverFactory, SharedFlowCollector, SharedCloseable, SharedHttpClientEngine, SharedHttpClientEngineFactory, SharedLogger, SharedHttpClientFeature, SharedInput, SharedTypeInfo, SharedJsonSerializer, SharedContentTypeMatcher, SharedMatcher, SharedMatcherResult, SharedKotlinKClass, SharedKotlinCoroutineContextKey, SharedKotlinCoroutineContextElement, SharedKotlinCoroutineContext, SharedKotlinSuspendFunction0, SharedKotlinSequence, SharedClassifier, SharedConstraints, SharedPropTestListener, SharedLabelsReporter, SharedKotlinLazy, SharedShrinker, SharedBaseArbitraryBuilderSyntax, SharedKotlinContinuation, SharedKotlinSuspendFunction1, SharedArbitraryBuilderContext, SharedGenerateArbitraryBuilderContext, SharedComparisonError, SharedAssertionCounter, SharedErrorCollector, SharedPrint, SharedInterval, SharedUntilListener, SharedContinuallyListener, SharedEq, SharedKotlinAnnotation, SharedReflection, SharedStackTraces, SharedKotlinKType, SharedKotlinKProperty, SharedKotlinReadOnlyProperty, SharedKotlinReadWriteProperty, SharedCloseable_, SharedHttpClientEngineCapability, SharedAttributes, SharedByteReadChannel, SharedHttpRequest, SharedHeaders, SharedByteWriteChannel, SharedHttpMessage, SharedHttpMessageBuilder, SharedJob, SharedKotlinSuspendFunction2, SharedParameters, SharedKotlinIterator, SharedKotlinIterable, SharedKotlinSuspendFunction3, SharedCookiesStorage, SharedWebSocketExtension, SharedReceiveChannel, SharedSendChannel, SharedWebSocketSession, SharedClientWebSocketSession, SharedDeferred, SharedDefaultWebSocketSession, SharedKotlinMapEntry, SharedStringValues, SharedDisposableHandle, SharedWebSocketExtensionFactory, SharedMultiPartData, SharedNonceManager, SharedEncoder, SharedConversionService, SharedKotlinCollection, SharedKotlinMutableIterable, SharedKotlinMutableCollection, SharedKotlinMutableIterator, SharedReadSession, SharedKotlinAppendable, SharedByteChannel, SharedSuspendableReadSession, SharedObjectPool, SharedWriterSuspendSession, SharedChildHandle, SharedChildJob, SharedSelectClause0, SharedWriterSession, SharedOutput, SharedSqlPreparedStatement, SharedSqlCursor, SharedCloseable__, SharedDatabaseManager, SharedParentJob, SharedSelectInstance, SharedKotlinContinuationInterceptor, SharedRunnable, SharedSelectClause1, SharedCancellableContinuation, SharedCopyableThrowable, SharedSelectClause2, SharedChannelIterator, SharedBroadcastChannel, SharedSharedFlow, SharedMutableSharedFlow, SharedSharingStarted, SharedFusibleFlow, SharedProducerScope, SharedMainDispatcherFactory, SharedColumnAdapter, SharedQueryListener, SharedTransactionCallbacks, SharedKotlinMutableMapMutableEntry, SharedLruCache, SharedComparableMatcherResult, SharedDeserializationStrategy, SharedSerializationStrategy, SharedSerialFormat, SharedStringFormat, SharedEncoder_, SharedSerialDescriptor, SharedDecoder, SharedCompositeDecoder, SharedCompositeEncoder, SharedStatement, SharedDatabaseConnection, SharedLogger_, SharedCursor, SharedSqliteStatement, SharedSerializersModuleCollector, SharedKotlinMatchResult, SharedKotlinComparator, SharedKotlinClosedFloatingPointRange, SharedKotlinClosedRange, SharedKotlinSuspendFunction13, SharedKotlinSuspendFunction12, SharedKotlinSuspendFunction11, SharedKotlinSuspendFunction10, SharedKotlinSuspendFunction9, SharedKotlinSuspendFunction8, SharedKotlinSuspendFunction7, SharedKotlinSuspendFunction6, SharedKotlinSuspendFunction5, SharedKotlinSuspendFunction4, SharedEventuallyListener, SharedReaderJob, SharedWriterJob, SharedDigest, SharedPipelineExecutor, SharedKotlinNativePlacement, SharedKotlinNativeFreeablePlacement, SharedCompletableJob, SharedCompletableDeferred, SharedCoroutineExceptionHandler, SharedChannel, SharedMutableStateFlow, SharedSelectBuilder, SharedMutex, SharedSemaphore, SharedBinaryFormat, SharedKotlinKDeclarationContainer, SharedKotlinKAnnotatedElement, SharedKotlinKClassifier, SharedKotlinFunction, SharedKotlinKCallable, SharedKotlinMatchGroupCollection, SharedKotlinCharSequence;

NS_ASSUME_NONNULL_BEGIN
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunknown-warning-option"
#pragma clang diagnostic ignored "-Wincompatible-property-type"
#pragma clang diagnostic ignored "-Wnullability"

#pragma push_macro("_Nullable_result")
#if !__has_feature(nullability_nullable_result)
#undef _Nullable_result
#define _Nullable_result _Nullable
#endif

__attribute__((swift_name("KotlinBase")))
@interface SharedBase : NSObject
- (instancetype)init __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
+ (void)initialize __attribute__((objc_requires_super));
@end;

@interface SharedBase (SharedBaseCopying) <NSCopying>
@end;

__attribute__((swift_name("KotlinMutableSet")))
@interface SharedMutableSet<ObjectType> : NSMutableSet<ObjectType>
@end;

__attribute__((swift_name("KotlinMutableDictionary")))
@interface SharedMutableDictionary<KeyType, ObjectType> : NSMutableDictionary<KeyType, ObjectType>
@end;

@interface NSError (NSErrorSharedKotlinException)
@property (readonly) id _Nullable kotlinException;
@end;

__attribute__((swift_name("KotlinNumber")))
@interface SharedNumber : NSNumber
- (instancetype)initWithChar:(char)value __attribute__((unavailable));
- (instancetype)initWithUnsignedChar:(unsigned char)value __attribute__((unavailable));
- (instancetype)initWithShort:(short)value __attribute__((unavailable));
- (instancetype)initWithUnsignedShort:(unsigned short)value __attribute__((unavailable));
- (instancetype)initWithInt:(int)value __attribute__((unavailable));
- (instancetype)initWithUnsignedInt:(unsigned int)value __attribute__((unavailable));
- (instancetype)initWithLong:(long)value __attribute__((unavailable));
- (instancetype)initWithUnsignedLong:(unsigned long)value __attribute__((unavailable));
- (instancetype)initWithLongLong:(long long)value __attribute__((unavailable));
- (instancetype)initWithUnsignedLongLong:(unsigned long long)value __attribute__((unavailable));
- (instancetype)initWithFloat:(float)value __attribute__((unavailable));
- (instancetype)initWithDouble:(double)value __attribute__((unavailable));
- (instancetype)initWithBool:(BOOL)value __attribute__((unavailable));
- (instancetype)initWithInteger:(NSInteger)value __attribute__((unavailable));
- (instancetype)initWithUnsignedInteger:(NSUInteger)value __attribute__((unavailable));
+ (instancetype)numberWithChar:(char)value __attribute__((unavailable));
+ (instancetype)numberWithUnsignedChar:(unsigned char)value __attribute__((unavailable));
+ (instancetype)numberWithShort:(short)value __attribute__((unavailable));
+ (instancetype)numberWithUnsignedShort:(unsigned short)value __attribute__((unavailable));
+ (instancetype)numberWithInt:(int)value __attribute__((unavailable));
+ (instancetype)numberWithUnsignedInt:(unsigned int)value __attribute__((unavailable));
+ (instancetype)numberWithLong:(long)value __attribute__((unavailable));
+ (instancetype)numberWithUnsignedLong:(unsigned long)value __attribute__((unavailable));
+ (instancetype)numberWithLongLong:(long long)value __attribute__((unavailable));
+ (instancetype)numberWithUnsignedLongLong:(unsigned long long)value __attribute__((unavailable));
+ (instancetype)numberWithFloat:(float)value __attribute__((unavailable));
+ (instancetype)numberWithDouble:(double)value __attribute__((unavailable));
+ (instancetype)numberWithBool:(BOOL)value __attribute__((unavailable));
+ (instancetype)numberWithInteger:(NSInteger)value __attribute__((unavailable));
+ (instancetype)numberWithUnsignedInteger:(NSUInteger)value __attribute__((unavailable));
@end;

__attribute__((swift_name("KotlinByte")))
@interface SharedByte : SharedNumber
- (instancetype)initWithChar:(char)value;
+ (instancetype)numberWithChar:(char)value;
@end;

__attribute__((swift_name("KotlinUByte")))
@interface SharedUByte : SharedNumber
- (instancetype)initWithUnsignedChar:(unsigned char)value;
+ (instancetype)numberWithUnsignedChar:(unsigned char)value;
@end;

__attribute__((swift_name("KotlinShort")))
@interface SharedShort : SharedNumber
- (instancetype)initWithShort:(short)value;
+ (instancetype)numberWithShort:(short)value;
@end;

__attribute__((swift_name("KotlinUShort")))
@interface SharedUShort : SharedNumber
- (instancetype)initWithUnsignedShort:(unsigned short)value;
+ (instancetype)numberWithUnsignedShort:(unsigned short)value;
@end;

__attribute__((swift_name("KotlinInt")))
@interface SharedInt : SharedNumber
- (instancetype)initWithInt:(int)value;
+ (instancetype)numberWithInt:(int)value;
@end;

__attribute__((swift_name("KotlinUInt")))
@interface SharedUInt : SharedNumber
- (instancetype)initWithUnsignedInt:(unsigned int)value;
+ (instancetype)numberWithUnsignedInt:(unsigned int)value;
@end;

__attribute__((swift_name("KotlinLong")))
@interface SharedLong : SharedNumber
- (instancetype)initWithLongLong:(long long)value;
+ (instancetype)numberWithLongLong:(long long)value;
@end;

__attribute__((swift_name("KotlinULong")))
@interface SharedULong : SharedNumber
- (instancetype)initWithUnsignedLongLong:(unsigned long long)value;
+ (instancetype)numberWithUnsignedLongLong:(unsigned long long)value;
@end;

__attribute__((swift_name("KotlinFloat")))
@interface SharedFloat : SharedNumber
- (instancetype)initWithFloat:(float)value;
+ (instancetype)numberWithFloat:(float)value;
@end;

__attribute__((swift_name("KotlinDouble")))
@interface SharedDouble : SharedNumber
- (instancetype)initWithDouble:(double)value;
+ (instancetype)numberWithDouble:(double)value;
@end;

__attribute__((swift_name("KotlinBoolean")))
@interface SharedBoolean : SharedNumber
- (instancetype)initWithBool:(BOOL)value;
+ (instancetype)numberWithBool:(BOOL)value;
@end;

__attribute__((swift_name("IFlowViewModel")))
@protocol SharedIFlowViewModel
@required
- (void)onEventConsumed __attribute__((swift_name("onEventConsumed()")));
@property (readonly) id<SharedFlow> eventHolder __attribute__((swift_name("eventHolder")));
@property (readonly) id<SharedStateFlow> stateHolder __attribute__((swift_name("stateHolder")));
@property (readonly) id _Nullable stateSnapShot __attribute__((swift_name("stateSnapShot")));
@end;

__attribute__((swift_name("IMobileCountryOptionsLayerViewModel")))
@protocol SharedIMobileCountryOptionsLayerViewModel <SharedIFlowViewModel>
@required
- (void)addAction:(SharedIMobileCountryOptionsLayerViewModelAction *)action __attribute__((swift_name("add(action:)")));
@property (readonly) id<SharedStateFlow> list __attribute__((swift_name("list")));
@end;

__attribute__((swift_name("IMobileCountryOptionsLayerViewModelAction")))
@interface SharedIMobileCountryOptionsLayerViewModelAction : SharedBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IMobileCountryOptionsLayerViewModelAction.OnInputChange")))
@interface SharedIMobileCountryOptionsLayerViewModelActionOnInputChange : SharedIMobileCountryOptionsLayerViewModelAction
- (instancetype)initWithValue:(NSString * _Nullable)value focus:(BOOL)focus __attribute__((swift_name("init(value:focus:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (NSString * _Nullable)component1 __attribute__((swift_name("component1()")));
- (BOOL)component2 __attribute__((swift_name("component2()")));
- (SharedIMobileCountryOptionsLayerViewModelActionOnInputChange *)doCopyValue:(NSString * _Nullable)value focus:(BOOL)focus __attribute__((swift_name("doCopy(value:focus:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) BOOL focus __attribute__((swift_name("focus")));
@property (readonly) NSString * _Nullable value __attribute__((swift_name("value")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IMobileCountryOptionsLayerViewModelAction.Search")))
@interface SharedIMobileCountryOptionsLayerViewModelActionSearch : SharedIMobileCountryOptionsLayerViewModelAction
- (instancetype)initWithQuery:(NSString * _Nullable)query __attribute__((swift_name("init(query:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (NSString * _Nullable)component1 __attribute__((swift_name("component1()")));
- (SharedIMobileCountryOptionsLayerViewModelActionSearch *)doCopyQuery:(NSString * _Nullable)query __attribute__((swift_name("doCopy(query:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable query __attribute__((swift_name("query")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IMobileCountryOptionsLayerViewModelUIEvent")))
@interface SharedIMobileCountryOptionsLayerViewModelUIEvent : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)uIEvent __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedIMobileCountryOptionsLayerViewModelUIEvent *shared __attribute__((swift_name("shared")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IMobileCountryOptionsLayerViewModelUIState")))
@interface SharedIMobileCountryOptionsLayerViewModelUIState : SharedBase
- (instancetype)initWithOptions:(NSArray<SharedSelection *> *)options __attribute__((swift_name("init(options:)"))) __attribute__((objc_designated_initializer));
- (NSArray<SharedSelection *> *)component1 __attribute__((swift_name("component1()")));
- (SharedIMobileCountryOptionsLayerViewModelUIState *)doCopyOptions:(NSArray<SharedSelection *> *)options __attribute__((swift_name("doCopy(options:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSArray<SharedSelection *> *options __attribute__((swift_name("options")));
@end;

__attribute__((swift_name("ViewModel")))
@interface SharedViewModel : SharedBase
- (instancetype)initWithDispatchers:(SharedAppCoroutineDispatchers *)dispatchers __attribute__((swift_name("init(dispatchers:)"))) __attribute__((objc_designated_initializer));
- (void)onCleared __attribute__((swift_name("onCleared()")));
@property (readonly) SharedAppCoroutineDispatchers *dispatchers __attribute__((swift_name("dispatchers")));
@property (readonly) id<SharedCoroutineScope> vmScope __attribute__((swift_name("vmScope")));
@end;

__attribute__((swift_name("BaseViewModel")))
@interface SharedBaseViewModel<T, E> : SharedViewModel <SharedIFlowViewModel>
- (instancetype)initWithDispatchers:(SharedAppCoroutineDispatchers *)dispatchers __attribute__((swift_name("init(dispatchers:)"))) __attribute__((objc_designated_initializer));
- (void)checkThread __attribute__((swift_name("checkThread()")));
- (void)onEventConsumed __attribute__((swift_name("onEventConsumed()")));
- (void)pushEventEvent:(E _Nullable)event __attribute__((swift_name("pushEvent(event:)")));
- (void)setStateState:(T _Nullable)state __attribute__((swift_name("setState(state:)")));
@property (readonly) NSString *TAG __attribute__((swift_name("TAG")));
@property (readonly) id<SharedFlow> eventHolder __attribute__((swift_name("eventHolder")));
@property (readonly) SharedCommonFlow<E> *iOSEventHolder __attribute__((swift_name("iOSEventHolder")));
@property (readonly) SharedCommonFlow<T> *iOSStateHolder __attribute__((swift_name("iOSStateHolder")));
@property (readonly) T _Nullable initialState __attribute__((swift_name("initialState")));
@property (readonly) id<SharedStateFlow> stateHolder __attribute__((swift_name("stateHolder")));
@property (readonly) T _Nullable stateSnapShot __attribute__((swift_name("stateSnapShot")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MobileCountryOptionsLayerViewModel")))
@interface SharedMobileCountryOptionsLayerViewModel : SharedBaseViewModel<SharedIMobileCountryOptionsLayerViewModelUIState *, SharedIMobileCountryOptionsLayerViewModelUIEvent *> <SharedIMobileCountryOptionsLayerViewModel>
- (instancetype)initWithAppCoroutineDispatchers:(SharedAppCoroutineDispatchers *)appCoroutineDispatchers countryPhoneCodeRepository:(id<SharedICountryPhoneCodeRepository>)countryPhoneCodeRepository __attribute__((swift_name("init(appCoroutineDispatchers:countryPhoneCodeRepository:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithDispatchers:(SharedAppCoroutineDispatchers *)dispatchers __attribute__((swift_name("init(dispatchers:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (void)addAction:(SharedIMobileCountryOptionsLayerViewModelAction *)action __attribute__((swift_name("add(action:)")));
- (void)onCleared __attribute__((swift_name("onCleared()")));
@property (readonly) NSString *TAG __attribute__((swift_name("TAG")));
@property (readonly) SharedIMobileCountryOptionsLayerViewModelUIState *initialState __attribute__((swift_name("initialState")));
@property (readonly) id<SharedStateFlow> list __attribute__((swift_name("list")));
@end;

__attribute__((swift_name("IPage1_2RedesignViewModel")))
@protocol SharedIPage1_2RedesignViewModel <SharedIFlowViewModel>
@required
- (void)addAction_:(SharedIPage1_2RedesignViewModelAction *)action __attribute__((swift_name("add(action_:)")));
@property (readonly) id<SharedStateFlow> fieldDOB __attribute__((swift_name("fieldDOB")));
@property (readonly) id<SharedStateFlow> fieldDOBDay __attribute__((swift_name("fieldDOBDay")));
@property (readonly) id<SharedStateFlow> fieldDOBMonth __attribute__((swift_name("fieldDOBMonth")));
@property (readonly) id<SharedStateFlow> fieldDOBYear __attribute__((swift_name("fieldDOBYear")));
@property (readonly) id<SharedStateFlow> fieldFirstName __attribute__((swift_name("fieldFirstName")));
@property (readonly) id<SharedStateFlow> fieldLastName __attribute__((swift_name("fieldLastName")));
@end;

__attribute__((swift_name("IPage1_2RedesignViewModelAction")))
@interface SharedIPage1_2RedesignViewModelAction : SharedBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IPage1_2RedesignViewModelAction.Continue")))
@interface SharedIPage1_2RedesignViewModelActionContinue : SharedIPage1_2RedesignViewModelAction
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
+ (instancetype)continue_ __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedIPage1_2RedesignViewModelActionContinue *shared __attribute__((swift_name("shared")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IPage1_2RedesignViewModelAction.FocusChangedDOBDay")))
@interface SharedIPage1_2RedesignViewModelActionFocusChangedDOBDay : SharedIPage1_2RedesignViewModelAction
- (instancetype)initWithValue:(NSString * _Nullable)value focused:(BOOL)focused __attribute__((swift_name("init(value:focused:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (NSString * _Nullable)component1 __attribute__((swift_name("component1()")));
- (BOOL)component2 __attribute__((swift_name("component2()")));
- (SharedIPage1_2RedesignViewModelActionFocusChangedDOBDay *)doCopyValue:(NSString * _Nullable)value focused:(BOOL)focused __attribute__((swift_name("doCopy(value:focused:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) BOOL focused __attribute__((swift_name("focused")));
@property (readonly) NSString * _Nullable value __attribute__((swift_name("value")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IPage1_2RedesignViewModelAction.FocusChangedDOBMonth")))
@interface SharedIPage1_2RedesignViewModelActionFocusChangedDOBMonth : SharedIPage1_2RedesignViewModelAction
- (instancetype)initWithValue:(NSString * _Nullable)value focused:(BOOL)focused __attribute__((swift_name("init(value:focused:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (NSString * _Nullable)component1 __attribute__((swift_name("component1()")));
- (BOOL)component2 __attribute__((swift_name("component2()")));
- (SharedIPage1_2RedesignViewModelActionFocusChangedDOBMonth *)doCopyValue:(NSString * _Nullable)value focused:(BOOL)focused __attribute__((swift_name("doCopy(value:focused:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) BOOL focused __attribute__((swift_name("focused")));
@property (readonly) NSString * _Nullable value __attribute__((swift_name("value")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IPage1_2RedesignViewModelAction.FocusChangedDOBYear")))
@interface SharedIPage1_2RedesignViewModelActionFocusChangedDOBYear : SharedIPage1_2RedesignViewModelAction
- (instancetype)initWithValue:(NSString * _Nullable)value focused:(BOOL)focused __attribute__((swift_name("init(value:focused:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (NSString * _Nullable)component1 __attribute__((swift_name("component1()")));
- (BOOL)component2 __attribute__((swift_name("component2()")));
- (SharedIPage1_2RedesignViewModelActionFocusChangedDOBYear *)doCopyValue:(NSString * _Nullable)value focused:(BOOL)focused __attribute__((swift_name("doCopy(value:focused:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) BOOL focused __attribute__((swift_name("focused")));
@property (readonly) NSString * _Nullable value __attribute__((swift_name("value")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IPage1_2RedesignViewModelAction.FocusChangedFirstName")))
@interface SharedIPage1_2RedesignViewModelActionFocusChangedFirstName : SharedIPage1_2RedesignViewModelAction
- (instancetype)initWithValue:(NSString * _Nullable)value focused:(BOOL)focused __attribute__((swift_name("init(value:focused:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (NSString * _Nullable)component1 __attribute__((swift_name("component1()")));
- (BOOL)component2 __attribute__((swift_name("component2()")));
- (SharedIPage1_2RedesignViewModelActionFocusChangedFirstName *)doCopyValue:(NSString * _Nullable)value focused:(BOOL)focused __attribute__((swift_name("doCopy(value:focused:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) BOOL focused __attribute__((swift_name("focused")));
@property (readonly) NSString * _Nullable value __attribute__((swift_name("value")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IPage1_2RedesignViewModelAction.FocusChangedLastName")))
@interface SharedIPage1_2RedesignViewModelActionFocusChangedLastName : SharedIPage1_2RedesignViewModelAction
- (instancetype)initWithValue:(NSString * _Nullable)value focused:(BOOL)focused __attribute__((swift_name("init(value:focused:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (NSString * _Nullable)component1 __attribute__((swift_name("component1()")));
- (BOOL)component2 __attribute__((swift_name("component2()")));
- (SharedIPage1_2RedesignViewModelActionFocusChangedLastName *)doCopyValue:(NSString * _Nullable)value focused:(BOOL)focused __attribute__((swift_name("doCopy(value:focused:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) BOOL focused __attribute__((swift_name("focused")));
@property (readonly) NSString * _Nullable value __attribute__((swift_name("value")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IPage1_2RedesignViewModelAction.Init")))
@interface SharedIPage1_2RedesignViewModelActionInit : SharedIPage1_2RedesignViewModelAction
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
+ (instancetype)getInit __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedIPage1_2RedesignViewModelActionInit *shared __attribute__((swift_name("shared")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IPage1_2RedesignViewModelAction.InputChangedDOBDay")))
@interface SharedIPage1_2RedesignViewModelActionInputChangedDOBDay : SharedIPage1_2RedesignViewModelAction
- (instancetype)initWithValue:(NSString *)value __attribute__((swift_name("init(value:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (NSString *)component1 __attribute__((swift_name("component1()")));
- (SharedIPage1_2RedesignViewModelActionInputChangedDOBDay *)doCopyValue:(NSString *)value __attribute__((swift_name("doCopy(value:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IPage1_2RedesignViewModelAction.InputChangedDOBMonth")))
@interface SharedIPage1_2RedesignViewModelActionInputChangedDOBMonth : SharedIPage1_2RedesignViewModelAction
- (instancetype)initWithValue:(NSString *)value __attribute__((swift_name("init(value:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (NSString *)component1 __attribute__((swift_name("component1()")));
- (SharedIPage1_2RedesignViewModelActionInputChangedDOBMonth *)doCopyValue:(NSString *)value __attribute__((swift_name("doCopy(value:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IPage1_2RedesignViewModelAction.InputChangedDOBYear")))
@interface SharedIPage1_2RedesignViewModelActionInputChangedDOBYear : SharedIPage1_2RedesignViewModelAction
- (instancetype)initWithValue:(NSString *)value __attribute__((swift_name("init(value:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (NSString *)component1 __attribute__((swift_name("component1()")));
- (SharedIPage1_2RedesignViewModelActionInputChangedDOBYear *)doCopyValue:(NSString *)value __attribute__((swift_name("doCopy(value:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IPage1_2RedesignViewModelAction.InputChangedFirstName")))
@interface SharedIPage1_2RedesignViewModelActionInputChangedFirstName : SharedIPage1_2RedesignViewModelAction
- (instancetype)initWithValue:(NSString * _Nullable)value __attribute__((swift_name("init(value:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (NSString * _Nullable)component1 __attribute__((swift_name("component1()")));
- (SharedIPage1_2RedesignViewModelActionInputChangedFirstName *)doCopyValue:(NSString * _Nullable)value __attribute__((swift_name("doCopy(value:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable value __attribute__((swift_name("value")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IPage1_2RedesignViewModelAction.InputChangedLastName")))
@interface SharedIPage1_2RedesignViewModelActionInputChangedLastName : SharedIPage1_2RedesignViewModelAction
- (instancetype)initWithValue:(NSString * _Nullable)value __attribute__((swift_name("init(value:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (NSString * _Nullable)component1 __attribute__((swift_name("component1()")));
- (SharedIPage1_2RedesignViewModelActionInputChangedLastName *)doCopyValue:(NSString * _Nullable)value __attribute__((swift_name("doCopy(value:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable value __attribute__((swift_name("value")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IPage1_2RedesignViewModelFormField")))
@interface SharedIPage1_2RedesignViewModelFormField : SharedBase
- (instancetype)initWithValue:(NSString * _Nullable)value error:(NSString * _Nullable)error __attribute__((swift_name("init(value:error:)"))) __attribute__((objc_designated_initializer));
- (NSString * _Nullable)component1 __attribute__((swift_name("component1()")));
- (NSString * _Nullable)component2 __attribute__((swift_name("component2()")));
- (SharedIPage1_2RedesignViewModelFormField *)doCopyValue:(NSString * _Nullable)value error:(NSString * _Nullable)error __attribute__((swift_name("doCopy(value:error:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable error __attribute__((swift_name("error")));
@property (readonly) NSString * _Nullable value __attribute__((swift_name("value")));
@end;

__attribute__((swift_name("IPage1_2RedesignViewModelUIEvent")))
@interface SharedIPage1_2RedesignViewModelUIEvent : SharedBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IPage1_2RedesignViewModelUIEvent.ForceFocusDobMonth")))
@interface SharedIPage1_2RedesignViewModelUIEventForceFocusDobMonth : SharedIPage1_2RedesignViewModelUIEvent
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
+ (instancetype)forceFocusDobMonth __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedIPage1_2RedesignViewModelUIEventForceFocusDobMonth *shared __attribute__((swift_name("shared")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IPage1_2RedesignViewModelUIEvent.ForceFocusDobYear")))
@interface SharedIPage1_2RedesignViewModelUIEventForceFocusDobYear : SharedIPage1_2RedesignViewModelUIEvent
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
+ (instancetype)forceFocusDobYear __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedIPage1_2RedesignViewModelUIEventForceFocusDobYear *shared __attribute__((swift_name("shared")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IPage1_2RedesignViewModelUIEvent.NavigateToPage3")))
@interface SharedIPage1_2RedesignViewModelUIEventNavigateToPage3 : SharedIPage1_2RedesignViewModelUIEvent
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
+ (instancetype)navigateToPage3 __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedIPage1_2RedesignViewModelUIEventNavigateToPage3 *shared __attribute__((swift_name("shared")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IPage1_2RedesignViewModelUIEvent.ValidationError")))
@interface SharedIPage1_2RedesignViewModelUIEventValidationError : SharedIPage1_2RedesignViewModelUIEvent
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
+ (instancetype)validationError __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedIPage1_2RedesignViewModelUIEventValidationError *shared __attribute__((swift_name("shared")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IPage1_2RedesignViewModelUIState")))
@interface SharedIPage1_2RedesignViewModelUIState : SharedBase
- (instancetype)initWithFirstNameGenderLabel:(NSString * _Nullable)firstNameGenderLabel continueButton:(SharedIPage1_1RedesignViewModelButtonInputField *)continueButton __attribute__((swift_name("init(firstNameGenderLabel:continueButton:)"))) __attribute__((objc_designated_initializer));
- (NSString * _Nullable)component1 __attribute__((swift_name("component1()")));
- (SharedIPage1_1RedesignViewModelButtonInputField *)component2 __attribute__((swift_name("component2()")));
- (SharedIPage1_2RedesignViewModelUIState *)doCopyFirstNameGenderLabel:(NSString * _Nullable)firstNameGenderLabel continueButton:(SharedIPage1_1RedesignViewModelButtonInputField *)continueButton __attribute__((swift_name("doCopy(firstNameGenderLabel:continueButton:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedIPage1_1RedesignViewModelButtonInputField *continueButton __attribute__((swift_name("continueButton")));
@property (readonly) NSString * _Nullable firstNameGenderLabel __attribute__((swift_name("firstNameGenderLabel")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Page1_2RedesignViewModel")))
@interface SharedPage1_2RedesignViewModel : SharedBaseViewModel<SharedIPage1_2RedesignViewModelUIState *, SharedIPage1_2RedesignViewModelUIEvent *> <SharedIPage1_2RedesignViewModel>
- (instancetype)initWithAppCoroutineDispatchers:(SharedAppCoroutineDispatchers *)appCoroutineDispatchers regInputDataHolder:(SharedRegInputDataHolder *)regInputDataHolder regPage1Tracking:(id<SharedIRegPage1Tracking>)regPage1Tracking dateValidator:(id<SharedIDateValidator>)dateValidator __attribute__((swift_name("init(appCoroutineDispatchers:regInputDataHolder:regPage1Tracking:dateValidator:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithDispatchers:(SharedAppCoroutineDispatchers *)dispatchers __attribute__((swift_name("init(dispatchers:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (void)addAction_:(SharedIPage1_2RedesignViewModelAction *)action __attribute__((swift_name("add(action_:)")));
@property (readonly) NSString *TAG __attribute__((swift_name("TAG")));
@property (readonly) id<SharedStateFlow> fieldDOB __attribute__((swift_name("fieldDOB")));
@property (readonly) id<SharedStateFlow> fieldDOBDay __attribute__((swift_name("fieldDOBDay")));
@property (readonly) id<SharedStateFlow> fieldDOBMonth __attribute__((swift_name("fieldDOBMonth")));
@property (readonly) id<SharedStateFlow> fieldDOBYear __attribute__((swift_name("fieldDOBYear")));
@property (readonly) id<SharedStateFlow> fieldFirstName __attribute__((swift_name("fieldFirstName")));
@property (readonly) id<SharedStateFlow> fieldLastName __attribute__((swift_name("fieldLastName")));
@property (readonly) SharedIPage1_2RedesignViewModelUIState *initialState __attribute__((swift_name("initialState")));
@end;

__attribute__((swift_name("IPage1_3RedesignViewModel")))
@protocol SharedIPage1_3RedesignViewModel <SharedIFlowViewModel>
@required
- (void)addAction__:(SharedIPage1_3RedesignViewModelAction *)action __attribute__((swift_name("add(action__:)")));
@property (readonly) id<SharedStateFlow> fieldCountry __attribute__((swift_name("fieldCountry")));
@property (readonly) id<SharedStateFlow> fieldMotherTongue __attribute__((swift_name("fieldMotherTongue")));
@property (readonly) id<SharedStateFlow> fieldReligion __attribute__((swift_name("fieldReligion")));
@end;

__attribute__((swift_name("IPage1_3RedesignViewModelAction")))
@interface SharedIPage1_3RedesignViewModelAction : SharedBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IPage1_3RedesignViewModelAction.Continue")))
@interface SharedIPage1_3RedesignViewModelActionContinue : SharedIPage1_3RedesignViewModelAction
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
+ (instancetype)continue_ __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedIPage1_3RedesignViewModelActionContinue *shared __attribute__((swift_name("shared")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IPage1_3RedesignViewModelAction.Init")))
@interface SharedIPage1_3RedesignViewModelActionInit : SharedIPage1_3RedesignViewModelAction
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
+ (instancetype)getInit __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedIPage1_3RedesignViewModelActionInit *shared __attribute__((swift_name("shared")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IPage1_3RedesignViewModelAction.ValueChangedCountry")))
@interface SharedIPage1_3RedesignViewModelActionValueChangedCountry : SharedIPage1_3RedesignViewModelAction
- (instancetype)initWithValue:(NSString * _Nullable)value __attribute__((swift_name("init(value:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (NSString * _Nullable)component1 __attribute__((swift_name("component1()")));
- (SharedIPage1_3RedesignViewModelActionValueChangedCountry *)doCopyValue:(NSString * _Nullable)value __attribute__((swift_name("doCopy(value:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable value __attribute__((swift_name("value")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IPage1_3RedesignViewModelAction.ValueChangedMotherTongue")))
@interface SharedIPage1_3RedesignViewModelActionValueChangedMotherTongue : SharedIPage1_3RedesignViewModelAction
- (instancetype)initWithValue:(NSString * _Nullable)value __attribute__((swift_name("init(value:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (NSString * _Nullable)component1 __attribute__((swift_name("component1()")));
- (SharedIPage1_3RedesignViewModelActionValueChangedMotherTongue *)doCopyValue:(NSString * _Nullable)value __attribute__((swift_name("doCopy(value:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable value __attribute__((swift_name("value")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IPage1_3RedesignViewModelAction.ValueChangedReligion")))
@interface SharedIPage1_3RedesignViewModelActionValueChangedReligion : SharedIPage1_3RedesignViewModelAction
- (instancetype)initWithValue:(NSString * _Nullable)value __attribute__((swift_name("init(value:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (NSString * _Nullable)component1 __attribute__((swift_name("component1()")));
- (SharedIPage1_3RedesignViewModelActionValueChangedReligion *)doCopyValue:(NSString * _Nullable)value __attribute__((swift_name("doCopy(value:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable value __attribute__((swift_name("value")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IPage1_3RedesignViewModelDropDownField")))
@interface SharedIPage1_3RedesignViewModelDropDownField : SharedBase
- (instancetype)initWithValue:(NSString * _Nullable)value error:(NSString * _Nullable)error options:(NSArray<SharedSelection *> * _Nullable)options __attribute__((swift_name("init(value:error:options:)"))) __attribute__((objc_designated_initializer));
- (NSString * _Nullable)component1 __attribute__((swift_name("component1()")));
- (NSString * _Nullable)component2 __attribute__((swift_name("component2()")));
- (NSArray<SharedSelection *> * _Nullable)component3 __attribute__((swift_name("component3()")));
- (SharedIPage1_3RedesignViewModelDropDownField *)doCopyValue:(NSString * _Nullable)value error:(NSString * _Nullable)error options:(NSArray<SharedSelection *> * _Nullable)options __attribute__((swift_name("doCopy(value:error:options:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable error __attribute__((swift_name("error")));
@property (readonly) NSArray<SharedSelection *> * _Nullable options __attribute__((swift_name("options")));
@property (readonly) NSString * _Nullable value __attribute__((swift_name("value")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IPage1_3RedesignViewModelDropDownFieldCountry")))
@interface SharedIPage1_3RedesignViewModelDropDownFieldCountry : SharedBase
- (instancetype)initWithValue:(NSString * _Nullable)value error:(NSString * _Nullable)error options:(NSArray<SharedSelection *> * _Nullable)options visible:(BOOL)visible __attribute__((swift_name("init(value:error:options:visible:)"))) __attribute__((objc_designated_initializer));
- (NSString * _Nullable)component1 __attribute__((swift_name("component1()")));
- (NSString * _Nullable)component2 __attribute__((swift_name("component2()")));
- (NSArray<SharedSelection *> * _Nullable)component3 __attribute__((swift_name("component3()")));
- (BOOL)component4 __attribute__((swift_name("component4()")));
- (SharedIPage1_3RedesignViewModelDropDownFieldCountry *)doCopyValue:(NSString * _Nullable)value error:(NSString * _Nullable)error options:(NSArray<SharedSelection *> * _Nullable)options visible:(BOOL)visible __attribute__((swift_name("doCopy(value:error:options:visible:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable error __attribute__((swift_name("error")));
@property (readonly) NSArray<SharedSelection *> * _Nullable options __attribute__((swift_name("options")));
@property (readonly) NSString * _Nullable value __attribute__((swift_name("value")));
@property (readonly) BOOL visible __attribute__((swift_name("visible")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IPage1_3RedesignViewModelDropDownFieldMotherTongue")))
@interface SharedIPage1_3RedesignViewModelDropDownFieldMotherTongue : SharedBase
- (instancetype)initWithValue:(NSString * _Nullable)value error:(NSString * _Nullable)error options:(NSArray<SharedSelection *> * _Nullable)options communityLocked:(BOOL)communityLocked visible:(BOOL)visible __attribute__((swift_name("init(value:error:options:communityLocked:visible:)"))) __attribute__((objc_designated_initializer));
- (NSString * _Nullable)component1 __attribute__((swift_name("component1()")));
- (NSString * _Nullable)component2 __attribute__((swift_name("component2()")));
- (NSArray<SharedSelection *> * _Nullable)component3 __attribute__((swift_name("component3()")));
- (BOOL)component4 __attribute__((swift_name("component4()")));
- (BOOL)component5 __attribute__((swift_name("component5()")));
- (SharedIPage1_3RedesignViewModelDropDownFieldMotherTongue *)doCopyValue:(NSString * _Nullable)value error:(NSString * _Nullable)error options:(NSArray<SharedSelection *> * _Nullable)options communityLocked:(BOOL)communityLocked visible:(BOOL)visible __attribute__((swift_name("doCopy(value:error:options:communityLocked:visible:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) BOOL communityLocked __attribute__((swift_name("communityLocked")));
@property (readonly) NSString * _Nullable error __attribute__((swift_name("error")));
@property (readonly) NSArray<SharedSelection *> * _Nullable options __attribute__((swift_name("options")));
@property (readonly) NSString * _Nullable value __attribute__((swift_name("value")));
@property (readonly) BOOL visible __attribute__((swift_name("visible")));
@end;

__attribute__((swift_name("IPage1_3RedesignViewModelUIEvent")))
@interface SharedIPage1_3RedesignViewModelUIEvent : SharedBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IPage1_3RedesignViewModelUIEvent.NavigateToPage4")))
@interface SharedIPage1_3RedesignViewModelUIEventNavigateToPage4 : SharedIPage1_3RedesignViewModelUIEvent
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
+ (instancetype)navigateToPage4 __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedIPage1_3RedesignViewModelUIEventNavigateToPage4 *shared __attribute__((swift_name("shared")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IPage1_3RedesignViewModelUIEvent.ValidationError")))
@interface SharedIPage1_3RedesignViewModelUIEventValidationError : SharedIPage1_3RedesignViewModelUIEvent
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
+ (instancetype)validationError __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedIPage1_3RedesignViewModelUIEventValidationError *shared __attribute__((swift_name("shared")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IPage1_3RedesignViewModelUIState")))
@interface SharedIPage1_3RedesignViewModelUIState : SharedBase
- (instancetype)initWithReligionGenderLabel:(NSString * _Nullable)religionGenderLabel continueButton:(SharedIPage1_1RedesignViewModelButtonInputField *)continueButton __attribute__((swift_name("init(religionGenderLabel:continueButton:)"))) __attribute__((objc_designated_initializer));
- (NSString * _Nullable)component1 __attribute__((swift_name("component1()")));
- (SharedIPage1_1RedesignViewModelButtonInputField *)component2 __attribute__((swift_name("component2()")));
- (SharedIPage1_3RedesignViewModelUIState *)doCopyReligionGenderLabel:(NSString * _Nullable)religionGenderLabel continueButton:(SharedIPage1_1RedesignViewModelButtonInputField *)continueButton __attribute__((swift_name("doCopy(religionGenderLabel:continueButton:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedIPage1_1RedesignViewModelButtonInputField *continueButton __attribute__((swift_name("continueButton")));
@property (readonly) NSString * _Nullable religionGenderLabel __attribute__((swift_name("religionGenderLabel")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Page1_3RedesignViewModel")))
@interface SharedPage1_3RedesignViewModel : SharedBaseViewModel<SharedIPage1_3RedesignViewModelUIState *, SharedIPage1_3RedesignViewModelUIEvent *> <SharedIPage1_3RedesignViewModel>
- (instancetype)initWithAppCoroutineDispatchers:(SharedAppCoroutineDispatchers *)appCoroutineDispatchers lookupRepository:(id<SharedILookupRepository>)lookupRepository regInputDataHolder:(SharedRegInputDataHolder *)regInputDataHolder regPage1Tracking:(id<SharedIRegPage1Tracking>)regPage1Tracking deviceCountryDetector:(id<SharedIDeviceCountryDetector>)deviceCountryDetector __attribute__((swift_name("init(appCoroutineDispatchers:lookupRepository:regInputDataHolder:regPage1Tracking:deviceCountryDetector:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithDispatchers:(SharedAppCoroutineDispatchers *)dispatchers __attribute__((swift_name("init(dispatchers:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (void)addAction__:(SharedIPage1_3RedesignViewModelAction *)action __attribute__((swift_name("add(action__:)")));
@property (readonly) NSString *TAG __attribute__((swift_name("TAG")));
@property (readonly) id<SharedStateFlow> fieldCountry __attribute__((swift_name("fieldCountry")));
@property (readonly) id<SharedStateFlow> fieldMotherTongue __attribute__((swift_name("fieldMotherTongue")));
@property (readonly) id<SharedStateFlow> fieldReligion __attribute__((swift_name("fieldReligion")));
@property (readonly) SharedIPage1_3RedesignViewModelUIState *initialState __attribute__((swift_name("initialState")));
@end;

__attribute__((swift_name("IPage1_1RedesignViewModel")))
@protocol SharedIPage1_1RedesignViewModel <SharedIFlowViewModel>
@required
- (void)addAction___:(SharedIPage1_1RedesignViewModelAction *)action __attribute__((swift_name("add(action___:)")));
@property (readonly) id<SharedStateFlow> fieldGender __attribute__((swift_name("fieldGender")));
@property (readonly) id<SharedStateFlow> fieldProfileFor __attribute__((swift_name("fieldProfileFor")));
@end;

__attribute__((swift_name("IPage1_1RedesignViewModelAction")))
@interface SharedIPage1_1RedesignViewModelAction : SharedBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IPage1_1RedesignViewModelAction.Continue")))
@interface SharedIPage1_1RedesignViewModelActionContinue : SharedIPage1_1RedesignViewModelAction
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
+ (instancetype)continue_ __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedIPage1_1RedesignViewModelActionContinue *shared __attribute__((swift_name("shared")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IPage1_1RedesignViewModelAction.ValueChangedGender")))
@interface SharedIPage1_1RedesignViewModelActionValueChangedGender : SharedIPage1_1RedesignViewModelAction
- (instancetype)initWithValue:(NSString *)value __attribute__((swift_name("init(value:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (NSString *)component1 __attribute__((swift_name("component1()")));
- (SharedIPage1_1RedesignViewModelActionValueChangedGender *)doCopyValue:(NSString *)value __attribute__((swift_name("doCopy(value:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IPage1_1RedesignViewModelAction.ValueChangedProfileFor")))
@interface SharedIPage1_1RedesignViewModelActionValueChangedProfileFor : SharedIPage1_1RedesignViewModelAction
- (instancetype)initWithValue:(NSString *)value __attribute__((swift_name("init(value:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (NSString *)component1 __attribute__((swift_name("component1()")));
- (SharedIPage1_1RedesignViewModelActionValueChangedProfileFor *)doCopyValue:(NSString *)value __attribute__((swift_name("doCopy(value:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IPage1_1RedesignViewModelButtonInputField")))
@interface SharedIPage1_1RedesignViewModelButtonInputField : SharedBase
- (instancetype)initWithVisible:(BOOL)visible enable:(BOOL)enable __attribute__((swift_name("init(visible:enable:)"))) __attribute__((objc_designated_initializer));
- (BOOL)component1 __attribute__((swift_name("component1()")));
- (BOOL)component2 __attribute__((swift_name("component2()")));
- (SharedIPage1_1RedesignViewModelButtonInputField *)doCopyVisible:(BOOL)visible enable:(BOOL)enable __attribute__((swift_name("doCopy(visible:enable:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) BOOL enable __attribute__((swift_name("enable")));
@property (readonly) BOOL visible __attribute__((swift_name("visible")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IPage1_1RedesignViewModelDropDownField")))
@interface SharedIPage1_1RedesignViewModelDropDownField : SharedBase
- (instancetype)initWithValue:(NSString * _Nullable)value error:(NSString * _Nullable)error options:(NSArray<SharedSelection *> * _Nullable)options __attribute__((swift_name("init(value:error:options:)"))) __attribute__((objc_designated_initializer));
- (NSString * _Nullable)component1 __attribute__((swift_name("component1()")));
- (NSString * _Nullable)component2 __attribute__((swift_name("component2()")));
- (NSArray<SharedSelection *> * _Nullable)component3 __attribute__((swift_name("component3()")));
- (SharedIPage1_1RedesignViewModelDropDownField *)doCopyValue:(NSString * _Nullable)value error:(NSString * _Nullable)error options:(NSArray<SharedSelection *> * _Nullable)options __attribute__((swift_name("doCopy(value:error:options:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable error __attribute__((swift_name("error")));
@property (readonly) NSArray<SharedSelection *> * _Nullable options __attribute__((swift_name("options")));
@property (readonly) NSString * _Nullable value __attribute__((swift_name("value")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IPage1_1RedesignViewModelDropDownFieldGender")))
@interface SharedIPage1_1RedesignViewModelDropDownFieldGender : SharedBase
- (instancetype)initWithValue:(NSString * _Nullable)value error:(NSString * _Nullable)error options:(NSArray<SharedSelection *> * _Nullable)options visible:(BOOL)visible __attribute__((swift_name("init(value:error:options:visible:)"))) __attribute__((objc_designated_initializer));
- (NSString * _Nullable)component1 __attribute__((swift_name("component1()")));
- (NSString * _Nullable)component2 __attribute__((swift_name("component2()")));
- (NSArray<SharedSelection *> * _Nullable)component3 __attribute__((swift_name("component3()")));
- (BOOL)component4 __attribute__((swift_name("component4()")));
- (SharedIPage1_1RedesignViewModelDropDownFieldGender *)doCopyValue:(NSString * _Nullable)value error:(NSString * _Nullable)error options:(NSArray<SharedSelection *> * _Nullable)options visible:(BOOL)visible __attribute__((swift_name("doCopy(value:error:options:visible:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable error __attribute__((swift_name("error")));
@property (readonly) NSArray<SharedSelection *> * _Nullable options __attribute__((swift_name("options")));
@property (readonly) NSString * _Nullable value __attribute__((swift_name("value")));
@property (readonly) BOOL visible __attribute__((swift_name("visible")));
@end;

__attribute__((swift_name("IPage1_1RedesignViewModelUIEvent")))
@interface SharedIPage1_1RedesignViewModelUIEvent : SharedBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IPage1_1RedesignViewModelUIEvent.NavigateToPage2")))
@interface SharedIPage1_1RedesignViewModelUIEventNavigateToPage2 : SharedIPage1_1RedesignViewModelUIEvent
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
+ (instancetype)navigateToPage2 __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedIPage1_1RedesignViewModelUIEventNavigateToPage2 *shared __attribute__((swift_name("shared")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IPage1_1RedesignViewModelUIEvent.ValidationError")))
@interface SharedIPage1_1RedesignViewModelUIEventValidationError : SharedIPage1_1RedesignViewModelUIEvent
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
+ (instancetype)validationError __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedIPage1_1RedesignViewModelUIEventValidationError *shared __attribute__((swift_name("shared")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IPage1_1RedesignViewModelUIState")))
@interface SharedIPage1_1RedesignViewModelUIState : SharedBase
- (instancetype)initWithContinueButton:(SharedIPage1_1RedesignViewModelButtonInputField *)continueButton __attribute__((swift_name("init(continueButton:)"))) __attribute__((objc_designated_initializer));
- (SharedIPage1_1RedesignViewModelButtonInputField *)component1 __attribute__((swift_name("component1()")));
- (SharedIPage1_1RedesignViewModelUIState *)doCopyContinueButton:(SharedIPage1_1RedesignViewModelButtonInputField *)continueButton __attribute__((swift_name("doCopy(continueButton:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedIPage1_1RedesignViewModelButtonInputField *continueButton __attribute__((swift_name("continueButton")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Page1_1RedesignViewModel")))
@interface SharedPage1_1RedesignViewModel : SharedBaseViewModel<SharedIPage1_1RedesignViewModelUIState *, SharedIPage1_1RedesignViewModelUIEvent *> <SharedIPage1_1RedesignViewModel>
- (instancetype)initWithAppCoroutineDispatchers:(SharedAppCoroutineDispatchers *)appCoroutineDispatchers lookupRepository:(id<SharedILookupRepository>)lookupRepository regInputDataHolder:(SharedRegInputDataHolder *)regInputDataHolder regPage1Tracking:(id<SharedIRegPage1Tracking>)regPage1Tracking deviceCountryDetector:(id<SharedIDeviceCountryDetector>)deviceCountryDetector __attribute__((swift_name("init(appCoroutineDispatchers:lookupRepository:regInputDataHolder:regPage1Tracking:deviceCountryDetector:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithDispatchers:(SharedAppCoroutineDispatchers *)dispatchers __attribute__((swift_name("init(dispatchers:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedPage1_1RedesignViewModelCompanion *companion __attribute__((swift_name("companion")));
- (void)addAction___:(SharedIPage1_1RedesignViewModelAction *)action __attribute__((swift_name("add(action___:)")));
@property (readonly) NSString *TAG __attribute__((swift_name("TAG")));
@property (readonly) id<SharedStateFlow> fieldGender __attribute__((swift_name("fieldGender")));
@property (readonly) id<SharedStateFlow> fieldProfileFor __attribute__((swift_name("fieldProfileFor")));
@property (readonly) SharedIPage1_1RedesignViewModelUIState *initialState __attribute__((swift_name("initialState")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Page1_1RedesignViewModel.Companion")))
@interface SharedPage1_1RedesignViewModelCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedPage1_1RedesignViewModelCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) int64_t AUTO_NAVIGATE_DELAY __attribute__((swift_name("AUTO_NAVIGATE_DELAY")));
@end;

__attribute__((swift_name("IPage1_4RedesignViewModel")))
@protocol SharedIPage1_4RedesignViewModel <SharedIFlowViewModel>
@required
- (void)addAction____:(SharedIPage1_4RedesignViewModelAction *)action __attribute__((swift_name("add(action____:)")));
@property (readonly) id<SharedStateFlow> fieldEmailId __attribute__((swift_name("fieldEmailId")));
@property (readonly) id<SharedStateFlow> fieldMobileCountry __attribute__((swift_name("fieldMobileCountry")));
@property (readonly) id<SharedStateFlow> fieldMobileNumber __attribute__((swift_name("fieldMobileNumber")));
@end;

__attribute__((swift_name("IPage1_4RedesignViewModelAction")))
@interface SharedIPage1_4RedesignViewModelAction : SharedBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IPage1_4RedesignViewModelAction.AutoMobileDetection")))
@interface SharedIPage1_4RedesignViewModelActionAutoMobileDetection : SharedIPage1_4RedesignViewModelAction
- (instancetype)initWithCountry:(NSString * _Nullable)country number:(NSString * _Nullable)number __attribute__((swift_name("init(country:number:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (NSString * _Nullable)component1 __attribute__((swift_name("component1()")));
- (NSString * _Nullable)component2 __attribute__((swift_name("component2()")));
- (SharedIPage1_4RedesignViewModelActionAutoMobileDetection *)doCopyCountry:(NSString * _Nullable)country number:(NSString * _Nullable)number __attribute__((swift_name("doCopy(country:number:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable country __attribute__((swift_name("country")));
@property (readonly) NSString * _Nullable number __attribute__((swift_name("number")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IPage1_4RedesignViewModelAction.FocusChangedEmailId")))
@interface SharedIPage1_4RedesignViewModelActionFocusChangedEmailId : SharedIPage1_4RedesignViewModelAction
- (instancetype)initWithValue:(NSString * _Nullable)value focused:(BOOL)focused __attribute__((swift_name("init(value:focused:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (NSString * _Nullable)component1 __attribute__((swift_name("component1()")));
- (BOOL)component2 __attribute__((swift_name("component2()")));
- (SharedIPage1_4RedesignViewModelActionFocusChangedEmailId *)doCopyValue:(NSString * _Nullable)value focused:(BOOL)focused __attribute__((swift_name("doCopy(value:focused:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) BOOL focused __attribute__((swift_name("focused")));
@property (readonly) NSString * _Nullable value __attribute__((swift_name("value")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IPage1_4RedesignViewModelAction.FocusChangedMobileNumber")))
@interface SharedIPage1_4RedesignViewModelActionFocusChangedMobileNumber : SharedIPage1_4RedesignViewModelAction
- (instancetype)initWithValue:(NSString * _Nullable)value focused:(BOOL)focused __attribute__((swift_name("init(value:focused:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (NSString * _Nullable)component1 __attribute__((swift_name("component1()")));
- (BOOL)component2 __attribute__((swift_name("component2()")));
- (SharedIPage1_4RedesignViewModelActionFocusChangedMobileNumber *)doCopyValue:(NSString * _Nullable)value focused:(BOOL)focused __attribute__((swift_name("doCopy(value:focused:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) BOOL focused __attribute__((swift_name("focused")));
@property (readonly) NSString * _Nullable value __attribute__((swift_name("value")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IPage1_4RedesignViewModelAction.InputChangedEmailId")))
@interface SharedIPage1_4RedesignViewModelActionInputChangedEmailId : SharedIPage1_4RedesignViewModelAction
- (instancetype)initWithValue:(NSString * _Nullable)value __attribute__((swift_name("init(value:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (NSString * _Nullable)component1 __attribute__((swift_name("component1()")));
- (SharedIPage1_4RedesignViewModelActionInputChangedEmailId *)doCopyValue:(NSString * _Nullable)value __attribute__((swift_name("doCopy(value:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable value __attribute__((swift_name("value")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IPage1_4RedesignViewModelAction.InputChangedMobileNumber")))
@interface SharedIPage1_4RedesignViewModelActionInputChangedMobileNumber : SharedIPage1_4RedesignViewModelAction
- (instancetype)initWithValue:(NSString * _Nullable)value __attribute__((swift_name("init(value:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (NSString * _Nullable)component1 __attribute__((swift_name("component1()")));
- (SharedIPage1_4RedesignViewModelActionInputChangedMobileNumber *)doCopyValue:(NSString * _Nullable)value __attribute__((swift_name("doCopy(value:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable value __attribute__((swift_name("value")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IPage1_4RedesignViewModelAction.Submit")))
@interface SharedIPage1_4RedesignViewModelActionSubmit : SharedIPage1_4RedesignViewModelAction
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
+ (instancetype)submit __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedIPage1_4RedesignViewModelActionSubmit *shared __attribute__((swift_name("shared")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IPage1_4RedesignViewModelAction.ValueChangedMobileCountry")))
@interface SharedIPage1_4RedesignViewModelActionValueChangedMobileCountry : SharedIPage1_4RedesignViewModelAction
- (instancetype)initWithValue:(NSString *)value __attribute__((swift_name("init(value:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (NSString *)component1 __attribute__((swift_name("component1()")));
- (SharedIPage1_4RedesignViewModelActionValueChangedMobileCountry *)doCopyValue:(NSString *)value __attribute__((swift_name("doCopy(value:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IPage1_4RedesignViewModelCompanion")))
@interface SharedIPage1_4RedesignViewModelCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedIPage1_4RedesignViewModelCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) NSString *MESSAGE_EMAIL_ALREADY_REGISTERED __attribute__((swift_name("MESSAGE_EMAIL_ALREADY_REGISTERED")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IPage1_4RedesignViewModelDropDownFieldMobileCountry")))
@interface SharedIPage1_4RedesignViewModelDropDownFieldMobileCountry : SharedBase
- (instancetype)initWithValue:(NSString * _Nullable)value error:(NSString * _Nullable)error options:(NSArray<SharedSelection *> * _Nullable)options visible:(BOOL)visible __attribute__((swift_name("init(value:error:options:visible:)"))) __attribute__((objc_designated_initializer));
- (NSString * _Nullable)component1 __attribute__((swift_name("component1()")));
- (NSString * _Nullable)component2 __attribute__((swift_name("component2()")));
- (NSArray<SharedSelection *> * _Nullable)component3 __attribute__((swift_name("component3()")));
- (BOOL)component4 __attribute__((swift_name("component4()")));
- (SharedIPage1_4RedesignViewModelDropDownFieldMobileCountry *)doCopyValue:(NSString * _Nullable)value error:(NSString * _Nullable)error options:(NSArray<SharedSelection *> * _Nullable)options visible:(BOOL)visible __attribute__((swift_name("doCopy(value:error:options:visible:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable error __attribute__((swift_name("error")));
@property (readonly) NSArray<SharedSelection *> * _Nullable options __attribute__((swift_name("options")));
@property (readonly) NSString * _Nullable value __attribute__((swift_name("value")));
@property (readonly) BOOL visible __attribute__((swift_name("visible")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IPage1_4RedesignViewModelFormFieldEmail")))
@interface SharedIPage1_4RedesignViewModelFormFieldEmail : SharedBase
- (instancetype)initWithValue:(NSString * _Nullable)value error:(NSString * _Nullable)error alreadyRegistered:(BOOL)alreadyRegistered editable:(BOOL)editable __attribute__((swift_name("init(value:error:alreadyRegistered:editable:)"))) __attribute__((objc_designated_initializer));
- (NSString * _Nullable)component1 __attribute__((swift_name("component1()")));
- (NSString * _Nullable)component2 __attribute__((swift_name("component2()")));
- (BOOL)component3 __attribute__((swift_name("component3()")));
- (BOOL)component4 __attribute__((swift_name("component4()")));
- (SharedIPage1_4RedesignViewModelFormFieldEmail *)doCopyValue:(NSString * _Nullable)value error:(NSString * _Nullable)error alreadyRegistered:(BOOL)alreadyRegistered editable:(BOOL)editable __attribute__((swift_name("doCopy(value:error:alreadyRegistered:editable:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) BOOL alreadyRegistered __attribute__((swift_name("alreadyRegistered")));
@property (readonly) BOOL editable __attribute__((swift_name("editable")));
@property (readonly) NSString * _Nullable error __attribute__((swift_name("error")));
@property (readonly) NSString * _Nullable value __attribute__((swift_name("value")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IPage1_4RedesignViewModelFormFieldMobileNumber")))
@interface SharedIPage1_4RedesignViewModelFormFieldMobileNumber : SharedBase
- (instancetype)initWithValue:(NSString * _Nullable)value error:(NSString * _Nullable)error maxLength:(int64_t)maxLength visible:(BOOL)visible __attribute__((swift_name("init(value:error:maxLength:visible:)"))) __attribute__((objc_designated_initializer));
- (NSString * _Nullable)component1 __attribute__((swift_name("component1()")));
- (NSString * _Nullable)component2 __attribute__((swift_name("component2()")));
- (int64_t)component3 __attribute__((swift_name("component3()")));
- (BOOL)component4 __attribute__((swift_name("component4()")));
- (SharedIPage1_4RedesignViewModelFormFieldMobileNumber *)doCopyValue:(NSString * _Nullable)value error:(NSString * _Nullable)error maxLength:(int64_t)maxLength visible:(BOOL)visible __attribute__((swift_name("doCopy(value:error:maxLength:visible:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable error __attribute__((swift_name("error")));
@property (readonly) int64_t maxLength __attribute__((swift_name("maxLength")));
@property (readonly) NSString * _Nullable value __attribute__((swift_name("value")));
@property (readonly) BOOL visible __attribute__((swift_name("visible")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IPage1_4RedesignViewModelSubmitButtonInputField")))
@interface SharedIPage1_4RedesignViewModelSubmitButtonInputField : SharedBase
- (instancetype)initWithVisible:(BOOL)visible enable:(BOOL)enable loading:(BOOL)loading complete:(BOOL)complete __attribute__((swift_name("init(visible:enable:loading:complete:)"))) __attribute__((objc_designated_initializer));
- (BOOL)component1 __attribute__((swift_name("component1()")));
- (BOOL)component2 __attribute__((swift_name("component2()")));
- (BOOL)component3 __attribute__((swift_name("component3()")));
- (BOOL)component4 __attribute__((swift_name("component4()")));
- (SharedIPage1_4RedesignViewModelSubmitButtonInputField *)doCopyVisible:(BOOL)visible enable:(BOOL)enable loading:(BOOL)loading complete:(BOOL)complete __attribute__((swift_name("doCopy(visible:enable:loading:complete:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) BOOL complete __attribute__((swift_name("complete")));
@property (readonly) BOOL enable __attribute__((swift_name("enable")));
@property (readonly) BOOL loading __attribute__((swift_name("loading")));
@property (readonly) BOOL visible __attribute__((swift_name("visible")));
@end;

__attribute__((swift_name("IPage1_4RedesignViewModelUIEvent")))
@interface SharedIPage1_4RedesignViewModelUIEvent : SharedBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IPage1_4RedesignViewModelUIEvent.Message")))
@interface SharedIPage1_4RedesignViewModelUIEventMessage : SharedIPage1_4RedesignViewModelUIEvent
- (instancetype)initWithData:(NSString * _Nullable)data __attribute__((swift_name("init(data:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (NSString * _Nullable)component1 __attribute__((swift_name("component1()")));
- (SharedIPage1_4RedesignViewModelUIEventMessage *)doCopyData:(NSString * _Nullable)data __attribute__((swift_name("doCopy(data:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable data __attribute__((swift_name("data")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IPage1_4RedesignViewModelUIEvent.ProfileCreated")))
@interface SharedIPage1_4RedesignViewModelUIEventProfileCreated : SharedIPage1_4RedesignViewModelUIEvent
- (instancetype)initWithUrl:(NSString *)url cookies:(NSDictionary<NSString *, NSString *> *)cookies __attribute__((swift_name("init(url:cookies:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (NSString *)component1 __attribute__((swift_name("component1()")));
- (NSDictionary<NSString *, NSString *> *)component2 __attribute__((swift_name("component2()")));
- (SharedIPage1_4RedesignViewModelUIEventProfileCreated *)doCopyUrl:(NSString *)url cookies:(NSDictionary<NSString *, NSString *> *)cookies __attribute__((swift_name("doCopy(url:cookies:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSDictionary<NSString *, NSString *> *cookies __attribute__((swift_name("cookies")));
@property (readonly) NSString *url __attribute__((swift_name("url")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IPage1_4RedesignViewModelUIEvent.ValidationError")))
@interface SharedIPage1_4RedesignViewModelUIEventValidationError : SharedIPage1_4RedesignViewModelUIEvent
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
+ (instancetype)validationError __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedIPage1_4RedesignViewModelUIEventValidationError *shared __attribute__((swift_name("shared")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IPage1_4RedesignViewModelUIState")))
@interface SharedIPage1_4RedesignViewModelUIState : SharedBase
- (instancetype)initWithSubmitButton:(SharedIPage1_4RedesignViewModelSubmitButtonInputField *)submitButton __attribute__((swift_name("init(submitButton:)"))) __attribute__((objc_designated_initializer));
- (SharedIPage1_4RedesignViewModelSubmitButtonInputField *)component1 __attribute__((swift_name("component1()")));
- (SharedIPage1_4RedesignViewModelUIState *)doCopySubmitButton:(SharedIPage1_4RedesignViewModelSubmitButtonInputField *)submitButton __attribute__((swift_name("doCopy(submitButton:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedIPage1_4RedesignViewModelSubmitButtonInputField *submitButton __attribute__((swift_name("submitButton")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Page1_4RedesignViewModel")))
@interface SharedPage1_4RedesignViewModel : SharedBaseViewModel<SharedIPage1_4RedesignViewModelUIState *, SharedIPage1_4RedesignViewModelUIEvent *> <SharedIPage1_4RedesignViewModel>
- (instancetype)initWithAppCoroutineDispatchers:(SharedAppCoroutineDispatchers *)appCoroutineDispatchers countryPhoneCodeRepository:(id<SharedICountryPhoneCodeRepository>)countryPhoneCodeRepository phoneNumberValidator:(id<SharedIPhoneNumberValidator>)phoneNumberValidator emailValidator:(id<SharedIEmailValidator>)emailValidator regInputDataHolder:(SharedRegInputDataHolder *)regInputDataHolder registerProfile:(id<SharedIRegisterProfile>)registerProfile deviceCountryDetector:(id<SharedIDeviceCountryDetector>)deviceCountryDetector regPage1Tracking:(id<SharedIRegPage1Tracking>)regPage1Tracking logger:(id<SharedILogger>)logger deviceConstants:(SharedDeviceConstants *)deviceConstants __attribute__((swift_name("init(appCoroutineDispatchers:countryPhoneCodeRepository:phoneNumberValidator:emailValidator:regInputDataHolder:registerProfile:deviceCountryDetector:regPage1Tracking:logger:deviceConstants:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithDispatchers:(SharedAppCoroutineDispatchers *)dispatchers __attribute__((swift_name("init(dispatchers:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (void)addAction____:(SharedIPage1_4RedesignViewModelAction *)action __attribute__((swift_name("add(action____:)")));
@property (readonly) NSString *TAG __attribute__((swift_name("TAG")));
@property (readonly) id<SharedStateFlow> fieldEmailId __attribute__((swift_name("fieldEmailId")));
@property (readonly) id<SharedStateFlow> fieldMobileCountry __attribute__((swift_name("fieldMobileCountry")));
@property (readonly) id<SharedStateFlow> fieldMobileNumber __attribute__((swift_name("fieldMobileNumber")));
@property (readonly) SharedIPage1_4RedesignViewModelUIState *initialState __attribute__((swift_name("initialState")));
@end;

__attribute__((swift_name("IPage1_1ViewModel")))
@protocol SharedIPage1_1ViewModel <SharedIFlowViewModel>
@required
- (void)addAction_____:(SharedIPage1_1ViewModelAction *)action __attribute__((swift_name("add(action_____:)")));
@property (readonly) id<SharedStateFlow> fieldFirstName __attribute__((swift_name("fieldFirstName")));
@property (readonly) id<SharedStateFlow> fieldGender __attribute__((swift_name("fieldGender")));
@property (readonly) id<SharedStateFlow> fieldLastName __attribute__((swift_name("fieldLastName")));
@property (readonly) id<SharedStateFlow> fieldMotherTongue __attribute__((swift_name("fieldMotherTongue")));
@property (readonly) id<SharedStateFlow> fieldProfileFor __attribute__((swift_name("fieldProfileFor")));
@property (readonly) id<SharedStateFlow> fieldReligion __attribute__((swift_name("fieldReligion")));
@end;

__attribute__((swift_name("IPage1_1ViewModelAction")))
@interface SharedIPage1_1ViewModelAction : SharedBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IPage1_1ViewModelAction.Continue")))
@interface SharedIPage1_1ViewModelActionContinue : SharedIPage1_1ViewModelAction
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
+ (instancetype)continue_ __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedIPage1_1ViewModelActionContinue *shared __attribute__((swift_name("shared")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IPage1_1ViewModelAction.FocusChangedFirstName")))
@interface SharedIPage1_1ViewModelActionFocusChangedFirstName : SharedIPage1_1ViewModelAction
- (instancetype)initWithValue:(NSString * _Nullable)value focused:(BOOL)focused __attribute__((swift_name("init(value:focused:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (NSString * _Nullable)component1 __attribute__((swift_name("component1()")));
- (BOOL)component2 __attribute__((swift_name("component2()")));
- (SharedIPage1_1ViewModelActionFocusChangedFirstName *)doCopyValue:(NSString * _Nullable)value focused:(BOOL)focused __attribute__((swift_name("doCopy(value:focused:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) BOOL focused __attribute__((swift_name("focused")));
@property (readonly) NSString * _Nullable value __attribute__((swift_name("value")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IPage1_1ViewModelAction.FocusChangedLastName")))
@interface SharedIPage1_1ViewModelActionFocusChangedLastName : SharedIPage1_1ViewModelAction
- (instancetype)initWithValue:(NSString * _Nullable)value focused:(BOOL)focused __attribute__((swift_name("init(value:focused:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (NSString * _Nullable)component1 __attribute__((swift_name("component1()")));
- (BOOL)component2 __attribute__((swift_name("component2()")));
- (SharedIPage1_1ViewModelActionFocusChangedLastName *)doCopyValue:(NSString * _Nullable)value focused:(BOOL)focused __attribute__((swift_name("doCopy(value:focused:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) BOOL focused __attribute__((swift_name("focused")));
@property (readonly) NSString * _Nullable value __attribute__((swift_name("value")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IPage1_1ViewModelAction.ValueChangedGender")))
@interface SharedIPage1_1ViewModelActionValueChangedGender : SharedIPage1_1ViewModelAction
- (instancetype)initWithValue:(NSString *)value __attribute__((swift_name("init(value:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (NSString *)component1 __attribute__((swift_name("component1()")));
- (SharedIPage1_1ViewModelActionValueChangedGender *)doCopyValue:(NSString *)value __attribute__((swift_name("doCopy(value:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IPage1_1ViewModelAction.ValueChangedMotherTongue")))
@interface SharedIPage1_1ViewModelActionValueChangedMotherTongue : SharedIPage1_1ViewModelAction
- (instancetype)initWithValue:(NSString *)value __attribute__((swift_name("init(value:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (NSString *)component1 __attribute__((swift_name("component1()")));
- (SharedIPage1_1ViewModelActionValueChangedMotherTongue *)doCopyValue:(NSString *)value __attribute__((swift_name("doCopy(value:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IPage1_1ViewModelAction.ValueChangedProfileFor")))
@interface SharedIPage1_1ViewModelActionValueChangedProfileFor : SharedIPage1_1ViewModelAction
- (instancetype)initWithValue:(NSString *)value __attribute__((swift_name("init(value:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (NSString *)component1 __attribute__((swift_name("component1()")));
- (SharedIPage1_1ViewModelActionValueChangedProfileFor *)doCopyValue:(NSString *)value __attribute__((swift_name("doCopy(value:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IPage1_1ViewModelAction.ValueChangedReligion")))
@interface SharedIPage1_1ViewModelActionValueChangedReligion : SharedIPage1_1ViewModelAction
- (instancetype)initWithValue:(NSString *)value __attribute__((swift_name("init(value:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (NSString *)component1 __attribute__((swift_name("component1()")));
- (SharedIPage1_1ViewModelActionValueChangedReligion *)doCopyValue:(NSString *)value __attribute__((swift_name("doCopy(value:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IPage1_1ViewModelDropDownField")))
@interface SharedIPage1_1ViewModelDropDownField : SharedBase
- (instancetype)initWithValue:(NSString * _Nullable)value error:(NSString * _Nullable)error options:(NSArray<SharedSelection *> * _Nullable)options __attribute__((swift_name("init(value:error:options:)"))) __attribute__((objc_designated_initializer));
- (NSString * _Nullable)component1 __attribute__((swift_name("component1()")));
- (NSString * _Nullable)component2 __attribute__((swift_name("component2()")));
- (NSArray<SharedSelection *> * _Nullable)component3 __attribute__((swift_name("component3()")));
- (SharedIPage1_1ViewModelDropDownField *)doCopyValue:(NSString * _Nullable)value error:(NSString * _Nullable)error options:(NSArray<SharedSelection *> * _Nullable)options __attribute__((swift_name("doCopy(value:error:options:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable error __attribute__((swift_name("error")));
@property (readonly) NSArray<SharedSelection *> * _Nullable options __attribute__((swift_name("options")));
@property (readonly) NSString * _Nullable value __attribute__((swift_name("value")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IPage1_1ViewModelDropDownFieldGender")))
@interface SharedIPage1_1ViewModelDropDownFieldGender : SharedBase
- (instancetype)initWithValue:(NSString * _Nullable)value error:(NSString * _Nullable)error options:(NSArray<SharedSelection *> * _Nullable)options visible:(BOOL)visible __attribute__((swift_name("init(value:error:options:visible:)"))) __attribute__((objc_designated_initializer));
- (NSString * _Nullable)component1 __attribute__((swift_name("component1()")));
- (NSString * _Nullable)component2 __attribute__((swift_name("component2()")));
- (NSArray<SharedSelection *> * _Nullable)component3 __attribute__((swift_name("component3()")));
- (BOOL)component4 __attribute__((swift_name("component4()")));
- (SharedIPage1_1ViewModelDropDownFieldGender *)doCopyValue:(NSString * _Nullable)value error:(NSString * _Nullable)error options:(NSArray<SharedSelection *> * _Nullable)options visible:(BOOL)visible __attribute__((swift_name("doCopy(value:error:options:visible:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable error __attribute__((swift_name("error")));
@property (readonly) NSArray<SharedSelection *> * _Nullable options __attribute__((swift_name("options")));
@property (readonly) NSString * _Nullable value __attribute__((swift_name("value")));
@property (readonly) BOOL visible __attribute__((swift_name("visible")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IPage1_1ViewModelDropDownFieldMobileCountry")))
@interface SharedIPage1_1ViewModelDropDownFieldMobileCountry : SharedBase
- (instancetype)initWithValue:(NSString * _Nullable)value error:(NSString * _Nullable)error options:(NSArray<SharedSelection *> * _Nullable)options visible:(BOOL)visible __attribute__((swift_name("init(value:error:options:visible:)"))) __attribute__((objc_designated_initializer));
- (NSString * _Nullable)component1 __attribute__((swift_name("component1()")));
- (NSString * _Nullable)component2 __attribute__((swift_name("component2()")));
- (NSArray<SharedSelection *> * _Nullable)component3 __attribute__((swift_name("component3()")));
- (BOOL)component4 __attribute__((swift_name("component4()")));
- (SharedIPage1_1ViewModelDropDownFieldMobileCountry *)doCopyValue:(NSString * _Nullable)value error:(NSString * _Nullable)error options:(NSArray<SharedSelection *> * _Nullable)options visible:(BOOL)visible __attribute__((swift_name("doCopy(value:error:options:visible:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable error __attribute__((swift_name("error")));
@property (readonly) NSArray<SharedSelection *> * _Nullable options __attribute__((swift_name("options")));
@property (readonly) NSString * _Nullable value __attribute__((swift_name("value")));
@property (readonly) BOOL visible __attribute__((swift_name("visible")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IPage1_1ViewModelDropDownFieldMotherTongue")))
@interface SharedIPage1_1ViewModelDropDownFieldMotherTongue : SharedBase
- (instancetype)initWithValue:(NSString * _Nullable)value error:(NSString * _Nullable)error options:(NSArray<SharedSelection *> * _Nullable)options communityLocked:(BOOL)communityLocked __attribute__((swift_name("init(value:error:options:communityLocked:)"))) __attribute__((objc_designated_initializer));
- (NSString * _Nullable)component1 __attribute__((swift_name("component1()")));
- (NSString * _Nullable)component2 __attribute__((swift_name("component2()")));
- (NSArray<SharedSelection *> * _Nullable)component3 __attribute__((swift_name("component3()")));
- (BOOL)component4 __attribute__((swift_name("component4()")));
- (SharedIPage1_1ViewModelDropDownFieldMotherTongue *)doCopyValue:(NSString * _Nullable)value error:(NSString * _Nullable)error options:(NSArray<SharedSelection *> * _Nullable)options communityLocked:(BOOL)communityLocked __attribute__((swift_name("doCopy(value:error:options:communityLocked:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) BOOL communityLocked __attribute__((swift_name("communityLocked")));
@property (readonly) NSString * _Nullable error __attribute__((swift_name("error")));
@property (readonly) NSArray<SharedSelection *> * _Nullable options __attribute__((swift_name("options")));
@property (readonly) NSString * _Nullable value __attribute__((swift_name("value")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IPage1_1ViewModelFormField")))
@interface SharedIPage1_1ViewModelFormField : SharedBase
- (instancetype)initWithValue:(NSString * _Nullable)value error:(NSString * _Nullable)error __attribute__((swift_name("init(value:error:)"))) __attribute__((objc_designated_initializer));
- (NSString * _Nullable)component1 __attribute__((swift_name("component1()")));
- (NSString * _Nullable)component2 __attribute__((swift_name("component2()")));
- (SharedIPage1_1ViewModelFormField *)doCopyValue:(NSString * _Nullable)value error:(NSString * _Nullable)error __attribute__((swift_name("doCopy(value:error:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable error __attribute__((swift_name("error")));
@property (readonly) NSString * _Nullable value __attribute__((swift_name("value")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IPage1_1ViewModelFormFieldFirstName")))
@interface SharedIPage1_1ViewModelFormFieldFirstName : SharedBase
- (instancetype)initWithValue:(NSString * _Nullable)value error:(NSString * _Nullable)error label:(NSString * _Nullable)label __attribute__((swift_name("init(value:error:label:)"))) __attribute__((objc_designated_initializer));
- (NSString * _Nullable)component1 __attribute__((swift_name("component1()")));
- (NSString * _Nullable)component2 __attribute__((swift_name("component2()")));
- (NSString * _Nullable)component3 __attribute__((swift_name("component3()")));
- (SharedIPage1_1ViewModelFormFieldFirstName *)doCopyValue:(NSString * _Nullable)value error:(NSString * _Nullable)error label:(NSString * _Nullable)label __attribute__((swift_name("doCopy(value:error:label:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable error __attribute__((swift_name("error")));
@property (readonly) NSString * _Nullable label __attribute__((swift_name("label")));
@property (readonly) NSString * _Nullable value __attribute__((swift_name("value")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IPage1_1ViewModelFormFieldMobileNumber")))
@interface SharedIPage1_1ViewModelFormFieldMobileNumber : SharedBase
- (instancetype)initWithValue:(NSString * _Nullable)value error:(NSString * _Nullable)error maxLength:(int64_t)maxLength visible:(BOOL)visible __attribute__((swift_name("init(value:error:maxLength:visible:)"))) __attribute__((objc_designated_initializer));
- (NSString * _Nullable)component1 __attribute__((swift_name("component1()")));
- (NSString * _Nullable)component2 __attribute__((swift_name("component2()")));
- (int64_t)component3 __attribute__((swift_name("component3()")));
- (BOOL)component4 __attribute__((swift_name("component4()")));
- (SharedIPage1_1ViewModelFormFieldMobileNumber *)doCopyValue:(NSString * _Nullable)value error:(NSString * _Nullable)error maxLength:(int64_t)maxLength visible:(BOOL)visible __attribute__((swift_name("doCopy(value:error:maxLength:visible:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable error __attribute__((swift_name("error")));
@property (readonly) int64_t maxLength __attribute__((swift_name("maxLength")));
@property (readonly) NSString * _Nullable value __attribute__((swift_name("value")));
@property (readonly) BOOL visible __attribute__((swift_name("visible")));
@end;

__attribute__((swift_name("IPage1_1ViewModelUIEvent")))
@interface SharedIPage1_1ViewModelUIEvent : SharedBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IPage1_1ViewModelUIEvent.NavigateToPage2")))
@interface SharedIPage1_1ViewModelUIEventNavigateToPage2 : SharedIPage1_1ViewModelUIEvent
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
+ (instancetype)navigateToPage2 __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedIPage1_1ViewModelUIEventNavigateToPage2 *shared __attribute__((swift_name("shared")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IPage1_1ViewModelUIEvent.ValidationError")))
@interface SharedIPage1_1ViewModelUIEventValidationError : SharedIPage1_1ViewModelUIEvent
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
+ (instancetype)validationError __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedIPage1_1ViewModelUIEventValidationError *shared __attribute__((swift_name("shared")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IPage1_1ViewModelUIState")))
@interface SharedIPage1_1ViewModelUIState : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)uIState __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedIPage1_1ViewModelUIState *shared __attribute__((swift_name("shared")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Page1_1ViewModel")))
@interface SharedPage1_1ViewModel : SharedBaseViewModel<SharedIPage1_1ViewModelUIState *, SharedIPage1_1ViewModelUIEvent *> <SharedIPage1_1ViewModel>
- (instancetype)initWithAppCoroutineDispatchers:(SharedAppCoroutineDispatchers *)appCoroutineDispatchers lookupRepository:(id<SharedILookupRepository>)lookupRepository regInputDataHolder:(SharedRegInputDataHolder *)regInputDataHolder regPage1Tracking:(id<SharedIRegPage1Tracking>)regPage1Tracking deviceCountryDetector:(id<SharedIDeviceCountryDetector>)deviceCountryDetector __attribute__((swift_name("init(appCoroutineDispatchers:lookupRepository:regInputDataHolder:regPage1Tracking:deviceCountryDetector:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithDispatchers:(SharedAppCoroutineDispatchers *)dispatchers __attribute__((swift_name("init(dispatchers:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (void)addAction_____:(SharedIPage1_1ViewModelAction *)action __attribute__((swift_name("add(action_____:)")));
@property (readonly) NSString *TAG __attribute__((swift_name("TAG")));
@property (readonly) id<SharedStateFlow> fieldFirstName __attribute__((swift_name("fieldFirstName")));
@property (readonly) id<SharedStateFlow> fieldGender __attribute__((swift_name("fieldGender")));
@property (readonly) id<SharedStateFlow> fieldLastName __attribute__((swift_name("fieldLastName")));
@property (readonly) id<SharedStateFlow> fieldMotherTongue __attribute__((swift_name("fieldMotherTongue")));
@property (readonly) id<SharedStateFlow> fieldProfileFor __attribute__((swift_name("fieldProfileFor")));
@property (readonly) id<SharedStateFlow> fieldReligion __attribute__((swift_name("fieldReligion")));
@property (readonly) SharedIPage1_1ViewModelUIState *initialState __attribute__((swift_name("initialState")));
@end;

__attribute__((swift_name("IPage1_2ViewModel")))
@protocol SharedIPage1_2ViewModel <SharedIFlowViewModel>
@required
- (void)addAction______:(SharedIPage1_2ViewModelAction *)action __attribute__((swift_name("add(action______:)")));
@property (readonly) id<SharedStateFlow> fieldCountry __attribute__((swift_name("fieldCountry")));
@property (readonly) id<SharedStateFlow> fieldDOB __attribute__((swift_name("fieldDOB")));
@property (readonly) id<SharedStateFlow> fieldDOBDay __attribute__((swift_name("fieldDOBDay")));
@property (readonly) id<SharedStateFlow> fieldDOBMonth __attribute__((swift_name("fieldDOBMonth")));
@property (readonly) id<SharedStateFlow> fieldDOBYear __attribute__((swift_name("fieldDOBYear")));
@property (readonly) id<SharedStateFlow> fieldEmailId __attribute__((swift_name("fieldEmailId")));
@property (readonly) id<SharedStateFlow> fieldMobileCountry __attribute__((swift_name("fieldMobileCountry")));
@property (readonly) id<SharedStateFlow> fieldMobileNumber __attribute__((swift_name("fieldMobileNumber")));
@property (readonly) id<SharedStateFlow> maxAge __attribute__((swift_name("maxAge")));
@property (readonly) id<SharedStateFlow> minAge __attribute__((swift_name("minAge")));
@end;

__attribute__((swift_name("IPage1_2ViewModelAction")))
@interface SharedIPage1_2ViewModelAction : SharedBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IPage1_2ViewModelAction.FocusChangedEmailId")))
@interface SharedIPage1_2ViewModelActionFocusChangedEmailId : SharedIPage1_2ViewModelAction
- (instancetype)initWithValue:(NSString * _Nullable)value focused:(BOOL)focused __attribute__((swift_name("init(value:focused:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (NSString * _Nullable)component1 __attribute__((swift_name("component1()")));
- (BOOL)component2 __attribute__((swift_name("component2()")));
- (SharedIPage1_2ViewModelActionFocusChangedEmailId *)doCopyValue:(NSString * _Nullable)value focused:(BOOL)focused __attribute__((swift_name("doCopy(value:focused:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) BOOL focused __attribute__((swift_name("focused")));
@property (readonly) NSString * _Nullable value __attribute__((swift_name("value")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IPage1_2ViewModelAction.FocusChangedMobileNumber")))
@interface SharedIPage1_2ViewModelActionFocusChangedMobileNumber : SharedIPage1_2ViewModelAction
- (instancetype)initWithValue:(NSString * _Nullable)value focused:(BOOL)focused __attribute__((swift_name("init(value:focused:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (NSString * _Nullable)component1 __attribute__((swift_name("component1()")));
- (BOOL)component2 __attribute__((swift_name("component2()")));
- (SharedIPage1_2ViewModelActionFocusChangedMobileNumber *)doCopyValue:(NSString * _Nullable)value focused:(BOOL)focused __attribute__((swift_name("doCopy(value:focused:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) BOOL focused __attribute__((swift_name("focused")));
@property (readonly) NSString * _Nullable value __attribute__((swift_name("value")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IPage1_2ViewModelAction.Submit")))
@interface SharedIPage1_2ViewModelActionSubmit : SharedIPage1_2ViewModelAction
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
+ (instancetype)submit __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedIPage1_2ViewModelActionSubmit *shared __attribute__((swift_name("shared")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IPage1_2ViewModelAction.UpdateValues")))
@interface SharedIPage1_2ViewModelActionUpdateValues : SharedIPage1_2ViewModelAction
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
+ (instancetype)updateValues __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedIPage1_2ViewModelActionUpdateValues *shared __attribute__((swift_name("shared")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IPage1_2ViewModelAction.ValueChangedCountry")))
@interface SharedIPage1_2ViewModelActionValueChangedCountry : SharedIPage1_2ViewModelAction
- (instancetype)initWithValue:(NSString *)value __attribute__((swift_name("init(value:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (NSString *)component1 __attribute__((swift_name("component1()")));
- (SharedIPage1_2ViewModelActionValueChangedCountry *)doCopyValue:(NSString *)value __attribute__((swift_name("doCopy(value:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IPage1_2ViewModelAction.ValueChangedDOBDay")))
@interface SharedIPage1_2ViewModelActionValueChangedDOBDay : SharedIPage1_2ViewModelAction
- (instancetype)initWithValue:(NSString *)value __attribute__((swift_name("init(value:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (NSString *)component1 __attribute__((swift_name("component1()")));
- (SharedIPage1_2ViewModelActionValueChangedDOBDay *)doCopyValue:(NSString *)value __attribute__((swift_name("doCopy(value:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IPage1_2ViewModelAction.ValueChangedDOBMonth")))
@interface SharedIPage1_2ViewModelActionValueChangedDOBMonth : SharedIPage1_2ViewModelAction
- (instancetype)initWithValue:(NSString *)value __attribute__((swift_name("init(value:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (NSString *)component1 __attribute__((swift_name("component1()")));
- (SharedIPage1_2ViewModelActionValueChangedDOBMonth *)doCopyValue:(NSString *)value __attribute__((swift_name("doCopy(value:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IPage1_2ViewModelAction.ValueChangedDOBYear")))
@interface SharedIPage1_2ViewModelActionValueChangedDOBYear : SharedIPage1_2ViewModelAction
- (instancetype)initWithValue:(NSString *)value __attribute__((swift_name("init(value:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (NSString *)component1 __attribute__((swift_name("component1()")));
- (SharedIPage1_2ViewModelActionValueChangedDOBYear *)doCopyValue:(NSString *)value __attribute__((swift_name("doCopy(value:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IPage1_2ViewModelAction.ValueChangedMobileCountry")))
@interface SharedIPage1_2ViewModelActionValueChangedMobileCountry : SharedIPage1_2ViewModelAction
- (instancetype)initWithValue:(NSString *)value __attribute__((swift_name("init(value:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (NSString *)component1 __attribute__((swift_name("component1()")));
- (SharedIPage1_2ViewModelActionValueChangedMobileCountry *)doCopyValue:(NSString *)value __attribute__((swift_name("doCopy(value:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IPage1_2ViewModelCompanion")))
@interface SharedIPage1_2ViewModelCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedIPage1_2ViewModelCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) NSString *MESSAGE_EMAIL_ALREADY_REGISTERED __attribute__((swift_name("MESSAGE_EMAIL_ALREADY_REGISTERED")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IPage1_2ViewModelFormFieldEmail")))
@interface SharedIPage1_2ViewModelFormFieldEmail : SharedBase
- (instancetype)initWithValue:(NSString * _Nullable)value error:(NSString * _Nullable)error alreadyRegistered:(BOOL)alreadyRegistered editable:(BOOL)editable __attribute__((swift_name("init(value:error:alreadyRegistered:editable:)"))) __attribute__((objc_designated_initializer));
- (NSString * _Nullable)component1 __attribute__((swift_name("component1()")));
- (NSString * _Nullable)component2 __attribute__((swift_name("component2()")));
- (BOOL)component3 __attribute__((swift_name("component3()")));
- (BOOL)component4 __attribute__((swift_name("component4()")));
- (SharedIPage1_2ViewModelFormFieldEmail *)doCopyValue:(NSString * _Nullable)value error:(NSString * _Nullable)error alreadyRegistered:(BOOL)alreadyRegistered editable:(BOOL)editable __attribute__((swift_name("doCopy(value:error:alreadyRegistered:editable:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) BOOL alreadyRegistered __attribute__((swift_name("alreadyRegistered")));
@property (readonly) BOOL editable __attribute__((swift_name("editable")));
@property (readonly) NSString * _Nullable error __attribute__((swift_name("error")));
@property (readonly) NSString * _Nullable value __attribute__((swift_name("value")));
@end;

__attribute__((swift_name("IPage1_2ViewModelUIEvent")))
@interface SharedIPage1_2ViewModelUIEvent : SharedBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IPage1_2ViewModelUIEvent.Message")))
@interface SharedIPage1_2ViewModelUIEventMessage : SharedIPage1_2ViewModelUIEvent
- (instancetype)initWithData:(NSString * _Nullable)data __attribute__((swift_name("init(data:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (NSString * _Nullable)component1 __attribute__((swift_name("component1()")));
- (SharedIPage1_2ViewModelUIEventMessage *)doCopyData:(NSString * _Nullable)data __attribute__((swift_name("doCopy(data:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable data __attribute__((swift_name("data")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IPage1_2ViewModelUIEvent.ProfileCreated")))
@interface SharedIPage1_2ViewModelUIEventProfileCreated : SharedIPage1_2ViewModelUIEvent
- (instancetype)initWithUrl:(NSString *)url cookies:(NSDictionary<NSString *, NSString *> *)cookies __attribute__((swift_name("init(url:cookies:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (NSString *)component1 __attribute__((swift_name("component1()")));
- (NSDictionary<NSString *, NSString *> *)component2 __attribute__((swift_name("component2()")));
- (SharedIPage1_2ViewModelUIEventProfileCreated *)doCopyUrl:(NSString *)url cookies:(NSDictionary<NSString *, NSString *> *)cookies __attribute__((swift_name("doCopy(url:cookies:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSDictionary<NSString *, NSString *> *cookies __attribute__((swift_name("cookies")));
@property (readonly) NSString *url __attribute__((swift_name("url")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IPage1_2ViewModelUIEvent.ValidationError")))
@interface SharedIPage1_2ViewModelUIEventValidationError : SharedIPage1_2ViewModelUIEvent
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
+ (instancetype)validationError __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedIPage1_2ViewModelUIEventValidationError *shared __attribute__((swift_name("shared")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IPage1_2ViewModelUIState")))
@interface SharedIPage1_2ViewModelUIState : SharedBase
- (instancetype)initWithLoading:(BOOL)loading __attribute__((swift_name("init(loading:)"))) __attribute__((objc_designated_initializer));
- (BOOL)component1 __attribute__((swift_name("component1()")));
- (SharedIPage1_2ViewModelUIState *)doCopyLoading:(BOOL)loading __attribute__((swift_name("doCopy(loading:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) BOOL loading __attribute__((swift_name("loading")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Page1_2ViewModel")))
@interface SharedPage1_2ViewModel : SharedBaseViewModel<SharedIPage1_2ViewModelUIState *, SharedIPage1_2ViewModelUIEvent *> <SharedIPage1_2ViewModel>
- (instancetype)initWithAppCoroutineDispatchers:(SharedAppCoroutineDispatchers *)appCoroutineDispatchers lookupRepository:(id<SharedILookupRepository>)lookupRepository countryPhoneCodeRepository:(id<SharedICountryPhoneCodeRepository>)countryPhoneCodeRepository phoneNumberValidator:(id<SharedIPhoneNumberValidator>)phoneNumberValidator emailValidator:(id<SharedIEmailValidator>)emailValidator dateValidator:(id<SharedIDateValidator>)dateValidator regInputDataHolder:(SharedRegInputDataHolder *)regInputDataHolder registerProfile:(id<SharedIRegisterProfile>)registerProfile deviceCountryDetector:(id<SharedIDeviceCountryDetector>)deviceCountryDetector regPage1Tracking:(id<SharedIRegPage1Tracking>)regPage1Tracking logger:(id<SharedILogger>)logger deviceConstants:(SharedDeviceConstants *)deviceConstants dateProvider:(id<SharedIDateProvider>)dateProvider __attribute__((swift_name("init(appCoroutineDispatchers:lookupRepository:countryPhoneCodeRepository:phoneNumberValidator:emailValidator:dateValidator:regInputDataHolder:registerProfile:deviceCountryDetector:regPage1Tracking:logger:deviceConstants:dateProvider:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithDispatchers:(SharedAppCoroutineDispatchers *)dispatchers __attribute__((swift_name("init(dispatchers:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (void)addAction______:(SharedIPage1_2ViewModelAction *)action __attribute__((swift_name("add(action______:)")));
@property (readonly) NSString *TAG __attribute__((swift_name("TAG")));
@property (readonly) id<SharedStateFlow> fieldCountry __attribute__((swift_name("fieldCountry")));
@property (readonly) id<SharedStateFlow> fieldDOB __attribute__((swift_name("fieldDOB")));
@property (readonly) id<SharedStateFlow> fieldDOBDay __attribute__((swift_name("fieldDOBDay")));
@property (readonly) id<SharedStateFlow> fieldDOBMonth __attribute__((swift_name("fieldDOBMonth")));
@property (readonly) id<SharedStateFlow> fieldDOBYear __attribute__((swift_name("fieldDOBYear")));
@property (readonly) id<SharedStateFlow> fieldEmailId __attribute__((swift_name("fieldEmailId")));
@property (readonly) id<SharedStateFlow> fieldMobileCountry __attribute__((swift_name("fieldMobileCountry")));
@property (readonly) id<SharedStateFlow> fieldMobileNumber __attribute__((swift_name("fieldMobileNumber")));
@property (readonly) SharedIPage1_2ViewModelUIState *initialState __attribute__((swift_name("initialState")));
@property (readonly) id<SharedStateFlow> maxAge __attribute__((swift_name("maxAge")));
@property (readonly) id<SharedStateFlow> minAge __attribute__((swift_name("minAge")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Employee")))
@interface SharedEmployee : SharedBase
- (instancetype)initWithName:(NSString *)name city:(NSString *)city __attribute__((swift_name("init(name:city:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedEmployeeCompanion *companion __attribute__((swift_name("companion")));
- (NSString *)component1 __attribute__((swift_name("component1()")));
- (NSString *)component2 __attribute__((swift_name("component2()")));
- (SharedEmployee *)doCopyName:(NSString *)name city:(NSString *)city __attribute__((swift_name("doCopy(name:city:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *city __attribute__((swift_name("city")));
@property (readonly) NSString *name __attribute__((swift_name("name")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Employee.Companion")))
@interface SharedEmployeeCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedEmployeeCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("EmployeeAPI")))
@interface SharedEmployeeAPI : SharedBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));

/**
 @note This method converts instances of Exception to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)employeesWithCompletionHandler:(void (^)(NSArray<SharedEmployee *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("employees(completionHandler:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("EmployeeList")))
@interface SharedEmployeeList : SharedBase
- (instancetype)initWithEntries:(NSArray<SharedEmployee *> *)entries __attribute__((swift_name("init(entries:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedEmployeeListCompanion *companion __attribute__((swift_name("companion")));
- (NSArray<SharedEmployee *> *)component1 __attribute__((swift_name("component1()")));
- (SharedEmployeeList *)doCopyEntries:(NSArray<SharedEmployee *> *)entries __attribute__((swift_name("doCopy(entries:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSArray<SharedEmployee *> *entries __attribute__((swift_name("entries")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("EmployeeList.Companion")))
@interface SharedEmployeeListCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedEmployeeListCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end;

__attribute__((swift_name("ICreateRegSession")))
@protocol SharedICreateRegSession
@required
- (SharedICreateRegSessionResponseDTO *)invoke __attribute__((swift_name("invoke()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CreateRegSession")))
@interface SharedCreateRegSession : SharedBase <SharedICreateRegSession>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (SharedICreateRegSessionResponseDTO *)invoke __attribute__((swift_name("invoke()")));
@property (readonly) SharedExperimentBucket *bucket __attribute__((swift_name("bucket")));
@end;

__attribute__((swift_name("KotlinComparable")))
@protocol SharedKotlinComparable
@required
- (int32_t)compareToOther:(id _Nullable)other __attribute__((swift_name("compareTo(other:)")));
@end;

__attribute__((swift_name("KotlinEnum")))
@interface SharedKotlinEnum<E> : SharedBase <SharedKotlinComparable>
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedKotlinEnumCompanion *companion __attribute__((swift_name("companion")));
- (int32_t)compareToOther:(E)other __attribute__((swift_name("compareTo(other:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *name __attribute__((swift_name("name")));
@property (readonly) int32_t ordinal __attribute__((swift_name("ordinal")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ExperimentBucket")))
@interface SharedExperimentBucket : SharedKotlinEnum<SharedExperimentBucket *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedExperimentBucket *a __attribute__((swift_name("a")));
@property (class, readonly) SharedExperimentBucket *b __attribute__((swift_name("b")));
@property (class, readonly) SharedExperimentBucket *c __attribute__((swift_name("c")));
@property (class, readonly) SharedExperimentBucket *o __attribute__((swift_name("o")));
+ (SharedKotlinArray<SharedExperimentBucket *> *)values __attribute__((swift_name("values()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ICreateRegSessionRequestDTO")))
@interface SharedICreateRegSessionRequestDTO : SharedBase
- (instancetype)initWithId:(NSString *)id __attribute__((swift_name("init(id:)"))) __attribute__((objc_designated_initializer));
- (NSString *)component1 __attribute__((swift_name("component1()")));
- (SharedICreateRegSessionRequestDTO *)doCopyId:(NSString *)id __attribute__((swift_name("doCopy(id:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *id __attribute__((swift_name("id")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ICreateRegSessionResponseDTO")))
@interface SharedICreateRegSessionResponseDTO : SharedBase
- (instancetype)initWithBucket:(SharedExperimentBucket *)bucket sessionId:(NSString *)sessionId __attribute__((swift_name("init(bucket:sessionId:)"))) __attribute__((objc_designated_initializer));
- (SharedExperimentBucket *)component1 __attribute__((swift_name("component1()")));
- (NSString *)component2 __attribute__((swift_name("component2()")));
- (SharedICreateRegSessionResponseDTO *)doCopyBucket:(SharedExperimentBucket *)bucket sessionId:(NSString *)sessionId __attribute__((swift_name("doCopy(bucket:sessionId:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedExperimentBucket *bucket __attribute__((swift_name("bucket")));
@property (readonly) NSString *sessionId __attribute__((swift_name("sessionId")));
@end;

__attribute__((swift_name("IRegisterProfile")))
@protocol SharedIRegisterProfile
@required

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)emailIsAvailableEmail:(NSString *)email completionHandler:(void (^)(NSString * _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("emailIsAvailable(email:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)invokeRequestDTO:(SharedIRegisterProfileRequestDTO *)requestDTO completionHandler:(void (^)(SharedIRegisterProfileResponseDTO * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("invoke(requestDTO:completionHandler:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IRegisterProfileCompanion")))
@interface SharedIRegisterProfileCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedIRegisterProfileCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) NSString *ERROR_SHORTCODE_EMAIL_ALREADY_REGISTERED __attribute__((swift_name("ERROR_SHORTCODE_EMAIL_ALREADY_REGISTERED")));
@property (readonly) NSString *INCOMPLETE_DETAILS __attribute__((swift_name("INCOMPLETE_DETAILS")));
@end;

__attribute__((swift_name("IRegisterProfileResponseDTO")))
@interface SharedIRegisterProfileResponseDTO : SharedBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IRegisterProfileErrorResponseDTO")))
@interface SharedIRegisterProfileErrorResponseDTO : SharedIRegisterProfileResponseDTO
- (instancetype)initWithMessage:(NSString * _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (NSString * _Nullable)component1 __attribute__((swift_name("component1()")));
- (SharedIRegisterProfileErrorResponseDTO *)doCopyMessage:(NSString * _Nullable)message __attribute__((swift_name("doCopy(message:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable message __attribute__((swift_name("message")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IRegisterProfileMetaData")))
@interface SharedIRegisterProfileMetaData : SharedBase
- (instancetype)initWithSignupToken:(NSString * _Nullable)signupToken appInstanceId:(NSString * _Nullable)appInstanceId bucket:(SharedExperimentBucket *)bucket sessionId:(NSString *)sessionId domain:(NSString *)domain ptnr:(NSString *)ptnr formName:(NSString *)formName signupType:(SharedSignupType *)signupType deviceId:(NSString *)deviceId __attribute__((swift_name("init(signupToken:appInstanceId:bucket:sessionId:domain:ptnr:formName:signupType:deviceId:)"))) __attribute__((objc_designated_initializer));
- (NSString * _Nullable)component1 __attribute__((swift_name("component1()")));
- (NSString * _Nullable)component2 __attribute__((swift_name("component2()")));
- (SharedExperimentBucket *)component3 __attribute__((swift_name("component3()")));
- (NSString *)component4 __attribute__((swift_name("component4()")));
- (NSString *)component5 __attribute__((swift_name("component5()")));
- (NSString *)component6 __attribute__((swift_name("component6()")));
- (NSString *)component7 __attribute__((swift_name("component7()")));
- (SharedSignupType *)component8 __attribute__((swift_name("component8()")));
- (NSString *)component9 __attribute__((swift_name("component9()")));
- (SharedIRegisterProfileMetaData *)doCopySignupToken:(NSString * _Nullable)signupToken appInstanceId:(NSString * _Nullable)appInstanceId bucket:(SharedExperimentBucket *)bucket sessionId:(NSString *)sessionId domain:(NSString *)domain ptnr:(NSString *)ptnr formName:(NSString *)formName signupType:(SharedSignupType *)signupType deviceId:(NSString *)deviceId __attribute__((swift_name("doCopy(signupToken:appInstanceId:bucket:sessionId:domain:ptnr:formName:signupType:deviceId:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable appInstanceId __attribute__((swift_name("appInstanceId")));
@property (readonly) SharedExperimentBucket *bucket __attribute__((swift_name("bucket")));
@property (readonly) NSString *deviceId __attribute__((swift_name("deviceId")));
@property (readonly) NSString *domain __attribute__((swift_name("domain")));
@property (readonly) SharedDomainType *domainType __attribute__((swift_name("domainType")));
@property (readonly) NSString *formName __attribute__((swift_name("formName")));
@property (readonly) NSString *ptnr __attribute__((swift_name("ptnr")));
@property (readonly) NSString *sessionId __attribute__((swift_name("sessionId")));
@property (readonly) NSString * _Nullable signupToken __attribute__((swift_name("signupToken")));
@property (readonly) SharedSignupType *signupType __attribute__((swift_name("signupType")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IRegisterProfileRequestDTO")))
@interface SharedIRegisterProfileRequestDTO : SharedBase
- (instancetype)initWithInputData:(SharedRegInputData *)inputData metaData:(SharedIRegisterProfileMetaData * _Nullable)metaData __attribute__((swift_name("init(inputData:metaData:)"))) __attribute__((objc_designated_initializer));
- (SharedRegInputData *)component1 __attribute__((swift_name("component1()")));
- (SharedIRegisterProfileMetaData * _Nullable)component2 __attribute__((swift_name("component2()")));
- (SharedIRegisterProfileRequestDTO *)doCopyInputData:(SharedRegInputData *)inputData metaData:(SharedIRegisterProfileMetaData * _Nullable)metaData __attribute__((swift_name("doCopy(inputData:metaData:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedRegInputData *inputData __attribute__((swift_name("inputData")));
@property (readonly) SharedIRegisterProfileMetaData * _Nullable metaData __attribute__((swift_name("metaData")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IRegisterProfileSucccessResponseDTO")))
@interface SharedIRegisterProfileSucccessResponseDTO : SharedIRegisterProfileResponseDTO
- (instancetype)initWithToken:(NSString *)token memberlogin:(NSString *)memberlogin url:(NSString *)url __attribute__((swift_name("init(token:memberlogin:url:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (NSString *)component1 __attribute__((swift_name("component1()")));
- (NSString *)component2 __attribute__((swift_name("component2()")));
- (NSString *)component3 __attribute__((swift_name("component3()")));
- (SharedIRegisterProfileSucccessResponseDTO *)doCopyToken:(NSString *)token memberlogin:(NSString *)memberlogin url:(NSString *)url __attribute__((swift_name("doCopy(token:memberlogin:url:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *memberlogin __attribute__((swift_name("memberlogin")));
@property (readonly) NSString *token __attribute__((swift_name("token")));
@property (readonly) NSString *url __attribute__((swift_name("url")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("RegInputData")))
@interface SharedRegInputData : SharedBase
- (instancetype)initWithProfileFor:(NSString * _Nullable)profileFor firstName:(NSString * _Nullable)firstName lastName:(NSString * _Nullable)lastName gender:(NSString * _Nullable)gender religion:(NSString * _Nullable)religion motherTongue:(NSString * _Nullable)motherTongue emailId:(NSString * _Nullable)emailId mobileCountryCode:(NSString * _Nullable)mobileCountryCode mobileCountry:(NSString * _Nullable)mobileCountry mobileNumber:(NSString * _Nullable)mobileNumber dobDay:(NSString * _Nullable)dobDay dobMonth:(NSString * _Nullable)dobMonth dobYear:(NSString * _Nullable)dobYear country:(NSString * _Nullable)country __attribute__((swift_name("init(profileFor:firstName:lastName:gender:religion:motherTongue:emailId:mobileCountryCode:mobileCountry:mobileNumber:dobDay:dobMonth:dobYear:country:)"))) __attribute__((objc_designated_initializer));
- (NSString * _Nullable)component1 __attribute__((swift_name("component1()")));
- (NSString * _Nullable)component10 __attribute__((swift_name("component10()")));
- (NSString * _Nullable)component11 __attribute__((swift_name("component11()")));
- (NSString * _Nullable)component12 __attribute__((swift_name("component12()")));
- (NSString * _Nullable)component13 __attribute__((swift_name("component13()")));
- (NSString * _Nullable)component14 __attribute__((swift_name("component14()")));
- (NSString * _Nullable)component2 __attribute__((swift_name("component2()")));
- (NSString * _Nullable)component3 __attribute__((swift_name("component3()")));
- (NSString * _Nullable)component4 __attribute__((swift_name("component4()")));
- (NSString * _Nullable)component5 __attribute__((swift_name("component5()")));
- (NSString * _Nullable)component6 __attribute__((swift_name("component6()")));
- (NSString * _Nullable)component7 __attribute__((swift_name("component7()")));
- (NSString * _Nullable)component8 __attribute__((swift_name("component8()")));
- (NSString * _Nullable)component9 __attribute__((swift_name("component9()")));
- (SharedRegInputData *)doCopyProfileFor:(NSString * _Nullable)profileFor firstName:(NSString * _Nullable)firstName lastName:(NSString * _Nullable)lastName gender:(NSString * _Nullable)gender religion:(NSString * _Nullable)religion motherTongue:(NSString * _Nullable)motherTongue emailId:(NSString * _Nullable)emailId mobileCountryCode:(NSString * _Nullable)mobileCountryCode mobileCountry:(NSString * _Nullable)mobileCountry mobileNumber:(NSString * _Nullable)mobileNumber dobDay:(NSString * _Nullable)dobDay dobMonth:(NSString * _Nullable)dobMonth dobYear:(NSString * _Nullable)dobYear country:(NSString * _Nullable)country __attribute__((swift_name("doCopy(profileFor:firstName:lastName:gender:religion:motherTongue:emailId:mobileCountryCode:mobileCountry:mobileNumber:dobDay:dobMonth:dobYear:country:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable country __attribute__((swift_name("country")));
@property (readonly) NSString * _Nullable dobDay __attribute__((swift_name("dobDay")));
@property (readonly) NSString * _Nullable dobMonth __attribute__((swift_name("dobMonth")));
@property (readonly) NSString * _Nullable dobYear __attribute__((swift_name("dobYear")));
@property (readonly) NSString * _Nullable emailId __attribute__((swift_name("emailId")));
@property (readonly) NSString * _Nullable firstName __attribute__((swift_name("firstName")));
@property (readonly) NSString * _Nullable gender __attribute__((swift_name("gender")));
@property (readonly) NSString * _Nullable lastName __attribute__((swift_name("lastName")));
@property (readonly) NSString * _Nullable mobileCountry __attribute__((swift_name("mobileCountry")));
@property (readonly) NSString * _Nullable mobileCountryCode __attribute__((swift_name("mobileCountryCode")));
@property (readonly) NSString * _Nullable mobileNumber __attribute__((swift_name("mobileNumber")));
@property (readonly) NSString * _Nullable motherTongue __attribute__((swift_name("motherTongue")));
@property (readonly) NSString * _Nullable profileFor __attribute__((swift_name("profileFor")));
@property (readonly) NSString * _Nullable religion __attribute__((swift_name("religion")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("RegInputDataHolder")))
@interface SharedRegInputDataHolder : SharedBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (SharedIRegisterProfileMetaData * _Nullable)metaDataSnapshot __attribute__((swift_name("metaDataSnapshot()")));
- (void)metaDataUpdateNewSnapshot:(SharedIRegisterProfileMetaData *)newSnapshot __attribute__((swift_name("metaDataUpdate(newSnapshot:)")));
- (SharedRegInputData *)regInputSnapshot __attribute__((swift_name("regInputSnapshot()")));
- (void)regInputUpdateNewSnapshot:(SharedRegInputData *)newSnapshot __attribute__((swift_name("regInputUpdate(newSnapshot:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("RegisterProfile")))
@interface SharedRegisterProfile : SharedBase <SharedIRegisterProfile>
- (instancetype)initWithRegistrationRepository:(id<SharedIRegistrationRepository>)registrationRepository deviceCountryDetector:(id<SharedIDeviceCountryDetector>)deviceCountryDetector guestRepository:(id<SharedIGuestRepository>)guestRepository deviceConstants:(SharedDeviceConstants *)deviceConstants __attribute__((swift_name("init(registrationRepository:deviceCountryDetector:guestRepository:deviceConstants:)"))) __attribute__((objc_designated_initializer));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)emailIsAvailableEmail:(NSString *)email completionHandler:(void (^)(NSString * _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("emailIsAvailable(email:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)invokeRequestDTO:(SharedIRegisterProfileRequestDTO *)requestDTO completionHandler:(void (^)(SharedIRegisterProfileResponseDTO * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("invoke(requestDTO:completionHandler:)")));
@property (readonly) NSString *dummyPassword __attribute__((swift_name("dummyPassword")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SignupType")))
@interface SharedSignupType : SharedKotlinEnum<SharedSignupType *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedSignupType *email __attribute__((swift_name("email")));
@property (class, readonly) SharedSignupType *google __attribute__((swift_name("google")));
@property (class, readonly) SharedSignupType *apple __attribute__((swift_name("apple")));
+ (SharedKotlinArray<SharedSignupType *> *)values __attribute__((swift_name("values()")));
@end;

__attribute__((swift_name("IDeviceCountryDetector")))
@protocol SharedIDeviceCountryDetector
@required

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)invokeWithCompletionHandler:(void (^)(SharedIDeviceCountryDetectorResponseDTO * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("invoke(completionHandler:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IDeviceCountryDetectorResponseDTO")))
@interface SharedIDeviceCountryDetectorResponseDTO : SharedBase
- (instancetype)initWithCountry:(NSString * _Nullable)country __attribute__((swift_name("init(country:)"))) __attribute__((objc_designated_initializer));
- (NSString * _Nullable)component1 __attribute__((swift_name("component1()")));
- (SharedIDeviceCountryDetectorResponseDTO *)doCopyCountry:(NSString * _Nullable)country __attribute__((swift_name("doCopy(country:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable country __attribute__((swift_name("country")));
@end;

__attribute__((swift_name("IRegPage1Tracker")))
@protocol SharedIRegPage1Tracker
@required
- (void)invokePayload:(SharedRegPage1TrackingPayload *)payload __attribute__((swift_name("invoke(payload:)")));
@end;

__attribute__((swift_name("IRegPage1Tracking")))
@protocol SharedIRegPage1Tracking
@required
- (void)invokeRequestDTO:(SharedIRegPage1TrackingRequestDTO *)requestDTO __attribute__((swift_name("invoke(requestDTO:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IRegPage1TrackingRequestDTO")))
@interface SharedIRegPage1TrackingRequestDTO : SharedBase
- (instancetype)initWithEventName:(NSString *)eventName fieldName:(NSString *)fieldName fieldValue:(NSString * _Nullable)fieldValue memberlogin:(NSString * _Nullable)memberlogin __attribute__((swift_name("init(eventName:fieldName:fieldValue:memberlogin:)"))) __attribute__((objc_designated_initializer));
- (NSString *)component1 __attribute__((swift_name("component1()")));
- (NSString *)component2 __attribute__((swift_name("component2()")));
- (NSString * _Nullable)component3 __attribute__((swift_name("component3()")));
- (NSString * _Nullable)component4 __attribute__((swift_name("component4()")));
- (SharedIRegPage1TrackingRequestDTO *)doCopyEventName:(NSString *)eventName fieldName:(NSString *)fieldName fieldValue:(NSString * _Nullable)fieldValue memberlogin:(NSString * _Nullable)memberlogin __attribute__((swift_name("doCopy(eventName:fieldName:fieldValue:memberlogin:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *eventName __attribute__((swift_name("eventName")));
@property (readonly) NSString *fieldName __attribute__((swift_name("fieldName")));
@property (readonly) NSString * _Nullable fieldValue __attribute__((swift_name("fieldValue")));
@property (readonly) NSString * _Nullable memberlogin __attribute__((swift_name("memberlogin")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("RegPage1Tracking")))
@interface SharedRegPage1Tracking : SharedBase <SharedIRegPage1Tracking>
- (instancetype)initWithDeviceConstants:(SharedDeviceConstants *)deviceConstants regInputDataHolder:(SharedRegInputDataHolder *)regInputDataHolder tracker:(id<SharedIRegPage1Tracker>)tracker logger:(id<SharedILogger>)logger __attribute__((swift_name("init(deviceConstants:regInputDataHolder:tracker:logger:)"))) __attribute__((objc_designated_initializer));
- (void)invokeRequestDTO:(SharedIRegPage1TrackingRequestDTO *)requestDTO __attribute__((swift_name("invoke(requestDTO:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("RegPage1TrackingPayload")))
@interface SharedRegPage1TrackingPayload : SharedBase
- (instancetype)initWithEventName:(NSString *)eventName formName:(NSString *)formName platform:(NSString *)platform ptnr:(NSString *)ptnr bucket:(NSString *)bucket domain:(NSString *)domain domainType:(NSString * _Nullable)domainType fieldName:(NSString *)fieldName fieldValue:(NSString * _Nullable)fieldValue memberlogin:(NSString * _Nullable)memberlogin sessionId:(NSString *)sessionId appVersion:(NSString *)appVersion __attribute__((swift_name("init(eventName:formName:platform:ptnr:bucket:domain:domainType:fieldName:fieldValue:memberlogin:sessionId:appVersion:)"))) __attribute__((objc_designated_initializer));
- (NSString *)component1 __attribute__((swift_name("component1()")));
- (NSString * _Nullable)component10 __attribute__((swift_name("component10()")));
- (NSString *)component11 __attribute__((swift_name("component11()")));
- (NSString *)component12 __attribute__((swift_name("component12()")));
- (NSString *)component2 __attribute__((swift_name("component2()")));
- (NSString *)component3 __attribute__((swift_name("component3()")));
- (NSString *)component4 __attribute__((swift_name("component4()")));
- (NSString *)component5 __attribute__((swift_name("component5()")));
- (NSString *)component6 __attribute__((swift_name("component6()")));
- (NSString * _Nullable)component7 __attribute__((swift_name("component7()")));
- (NSString *)component8 __attribute__((swift_name("component8()")));
- (NSString * _Nullable)component9 __attribute__((swift_name("component9()")));
- (SharedRegPage1TrackingPayload *)doCopyEventName:(NSString *)eventName formName:(NSString *)formName platform:(NSString *)platform ptnr:(NSString *)ptnr bucket:(NSString *)bucket domain:(NSString *)domain domainType:(NSString * _Nullable)domainType fieldName:(NSString *)fieldName fieldValue:(NSString * _Nullable)fieldValue memberlogin:(NSString * _Nullable)memberlogin sessionId:(NSString *)sessionId appVersion:(NSString *)appVersion __attribute__((swift_name("doCopy(eventName:formName:platform:ptnr:bucket:domain:domainType:fieldName:fieldValue:memberlogin:sessionId:appVersion:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSDictionary<NSString *, id> *)toPayloadMap __attribute__((swift_name("toPayloadMap()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *appVersion __attribute__((swift_name("appVersion")));
@property (readonly) NSString *bucket __attribute__((swift_name("bucket")));
@property (readonly) NSString *domain __attribute__((swift_name("domain")));
@property (readonly) NSString * _Nullable domainType __attribute__((swift_name("domainType")));
@property (readonly) NSString *eventName __attribute__((swift_name("eventName")));
@property (readonly) NSString *fieldName __attribute__((swift_name("fieldName")));
@property (readonly) NSString * _Nullable fieldValue __attribute__((swift_name("fieldValue")));
@property (readonly) NSString *formName __attribute__((swift_name("formName")));
@property (readonly) NSString * _Nullable memberlogin __attribute__((swift_name("memberlogin")));
@property (readonly) NSString *platform __attribute__((swift_name("platform")));
@property (readonly) NSString *ptnr __attribute__((swift_name("ptnr")));
@property (readonly) NSString *sessionId __attribute__((swift_name("sessionId")));
@end;

__attribute__((swift_name("IDateValidator")))
@protocol SharedIDateValidator
@required

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)invokeRequestDTO:(SharedIDateValidatorRequestDTO *)requestDTO completionHandler_:(void (^)(SharedIDateValidatorResponseDTO * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("invoke(requestDTO:completionHandler_:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)invokeRequestDTO:(SharedIDateValidatorRequestDTO2 *)requestDTO completionHandler__:(void (^)(SharedIDateValidatorResponseDTO * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("invoke(requestDTO:completionHandler__:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)invokeRequestDTO:(SharedIDateValidatorRequestDTO3 *)requestDTO completionHandler___:(void (^)(SharedIDateValidatorResponseDTO * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("invoke(requestDTO:completionHandler___:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DateValidator")))
@interface SharedDateValidator : SharedBase <SharedIDateValidator>
- (instancetype)initWithDateProvider:(id<SharedIDateProvider>)dateProvider __attribute__((swift_name("init(dateProvider:)"))) __attribute__((objc_designated_initializer));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)invokeRequestDTO:(SharedIDateValidatorRequestDTO *)requestDTO completionHandler_:(void (^)(SharedIDateValidatorResponseDTO * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("invoke(requestDTO:completionHandler_:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)invokeRequestDTO:(SharedIDateValidatorRequestDTO2 *)requestDTO completionHandler__:(void (^)(SharedIDateValidatorResponseDTO * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("invoke(requestDTO:completionHandler__:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)invokeRequestDTO:(SharedIDateValidatorRequestDTO3 *)requestDTO completionHandler___:(void (^)(SharedIDateValidatorResponseDTO * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("invoke(requestDTO:completionHandler___:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IDateValidatorDateValidatorError")))
@interface SharedIDateValidatorDateValidatorError : SharedKotlinEnum<SharedIDateValidatorDateValidatorError *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedIDateValidatorDateValidatorError *incorrectDate __attribute__((swift_name("incorrectDate")));
@property (class, readonly) SharedIDateValidatorDateValidatorError *dateEmpty __attribute__((swift_name("dateEmpty")));
@property (class, readonly) SharedIDateValidatorDateValidatorError *minAge __attribute__((swift_name("minAge")));
@property (class, readonly) SharedIDateValidatorDateValidatorError *maxAge __attribute__((swift_name("maxAge")));
+ (SharedKotlinArray<SharedIDateValidatorDateValidatorError *> *)values __attribute__((swift_name("values()")));
@end;

__attribute__((swift_name("IDateValidatorResponseDTO")))
@interface SharedIDateValidatorResponseDTO : SharedBase
- (instancetype)initWithValue:(NSString * _Nullable)value format:(NSString *)format __attribute__((swift_name("init(value:format:)"))) __attribute__((objc_designated_initializer));
@property (readonly) NSString *format __attribute__((swift_name("format")));
@property (readonly) NSString * _Nullable value __attribute__((swift_name("value")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IDateValidatorErrorDTO")))
@interface SharedIDateValidatorErrorDTO : SharedIDateValidatorResponseDTO
- (instancetype)initWithValue:(NSString * _Nullable)value format:(NSString *)format error:(SharedIDateValidatorDateValidatorError *)error epoch:(SharedLong * _Nullable)epoch __attribute__((swift_name("init(value:format:error:epoch:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithValue:(NSString * _Nullable)value format:(NSString *)format __attribute__((swift_name("init(value:format:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (NSString * _Nullable)component1 __attribute__((swift_name("component1()")));
- (NSString *)component2 __attribute__((swift_name("component2()")));
- (SharedIDateValidatorDateValidatorError *)component3 __attribute__((swift_name("component3()")));
- (SharedLong * _Nullable)component4 __attribute__((swift_name("component4()")));
- (SharedIDateValidatorErrorDTO *)doCopyValue:(NSString * _Nullable)value format:(NSString *)format error:(SharedIDateValidatorDateValidatorError *)error epoch:(SharedLong * _Nullable)epoch __attribute__((swift_name("doCopy(value:format:error:epoch:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedLong * _Nullable epoch __attribute__((swift_name("epoch")));
@property (readonly) SharedIDateValidatorDateValidatorError *error __attribute__((swift_name("error")));
@property (readonly) NSString *format __attribute__((swift_name("format")));
@property (readonly) NSString * _Nullable value __attribute__((swift_name("value")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IDateValidatorRequestDTO")))
@interface SharedIDateValidatorRequestDTO : SharedBase
- (instancetype)initWithDate:(NSString * _Nullable)date format:(NSString *)format minAge:(SharedInt * _Nullable)minAge maxAge:(SharedInt * _Nullable)maxAge __attribute__((swift_name("init(date:format:minAge:maxAge:)"))) __attribute__((objc_designated_initializer));
- (NSString * _Nullable)component1 __attribute__((swift_name("component1()")));
- (NSString *)component2 __attribute__((swift_name("component2()")));
- (SharedInt * _Nullable)component3 __attribute__((swift_name("component3()")));
- (SharedInt * _Nullable)component4 __attribute__((swift_name("component4()")));
- (SharedIDateValidatorRequestDTO *)doCopyDate:(NSString * _Nullable)date format:(NSString *)format minAge:(SharedInt * _Nullable)minAge maxAge:(SharedInt * _Nullable)maxAge __attribute__((swift_name("doCopy(date:format:minAge:maxAge:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable date __attribute__((swift_name("date")));
@property (readonly) NSString *format __attribute__((swift_name("format")));
@property (readonly) SharedInt * _Nullable maxAge __attribute__((swift_name("maxAge")));
@property (readonly) SharedInt * _Nullable minAge __attribute__((swift_name("minAge")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IDateValidatorRequestDTO2")))
@interface SharedIDateValidatorRequestDTO2 : SharedBase
- (instancetype)initWithDay:(NSString * _Nullable)day month:(NSString * _Nullable)month year:(NSString * _Nullable)year format:(NSString *)format minAge:(SharedInt * _Nullable)minAge __attribute__((swift_name("init(day:month:year:format:minAge:)"))) __attribute__((objc_designated_initializer));
- (NSString * _Nullable)component1 __attribute__((swift_name("component1()")));
- (NSString * _Nullable)component2 __attribute__((swift_name("component2()")));
- (NSString * _Nullable)component3 __attribute__((swift_name("component3()")));
- (NSString *)component4 __attribute__((swift_name("component4()")));
- (SharedInt * _Nullable)component5 __attribute__((swift_name("component5()")));
- (SharedIDateValidatorRequestDTO2 *)doCopyDay:(NSString * _Nullable)day month:(NSString * _Nullable)month year:(NSString * _Nullable)year format:(NSString *)format minAge:(SharedInt * _Nullable)minAge __attribute__((swift_name("doCopy(day:month:year:format:minAge:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable day __attribute__((swift_name("day")));
@property (readonly) NSString *format __attribute__((swift_name("format")));
@property (readonly) SharedInt * _Nullable minAge __attribute__((swift_name("minAge")));
@property (readonly) NSString * _Nullable month __attribute__((swift_name("month")));
@property (readonly) NSString * _Nullable year __attribute__((swift_name("year")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IDateValidatorRequestDTO3")))
@interface SharedIDateValidatorRequestDTO3 : SharedBase
- (instancetype)initWithDay:(NSString * _Nullable)day month:(NSString * _Nullable)month year:(NSString * _Nullable)year format:(NSString *)format minAge:(SharedInt * _Nullable)minAge maxAge:(SharedInt * _Nullable)maxAge __attribute__((swift_name("init(day:month:year:format:minAge:maxAge:)"))) __attribute__((objc_designated_initializer));
- (NSString * _Nullable)component1 __attribute__((swift_name("component1()")));
- (NSString * _Nullable)component2 __attribute__((swift_name("component2()")));
- (NSString * _Nullable)component3 __attribute__((swift_name("component3()")));
- (NSString *)component4 __attribute__((swift_name("component4()")));
- (SharedInt * _Nullable)component5 __attribute__((swift_name("component5()")));
- (SharedInt * _Nullable)component6 __attribute__((swift_name("component6()")));
- (SharedIDateValidatorRequestDTO3 *)doCopyDay:(NSString * _Nullable)day month:(NSString * _Nullable)month year:(NSString * _Nullable)year format:(NSString *)format minAge:(SharedInt * _Nullable)minAge maxAge:(SharedInt * _Nullable)maxAge __attribute__((swift_name("doCopy(day:month:year:format:minAge:maxAge:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable day __attribute__((swift_name("day")));
@property (readonly) NSString *format __attribute__((swift_name("format")));
@property (readonly) SharedInt * _Nullable maxAge __attribute__((swift_name("maxAge")));
@property (readonly) SharedInt * _Nullable minAge __attribute__((swift_name("minAge")));
@property (readonly) NSString * _Nullable month __attribute__((swift_name("month")));
@property (readonly) NSString * _Nullable year __attribute__((swift_name("year")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IDateValidatorSuccessDTO")))
@interface SharedIDateValidatorSuccessDTO : SharedIDateValidatorResponseDTO
- (instancetype)initWithValue:(NSString *)value format:(NSString *)format epoch:(int64_t)epoch __attribute__((swift_name("init(value:format:epoch:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithValue:(NSString * _Nullable)value format:(NSString *)format __attribute__((swift_name("init(value:format:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (NSString *)component1 __attribute__((swift_name("component1()")));
- (NSString *)component2 __attribute__((swift_name("component2()")));
- (int64_t)component3 __attribute__((swift_name("component3()")));
- (SharedIDateValidatorSuccessDTO *)doCopyValue:(NSString *)value format:(NSString *)format epoch:(int64_t)epoch __attribute__((swift_name("doCopy(value:format:epoch:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int64_t epoch __attribute__((swift_name("epoch")));
@property (readonly) NSString *format __attribute__((swift_name("format")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end;

__attribute__((swift_name("IEmailValidator")))
@protocol SharedIEmailValidator
@required

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)invokeRequestDTO:(SharedIEmailValidatorRequestDTO *)requestDTO completionHandler____:(void (^)(SharedIEmailValidatorResponseDTO * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("invoke(requestDTO:completionHandler____:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("EmailValidator")))
@interface SharedEmailValidator : SharedBase <SharedIEmailValidator>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)invokeRequestDTO:(SharedIEmailValidatorRequestDTO *)requestDTO completionHandler____:(void (^)(SharedIEmailValidatorResponseDTO * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("invoke(requestDTO:completionHandler____:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IEmailValidatorEmailValidatorError")))
@interface SharedIEmailValidatorEmailValidatorError : SharedKotlinEnum<SharedIEmailValidatorEmailValidatorError *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedIEmailValidatorEmailValidatorError *empty __attribute__((swift_name("empty")));
@property (class, readonly) SharedIEmailValidatorEmailValidatorError *incorrectEmailFormat __attribute__((swift_name("incorrectEmailFormat")));
@property (class, readonly) SharedIEmailValidatorEmailValidatorError *emailAlreadyRegistered __attribute__((swift_name("emailAlreadyRegistered")));
+ (SharedKotlinArray<SharedIEmailValidatorEmailValidatorError *> *)values __attribute__((swift_name("values()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IEmailValidatorRequestDTO")))
@interface SharedIEmailValidatorRequestDTO : SharedBase
- (instancetype)initWithEmail:(NSString * _Nullable)email __attribute__((swift_name("init(email:)"))) __attribute__((objc_designated_initializer));
- (NSString * _Nullable)component1 __attribute__((swift_name("component1()")));
- (SharedIEmailValidatorRequestDTO *)doCopyEmail:(NSString * _Nullable)email __attribute__((swift_name("doCopy(email:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable email __attribute__((swift_name("email")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IEmailValidatorResponseDTO")))
@interface SharedIEmailValidatorResponseDTO : SharedBase
- (instancetype)initWithError:(SharedIEmailValidatorEmailValidatorError * _Nullable)error __attribute__((swift_name("init(error:)"))) __attribute__((objc_designated_initializer));
- (SharedIEmailValidatorEmailValidatorError * _Nullable)component1 __attribute__((swift_name("component1()")));
- (SharedIEmailValidatorResponseDTO *)doCopyError:(SharedIEmailValidatorEmailValidatorError * _Nullable)error __attribute__((swift_name("doCopy(error:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedIEmailValidatorEmailValidatorError * _Nullable error __attribute__((swift_name("error")));
@end;

__attribute__((swift_name("IPhoneNumberValidator")))
@protocol SharedIPhoneNumberValidator
@required

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)invokeRequestDTO:(SharedIPhoneNumberValidatorRequestDTO *)requestDTO completionHandler_____:(void (^)(SharedIPhoneNumberValidatorResponseDTO * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("invoke(requestDTO:completionHandler_____:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IPhoneNumberValidatorPhoneNumberValidatorError")))
@interface SharedIPhoneNumberValidatorPhoneNumberValidatorError : SharedKotlinEnum<SharedIPhoneNumberValidatorPhoneNumberValidatorError *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedIPhoneNumberValidatorPhoneNumberValidatorError *invalidInput __attribute__((swift_name("invalidInput")));
@property (class, readonly) SharedIPhoneNumberValidatorPhoneNumberValidatorError *emptyInput __attribute__((swift_name("emptyInput")));
+ (SharedKotlinArray<SharedIPhoneNumberValidatorPhoneNumberValidatorError *> *)values __attribute__((swift_name("values()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IPhoneNumberValidatorRequestDTO")))
@interface SharedIPhoneNumberValidatorRequestDTO : SharedBase
- (instancetype)initWithNumber:(NSString * _Nullable)number code:(SharedLong * _Nullable)code __attribute__((swift_name("init(number:code:)"))) __attribute__((objc_designated_initializer));
- (NSString * _Nullable)component1 __attribute__((swift_name("component1()")));
- (SharedLong * _Nullable)component2 __attribute__((swift_name("component2()")));
- (SharedIPhoneNumberValidatorRequestDTO *)doCopyNumber:(NSString * _Nullable)number code:(SharedLong * _Nullable)code __attribute__((swift_name("doCopy(number:code:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedLong * _Nullable code __attribute__((swift_name("code")));
@property (readonly) NSString * _Nullable number __attribute__((swift_name("number")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IPhoneNumberValidatorResponseDTO")))
@interface SharedIPhoneNumberValidatorResponseDTO : SharedBase
- (instancetype)initWithError:(SharedIPhoneNumberValidatorPhoneNumberValidatorError * _Nullable)error __attribute__((swift_name("init(error:)"))) __attribute__((objc_designated_initializer));
- (SharedIPhoneNumberValidatorPhoneNumberValidatorError * _Nullable)component1 __attribute__((swift_name("component1()")));
- (SharedIPhoneNumberValidatorResponseDTO *)doCopyError:(SharedIPhoneNumberValidatorPhoneNumberValidatorError * _Nullable)error __attribute__((swift_name("doCopy(error:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedIPhoneNumberValidatorPhoneNumberValidatorError * _Nullable error __attribute__((swift_name("error")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PhoneNumberValidator")))
@interface SharedPhoneNumberValidator : SharedBase <SharedIPhoneNumberValidator>
- (instancetype)initWithCountryPhoneCodeRepository:(id<SharedICountryPhoneCodeRepository>)countryPhoneCodeRepository __attribute__((swift_name("init(countryPhoneCodeRepository:)"))) __attribute__((objc_designated_initializer));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)invokeRequestDTO:(SharedIPhoneNumberValidatorRequestDTO *)requestDTO completionHandler_____:(void (^)(SharedIPhoneNumberValidatorResponseDTO * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("invoke(requestDTO:completionHandler_____:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DomainType")))
@interface SharedDomainType : SharedKotlinEnum<SharedDomainType *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedDomainType *main __attribute__((swift_name("main")));
@property (class, readonly) SharedDomainType *community __attribute__((swift_name("community")));
+ (SharedKotlinArray<SharedDomainType *> *)values __attribute__((swift_name("values()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GenderEnum")))
@interface SharedGenderEnum : SharedKotlinEnum<SharedGenderEnum *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedGenderEnum *male __attribute__((swift_name("male")));
@property (class, readonly) SharedGenderEnum *female __attribute__((swift_name("female")));
+ (SharedKotlinArray<SharedGenderEnum *> *)values __attribute__((swift_name("values()")));
@end;

__attribute__((swift_name("IRegistrationRepository")))
@protocol SharedIRegistrationRepository
@required

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)registerPhoneNumberMemberlogin:(NSString *)memberlogin accessToken:(NSString *)accessToken payload:(NSDictionary<NSString *, id> *)payload completionHandler:(void (^)(SharedAppNetworkResult<NSString *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("registerPhoneNumber(memberlogin:accessToken:payload:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)registerProfilePayload:(NSDictionary<NSString *, id> *)payload accessToken:(NSString *)accessToken appInstanceId:(NSString * _Nullable)appInstanceId completionHandler:(void (^)(SharedAppNetworkResult<SharedProfileRegisteredResponse *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("registerProfile(payload:accessToken:appInstanceId:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)validateEmailIsNotAlreadyRegisteredAccessToken:(NSString *)accessToken email:(NSString *)email completionHandler:(void (^)(SharedAppNetworkResult<NSString *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("validateEmailIsNotAlreadyRegistered(accessToken:email:completionHandler:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("RegistrationRepository")))
@interface SharedRegistrationRepository : SharedBase <SharedIRegistrationRepository>
- (instancetype)initWithRegistrationApi:(id<SharedIRegistrationApi>)registrationApi __attribute__((swift_name("init(registrationApi:)"))) __attribute__((objc_designated_initializer));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)registerPhoneNumberMemberlogin:(NSString *)memberlogin accessToken:(NSString *)accessToken payload:(NSDictionary<NSString *, id> *)payload completionHandler:(void (^)(SharedAppNetworkResult<NSString *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("registerPhoneNumber(memberlogin:accessToken:payload:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)registerProfilePayload:(NSDictionary<NSString *, id> *)payload accessToken:(NSString *)accessToken appInstanceId:(NSString * _Nullable)appInstanceId completionHandler:(void (^)(SharedAppNetworkResult<SharedProfileRegisteredResponse *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("registerProfile(payload:accessToken:appInstanceId:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)validateEmailIsNotAlreadyRegisteredAccessToken:(NSString *)accessToken email:(NSString *)email completionHandler:(void (^)(SharedAppNetworkResult<NSString *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("validateEmailIsNotAlreadyRegistered(accessToken:email:completionHandler:)")));
@end;

__attribute__((swift_name("IRegistrationApi")))
@protocol SharedIRegistrationApi
@required

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)registerPhoneMemberlogin:(NSString *)memberlogin accessToken:(NSString *)accessToken payload:(NSDictionary<NSString *, id> *)payload completionHandler:(void (^)(SharedAppNetworkResult<NSString *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("registerPhone(memberlogin:accessToken:payload:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)registerProfilePayload:(NSDictionary<NSString *, id> *)payload accessToken:(NSString *)accessToken appInstanceId:(NSString * _Nullable)appInstanceId completionHandler:(void (^)(SharedAppNetworkResult<SharedProfileRegisteredResponse *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("registerProfile(payload:accessToken:appInstanceId:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)validateEmailIsNotAlreadyRegisteredAccessToken:(NSString *)accessToken email:(NSString *)email completionHandler:(void (^)(SharedAppNetworkResult<NSString *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("validateEmailIsNotAlreadyRegistered(accessToken:email:completionHandler:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("RegistrationApi")))
@interface SharedRegistrationApi : SharedBase <SharedIRegistrationApi>
- (instancetype)initWithGateway:(id<SharedINetworkGateway>)gateway soaHeaders:(SharedSoaHeaders *(^)(void))soaHeaders apiDomains:(id<SharedIApiDomains>)apiDomains __attribute__((swift_name("init(gateway:soaHeaders:apiDomains:)"))) __attribute__((objc_designated_initializer));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)registerPhoneMemberlogin:(NSString *)memberlogin accessToken:(NSString *)accessToken payload:(NSDictionary<NSString *, id> *)payload completionHandler:(void (^)(SharedAppNetworkResult<NSString *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("registerPhone(memberlogin:accessToken:payload:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)registerProfilePayload:(NSDictionary<NSString *, id> *)payload accessToken:(NSString *)accessToken appInstanceId:(NSString * _Nullable)appInstanceId completionHandler:(void (^)(SharedAppNetworkResult<SharedProfileRegisteredResponse *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("registerProfile(payload:accessToken:appInstanceId:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)validateEmailIsNotAlreadyRegisteredAccessToken:(NSString *)accessToken email:(NSString *)email completionHandler:(void (^)(SharedAppNetworkResult<NSString *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("validateEmailIsNotAlreadyRegistered(accessToken:email:completionHandler:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ProfileRegisteredResponse")))
@interface SharedProfileRegisteredResponse : SharedBase
- (instancetype)initWithData:(SharedProfileRegisteredResponseProfileData *)data accessToken:(NSString *)accessToken __attribute__((swift_name("init(data:accessToken:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedProfileRegisteredResponseCompanion *companion __attribute__((swift_name("companion")));
- (SharedProfileRegisteredResponseProfileData *)component1 __attribute__((swift_name("component1()")));
- (NSString *)component2 __attribute__((swift_name("component2()")));
- (SharedProfileRegisteredResponse *)doCopyData:(SharedProfileRegisteredResponseProfileData *)data accessToken:(NSString *)accessToken __attribute__((swift_name("doCopy(data:accessToken:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *accessToken __attribute__((swift_name("accessToken")));
@property (readonly) SharedProfileRegisteredResponseProfileData *data __attribute__((swift_name("data")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ProfileRegisteredResponse.Account")))
@interface SharedProfileRegisteredResponseAccount : SharedBase
- (instancetype)initWithMemberlogin:(NSString *)memberlogin __attribute__((swift_name("init(memberlogin:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedProfileRegisteredResponseAccountCompanion *companion __attribute__((swift_name("companion")));
- (NSString *)component1 __attribute__((swift_name("component1()")));
- (SharedProfileRegisteredResponseAccount *)doCopyMemberlogin:(NSString *)memberlogin __attribute__((swift_name("doCopy(memberlogin:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *memberlogin __attribute__((swift_name("memberlogin")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ProfileRegisteredResponse.AccountCompanion")))
@interface SharedProfileRegisteredResponseAccountCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedProfileRegisteredResponseAccountCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ProfileRegisteredResponse.Companion")))
@interface SharedProfileRegisteredResponseCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedProfileRegisteredResponseCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ProfileRegisteredResponse.ProfileData")))
@interface SharedProfileRegisteredResponseProfileData : SharedBase
- (instancetype)initWithAccount:(SharedProfileRegisteredResponseAccount *)account __attribute__((swift_name("init(account:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedProfileRegisteredResponseProfileDataCompanion *companion __attribute__((swift_name("companion")));
- (SharedProfileRegisteredResponseAccount *)component1 __attribute__((swift_name("component1()")));
- (SharedProfileRegisteredResponseProfileData *)doCopyAccount:(SharedProfileRegisteredResponseAccount *)account __attribute__((swift_name("doCopy(account:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedProfileRegisteredResponseAccount *account __attribute__((swift_name("account")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ProfileRegisteredResponse.ProfileDataCompanion")))
@interface SharedProfileRegisteredResponseProfileDataCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedProfileRegisteredResponseProfileDataCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end;

__attribute__((swift_name("IGuestRepository")))
@protocol SharedIGuestRepository
@required

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)fetchWithCompletionHandler:(void (^)(SharedAppNetworkResult<SharedDataWrapper<SharedGuestToken *> *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("fetch(completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)getWithCompletionHandler:(void (^)(SharedAppNetworkResult<SharedDataWrapper<SharedGuestToken *> *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("get(completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)invalidateTokenWithCompletionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("invalidateToken(completionHandler:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GuestRepository")))
@interface SharedGuestRepository : SharedBase <SharedIGuestRepository>
- (instancetype)initWithApi:(id<SharedIGuestApi>)api __attribute__((swift_name("init(api:)"))) __attribute__((objc_designated_initializer));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)fetchWithCompletionHandler:(void (^)(SharedAppNetworkResult<SharedDataWrapper<SharedGuestToken *> *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("fetch(completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)getWithCompletionHandler:(void (^)(SharedAppNetworkResult<SharedDataWrapper<SharedGuestToken *> *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("get(completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)invalidateTokenWithCompletionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("invalidateToken(completionHandler:)")));
@end;

__attribute__((swift_name("IGuestApi")))
@protocol SharedIGuestApi
@required

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)getTokenWithCompletionHandler:(void (^)(SharedAppNetworkResult<SharedDataWrapper<SharedGuestToken *> *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getToken(completionHandler:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GuestApi")))
@interface SharedGuestApi : SharedBase <SharedIGuestApi>
- (instancetype)initWithGateway:(id<SharedINetworkGateway>)gateway soaHeaders:(SharedSoaHeaders *(^)(void))soaHeaders apiDomains:(id<SharedIApiDomains>)apiDomains __attribute__((swift_name("init(gateway:soaHeaders:apiDomains:)"))) __attribute__((objc_designated_initializer));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)getTokenWithCompletionHandler:(void (^)(SharedAppNetworkResult<SharedDataWrapper<SharedGuestToken *> *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getToken(completionHandler:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GuestToken")))
@interface SharedGuestToken : SharedBase
- (instancetype)initWithAccessToken:(NSString *)accessToken __attribute__((swift_name("init(accessToken:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedGuestTokenCompanion *companion __attribute__((swift_name("companion")));
- (NSString *)component1 __attribute__((swift_name("component1()")));
- (SharedGuestToken *)doCopyAccessToken:(NSString *)accessToken __attribute__((swift_name("doCopy(accessToken:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *accessToken __attribute__((swift_name("accessToken")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GuestToken.Companion")))
@interface SharedGuestTokenCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedGuestTokenCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CountryDaoModel")))
@interface SharedCountryDaoModel : SharedBase
- (instancetype)initWithId:(int64_t)id displayValue:(NSString *)displayValue value_:(NSString * _Nullable)value_ category:(NSString * _Nullable)category __attribute__((swift_name("init(id:displayValue:value_:category:)"))) __attribute__((objc_designated_initializer));
- (int64_t)component1 __attribute__((swift_name("component1()")));
- (NSString *)component2 __attribute__((swift_name("component2()")));
- (NSString * _Nullable)component3 __attribute__((swift_name("component3()")));
- (NSString * _Nullable)component4 __attribute__((swift_name("component4()")));
- (SharedCountryDaoModel *)doCopyId:(int64_t)id displayValue:(NSString *)displayValue value_:(NSString * _Nullable)value_ category:(NSString * _Nullable)category __attribute__((swift_name("doCopy(id:displayValue:value_:category:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable category __attribute__((swift_name("category")));
@property (readonly) NSString *displayValue __attribute__((swift_name("displayValue")));
@property (readonly) int64_t id __attribute__((swift_name("id")));
@property (readonly) NSString * _Nullable value_ __attribute__((swift_name("value_")));
@end;

__attribute__((swift_name("Transacter")))
@protocol SharedTransacter
@required
- (void)transactionNoEnclosing:(BOOL)noEnclosing body:(void (^)(id<SharedTransactionWithoutReturn>))body __attribute__((swift_name("transaction(noEnclosing:body:)")));
- (id _Nullable)transactionWithResultNoEnclosing:(BOOL)noEnclosing bodyWithReturn:(id _Nullable (^)(id<SharedTransactionWithReturn>))bodyWithReturn __attribute__((swift_name("transactionWithResult(noEnclosing:bodyWithReturn:)")));
@end;

__attribute__((swift_name("CountryDaoModelQueries")))
@protocol SharedCountryDaoModelQueries <SharedTransacter>
@required
- (void)deleteAll __attribute__((swift_name("deleteAll()")));
- (SharedQuery<SharedCountryDaoModel *> *)findByIdId:(int64_t)id __attribute__((swift_name("findById(id:)")));
- (SharedQuery<id> *)findByIdId:(int64_t)id mapper:(id (^)(SharedLong *, NSString *, NSString * _Nullable, NSString * _Nullable))mapper __attribute__((swift_name("findById(id:mapper:)")));
- (void)insertCountryDaoModel:(SharedCountryDaoModel *)CountryDaoModel __attribute__((swift_name("insert(CountryDaoModel:)")));
- (SharedQuery<SharedCountryDaoModel *> *)selectAll __attribute__((swift_name("selectAll()")));
- (SharedQuery<id> *)selectAllMapper:(id (^)(SharedLong *, NSString *, NSString * _Nullable, NSString * _Nullable))mapper __attribute__((swift_name("selectAll(mapper:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CountryPhoneCodeDaoModel")))
@interface SharedCountryPhoneCodeDaoModel : SharedBase
- (instancetype)initWithId:(int64_t)id code:(int64_t)code country:(NSString *)country minLength:(int64_t)minLength maxLength:(int64_t)maxLength __attribute__((swift_name("init(id:code:country:minLength:maxLength:)"))) __attribute__((objc_designated_initializer));
- (int64_t)component1 __attribute__((swift_name("component1()")));
- (int64_t)component2 __attribute__((swift_name("component2()")));
- (NSString *)component3 __attribute__((swift_name("component3()")));
- (int64_t)component4 __attribute__((swift_name("component4()")));
- (int64_t)component5 __attribute__((swift_name("component5()")));
- (SharedCountryPhoneCodeDaoModel *)doCopyId:(int64_t)id code:(int64_t)code country:(NSString *)country minLength:(int64_t)minLength maxLength:(int64_t)maxLength __attribute__((swift_name("doCopy(id:code:country:minLength:maxLength:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int64_t code __attribute__((swift_name("code")));
@property (readonly) NSString *country __attribute__((swift_name("country")));
@property (readonly) int64_t id __attribute__((swift_name("id")));
@property (readonly) int64_t maxLength __attribute__((swift_name("maxLength")));
@property (readonly) int64_t minLength __attribute__((swift_name("minLength")));
@end;

__attribute__((swift_name("CountryPhoneCodeDaoModelQueries")))
@protocol SharedCountryPhoneCodeDaoModelQueries <SharedTransacter>
@required
- (void)deleteAll __attribute__((swift_name("deleteAll()")));
- (SharedQuery<SharedCountryPhoneCodeDaoModel *> *)findByCodeCode:(int64_t)code __attribute__((swift_name("findByCode(code:)")));
- (SharedQuery<id> *)findByCodeCode:(int64_t)code mapper:(id (^)(SharedLong *, SharedLong *, NSString *, SharedLong *, SharedLong *))mapper __attribute__((swift_name("findByCode(code:mapper:)")));
- (SharedQuery<SharedCountryPhoneCodeDaoModel *> *)findByIdId:(int64_t)id __attribute__((swift_name("findById(id:)")));
- (SharedQuery<id> *)findByIdId:(int64_t)id mapper_:(id (^)(SharedLong *, SharedLong *, NSString *, SharedLong *, SharedLong *))mapper __attribute__((swift_name("findById(id:mapper_:)")));
- (void)insertCountryPhoneCodeDaoModel:(SharedCountryPhoneCodeDaoModel *)CountryPhoneCodeDaoModel __attribute__((swift_name("insert(CountryPhoneCodeDaoModel:)")));
- (SharedQuery<SharedCountryPhoneCodeDaoModel *> *)selectAll __attribute__((swift_name("selectAll()")));
- (SharedQuery<id> *)selectAllMapper_:(id (^)(SharedLong *, SharedLong *, NSString *, SharedLong *, SharedLong *))mapper __attribute__((swift_name("selectAll(mapper_:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MotherTongueDaoModel")))
@interface SharedMotherTongueDaoModel : SharedBase
- (instancetype)initWithId:(int64_t)id displayValue:(NSString *)displayValue value_:(NSString * _Nullable)value_ category:(NSString * _Nullable)category __attribute__((swift_name("init(id:displayValue:value_:category:)"))) __attribute__((objc_designated_initializer));
- (int64_t)component1 __attribute__((swift_name("component1()")));
- (NSString *)component2 __attribute__((swift_name("component2()")));
- (NSString * _Nullable)component3 __attribute__((swift_name("component3()")));
- (NSString * _Nullable)component4 __attribute__((swift_name("component4()")));
- (SharedMotherTongueDaoModel *)doCopyId:(int64_t)id displayValue:(NSString *)displayValue value_:(NSString * _Nullable)value_ category:(NSString * _Nullable)category __attribute__((swift_name("doCopy(id:displayValue:value_:category:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable category __attribute__((swift_name("category")));
@property (readonly) NSString *displayValue __attribute__((swift_name("displayValue")));
@property (readonly) int64_t id __attribute__((swift_name("id")));
@property (readonly) NSString * _Nullable value_ __attribute__((swift_name("value_")));
@end;

__attribute__((swift_name("MotherTongueDaoModelQueries")))
@protocol SharedMotherTongueDaoModelQueries <SharedTransacter>
@required
- (void)deleteAll __attribute__((swift_name("deleteAll()")));
- (SharedQuery<SharedMotherTongueDaoModel *> *)findByIdId:(int64_t)id __attribute__((swift_name("findById(id:)")));
- (SharedQuery<id> *)findByIdId:(int64_t)id mapper__:(id (^)(SharedLong *, NSString *, NSString * _Nullable, NSString * _Nullable))mapper __attribute__((swift_name("findById(id:mapper__:)")));
- (void)insertMotherTongueDaoModel:(SharedMotherTongueDaoModel *)MotherTongueDaoModel __attribute__((swift_name("insert(MotherTongueDaoModel:)")));
- (SharedQuery<SharedMotherTongueDaoModel *> *)selectAll __attribute__((swift_name("selectAll()")));
- (SharedQuery<id> *)selectAllMapper__:(id (^)(SharedLong *, NSString *, NSString * _Nullable, NSString * _Nullable))mapper __attribute__((swift_name("selectAll(mapper__:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PhotoPrivacyOptionDaoModel")))
@interface SharedPhotoPrivacyOptionDaoModel : SharedBase
- (instancetype)initWithId:(int64_t)id displayValue:(NSString *)displayValue value_:(NSString * _Nullable)value_ category:(NSString * _Nullable)category __attribute__((swift_name("init(id:displayValue:value_:category:)"))) __attribute__((objc_designated_initializer));
- (int64_t)component1 __attribute__((swift_name("component1()")));
- (NSString *)component2 __attribute__((swift_name("component2()")));
- (NSString * _Nullable)component3 __attribute__((swift_name("component3()")));
- (NSString * _Nullable)component4 __attribute__((swift_name("component4()")));
- (SharedPhotoPrivacyOptionDaoModel *)doCopyId:(int64_t)id displayValue:(NSString *)displayValue value_:(NSString * _Nullable)value_ category:(NSString * _Nullable)category __attribute__((swift_name("doCopy(id:displayValue:value_:category:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable category __attribute__((swift_name("category")));
@property (readonly) NSString *displayValue __attribute__((swift_name("displayValue")));
@property (readonly) int64_t id __attribute__((swift_name("id")));
@property (readonly) NSString * _Nullable value_ __attribute__((swift_name("value_")));
@end;

__attribute__((swift_name("PhotoPrivacyOptionDaoModelQueries")))
@protocol SharedPhotoPrivacyOptionDaoModelQueries <SharedTransacter>
@required
- (void)deleteAll __attribute__((swift_name("deleteAll()")));
- (SharedQuery<SharedPhotoPrivacyOptionDaoModel *> *)findByIdId:(int64_t)id __attribute__((swift_name("findById(id:)")));
- (SharedQuery<id> *)findByIdId:(int64_t)id mapper___:(id (^)(SharedLong *, NSString *, NSString * _Nullable, NSString * _Nullable))mapper __attribute__((swift_name("findById(id:mapper___:)")));
- (void)insertPhotoPrivacyOptionDaoModel:(SharedPhotoPrivacyOptionDaoModel *)PhotoPrivacyOptionDaoModel __attribute__((swift_name("insert(PhotoPrivacyOptionDaoModel:)")));
- (SharedQuery<SharedPhotoPrivacyOptionDaoModel *> *)selectAll __attribute__((swift_name("selectAll()")));
- (SharedQuery<id> *)selectAllMapper___:(id (^)(SharedLong *, NSString *, NSString * _Nullable, NSString * _Nullable))mapper __attribute__((swift_name("selectAll(mapper___:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ReligionDaoModel")))
@interface SharedReligionDaoModel : SharedBase
- (instancetype)initWithId:(int64_t)id displayValue:(NSString *)displayValue value_:(NSString * _Nullable)value_ category:(NSString * _Nullable)category __attribute__((swift_name("init(id:displayValue:value_:category:)"))) __attribute__((objc_designated_initializer));
- (int64_t)component1 __attribute__((swift_name("component1()")));
- (NSString *)component2 __attribute__((swift_name("component2()")));
- (NSString * _Nullable)component3 __attribute__((swift_name("component3()")));
- (NSString * _Nullable)component4 __attribute__((swift_name("component4()")));
- (SharedReligionDaoModel *)doCopyId:(int64_t)id displayValue:(NSString *)displayValue value_:(NSString * _Nullable)value_ category:(NSString * _Nullable)category __attribute__((swift_name("doCopy(id:displayValue:value_:category:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable category __attribute__((swift_name("category")));
@property (readonly) NSString *displayValue __attribute__((swift_name("displayValue")));
@property (readonly) int64_t id __attribute__((swift_name("id")));
@property (readonly) NSString * _Nullable value_ __attribute__((swift_name("value_")));
@end;

__attribute__((swift_name("ReligionDaoModelQueries")))
@protocol SharedReligionDaoModelQueries <SharedTransacter>
@required
- (void)deleteAll __attribute__((swift_name("deleteAll()")));
- (SharedQuery<SharedReligionDaoModel *> *)findByIdId:(int64_t)id __attribute__((swift_name("findById(id:)")));
- (SharedQuery<id> *)findByIdId:(int64_t)id mapper____:(id (^)(SharedLong *, NSString *, NSString * _Nullable, NSString * _Nullable))mapper __attribute__((swift_name("findById(id:mapper____:)")));
- (void)insertReligionDaoModel:(SharedReligionDaoModel *)ReligionDaoModel __attribute__((swift_name("insert(ReligionDaoModel:)")));
- (SharedQuery<SharedReligionDaoModel *> *)selectAll __attribute__((swift_name("selectAll()")));
- (SharedQuery<id> *)selectAllMapper____:(id (^)(SharedLong *, NSString *, NSString * _Nullable, NSString * _Nullable))mapper __attribute__((swift_name("selectAll(mapper____:)")));
@end;

__attribute__((swift_name("MasterDatabase")))
@protocol SharedMasterDatabase <SharedTransacter>
@required
@property (readonly) id<SharedCountryDaoModelQueries> countryDaoModelQueries __attribute__((swift_name("countryDaoModelQueries")));
@property (readonly) id<SharedCountryPhoneCodeDaoModelQueries> countryPhoneCodeDaoModelQueries __attribute__((swift_name("countryPhoneCodeDaoModelQueries")));
@property (readonly) id<SharedMotherTongueDaoModelQueries> motherTongueDaoModelQueries __attribute__((swift_name("motherTongueDaoModelQueries")));
@property (readonly) id<SharedPhotoPrivacyOptionDaoModelQueries> photoPrivacyOptionDaoModelQueries __attribute__((swift_name("photoPrivacyOptionDaoModelQueries")));
@property (readonly) id<SharedReligionDaoModelQueries> religionDaoModelQueries __attribute__((swift_name("religionDaoModelQueries")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MasterDatabaseCompanion")))
@interface SharedMasterDatabaseCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedMasterDatabaseCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedMasterDatabase>)invokeDriver:(id<SharedSqlDriver>)driver __attribute__((swift_name("invoke(driver:)")));
@property (readonly) id<SharedSqlDriverSchema> Schema __attribute__((swift_name("Schema")));
@end;

__attribute__((swift_name("ILookupRepository")))
@protocol SharedILookupRepository
@required

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)fetchWithCompletionHandler:(void (^)(SharedBoolean * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("fetch(completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)getCountriesWithCompletionHandler:(void (^)(id<SharedFlow> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getCountries(completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)getMotherTonguesWithCompletionHandler:(void (^)(id<SharedFlow> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getMotherTongues(completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)getPhotoPrivacyOptionsWithCompletionHandler:(void (^)(id<SharedFlow> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getPhotoPrivacyOptions(completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)getReligionsWithCompletionHandler:(void (^)(id<SharedFlow> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getReligions(completionHandler:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LookupRepository")))
@interface SharedLookupRepository : SharedBase <SharedILookupRepository>
- (instancetype)initWithLookupApi:(id<SharedILookupApi>)lookupApi localStorage:(id<SharedILocalStorage>)localStorage religionDao:(id<SharedIReligionDao>)religionDao motherTongueDao:(id<SharedIMotherTongueDao>)motherTongueDao countryDao:(id<SharedICountryDao>)countryDao photoPrivacyOptionDao:(id<SharedIPhotoPrivacyOptionDao>)photoPrivacyOptionDao masterLocalDataVersion:(NSString *)masterLocalDataVersion __attribute__((swift_name("init(lookupApi:localStorage:religionDao:motherTongueDao:countryDao:photoPrivacyOptionDao:masterLocalDataVersion:)"))) __attribute__((objc_designated_initializer));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)fetchWithCompletionHandler:(void (^)(SharedBoolean * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("fetch(completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)getCountriesWithCompletionHandler:(void (^)(id<SharedFlow> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getCountries(completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)getMotherTonguesWithCompletionHandler:(void (^)(id<SharedFlow> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getMotherTongues(completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)getPhotoPrivacyOptionsWithCompletionHandler:(void (^)(id<SharedFlow> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getPhotoPrivacyOptions(completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)getReligionsWithCompletionHandler:(void (^)(id<SharedFlow> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getReligions(completionHandler:)")));
@end;

__attribute__((swift_name("IDao")))
@protocol SharedIDao
@required

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteAllWithCompletionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteAll(completionHandler:)")));
- (id _Nullable)findByIdId_:(id _Nullable)id __attribute__((swift_name("findById(id_:)")));
- (id<SharedFlow>)findByIdFlowId:(id _Nullable)id __attribute__((swift_name("findByIdFlow(id:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)getAllWithCompletionHandler:(void (^)(NSArray<id> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getAll(completionHandler:)")));
- (id<SharedFlow>)getAllFlow __attribute__((swift_name("getAllFlow()")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)insertAllList:(NSArray<id> *)list completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("insertAll(list:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)refreshAllList:(NSArray<id> *)list completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("refreshAll(list:completionHandler:)")));
@end;

__attribute__((swift_name("ICountryDao")))
@protocol SharedICountryDao <SharedIDao>
@required
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CountryDao")))
@interface SharedCountryDao : SharedBase <SharedICountryDao>
- (instancetype)initWithQueries:(id<SharedCountryDaoModelQueries>)queries __attribute__((swift_name("init(queries:)"))) __attribute__((objc_designated_initializer));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteAllWithCompletionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteAll(completionHandler:)")));
- (SharedCountryDaoModel * _Nullable)findByIdId_:(SharedLong *)id __attribute__((swift_name("findById(id_:)")));
- (id<SharedFlow>)findByIdFlowId:(SharedLong *)id __attribute__((swift_name("findByIdFlow(id:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)getAllWithCompletionHandler:(void (^)(NSArray<SharedCountryDaoModel *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getAll(completionHandler:)")));
- (id<SharedFlow>)getAllFlow __attribute__((swift_name("getAllFlow()")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)insertAllList:(NSArray<SharedCountryDaoModel *> *)list completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("insertAll(list:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)refreshAllList:(NSArray<SharedCountryDaoModel *> *)list completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("refreshAll(list:completionHandler:)")));
@end;

__attribute__((swift_name("IMotherTongueDao")))
@protocol SharedIMotherTongueDao <SharedIDao>
@required
@end;

__attribute__((swift_name("IPhotoPrivacyOptionDao")))
@protocol SharedIPhotoPrivacyOptionDao <SharedIDao>
@required
@end;

__attribute__((swift_name("IReligionDao")))
@protocol SharedIReligionDao <SharedIDao>
@required
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MotherTongueDao")))
@interface SharedMotherTongueDao : SharedBase <SharedIMotherTongueDao>
- (instancetype)initWithQueries:(id<SharedMotherTongueDaoModelQueries>)queries __attribute__((swift_name("init(queries:)"))) __attribute__((objc_designated_initializer));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteAllWithCompletionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteAll(completionHandler:)")));
- (SharedMotherTongueDaoModel * _Nullable)findByIdId_:(SharedLong *)id __attribute__((swift_name("findById(id_:)")));
- (id<SharedFlow>)findByIdFlowId:(SharedLong *)id __attribute__((swift_name("findByIdFlow(id:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)getAllWithCompletionHandler:(void (^)(NSArray<SharedMotherTongueDaoModel *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getAll(completionHandler:)")));
- (id<SharedFlow>)getAllFlow __attribute__((swift_name("getAllFlow()")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)insertAllList:(NSArray<SharedMotherTongueDaoModel *> *)list completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("insertAll(list:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)refreshAllList:(NSArray<SharedMotherTongueDaoModel *> *)list completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("refreshAll(list:completionHandler:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PhotoPrivacyOptionDao")))
@interface SharedPhotoPrivacyOptionDao : SharedBase <SharedIPhotoPrivacyOptionDao>
- (instancetype)initWithQueries:(id<SharedPhotoPrivacyOptionDaoModelQueries>)queries __attribute__((swift_name("init(queries:)"))) __attribute__((objc_designated_initializer));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteAllWithCompletionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteAll(completionHandler:)")));
- (SharedPhotoPrivacyOptionDaoModel * _Nullable)findByIdId_:(SharedLong *)id __attribute__((swift_name("findById(id_:)")));
- (id<SharedFlow>)findByIdFlowId:(SharedLong *)id __attribute__((swift_name("findByIdFlow(id:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)getAllWithCompletionHandler:(void (^)(NSArray<SharedPhotoPrivacyOptionDaoModel *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getAll(completionHandler:)")));
- (id<SharedFlow>)getAllFlow __attribute__((swift_name("getAllFlow()")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)insertAllList:(NSArray<SharedPhotoPrivacyOptionDaoModel *> *)list completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("insertAll(list:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)refreshAllList:(NSArray<SharedPhotoPrivacyOptionDaoModel *> *)list completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("refreshAll(list:completionHandler:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ReligionDao")))
@interface SharedReligionDao : SharedBase <SharedIReligionDao>
- (instancetype)initWithQueries:(id<SharedReligionDaoModelQueries>)queries __attribute__((swift_name("init(queries:)"))) __attribute__((objc_designated_initializer));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteAllWithCompletionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteAll(completionHandler:)")));
- (SharedReligionDaoModel * _Nullable)findByIdId_:(SharedLong *)id __attribute__((swift_name("findById(id_:)")));
- (id<SharedFlow>)findByIdFlowId:(SharedLong *)id __attribute__((swift_name("findByIdFlow(id:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)getAllWithCompletionHandler:(void (^)(NSArray<SharedReligionDaoModel *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getAll(completionHandler:)")));
- (id<SharedFlow>)getAllFlow __attribute__((swift_name("getAllFlow()")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)insertAllList:(NSArray<SharedReligionDaoModel *> *)list completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("insertAll(list:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)refreshAllList:(NSArray<SharedReligionDaoModel *> *)list completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("refreshAll(list:completionHandler:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Country")))
@interface SharedCountry : SharedBase
- (instancetype)initWithId:(int64_t)id displayValue:(NSString *)displayValue value:(NSString * _Nullable)value category:(NSString * _Nullable)category __attribute__((swift_name("init(id:displayValue:value:category:)"))) __attribute__((objc_designated_initializer));
- (int64_t)component1 __attribute__((swift_name("component1()")));
- (NSString *)component2 __attribute__((swift_name("component2()")));
- (NSString * _Nullable)component3 __attribute__((swift_name("component3()")));
- (NSString * _Nullable)component4 __attribute__((swift_name("component4()")));
- (SharedCountry *)doCopyId:(int64_t)id displayValue:(NSString *)displayValue value:(NSString * _Nullable)value category:(NSString * _Nullable)category __attribute__((swift_name("doCopy(id:displayValue:value:category:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable category __attribute__((swift_name("category")));
@property (readonly) NSString *displayValue __attribute__((swift_name("displayValue")));
@property (readonly) int64_t id __attribute__((swift_name("id")));
@property (readonly) NSString * _Nullable value __attribute__((swift_name("value")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MotherTongue")))
@interface SharedMotherTongue : SharedBase
- (instancetype)initWithId:(int64_t)id displayValue:(NSString *)displayValue value:(NSString * _Nullable)value category:(NSString * _Nullable)category __attribute__((swift_name("init(id:displayValue:value:category:)"))) __attribute__((objc_designated_initializer));
- (int64_t)component1 __attribute__((swift_name("component1()")));
- (NSString *)component2 __attribute__((swift_name("component2()")));
- (NSString * _Nullable)component3 __attribute__((swift_name("component3()")));
- (NSString * _Nullable)component4 __attribute__((swift_name("component4()")));
- (SharedMotherTongue *)doCopyId:(int64_t)id displayValue:(NSString *)displayValue value:(NSString * _Nullable)value category:(NSString * _Nullable)category __attribute__((swift_name("doCopy(id:displayValue:value:category:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable category __attribute__((swift_name("category")));
@property (readonly) NSString *displayValue __attribute__((swift_name("displayValue")));
@property (readonly) int64_t id __attribute__((swift_name("id")));
@property (readonly) NSString * _Nullable value __attribute__((swift_name("value")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PhotoPrivacyOption")))
@interface SharedPhotoPrivacyOption : SharedBase
- (instancetype)initWithId:(int64_t)id displayValue:(NSString *)displayValue value:(NSString * _Nullable)value category:(NSString * _Nullable)category __attribute__((swift_name("init(id:displayValue:value:category:)"))) __attribute__((objc_designated_initializer));
- (int64_t)component1 __attribute__((swift_name("component1()")));
- (NSString *)component2 __attribute__((swift_name("component2()")));
- (NSString * _Nullable)component3 __attribute__((swift_name("component3()")));
- (NSString * _Nullable)component4 __attribute__((swift_name("component4()")));
- (SharedPhotoPrivacyOption *)doCopyId:(int64_t)id displayValue:(NSString *)displayValue value:(NSString * _Nullable)value category:(NSString * _Nullable)category __attribute__((swift_name("doCopy(id:displayValue:value:category:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable category __attribute__((swift_name("category")));
@property (readonly) NSString *displayValue __attribute__((swift_name("displayValue")));
@property (readonly) int64_t id __attribute__((swift_name("id")));
@property (readonly) NSString * _Nullable value __attribute__((swift_name("value")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Religion")))
@interface SharedReligion : SharedBase
- (instancetype)initWithId:(int64_t)id displayValue:(NSString *)displayValue value:(NSString * _Nullable)value category:(NSString * _Nullable)category __attribute__((swift_name("init(id:displayValue:value:category:)"))) __attribute__((objc_designated_initializer));
- (int64_t)component1 __attribute__((swift_name("component1()")));
- (NSString *)component2 __attribute__((swift_name("component2()")));
- (NSString * _Nullable)component3 __attribute__((swift_name("component3()")));
- (NSString * _Nullable)component4 __attribute__((swift_name("component4()")));
- (SharedReligion *)doCopyId:(int64_t)id displayValue:(NSString *)displayValue value:(NSString * _Nullable)value category:(NSString * _Nullable)category __attribute__((swift_name("doCopy(id:displayValue:value:category:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable category __attribute__((swift_name("category")));
@property (readonly) NSString *displayValue __attribute__((swift_name("displayValue")));
@property (readonly) int64_t id __attribute__((swift_name("id")));
@property (readonly) NSString * _Nullable value __attribute__((swift_name("value")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Selection")))
@interface SharedSelection : SharedBase
- (instancetype)initWithDisplayValue:(NSString *)displayValue value:(NSString * _Nullable)value category:(NSString * _Nullable)category __attribute__((swift_name("init(displayValue:value:category:)"))) __attribute__((objc_designated_initializer));
- (NSString *)component1 __attribute__((swift_name("component1()")));
- (NSString * _Nullable)component2 __attribute__((swift_name("component2()")));
- (NSString * _Nullable)component3 __attribute__((swift_name("component3()")));
- (SharedSelection *)doCopyDisplayValue:(NSString *)displayValue value:(NSString * _Nullable)value category:(NSString * _Nullable)category __attribute__((swift_name("doCopy(displayValue:value:category:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable category __attribute__((swift_name("category")));
@property (readonly) NSString *displayValue __attribute__((swift_name("displayValue")));
@property (readonly) NSString * _Nullable value __attribute__((swift_name("value")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Selection2")))
@interface SharedSelection2<T> : SharedBase
- (instancetype)initWithValue:(T _Nullable)value options:(NSArray<id> *)options __attribute__((swift_name("init(value:options:)"))) __attribute__((objc_designated_initializer));
- (T _Nullable)component1 __attribute__((swift_name("component1()")));
- (NSArray<id> *)component2 __attribute__((swift_name("component2()")));
- (SharedSelection2<T> *)doCopyValue:(T _Nullable)value options:(NSArray<id> *)options __attribute__((swift_name("doCopy(value:options:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSArray<id> *options __attribute__((swift_name("options")));
@property (readonly) T _Nullable value __attribute__((swift_name("value")));
@end;

__attribute__((swift_name("ILookupApi")))
@protocol SharedILookupApi
@required

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)fetchFromJsonWithCompletionHandler:(void (^)(SharedAppNetworkResult<SharedDataWrapper<SharedLookupMasterNetworkModel *> *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("fetchFromJson(completionHandler:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LookupApi")))
@interface SharedLookupApi : SharedBase <SharedILookupApi>
- (instancetype)initWithJsonLoader:(id<SharedIJsonLoader>)jsonLoader __attribute__((swift_name("init(jsonLoader:)"))) __attribute__((objc_designated_initializer));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)fetchFromJsonWithCompletionHandler:(void (^)(SharedAppNetworkResult<SharedDataWrapper<SharedLookupMasterNetworkModel *> *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("fetchFromJson(completionHandler:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CountryNetworkModel")))
@interface SharedCountryNetworkModel : SharedBase
- (instancetype)initWithDisplayValue:(NSString *)displayValue value:(NSArray<NSString *> *)value category:(NSArray<NSString *> * _Nullable)category __attribute__((swift_name("init(displayValue:value:category:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedCountryNetworkModelCompanion *companion __attribute__((swift_name("companion")));
- (NSString *)component1 __attribute__((swift_name("component1()")));
- (NSArray<NSString *> *)component2 __attribute__((swift_name("component2()")));
- (NSArray<NSString *> * _Nullable)component3 __attribute__((swift_name("component3()")));
- (SharedCountryNetworkModel *)doCopyDisplayValue:(NSString *)displayValue value:(NSArray<NSString *> *)value category:(NSArray<NSString *> * _Nullable)category __attribute__((swift_name("doCopy(displayValue:value:category:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSArray<NSString *> * _Nullable category __attribute__((swift_name("category")));
@property (readonly) NSString *displayValue __attribute__((swift_name("displayValue")));
@property (readonly) NSArray<NSString *> *value __attribute__((swift_name("value")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CountryNetworkModel.Companion")))
@interface SharedCountryNetworkModelCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedCountryNetworkModelCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GenericLookupItemNetworkModel")))
@interface SharedGenericLookupItemNetworkModel : SharedBase
- (instancetype)initWithDisplayValue:(NSString *)displayValue value:(NSArray<NSString *> *)value category:(NSArray<NSString *> * _Nullable)category __attribute__((swift_name("init(displayValue:value:category:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedGenericLookupItemNetworkModelCompanion *companion __attribute__((swift_name("companion")));
- (NSString *)component1 __attribute__((swift_name("component1()")));
- (NSArray<NSString *> *)component2 __attribute__((swift_name("component2()")));
- (NSArray<NSString *> * _Nullable)component3 __attribute__((swift_name("component3()")));
- (SharedGenericLookupItemNetworkModel *)doCopyDisplayValue:(NSString *)displayValue value:(NSArray<NSString *> *)value category:(NSArray<NSString *> * _Nullable)category __attribute__((swift_name("doCopy(displayValue:value:category:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSArray<NSString *> * _Nullable category __attribute__((swift_name("category")));
@property (readonly) NSString *displayValue __attribute__((swift_name("displayValue")));
@property (readonly) NSArray<NSString *> *value __attribute__((swift_name("value")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GenericLookupItemNetworkModel.Companion")))
@interface SharedGenericLookupItemNetworkModelCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedGenericLookupItemNetworkModelCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LookupMasterNetworkModel")))
@interface SharedLookupMasterNetworkModel : SharedBase
- (instancetype)initWithVersion:(NSString *)version masterData:(SharedMasterData *)masterData privacyOptions:(SharedPrivacyNetworkModel *)privacyOptions __attribute__((swift_name("init(version:masterData:privacyOptions:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedLookupMasterNetworkModelCompanion *companion __attribute__((swift_name("companion")));
- (NSString *)component1 __attribute__((swift_name("component1()")));
- (SharedMasterData *)component2 __attribute__((swift_name("component2()")));
- (SharedPrivacyNetworkModel *)component3 __attribute__((swift_name("component3()")));
- (SharedLookupMasterNetworkModel *)doCopyVersion:(NSString *)version masterData:(SharedMasterData *)masterData privacyOptions:(SharedPrivacyNetworkModel *)privacyOptions __attribute__((swift_name("doCopy(version:masterData:privacyOptions:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedMasterData *masterData __attribute__((swift_name("masterData")));
@property (readonly) SharedPrivacyNetworkModel *privacyOptions __attribute__((swift_name("privacyOptions")));
@property (readonly) NSString *version __attribute__((swift_name("version")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LookupMasterNetworkModel.Companion")))
@interface SharedLookupMasterNetworkModelCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedLookupMasterNetworkModelCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MasterData")))
@interface SharedMasterData : SharedBase
- (instancetype)initWithReligion:(NSArray<SharedReligionNetworkModel *> *)religion motherTongue:(NSArray<SharedMotherTongueNetworkModel *> *)motherTongue country:(NSArray<SharedCountryNetworkModel *> *)country __attribute__((swift_name("init(religion:motherTongue:country:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedMasterDataCompanion *companion __attribute__((swift_name("companion")));
- (NSArray<SharedReligionNetworkModel *> *)component1 __attribute__((swift_name("component1()")));
- (NSArray<SharedMotherTongueNetworkModel *> *)component2 __attribute__((swift_name("component2()")));
- (NSArray<SharedCountryNetworkModel *> *)component3 __attribute__((swift_name("component3()")));
- (SharedMasterData *)doCopyReligion:(NSArray<SharedReligionNetworkModel *> *)religion motherTongue:(NSArray<SharedMotherTongueNetworkModel *> *)motherTongue country:(NSArray<SharedCountryNetworkModel *> *)country __attribute__((swift_name("doCopy(religion:motherTongue:country:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSArray<SharedCountryNetworkModel *> *country __attribute__((swift_name("country")));
@property (readonly) NSArray<SharedMotherTongueNetworkModel *> *motherTongue __attribute__((swift_name("motherTongue")));
@property (readonly) NSArray<SharedReligionNetworkModel *> *religion __attribute__((swift_name("religion")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MasterData.Companion")))
@interface SharedMasterDataCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedMasterDataCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MotherTongueNetworkModel")))
@interface SharedMotherTongueNetworkModel : SharedBase
- (instancetype)initWithDisplayValue:(NSString *)displayValue value:(NSArray<NSString *> *)value category:(NSArray<NSString *> * _Nullable)category __attribute__((swift_name("init(displayValue:value:category:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedMotherTongueNetworkModelCompanion *companion __attribute__((swift_name("companion")));
- (NSString *)component1 __attribute__((swift_name("component1()")));
- (NSArray<NSString *> *)component2 __attribute__((swift_name("component2()")));
- (NSArray<NSString *> * _Nullable)component3 __attribute__((swift_name("component3()")));
- (SharedMotherTongueNetworkModel *)doCopyDisplayValue:(NSString *)displayValue value:(NSArray<NSString *> *)value category:(NSArray<NSString *> * _Nullable)category __attribute__((swift_name("doCopy(displayValue:value:category:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSArray<NSString *> * _Nullable category __attribute__((swift_name("category")));
@property (readonly) NSString *displayValue __attribute__((swift_name("displayValue")));
@property (readonly) NSArray<NSString *> *value __attribute__((swift_name("value")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MotherTongueNetworkModel.Companion")))
@interface SharedMotherTongueNetworkModelCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedMotherTongueNetworkModelCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PrivacyNetworkModel")))
@interface SharedPrivacyNetworkModel : SharedBase
- (instancetype)initWithPhoto:(NSArray<SharedGenericLookupItemNetworkModel *> *)photo __attribute__((swift_name("init(photo:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedPrivacyNetworkModelCompanion *companion __attribute__((swift_name("companion")));
- (NSArray<SharedGenericLookupItemNetworkModel *> *)component1 __attribute__((swift_name("component1()")));
- (SharedPrivacyNetworkModel *)doCopyPhoto:(NSArray<SharedGenericLookupItemNetworkModel *> *)photo __attribute__((swift_name("doCopy(photo:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSArray<SharedGenericLookupItemNetworkModel *> *photo __attribute__((swift_name("photo")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PrivacyNetworkModel.Companion")))
@interface SharedPrivacyNetworkModelCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedPrivacyNetworkModelCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ReligionNetworkModel")))
@interface SharedReligionNetworkModel : SharedBase
- (instancetype)initWithDisplayValue:(NSString *)displayValue value:(NSArray<NSString *> *)value category:(NSArray<NSString *> * _Nullable)category __attribute__((swift_name("init(displayValue:value:category:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedReligionNetworkModelCompanion *companion __attribute__((swift_name("companion")));
- (NSString *)component1 __attribute__((swift_name("component1()")));
- (NSArray<NSString *> *)component2 __attribute__((swift_name("component2()")));
- (NSArray<NSString *> * _Nullable)component3 __attribute__((swift_name("component3()")));
- (SharedReligionNetworkModel *)doCopyDisplayValue:(NSString *)displayValue value:(NSArray<NSString *> *)value category:(NSArray<NSString *> * _Nullable)category __attribute__((swift_name("doCopy(displayValue:value:category:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSArray<NSString *> * _Nullable category __attribute__((swift_name("category")));
@property (readonly) NSString *displayValue __attribute__((swift_name("displayValue")));
@property (readonly) NSArray<NSString *> *value __attribute__((swift_name("value")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ReligionNetworkModel.Companion")))
@interface SharedReligionNetworkModelCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedReligionNetworkModelCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end;

__attribute__((swift_name("ICountryPhoneCodeRepository")))
@protocol SharedICountryPhoneCodeRepository
@required

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)fetchWithCompletionHandler:(void (^)(SharedBoolean * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("fetch(completionHandler:)")));
- (SharedCountryPhoneCode * _Nullable)findByCodeCode:(int64_t)code __attribute__((swift_name("findByCode(code:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)getCountryPhoneCodesWithCompletionHandler:(void (^)(id<SharedFlow> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getCountryPhoneCodes(completionHandler:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CountryPhoneCodeRepository")))
@interface SharedCountryPhoneCodeRepository : SharedBase <SharedICountryPhoneCodeRepository>
- (instancetype)initWithLocalStorage:(id<SharedILocalStorage>)localStorage countryPhoneCodeDao:(id<SharedICountryPhoneCodeDao>)countryPhoneCodeDao countryPhoneCodeApi:(id<SharedICountryPhoneCodeApi>)countryPhoneCodeApi countryPhoneCodeLocalDataVersion:(NSString *)countryPhoneCodeLocalDataVersion __attribute__((swift_name("init(localStorage:countryPhoneCodeDao:countryPhoneCodeApi:countryPhoneCodeLocalDataVersion:)"))) __attribute__((objc_designated_initializer));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)fetchWithCompletionHandler:(void (^)(SharedBoolean * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("fetch(completionHandler:)")));
- (SharedCountryPhoneCode * _Nullable)findByCodeCode:(int64_t)code __attribute__((swift_name("findByCode(code:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)getCountryPhoneCodesWithCompletionHandler:(void (^)(id<SharedFlow> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getCountryPhoneCodes(completionHandler:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CountryPhoneCode")))
@interface SharedCountryPhoneCode : SharedBase
- (instancetype)initWithId:(int64_t)id code:(int64_t)code minLength:(int64_t)minLength maxLength:(int64_t)maxLength country:(NSString *)country __attribute__((swift_name("init(id:code:minLength:maxLength:country:)"))) __attribute__((objc_designated_initializer));
- (int64_t)component1 __attribute__((swift_name("component1()")));
- (int64_t)component2 __attribute__((swift_name("component2()")));
- (int64_t)component3 __attribute__((swift_name("component3()")));
- (int64_t)component4 __attribute__((swift_name("component4()")));
- (NSString *)component5 __attribute__((swift_name("component5()")));
- (SharedCountryPhoneCode *)doCopyId:(int64_t)id code:(int64_t)code minLength:(int64_t)minLength maxLength:(int64_t)maxLength country:(NSString *)country __attribute__((swift_name("doCopy(id:code:minLength:maxLength:country:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int64_t code __attribute__((swift_name("code")));
@property (readonly) NSString *country __attribute__((swift_name("country")));
@property (readonly) int64_t id __attribute__((swift_name("id")));
@property (readonly) int64_t maxLength __attribute__((swift_name("maxLength")));
@property (readonly) int64_t minLength __attribute__((swift_name("minLength")));
@end;

__attribute__((swift_name("ICountryPhoneCodeDao")))
@protocol SharedICountryPhoneCodeDao <SharedIDao>
@required
- (SharedCountryPhoneCodeDaoModel * _Nullable)findByCodeCode:(int64_t)code __attribute__((swift_name("findByCode(code:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CountryPhoneCodeDao")))
@interface SharedCountryPhoneCodeDao : SharedBase <SharedICountryPhoneCodeDao>
- (instancetype)initWithQueries:(id<SharedCountryPhoneCodeDaoModelQueries>)queries __attribute__((swift_name("init(queries:)"))) __attribute__((objc_designated_initializer));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteAllWithCompletionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteAll(completionHandler:)")));
- (SharedCountryPhoneCodeDaoModel * _Nullable)findByCodeCode:(int64_t)code __attribute__((swift_name("findByCode(code:)")));
- (SharedCountryPhoneCodeDaoModel * _Nullable)findByIdId_:(SharedLong *)id __attribute__((swift_name("findById(id_:)")));
- (id<SharedFlow>)findByIdFlowId:(SharedLong *)id __attribute__((swift_name("findByIdFlow(id:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)getAllWithCompletionHandler:(void (^)(NSArray<SharedCountryPhoneCodeDaoModel *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getAll(completionHandler:)")));
- (id<SharedFlow>)getAllFlow __attribute__((swift_name("getAllFlow()")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)insertAllList:(NSArray<SharedCountryPhoneCodeDaoModel *> *)list completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("insertAll(list:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)refreshAllList:(NSArray<SharedCountryPhoneCodeDaoModel *> *)list completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("refreshAll(list:completionHandler:)")));
@end;

__attribute__((swift_name("ICountryPhoneCodeApi")))
@protocol SharedICountryPhoneCodeApi
@required

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)fetchFromJsonWithCompletionHandler:(void (^)(SharedAppNetworkResult<SharedDataWrapper<SharedCountryPhoneCodeMasterNetworkModel *> *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("fetchFromJson(completionHandler:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CountryPhoneCodeApi")))
@interface SharedCountryPhoneCodeApi : SharedBase <SharedICountryPhoneCodeApi>
- (instancetype)initWithJsonLoader:(id<SharedIJsonLoader>)jsonLoader __attribute__((swift_name("init(jsonLoader:)"))) __attribute__((objc_designated_initializer));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)fetchFromJsonWithCompletionHandler:(void (^)(SharedAppNetworkResult<SharedDataWrapper<SharedCountryPhoneCodeMasterNetworkModel *> *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("fetchFromJson(completionHandler:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CountryPhoneCodeMasterNetworkModel")))
@interface SharedCountryPhoneCodeMasterNetworkModel : SharedBase
- (instancetype)initWithVersion:(NSString *)version codes:(NSArray<SharedCountryPhoneCodeNetworkModel *> *)codes __attribute__((swift_name("init(version:codes:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedCountryPhoneCodeMasterNetworkModelCompanion *companion __attribute__((swift_name("companion")));
- (NSString *)component1 __attribute__((swift_name("component1()")));
- (NSArray<SharedCountryPhoneCodeNetworkModel *> *)component2 __attribute__((swift_name("component2()")));
- (SharedCountryPhoneCodeMasterNetworkModel *)doCopyVersion:(NSString *)version codes:(NSArray<SharedCountryPhoneCodeNetworkModel *> *)codes __attribute__((swift_name("doCopy(version:codes:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSArray<SharedCountryPhoneCodeNetworkModel *> *codes __attribute__((swift_name("codes")));
@property (readonly) NSString *version __attribute__((swift_name("version")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CountryPhoneCodeMasterNetworkModel.Companion")))
@interface SharedCountryPhoneCodeMasterNetworkModelCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedCountryPhoneCodeMasterNetworkModelCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CountryPhoneCodeNetworkModel")))
@interface SharedCountryPhoneCodeNetworkModel : SharedBase
- (instancetype)initWithCode:(int64_t)code minLength:(int64_t)minLength maxLength:(int64_t)maxLength country:(NSString *)country __attribute__((swift_name("init(code:minLength:maxLength:country:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedCountryPhoneCodeNetworkModelCompanion *companion __attribute__((swift_name("companion")));
- (int64_t)component1 __attribute__((swift_name("component1()")));
- (int64_t)component2 __attribute__((swift_name("component2()")));
- (int64_t)component3 __attribute__((swift_name("component3()")));
- (NSString *)component4 __attribute__((swift_name("component4()")));
- (SharedCountryPhoneCodeNetworkModel *)doCopyCode:(int64_t)code minLength:(int64_t)minLength maxLength:(int64_t)maxLength country:(NSString *)country __attribute__((swift_name("doCopy(code:minLength:maxLength:country:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int64_t code __attribute__((swift_name("code")));
@property (readonly) NSString *country __attribute__((swift_name("country")));
@property (readonly) int64_t maxLength __attribute__((swift_name("maxLength")));
@property (readonly) int64_t minLength __attribute__((swift_name("minLength")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CountryPhoneCodeNetworkModel.Companion")))
@interface SharedCountryPhoneCodeNetworkModelCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedCountryPhoneCodeNetworkModelCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MasterDatabaseProvider")))
@interface SharedMasterDatabaseProvider : SharedBase
- (instancetype)initWithDatabaseDriver:(id<SharedIDatabaseDriverFactory>)databaseDriver __attribute__((swift_name("init(databaseDriver:)"))) __attribute__((objc_designated_initializer));
- (id<SharedMasterDatabase>)instance __attribute__((swift_name("instance()")));
@end;

__attribute__((swift_name("IDatabaseDriverFactory")))
@protocol SharedIDatabaseDriverFactory
@required
- (id<SharedSqlDriver>)createDriver __attribute__((swift_name("createDriver()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MasterDatabaseProviderFactory")))
@interface SharedMasterDatabaseProviderFactory : SharedBase <SharedIDatabaseDriverFactory>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (id<SharedSqlDriver>)createDriver __attribute__((swift_name("createDriver()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ApiMessages")))
@interface SharedApiMessages : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)apiMessages __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedApiMessages *shared __attribute__((swift_name("shared")));
@property (readonly) NSString *ERR_DEFAULT_MSG __attribute__((swift_name("ERR_DEFAULT_MSG")));
@property (readonly) NSString *ERR_NO_INTERNET __attribute__((swift_name("ERR_NO_INTERNET")));
@property (readonly) NSString *ERR_TIMEOUT __attribute__((swift_name("ERR_TIMEOUT")));
@end;

__attribute__((swift_name("NetworkResult")))
@interface SharedNetworkResult<T, E> : SharedBase
- (instancetype)initWithData:(T _Nullable)data code:(SharedInt * _Nullable)code message:(NSString * _Nullable)message exception:(SharedKotlinException * _Nullable)exception error:(E _Nullable)error state:(SharedState *)state __attribute__((swift_name("init(data:code:message:exception:error:state:)"))) __attribute__((objc_designated_initializer));
@property (readonly) SharedInt * _Nullable code __attribute__((swift_name("code")));
@property (readonly) T _Nullable data __attribute__((swift_name("data")));
@property (readonly) E _Nullable error __attribute__((swift_name("error")));
@property (readonly) SharedKotlinException * _Nullable exception __attribute__((swift_name("exception")));
@property (readonly) NSString * _Nullable message __attribute__((swift_name("message")));
@property (readonly) SharedState *state __attribute__((swift_name("state")));
@end;

__attribute__((swift_name("AppNetworkResult")))
@interface SharedAppNetworkResult<T> : SharedNetworkResult<T, SharedAppServerError *>
- (instancetype)initWithData:(T _Nullable)data code:(SharedInt * _Nullable)code message:(NSString * _Nullable)message error:(SharedAppServerError * _Nullable)error exception:(SharedKotlinException * _Nullable)exception state:(SharedState *)state __attribute__((swift_name("init(data:code:message:error:exception:state:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithData:(id _Nullable)data code:(SharedInt * _Nullable)code message:(NSString * _Nullable)message exception:(SharedKotlinException * _Nullable)exception error:(id _Nullable)error state:(SharedState *)state __attribute__((swift_name("init(data:code:message:exception:error:state:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (SharedAppNetworkResult<id> *)mapTransform:(id _Nullable (^)(T _Nullable))transform __attribute__((swift_name("map(transform:)")));
@property (readonly) SharedInt * _Nullable code __attribute__((swift_name("code")));
@property (readonly) T _Nullable data __attribute__((swift_name("data")));
@property (readonly) SharedAppServerError * _Nullable error __attribute__((swift_name("error")));
@property (readonly) SharedKotlinException * _Nullable exception __attribute__((swift_name("exception")));
@property (readonly) NSString * _Nullable message __attribute__((swift_name("message")));
@property (readonly) SharedState *state __attribute__((swift_name("state")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Loading")))
@interface SharedLoading<T> : SharedAppNetworkResult<T>
- (instancetype)initWithData:(T _Nullable)data __attribute__((swift_name("init(data:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithData:(id _Nullable)data code:(SharedInt * _Nullable)code message:(NSString * _Nullable)message error:(SharedAppServerError * _Nullable)error exception:(SharedKotlinException * _Nullable)exception state:(SharedState *)state __attribute__((swift_name("init(data:code:message:error:exception:state:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (T _Nullable)component1 __attribute__((swift_name("component1()")));
- (SharedLoading<T> *)doCopyData:(T _Nullable)data __attribute__((swift_name("doCopy(data:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) T _Nullable data __attribute__((swift_name("data")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("NetworkException")))
@interface SharedNetworkException<T> : SharedAppNetworkResult<T>
- (instancetype)initWithData:(T _Nullable)data exception:(SharedKotlinException *)exception message:(NSString *)message __attribute__((swift_name("init(data:exception:message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithData:(id _Nullable)data code:(SharedInt * _Nullable)code message:(NSString * _Nullable)message error:(SharedAppServerError * _Nullable)error exception:(SharedKotlinException * _Nullable)exception state:(SharedState *)state __attribute__((swift_name("init(data:code:message:error:exception:state:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (T _Nullable)component1 __attribute__((swift_name("component1()")));
- (SharedKotlinException *)component2 __attribute__((swift_name("component2()")));
- (NSString *)component3 __attribute__((swift_name("component3()")));
- (SharedNetworkException<T> *)doCopyData:(T _Nullable)data exception:(SharedKotlinException *)exception message:(NSString *)message __attribute__((swift_name("doCopy(data:exception:message:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) T _Nullable data __attribute__((swift_name("data")));
@property (readonly) SharedKotlinException *exception __attribute__((swift_name("exception")));
@property (readonly) NSString *message __attribute__((swift_name("message")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Success")))
@interface SharedSuccess<T> : SharedAppNetworkResult<T>
- (instancetype)initWithData:(T _Nullable)data code:(SharedInt * _Nullable)code message:(NSString * _Nullable)message __attribute__((swift_name("init(data:code:message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithData:(id _Nullable)data code:(SharedInt * _Nullable)code message:(NSString * _Nullable)message error:(SharedAppServerError * _Nullable)error exception:(SharedKotlinException * _Nullable)exception state:(SharedState *)state __attribute__((swift_name("init(data:code:message:error:exception:state:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (T _Nullable)component1 __attribute__((swift_name("component1()")));
- (SharedInt * _Nullable)component2 __attribute__((swift_name("component2()")));
- (NSString * _Nullable)component3 __attribute__((swift_name("component3()")));
- (SharedSuccess<T> *)doCopyData:(T _Nullable)data code:(SharedInt * _Nullable)code message:(NSString * _Nullable)message __attribute__((swift_name("doCopy(data:code:message:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedInt * _Nullable code __attribute__((swift_name("code")));
@property (readonly) T _Nullable data __attribute__((swift_name("data")));
@property (readonly) NSString * _Nullable message __attribute__((swift_name("message")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Unsuccessful")))
@interface SharedUnsuccessful<T> : SharedAppNetworkResult<T>
- (instancetype)initWithData:(T _Nullable)data code:(int32_t)code error:(SharedAppServerError * _Nullable)error message:(NSString * _Nullable)message __attribute__((swift_name("init(data:code:error:message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithData:(id _Nullable)data code:(SharedInt * _Nullable)code message:(NSString * _Nullable)message error:(SharedAppServerError * _Nullable)error exception:(SharedKotlinException * _Nullable)exception state:(SharedState *)state __attribute__((swift_name("init(data:code:message:error:exception:state:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (T _Nullable)component1 __attribute__((swift_name("component1()")));
- (int32_t)component2 __attribute__((swift_name("component2()")));
- (SharedAppServerError * _Nullable)component3 __attribute__((swift_name("component3()")));
- (NSString * _Nullable)component4 __attribute__((swift_name("component4()")));
- (SharedUnsuccessful<T> *)doCopyData:(T _Nullable)data code:(int32_t)code error:(SharedAppServerError * _Nullable)error message:(NSString * _Nullable)message __attribute__((swift_name("doCopy(data:code:error:message:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedInt *code __attribute__((swift_name("code")));
@property (readonly) T _Nullable data __attribute__((swift_name("data")));
@property (readonly) SharedAppServerError * _Nullable error __attribute__((swift_name("error")));
@property (readonly) NSString * _Nullable message __attribute__((swift_name("message")));
@end;

__attribute__((swift_name("INetworkGateway")))
@protocol SharedINetworkGateway
@required
@property (readonly) SharedHttpClient *client __attribute__((swift_name("client")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IOSNetworkGateway")))
@interface SharedIOSNetworkGateway : SharedBase <SharedINetworkGateway>
- (instancetype)initWithDebug:(BOOL)debug __attribute__((swift_name("init(debug:)"))) __attribute__((objc_designated_initializer));
@property (readonly) SharedHttpClient *client __attribute__((swift_name("client")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SnowplowBaseTrackingData")))
@interface SharedSnowplowBaseTrackingData : SharedBase
- (instancetype)initWithPlatformName:(NSString *)platformName appVersionName:(NSString *)appVersionName deviceName:(NSString *)deviceName deviceOSVersion:(NSString *)deviceOSVersion memberlogin:(NSString * _Nullable)memberlogin __attribute__((swift_name("init(platformName:appVersionName:deviceName:deviceOSVersion:memberlogin:)"))) __attribute__((objc_designated_initializer));
- (NSString *)component1 __attribute__((swift_name("component1()")));
- (NSString *)component2 __attribute__((swift_name("component2()")));
- (NSString *)component3 __attribute__((swift_name("component3()")));
- (NSString *)component4 __attribute__((swift_name("component4()")));
- (NSString * _Nullable)component5 __attribute__((swift_name("component5()")));
- (SharedSnowplowBaseTrackingData *)doCopyPlatformName:(NSString *)platformName appVersionName:(NSString *)appVersionName deviceName:(NSString *)deviceName deviceOSVersion:(NSString *)deviceOSVersion memberlogin:(NSString * _Nullable)memberlogin __attribute__((swift_name("doCopy(platformName:appVersionName:deviceName:deviceOSVersion:memberlogin:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSDictionary<NSString *, id> *)toPayloadMap __attribute__((swift_name("toPayloadMap()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *appVersionName __attribute__((swift_name("appVersionName")));
@property (readonly) NSString *deviceName __attribute__((swift_name("deviceName")));
@property (readonly) NSString *deviceOSVersion __attribute__((swift_name("deviceOSVersion")));
@property (readonly) NSString * _Nullable memberlogin __attribute__((swift_name("memberlogin")));
@property (readonly) NSString *platformName __attribute__((swift_name("platformName")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DeviceConstants")))
@interface SharedDeviceConstants : SharedBase
- (instancetype)initWithPlatformName:(NSString *)platformName platformId:(NSString *)platformId appKey:(NSString *)appKey appVersionName:(NSString *)appVersionName appFlavor:(NSString * _Nullable)appFlavor deviceName:(NSString *)deviceName deviceOSVersion:(NSString *)deviceOSVersion __attribute__((swift_name("init(platformName:platformId:appKey:appVersionName:appFlavor:deviceName:deviceOSVersion:)"))) __attribute__((objc_designated_initializer));
- (NSString *)component1 __attribute__((swift_name("component1()")));
- (NSString *)component2 __attribute__((swift_name("component2()")));
- (NSString *)component3 __attribute__((swift_name("component3()")));
- (NSString *)component4 __attribute__((swift_name("component4()")));
- (NSString * _Nullable)component5 __attribute__((swift_name("component5()")));
- (NSString *)component6 __attribute__((swift_name("component6()")));
- (NSString *)component7 __attribute__((swift_name("component7()")));
- (SharedDeviceConstants *)doCopyPlatformName:(NSString *)platformName platformId:(NSString *)platformId appKey:(NSString *)appKey appVersionName:(NSString *)appVersionName appFlavor:(NSString * _Nullable)appFlavor deviceName:(NSString *)deviceName deviceOSVersion:(NSString *)deviceOSVersion __attribute__((swift_name("doCopy(platformName:platformId:appKey:appVersionName:appFlavor:deviceName:deviceOSVersion:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable appFlavor __attribute__((swift_name("appFlavor")));
@property (readonly) NSString *appKey __attribute__((swift_name("appKey")));
@property (readonly) NSString *appVersionName __attribute__((swift_name("appVersionName")));
@property (readonly) NSString *deviceName __attribute__((swift_name("deviceName")));
@property (readonly) NSString *deviceOSVersion __attribute__((swift_name("deviceOSVersion")));
@property (readonly) NSString *platformId __attribute__((swift_name("platformId")));
@property (readonly) NSString *platformName __attribute__((swift_name("platformName")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PlatformIdMapping")))
@interface SharedPlatformIdMapping : SharedBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (NSString * _Nullable)fromIdId:(int32_t)id __attribute__((swift_name("fromId(id:)")));
- (SharedInt * _Nullable)toIdPlatform:(NSString *)platform __attribute__((swift_name("toId(platform:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AppServerError")))
@interface SharedAppServerError : SharedBase
- (instancetype)initWithError:(SharedErrorModel *)error __attribute__((swift_name("init(error:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedAppServerErrorCompanion *companion __attribute__((swift_name("companion")));
- (SharedErrorModel *)component1 __attribute__((swift_name("component1()")));
- (SharedAppServerError *)doCopyError:(SharedErrorModel *)error __attribute__((swift_name("doCopy(error:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedErrorModel *error __attribute__((swift_name("error")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AppServerError.Companion")))
@interface SharedAppServerErrorCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedAppServerErrorCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DataWrapper")))
@interface SharedDataWrapper<T> : SharedBase
- (instancetype)initWithData:(T _Nullable)data __attribute__((swift_name("init(data:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedDataWrapperCompanion *companion __attribute__((swift_name("companion")));
- (T _Nullable)component1 __attribute__((swift_name("component1()")));
- (SharedDataWrapper<T> *)doCopyData:(T _Nullable)data __attribute__((swift_name("doCopy(data:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) T _Nullable data __attribute__((swift_name("data")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DataWrapperCompanion")))
@interface SharedDataWrapperCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedDataWrapperCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKSerializer>)serializerTypeParamsSerializers:(SharedKotlinArray<id<SharedKSerializer>> *)typeParamsSerializers __attribute__((swift_name("serializer(typeParamsSerializers:)")));
- (id<SharedKSerializer>)serializerTypeSerial0:(id<SharedKSerializer>)typeSerial0 __attribute__((swift_name("serializer(typeSerial0:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ErrorModel")))
@interface SharedErrorModel : SharedBase
- (instancetype)initWithMessage:(NSString * _Nullable)message messageShortcode:(NSString * _Nullable)messageShortcode __attribute__((swift_name("init(message:messageShortcode:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedErrorModelCompanion *companion __attribute__((swift_name("companion")));
- (NSString * _Nullable)component1 __attribute__((swift_name("component1()")));
- (NSString * _Nullable)component2 __attribute__((swift_name("component2()")));
- (SharedErrorModel *)doCopyMessage:(NSString * _Nullable)message messageShortcode:(NSString * _Nullable)messageShortcode __attribute__((swift_name("doCopy(message:messageShortcode:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable message __attribute__((swift_name("message")));
@property (readonly) NSString * _Nullable messageShortcode __attribute__((swift_name("messageShortcode")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ErrorModel.Companion")))
@interface SharedErrorModelCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedErrorModelCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SoaHeaders")))
@interface SharedSoaHeaders : SharedBase
- (instancetype)initWithDomain:(NSString *)domain ipAddress:(NSString * _Nullable)ipAddress accessToken:(NSString * _Nullable)accessToken appInstanceId:(NSString * _Nullable)appInstanceId deviceId:(NSString * _Nullable)deviceId entryPoint:(NSString * _Nullable)entryPoint sessionId:(NSString * _Nullable)sessionId deviceConstants:(SharedDeviceConstants *)deviceConstants __attribute__((swift_name("init(domain:ipAddress:accessToken:appInstanceId:deviceId:entryPoint:sessionId:deviceConstants:)"))) __attribute__((objc_designated_initializer));
- (NSString *)component1 __attribute__((swift_name("component1()")));
- (NSString * _Nullable)component2 __attribute__((swift_name("component2()")));
- (NSString * _Nullable)component3 __attribute__((swift_name("component3()")));
- (NSString * _Nullable)component4 __attribute__((swift_name("component4()")));
- (NSString * _Nullable)component5 __attribute__((swift_name("component5()")));
- (NSString * _Nullable)component6 __attribute__((swift_name("component6()")));
- (NSString * _Nullable)component7 __attribute__((swift_name("component7()")));
- (SharedDeviceConstants *)component8 __attribute__((swift_name("component8()")));
- (SharedSoaHeaders *)doCopyDomain:(NSString *)domain ipAddress:(NSString * _Nullable)ipAddress accessToken:(NSString * _Nullable)accessToken appInstanceId:(NSString * _Nullable)appInstanceId deviceId:(NSString * _Nullable)deviceId entryPoint:(NSString * _Nullable)entryPoint sessionId:(NSString * _Nullable)sessionId deviceConstants:(SharedDeviceConstants *)deviceConstants __attribute__((swift_name("doCopy(domain:ipAddress:accessToken:appInstanceId:deviceId:entryPoint:sessionId:deviceConstants:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSDictionary<NSString *, NSString *> *)toHeaders __attribute__((swift_name("toHeaders()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable accessToken __attribute__((swift_name("accessToken")));
@property (readonly) NSString * _Nullable appInstanceId __attribute__((swift_name("appInstanceId")));
@property (readonly) SharedDeviceConstants *deviceConstants __attribute__((swift_name("deviceConstants")));
@property (readonly) NSString * _Nullable deviceId __attribute__((swift_name("deviceId")));
@property (readonly) NSString *domain __attribute__((swift_name("domain")));
@property (readonly) NSString * _Nullable entryPoint __attribute__((swift_name("entryPoint")));
@property (readonly) NSString * _Nullable ipAddress __attribute__((swift_name("ipAddress")));
@property (readonly) NSString * _Nullable sessionId __attribute__((swift_name("sessionId")));
@end;

__attribute__((swift_name("IApiDomains")))
@protocol SharedIApiDomains
@required
@property (readonly) NSString *apiGatewayUrl __attribute__((swift_name("apiGatewayUrl")));
@property (readonly) NSString *soaUrl __attribute__((swift_name("soaUrl")));
@property (readonly) NSString *uploadFileUrl __attribute__((swift_name("uploadFileUrl")));
@end;

__attribute__((swift_name("Closeable")))
@protocol SharedCloseable
@required
- (void)close __attribute__((swift_name("close()")));
@end;

__attribute__((swift_name("Flow")))
@protocol SharedFlow
@required

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)collectCollector:(id<SharedFlowCollector>)collector completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("collect(collector:completionHandler:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CommonFlow")))
@interface SharedCommonFlow<T> : SharedBase <SharedFlow>
- (instancetype)initWithOrigin:(id<SharedFlow>)origin __attribute__((swift_name("init(origin:)"))) __attribute__((objc_designated_initializer));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)collectCollector:(id<SharedFlowCollector>)collector completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("collect(collector:completionHandler:)")));
- (id<SharedCloseable>)watchBlock:(void (^)(T _Nullable))block __attribute__((swift_name("watch(block:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CoroutineDependency")))
@interface SharedCoroutineDependency : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)coroutineDependency __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedCoroutineDependency *shared __attribute__((swift_name("shared")));
@property (readonly) SharedAppCoroutineDispatchers *dispatchers __attribute__((swift_name("dispatchers")));
@end;

__attribute__((swift_name("IDateProvider")))
@protocol SharedIDateProvider
@required
- (int64_t)currentDateMillis __attribute__((swift_name("currentDateMillis()")));
- (int64_t)currentEpochMillis __attribute__((swift_name("currentEpochMillis()")));
- (int64_t)currentEpochSeconds __attribute__((swift_name("currentEpochSeconds()")));
- (int32_t)currentYear __attribute__((swift_name("currentYear()")));
- (int32_t)getYearsBetweenDatesFirst:(int64_t)first last:(int64_t)last __attribute__((swift_name("getYearsBetweenDates(first:last:)")));
- (SharedLong * _Nullable)isValidDateDate:(NSString *)date format:(NSString *)format __attribute__((swift_name("isValidDate(date:format:)")));
@end;

__attribute__((swift_name("ILogger")))
@protocol SharedILogger
@required
- (void)logTag:(NSString *)tag log:(id)log __attribute__((swift_name("log(tag:log:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PrintLogger")))
@interface SharedPrintLogger : SharedBase <SharedILogger>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (void)logTag:(NSString *)tag log:(id)log __attribute__((swift_name("log(tag:log:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("State")))
@interface SharedState : SharedKotlinEnum<SharedState *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedState *success __attribute__((swift_name("success")));
@property (class, readonly) SharedState *unsuccessful __attribute__((swift_name("unsuccessful")));
@property (class, readonly) SharedState *error __attribute__((swift_name("error")));
@property (class, readonly) SharedState *loading __attribute__((swift_name("loading")));
+ (SharedKotlinArray<SharedState *> *)values __attribute__((swift_name("values()")));
@end;

__attribute__((swift_name("IErrorLogger")))
@protocol SharedIErrorLogger
@required
- (void)recordE:(SharedKotlinException *)e __attribute__((swift_name("record(e:)")));
@end;

__attribute__((swift_name("ISnowplowTracker")))
@protocol SharedISnowplowTracker
@required
- (void)invokePayload:(NSDictionary<NSString *, id> *)payload schema:(NSString *)schema __attribute__((swift_name("invoke(payload:schema:)")));
@end;

__attribute__((swift_name("IJsonLoader")))
@protocol SharedIJsonLoader
@required
- (NSString * _Nullable)loadFileFileName:(NSString *)fileName __attribute__((swift_name("loadFile(fileName:)")));
@end;

__attribute__((swift_name("ILocalStorage")))
@protocol SharedILocalStorage
@required
- (void)clear __attribute__((swift_name("clear()")));
- (SharedInt * _Nullable)getIntKey:(NSString *)key __attribute__((swift_name("getInt(key:)")));
- (NSString * _Nullable)getStringKey:(NSString *)key __attribute__((swift_name("getString(key:)")));
- (void)putIntKey:(NSString *)key value:(SharedInt * _Nullable)value __attribute__((swift_name("putInt(key:value:)")));
- (void)putStringKey:(NSString *)key value:(NSString * _Nullable)value __attribute__((swift_name("putString(key:value:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("InMemoryLocalStorage")))
@interface SharedInMemoryLocalStorage : SharedBase <SharedILocalStorage>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (void)clear __attribute__((swift_name("clear()")));
- (SharedInt * _Nullable)getIntKey:(NSString *)key __attribute__((swift_name("getInt(key:)")));
- (NSString * _Nullable)getStringKey:(NSString *)key __attribute__((swift_name("getString(key:)")));
- (void)putIntKey:(NSString *)key value:(SharedInt * _Nullable)value __attribute__((swift_name("putInt(key:value:)")));
- (void)putStringKey:(NSString *)key value:(NSString * _Nullable)value __attribute__((swift_name("putString(key:value:)")));
@property (readonly) SharedMutableDictionary<NSString *, id> *map __attribute__((swift_name("map")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LocalStorage")))
@interface SharedLocalStorage : SharedBase <SharedILocalStorage>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (void)clear __attribute__((swift_name("clear()")));
- (SharedInt * _Nullable)getIntKey:(NSString *)key __attribute__((swift_name("getInt(key:)")));
- (NSString * _Nullable)getStringKey:(NSString *)key __attribute__((swift_name("getString(key:)")));
- (void)putIntKey:(NSString *)key value:(SharedInt * _Nullable)value __attribute__((swift_name("putInt(key:value:)")));
- (void)putStringKey:(NSString *)key value:(NSString * _Nullable)value __attribute__((swift_name("putString(key:value:)")));
@end;

__attribute__((swift_name("IView")))
@protocol SharedIView
@required
- (void)onEventEvent:(id _Nullable)event __attribute__((swift_name("onEvent(event:)")));
- (void)renderState:(id _Nullable)state __attribute__((swift_name("render(state:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LaunchWhen")))
@interface SharedLaunchWhen : SharedKotlinEnum<SharedLaunchWhen *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedLaunchWhen *started __attribute__((swift_name("started")));
@property (class, readonly) SharedLaunchWhen *resumed __attribute__((swift_name("resumed")));
@property (class, readonly) SharedLaunchWhen *created __attribute__((swift_name("created")));
+ (SharedKotlinArray<SharedLaunchWhen *> *)values __attribute__((swift_name("values()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AppCoroutineDispatchers")))
@interface SharedAppCoroutineDispatchers : SharedBase
- (instancetype)initWithIo:(SharedCoroutineDispatcher *)io main:(SharedCoroutineDispatcher *)main default:(SharedCoroutineDispatcher *)default_ mainImmediate:(SharedCoroutineDispatcher *)mainImmediate __attribute__((swift_name("init(io:main:default:mainImmediate:)"))) __attribute__((objc_designated_initializer));
@property (readonly, getter=default) SharedCoroutineDispatcher *default_ __attribute__((swift_name("default_")));
@property (readonly) SharedCoroutineDispatcher *io __attribute__((swift_name("io")));
@property (readonly) SharedCoroutineDispatcher *main __attribute__((swift_name("main")));
@property (readonly) SharedCoroutineDispatcher *mainImmediate __attribute__((swift_name("mainImmediate")));
@end;

__attribute__((swift_name("HttpClientEngineFactory")))
@protocol SharedHttpClientEngineFactory
@required
- (id<SharedHttpClientEngine>)createBlock:(void (^)(SharedHttpClientEngineConfig *))block __attribute__((swift_name("create(block:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ios")))
@interface SharedIos : SharedBase <SharedHttpClientEngineFactory>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)ios __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedIos *shared __attribute__((swift_name("shared")));
- (id<SharedHttpClientEngine>)createBlock:(void (^)(SharedIosClientEngineConfig *))block __attribute__((swift_name("create(block:)")));
- (NSString *)description __attribute__((swift_name("description()")));
@end;

__attribute__((swift_name("HttpClientEngineConfig")))
@interface SharedHttpClientEngineConfig : SharedBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
@property BOOL pipelining __attribute__((swift_name("pipelining")));
@property SharedProxyConfig * _Nullable proxy __attribute__((swift_name("proxy")));
@property (readonly) SharedKotlinNothing *response __attribute__((swift_name("response"))) __attribute__((unavailable("Response config is deprecated. See [HttpPlainText] feature for charset configuration")));
@property int32_t threadsCount __attribute__((swift_name("threadsCount")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IosClientEngineConfig")))
@interface SharedIosClientEngineConfig : SharedHttpClientEngineConfig
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (void)configureRequestBlock:(void (^)(NSMutableURLRequest *))block __attribute__((swift_name("configureRequest(block:)")));
- (void)configureSessionBlock:(void (^)(NSURLSessionConfiguration *))block __attribute__((swift_name("configureSession(block:)")));
- (void)handleChallengeBlock:(void (^)(NSURLSession *, NSURLSessionTask *, NSURLAuthenticationChallenge *, SharedKotlinUnit *(^)(SharedLong *, NSURLCredential * _Nullable)))block __attribute__((swift_name("handleChallenge(block:)")));
@property (readonly) void (^ _Nullable challengeHandler)(NSURLSession *, NSURLSessionTask *, NSURLAuthenticationChallenge *, SharedKotlinUnit *(^)(SharedLong *, NSURLCredential * _Nullable)) __attribute__((swift_name("challengeHandler")));
@property void (^requestConfig)(NSMutableURLRequest *) __attribute__((swift_name("requestConfig")));
@property void (^sessionConfig)(NSURLSessionConfiguration *) __attribute__((swift_name("sessionConfig")));
@end;

__attribute__((swift_name("KotlinThrowable")))
@interface SharedKotlinThrowable : SharedBase
- (instancetype)initWithMessage:(NSString * _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithCause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer));
- (SharedKotlinArray<NSString *> *)getStackTrace __attribute__((swift_name("getStackTrace()")));
- (void)printStackTrace __attribute__((swift_name("printStackTrace()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedKotlinThrowable * _Nullable cause __attribute__((swift_name("cause")));
@property (readonly) NSString * _Nullable message __attribute__((swift_name("message")));
- (NSError *)asError __attribute__((swift_name("asError()")));
@end;

__attribute__((swift_name("KotlinException")))
@interface SharedKotlinException : SharedKotlinThrowable
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (instancetype)initWithMessage:(NSString * _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithCause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer));
@end;

__attribute__((swift_name("IOException")))
@interface SharedIOException : SharedKotlinException
- (instancetype)initWithMessage:(NSString *)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithMessage:(NSString *)message cause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (instancetype)initWithCause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IosHttpRequestException")))
@interface SharedIosHttpRequestException : SharedIOException
- (instancetype)initWithOrigin:(NSError *)origin __attribute__((swift_name("init(origin:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithMessage:(NSString *)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString *)message cause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (readonly) NSError *origin __attribute__((swift_name("origin")));
@end;

__attribute__((unavailable("can't be imported")))
__attribute__((swift_name("CertificatePinner")))
@interface SharedCertificatePinner : NSObject
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PinnedCertificate")))
@interface SharedPinnedCertificate : SharedBase
- (instancetype)initWithPattern:(NSString *)pattern hashAlgorithm:(NSString *)hashAlgorithm hash:(NSString *)hash __attribute__((swift_name("init(pattern:hashAlgorithm:hash:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedPinnedCertificateCompanion *companion __attribute__((swift_name("companion")));
- (NSString *)component2 __attribute__((swift_name("component2()")));
- (NSString *)component3 __attribute__((swift_name("component3()")));
- (SharedPinnedCertificate *)doCopyPattern:(NSString *)pattern hashAlgorithm:(NSString *)hashAlgorithm hash:(NSString *)hash __attribute__((swift_name("doCopy(pattern:hashAlgorithm:hash:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly, getter=hash_) NSString *hash __attribute__((swift_name("hash")));
@property (readonly) NSString *hashAlgorithm __attribute__((swift_name("hashAlgorithm")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PinnedCertificate.Companion")))
@interface SharedPinnedCertificateCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedPinnedCertificateCompanion *shared __attribute__((swift_name("shared")));
- (SharedPinnedCertificate *)doNewPattern:(NSString *)pattern pin:(NSString *)pin __attribute__((swift_name("doNew(pattern:pin:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LogLevel")))
@interface SharedLogLevel : SharedKotlinEnum<SharedLogLevel *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedLogLevel *all __attribute__((swift_name("all")));
@property (class, readonly) SharedLogLevel *headers __attribute__((swift_name("headers")));
@property (class, readonly) SharedLogLevel *body __attribute__((swift_name("body")));
@property (class, readonly) SharedLogLevel *info __attribute__((swift_name("info")));
@property (class, readonly) SharedLogLevel *none __attribute__((swift_name("none")));
+ (SharedKotlinArray<SharedLogLevel *> *)values __attribute__((swift_name("values()")));
@property (readonly) BOOL body __attribute__((swift_name("body")));
@property (readonly) BOOL headers __attribute__((swift_name("headers")));
@property (readonly) BOOL info __attribute__((swift_name("info")));
@end;

__attribute__((swift_name("Logger")))
@protocol SharedLogger
@required
- (void)logMessage:(NSString *)message __attribute__((swift_name("log(message:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LoggerCompanion")))
@interface SharedLoggerCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedLoggerCompanion *shared __attribute__((swift_name("shared")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Logging")))
@interface SharedLogging : SharedBase
- (instancetype)initWithLogger:(id<SharedLogger>)logger level:(SharedLogLevel *)level __attribute__((swift_name("init(logger:level:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithLogger:(id<SharedLogger>)logger level:(SharedLogLevel *)level filters:(NSArray<SharedBoolean *(^)(SharedHttpRequestBuilder *)> *)filters __attribute__((swift_name("init(logger:level:filters:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedLoggingCompanion *companion __attribute__((swift_name("companion")));
@property NSArray<SharedBoolean *(^)(SharedHttpRequestBuilder *)> *filters __attribute__((swift_name("filters")));
@property SharedLogLevel *level __attribute__((swift_name("level")));
@property (readonly) id<SharedLogger> logger __attribute__((swift_name("logger")));
@end;

__attribute__((swift_name("HttpClientFeature")))
@protocol SharedHttpClientFeature
@required
- (void)installFeature:(id)feature scope:(SharedHttpClient *)scope __attribute__((swift_name("install(feature:scope:)")));
- (id)prepareBlock:(void (^)(id))block __attribute__((swift_name("prepare(block:)")));
@property (readonly) SharedAttributeKey<id> *key __attribute__((swift_name("key")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Logging.Companion")))
@interface SharedLoggingCompanion : SharedBase <SharedHttpClientFeature>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedLoggingCompanion *shared __attribute__((swift_name("shared")));
- (void)installFeature:(SharedLogging *)feature scope:(SharedHttpClient *)scope __attribute__((swift_name("install(feature:scope:)")));
- (SharedLogging *)prepareBlock:(void (^)(SharedLoggingConfig *))block __attribute__((swift_name("prepare(block:)")));
@property (readonly) SharedAttributeKey<SharedLogging *> *key __attribute__((swift_name("key")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Logging.Config")))
@interface SharedLoggingConfig : SharedBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (void)filterPredicate:(SharedBoolean *(^)(SharedHttpRequestBuilder *))predicate __attribute__((swift_name("filter(predicate:)")));
@property SharedLogLevel *level __attribute__((swift_name("level")));
@property id<SharedLogger> logger __attribute__((swift_name("logger")));
@end;

__attribute__((swift_name("JsonSerializer")))
@protocol SharedJsonSerializer
@required
- (id)readType:(SharedTypeInfo *)type body:(id<SharedInput>)body __attribute__((swift_name("read(type:body:)"))) __attribute__((deprecated("Please use overload with io.ktor.util.reflect.TypeInfo parameter")));
- (id)readType:(id<SharedTypeInfo>)type body_:(id<SharedInput>)body __attribute__((swift_name("read(type:body_:)")));
- (SharedOutgoingContent *)writeData:(id)data __attribute__((swift_name("write(data:)")));
- (SharedOutgoingContent *)writeData:(id)data contentType:(SharedContentType *)contentType __attribute__((swift_name("write(data:contentType:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinxSerializer")))
@interface SharedKotlinxSerializer : SharedBase <SharedJsonSerializer>
- (instancetype)initWithJson:(SharedJson *)json __attribute__((swift_name("init(json:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedKotlinxSerializerCompanion *companion __attribute__((swift_name("companion")));
- (id)readType:(id<SharedTypeInfo>)type body_:(id<SharedInput>)body __attribute__((swift_name("read(type:body_:)")));
- (SharedOutgoingContent *)writeData:(id)data contentType:(SharedContentType *)contentType __attribute__((swift_name("write(data:contentType:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinxSerializer.Companion")))
@interface SharedKotlinxSerializerCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedKotlinxSerializerCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) SharedJson *DefaultJson __attribute__((swift_name("DefaultJson")));
@property (readonly) SharedJson *DefaultJsonConfiguration __attribute__((swift_name("DefaultJsonConfiguration"))) __attribute__((unavailable("DefaultJsonConfiguration is deprecated. Consider using DefaultJson instead.")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("JsonFeature")))
@interface SharedJsonFeature : SharedBase
- (instancetype)initWithSerializer:(id<SharedJsonSerializer>)serializer __attribute__((swift_name("init(serializer:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable("Install feature properly instead of direct instantiation.")));
@property (class, readonly, getter=companion) SharedJsonFeatureFeature *companion __attribute__((swift_name("companion")));
@property (readonly) NSArray<SharedContentType *> *acceptContentTypes __attribute__((swift_name("acceptContentTypes")));
@property (readonly) id<SharedJsonSerializer> serializer __attribute__((swift_name("serializer")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("JsonFeature.Config")))
@interface SharedJsonFeatureConfig : SharedBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (void)acceptContentTypes:(SharedKotlinArray<SharedContentType *> *)contentTypes __attribute__((swift_name("accept(contentTypes:)")));
- (void)receiveMatcher:(id<SharedContentTypeMatcher>)matcher __attribute__((swift_name("receive(matcher:)")));
@property NSArray<SharedContentType *> *acceptContentTypes __attribute__((swift_name("acceptContentTypes")));
@property NSArray<id<SharedContentTypeMatcher>> *receiveContentTypeMatchers __attribute__((swift_name("receiveContentTypeMatchers")));
@property id<SharedJsonSerializer> _Nullable serializer __attribute__((swift_name("serializer")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("JsonFeature.Feature")))
@interface SharedJsonFeatureFeature : SharedBase <SharedHttpClientFeature>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)feature __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedJsonFeatureFeature *shared __attribute__((swift_name("shared")));
- (void)installFeature:(SharedJsonFeature *)feature scope:(SharedHttpClient *)scope __attribute__((swift_name("install(feature:scope:)")));
- (SharedJsonFeature *)prepareBlock:(void (^)(SharedJsonFeatureConfig *))block __attribute__((swift_name("prepare(block:)")));
@property (readonly) SharedAttributeKey<SharedJsonFeature *> *key __attribute__((swift_name("key")));
@end;

__attribute__((swift_name("Matcher")))
@protocol SharedMatcher
@required
- (id<SharedMatcher>)composeFn:(id _Nullable (^)(id _Nullable))fn __attribute__((swift_name("compose(fn:)")));
- (id<SharedMatcher>)contramapF:(id _Nullable (^)(id _Nullable))f __attribute__((swift_name("contramap(f:)")));
- (id<SharedMatcher>)invert __attribute__((swift_name("invert()")));
- (id<SharedMatcherResult>)testValue:(id _Nullable)value __attribute__((swift_name("test(value:)")));
- (id<SharedMatcher>)invertIf:(id<SharedMatcher>)receiver invert:(BOOL)invert __attribute__((swift_name("invertIf(_:invert:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("BeFailure")))
@interface SharedBeFailure : SharedBase <SharedMatcher>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (id<SharedMatcherResult>)testValue:(id _Nullable)value __attribute__((swift_name("test(value:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("BeFailureOfType")))
@interface SharedBeFailureOfType<A> : SharedBase <SharedMatcher>
- (instancetype)initWithClazz:(id<SharedKotlinKClass>)clazz __attribute__((swift_name("init(clazz:)"))) __attribute__((objc_designated_initializer));
- (id<SharedMatcherResult>)testValue:(id _Nullable)value __attribute__((swift_name("test(value:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("BeSuccess")))
@interface SharedBeSuccess<T> : SharedBase <SharedMatcher>
- (instancetype)initWithExpected:(T _Nullable)expected __attribute__((swift_name("init(expected:)"))) __attribute__((objc_designated_initializer));
- (id<SharedMatcherResult>)testValue:(id _Nullable)value __attribute__((swift_name("test(value:)")));
@property (readonly) T _Nullable expected __attribute__((swift_name("expected")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FloatToleranceMatcher")))
@interface SharedFloatToleranceMatcher : SharedBase <SharedMatcher>
- (instancetype)initWithExpected:(float)expected tolerance:(float)tolerance __attribute__((swift_name("init(expected:tolerance:)"))) __attribute__((objc_designated_initializer));
- (SharedFloatToleranceMatcher *)plusOrMinusTolerance:(float)tolerance __attribute__((swift_name("plusOrMinus(tolerance:)")));
- (id<SharedMatcherResult>)testValue:(SharedFloat *)value __attribute__((swift_name("test(value:)")));
@end;

__attribute__((swift_name("Diff")))
@interface SharedDiff : SharedBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
@property (class, readonly, getter=companion) SharedDiffCompanion *companion __attribute__((swift_name("companion")));
- (NSString *)getIndentLevel:(int32_t)level __attribute__((swift_name("getIndent(level:)")));
- (BOOL)isEmpty __attribute__((swift_name("isEmpty()")));
- (NSString *)description __attribute__((swift_name("description()")));
- (NSString *)toStringLevel:(int32_t)level __attribute__((swift_name("toString(level:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Diff.Companion")))
@interface SharedDiffCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedDiffCompanion *shared __attribute__((swift_name("shared")));
- (SharedDiff *)createValue:(id _Nullable)value expected:(id _Nullable)expected ignoreExtraMapKeys:(BOOL)ignoreExtraMapKeys __attribute__((swift_name("create(value:expected:ignoreExtraMapKeys:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Diff.MapValues")))
@interface SharedDiffMapValues : SharedDiff
- (instancetype)initWithKey:(id _Nullable)key valueDiff:(SharedDiff *)valueDiff __attribute__((swift_name("init(key:valueDiff:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (BOOL)isEmpty __attribute__((swift_name("isEmpty()")));
- (NSString *)toStringLevel:(int32_t)level __attribute__((swift_name("toString(level:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Diff.Maps")))
@interface SharedDiffMaps : SharedDiff
- (instancetype)initWithMissingKeys:(NSArray<id> *)missingKeys extraKeys:(NSArray<id> *)extraKeys differentValues:(NSArray<SharedDiff *> *)differentValues __attribute__((swift_name("init(missingKeys:extraKeys:differentValues:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (BOOL)isEmpty __attribute__((swift_name("isEmpty()")));
- (NSString *)toStringLevel:(int32_t)level __attribute__((swift_name("toString(level:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Diff.Values")))
@interface SharedDiffValues : SharedDiff
- (instancetype)initWithValue:(id _Nullable)value expected:(id _Nullable)expected __attribute__((swift_name("init(value:expected:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (BOOL)isEmpty __attribute__((swift_name("isEmpty()")));
- (NSString *)toStringLevel:(int32_t)level __attribute__((swift_name("toString(level:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("UUIDVersion")))
@interface SharedUUIDVersion : SharedKotlinEnum<SharedUUIDVersion *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedUUIDVersion *any __attribute__((swift_name("any")));
@property (class, readonly) SharedUUIDVersion *v1 __attribute__((swift_name("v1")));
@property (class, readonly) SharedUUIDVersion *v2 __attribute__((swift_name("v2")));
@property (class, readonly) SharedUUIDVersion *v3 __attribute__((swift_name("v3")));
@property (class, readonly) SharedUUIDVersion *v4 __attribute__((swift_name("v4")));
@property (class, readonly) SharedUUIDVersion *v5 __attribute__((swift_name("v5")));
+ (SharedKotlinArray<SharedUUIDVersion *> *)values __attribute__((swift_name("values()")));
@property (readonly) SharedKotlinRegex *uuidRegex __attribute__((swift_name("uuidRegex")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Percentage")))
@interface SharedPercentage : SharedBase
- (instancetype)initWithValue:(double)value __attribute__((swift_name("init(value:)"))) __attribute__((objc_designated_initializer));
- (double)component1 __attribute__((swift_name("component1()")));
- (SharedPercentage *)doCopyValue:(double)value __attribute__((swift_name("doCopy(value:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) double value __attribute__((swift_name("value")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ToleranceMatcher")))
@interface SharedToleranceMatcher : SharedBase <SharedMatcher>
- (instancetype)initWithExpected:(SharedDouble * _Nullable)expected tolerance:(double)tolerance __attribute__((swift_name("init(expected:tolerance:)"))) __attribute__((objc_designated_initializer));
- (id<SharedMatcherResult>)testValue:(SharedDouble * _Nullable)value __attribute__((swift_name("test(value:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MapContainsMatcher")))
@interface SharedMapContainsMatcher<K, V> : SharedBase <SharedMatcher>
- (instancetype)initWithExpected:(NSDictionary<id, id> *)expected ignoreExtraKeys:(BOOL)ignoreExtraKeys __attribute__((swift_name("init(expected:ignoreExtraKeys:)"))) __attribute__((objc_designated_initializer));
- (id<SharedMatcherResult>)testValue:(NSDictionary<id, id> *)value __attribute__((swift_name("test(value:)")));
@end;

__attribute__((swift_name("KotlinCoroutineContext")))
@protocol SharedKotlinCoroutineContext
@required
- (id _Nullable)foldInitial:(id _Nullable)initial operation:(id _Nullable (^)(id _Nullable, id<SharedKotlinCoroutineContextElement>))operation __attribute__((swift_name("fold(initial:operation:)")));
- (id<SharedKotlinCoroutineContextElement> _Nullable)getKey:(id<SharedKotlinCoroutineContextKey>)key __attribute__((swift_name("get(key:)")));
- (id<SharedKotlinCoroutineContext>)minusKeyKey:(id<SharedKotlinCoroutineContextKey>)key __attribute__((swift_name("minusKey(key:)")));
- (id<SharedKotlinCoroutineContext>)plusContext:(id<SharedKotlinCoroutineContext>)context __attribute__((swift_name("plus(context:)")));
@end;

__attribute__((swift_name("KotlinCoroutineContextElement")))
@protocol SharedKotlinCoroutineContextElement <SharedKotlinCoroutineContext>
@required
@property (readonly) id<SharedKotlinCoroutineContextKey> key __attribute__((swift_name("key")));
@end;

__attribute__((swift_name("KotlinAbstractCoroutineContextElement")))
@interface SharedKotlinAbstractCoroutineContextElement : SharedBase <SharedKotlinCoroutineContextElement>
- (instancetype)initWithKey:(id<SharedKotlinCoroutineContextKey>)key __attribute__((swift_name("init(key:)"))) __attribute__((objc_designated_initializer));
@property (readonly) id<SharedKotlinCoroutineContextKey> key __attribute__((swift_name("key")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AfterPropertyContextElement")))
@interface SharedAfterPropertyContextElement : SharedKotlinAbstractCoroutineContextElement
- (instancetype)initWithAfter:(id<SharedKotlinSuspendFunction0>)after __attribute__((swift_name("init(after:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithKey:(id<SharedKotlinCoroutineContextKey>)key __attribute__((swift_name("init(key:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedAfterPropertyContextElementKey *companion __attribute__((swift_name("companion")));
- (id<SharedKotlinSuspendFunction0>)component1 __attribute__((swift_name("component1()")));
- (SharedAfterPropertyContextElement *)doCopyAfter:(id<SharedKotlinSuspendFunction0>)after __attribute__((swift_name("doCopy(after:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) id<SharedKotlinSuspendFunction0> after __attribute__((swift_name("after")));
@end;

__attribute__((swift_name("KotlinCoroutineContextKey")))
@protocol SharedKotlinCoroutineContextKey
@required
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AfterPropertyContextElement.Key")))
@interface SharedAfterPropertyContextElementKey : SharedBase <SharedKotlinCoroutineContextKey>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)key __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedAfterPropertyContextElementKey *shared __attribute__((swift_name("shared")));
@end;

__attribute__((swift_name("Gen")))
@interface SharedGen<__covariant A> : SharedBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (id<SharedKotlinSequence>)generateRs:(SharedRandomSource *)rs edgeConfig:(SharedEdgeConfig *)edgeConfig __attribute__((swift_name("generate(rs:edgeConfig:)")));
- (int32_t)minIterations __attribute__((swift_name("minIterations()")));
@property (readonly) id<SharedClassifier> _Nullable classifier __attribute__((swift_name("classifier")));
@end;

__attribute__((swift_name("Arb")))
@interface SharedArb<__covariant A> : SharedGen<A>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
@property (class, readonly, getter=companion) SharedArbCompanion *companion __attribute__((swift_name("companion")));
- (A _Nullable)edgecaseRs:(SharedRandomSource *)rs __attribute__((swift_name("edgecase(rs:)")));
- (SharedSample<A> *)sampleRs:(SharedRandomSource *)rs __attribute__((swift_name("sample(rs:)")));
- (id<SharedKotlinSequence>)samplesRs:(SharedRandomSource *)rs __attribute__((swift_name("samples(rs:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ArbCompanion")))
@interface SharedArbCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedArbCompanion *shared __attribute__((swift_name("shared")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("BeforePropertyContextElement")))
@interface SharedBeforePropertyContextElement : SharedKotlinAbstractCoroutineContextElement
- (instancetype)initWithBefore:(id<SharedKotlinSuspendFunction0>)before __attribute__((swift_name("init(before:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithKey:(id<SharedKotlinCoroutineContextKey>)key __attribute__((swift_name("init(key:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedBeforePropertyContextElementKey *companion __attribute__((swift_name("companion")));
- (id<SharedKotlinSuspendFunction0>)component1 __attribute__((swift_name("component1()")));
- (SharedBeforePropertyContextElement *)doCopyBefore:(id<SharedKotlinSuspendFunction0>)before __attribute__((swift_name("doCopy(before:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) id<SharedKotlinSuspendFunction0> before __attribute__((swift_name("before")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("BeforePropertyContextElement.Key")))
@interface SharedBeforePropertyContextElementKey : SharedBase <SharedKotlinCoroutineContextKey>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)key __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedBeforePropertyContextElementKey *shared __attribute__((swift_name("shared")));
@end;

__attribute__((swift_name("Classifier")))
@protocol SharedClassifier
@required
- (NSString * _Nullable)classifyValue:(id _Nullable)value __attribute__((swift_name("classify(value:)")));
@end;

__attribute__((swift_name("Constraints")))
@protocol SharedConstraints
@required
- (BOOL)evaluate __attribute__((swift_name("evaluate()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ConstraintsCompanion")))
@interface SharedConstraintsCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedConstraintsCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedConstraints>)durationDuration:(int64_t)duration __attribute__((swift_name("duration(duration:)")));
- (id<SharedConstraints>)iterationsK:(int32_t)k __attribute__((swift_name("iterations(k:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("EdgeConfig")))
@interface SharedEdgeConfig : SharedBase
- (instancetype)initWithEdgecasesGenerationProbability:(double)edgecasesGenerationProbability __attribute__((swift_name("init(edgecasesGenerationProbability:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedEdgeConfigCompanion *companion __attribute__((swift_name("companion")));
- (double)component1 __attribute__((swift_name("component1()")));
- (SharedEdgeConfig *)doCopyEdgecasesGenerationProbability:(double)edgecasesGenerationProbability __attribute__((swift_name("doCopy(edgecasesGenerationProbability:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) double edgecasesGenerationProbability __attribute__((swift_name("edgecasesGenerationProbability")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("EdgeConfig.Companion")))
@interface SharedEdgeConfigCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedEdgeConfigCompanion *shared __attribute__((swift_name("shared")));
@end;

__attribute__((swift_name("Exhaustive")))
@interface SharedExhaustive<__covariant A> : SharedGen<A>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
@property (class, readonly, getter=companion) SharedExhaustiveCompanion *companion __attribute__((swift_name("companion")));
- (SharedArb<A> *)toArb __attribute__((swift_name("toArb()")));
@property (readonly) NSArray<id> *values __attribute__((swift_name("values")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ExhaustiveCompanion")))
@interface SharedExhaustiveCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedExhaustiveCompanion *shared __attribute__((swift_name("shared")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PropTest")))
@interface SharedPropTest : SharedBase
- (instancetype)initWithSeed:(SharedLong * _Nullable)seed minSuccess:(int32_t)minSuccess maxFailure:(int32_t)maxFailure shrinkingMode:(SharedShrinkingMode *)shrinkingMode iterations:(SharedInt * _Nullable)iterations listeners:(NSArray<id<SharedPropTestListener>> *)listeners edgeConfig:(SharedEdgeConfig *)edgeConfig constraints:(id<SharedConstraints> _Nullable)constraints __attribute__((swift_name("init(seed:minSuccess:maxFailure:shrinkingMode:iterations:listeners:edgeConfig:constraints:)"))) __attribute__((objc_designated_initializer));
- (SharedLong * _Nullable)component1 __attribute__((swift_name("component1()")));
- (int32_t)component2 __attribute__((swift_name("component2()")));
- (int32_t)component3 __attribute__((swift_name("component3()")));
- (SharedShrinkingMode *)component4 __attribute__((swift_name("component4()")));
- (SharedInt * _Nullable)component5 __attribute__((swift_name("component5()")));
- (NSArray<id<SharedPropTestListener>> *)component6 __attribute__((swift_name("component6()")));
- (SharedEdgeConfig *)component7 __attribute__((swift_name("component7()")));
- (id<SharedConstraints> _Nullable)component8 __attribute__((swift_name("component8()")));
- (SharedPropTest *)doCopySeed:(SharedLong * _Nullable)seed minSuccess:(int32_t)minSuccess maxFailure:(int32_t)maxFailure shrinkingMode:(SharedShrinkingMode *)shrinkingMode iterations:(SharedInt * _Nullable)iterations listeners:(NSArray<id<SharedPropTestListener>> *)listeners edgeConfig:(SharedEdgeConfig *)edgeConfig constraints:(id<SharedConstraints> _Nullable)constraints __attribute__((swift_name("doCopy(seed:minSuccess:maxFailure:shrinkingMode:iterations:listeners:edgeConfig:constraints:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) id<SharedConstraints> _Nullable constraints __attribute__((swift_name("constraints")));
@property (readonly) SharedEdgeConfig *edgeConfig __attribute__((swift_name("edgeConfig")));
@property (readonly) SharedInt * _Nullable iterations __attribute__((swift_name("iterations")));
@property (readonly) NSArray<id<SharedPropTestListener>> *listeners __attribute__((swift_name("listeners")));
@property (readonly) int32_t maxFailure __attribute__((swift_name("maxFailure")));
@property (readonly) int32_t minSuccess __attribute__((swift_name("minSuccess")));
@property (readonly) SharedLong * _Nullable seed __attribute__((swift_name("seed")));
@property (readonly) SharedShrinkingMode *shrinkingMode __attribute__((swift_name("shrinkingMode")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PropTestConfig")))
@interface SharedPropTestConfig : SharedBase
- (instancetype)initWithSeed:(SharedLong * _Nullable)seed minSuccess:(int32_t)minSuccess maxFailure:(int32_t)maxFailure shrinkingMode:(SharedShrinkingMode *)shrinkingMode iterations:(SharedInt * _Nullable)iterations listeners:(NSArray<id<SharedPropTestListener>> *)listeners edgeConfig:(SharedEdgeConfig *)edgeConfig outputClassifications:(BOOL)outputClassifications labelsReporter:(id<SharedLabelsReporter>)labelsReporter constraints:(id<SharedConstraints> _Nullable)constraints __attribute__((swift_name("init(seed:minSuccess:maxFailure:shrinkingMode:iterations:listeners:edgeConfig:outputClassifications:labelsReporter:constraints:)"))) __attribute__((objc_designated_initializer));
- (SharedLong * _Nullable)component1 __attribute__((swift_name("component1()")));
- (id<SharedConstraints> _Nullable)component10 __attribute__((swift_name("component10()")));
- (int32_t)component2 __attribute__((swift_name("component2()")));
- (int32_t)component3 __attribute__((swift_name("component3()")));
- (SharedShrinkingMode *)component4 __attribute__((swift_name("component4()")));
- (SharedInt * _Nullable)component5 __attribute__((swift_name("component5()")));
- (NSArray<id<SharedPropTestListener>> *)component6 __attribute__((swift_name("component6()")));
- (SharedEdgeConfig *)component7 __attribute__((swift_name("component7()")));
- (BOOL)component8 __attribute__((swift_name("component8()")));
- (id<SharedLabelsReporter>)component9 __attribute__((swift_name("component9()")));
- (SharedPropTestConfig *)doCopySeed:(SharedLong * _Nullable)seed minSuccess:(int32_t)minSuccess maxFailure:(int32_t)maxFailure shrinkingMode:(SharedShrinkingMode *)shrinkingMode iterations:(SharedInt * _Nullable)iterations listeners:(NSArray<id<SharedPropTestListener>> *)listeners edgeConfig:(SharedEdgeConfig *)edgeConfig outputClassifications:(BOOL)outputClassifications labelsReporter:(id<SharedLabelsReporter>)labelsReporter constraints:(id<SharedConstraints> _Nullable)constraints __attribute__((swift_name("doCopy(seed:minSuccess:maxFailure:shrinkingMode:iterations:listeners:edgeConfig:outputClassifications:labelsReporter:constraints:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) id<SharedConstraints> _Nullable constraints __attribute__((swift_name("constraints")));
@property (readonly) SharedEdgeConfig *edgeConfig __attribute__((swift_name("edgeConfig")));
@property (readonly) SharedInt * _Nullable iterations __attribute__((swift_name("iterations")));
@property (readonly) id<SharedLabelsReporter> labelsReporter __attribute__((swift_name("labelsReporter")));
@property (readonly) NSArray<id<SharedPropTestListener>> *listeners __attribute__((swift_name("listeners")));
@property (readonly) int32_t maxFailure __attribute__((swift_name("maxFailure")));
@property (readonly) int32_t minSuccess __attribute__((swift_name("minSuccess")));
@property (readonly) BOOL outputClassifications __attribute__((swift_name("outputClassifications")));
@property (readonly) SharedLong * _Nullable seed __attribute__((swift_name("seed")));
@property (readonly) SharedShrinkingMode *shrinkingMode __attribute__((swift_name("shrinkingMode")));
@end;

__attribute__((swift_name("PropTestListener")))
@protocol SharedPropTestListener
@required

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)afterTestWithCompletionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("afterTest(completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)beforeTestWithCompletionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("beforeTest(completionHandler:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PropertyContext")))
@interface SharedPropertyContext : SharedBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (int32_t)attempts __attribute__((swift_name("attempts()")));
- (NSDictionary<NSString *, NSDictionary<NSString *, SharedInt *> *> *)autoclassifications __attribute__((swift_name("autoclassifications()")));
- (NSDictionary<NSString *, SharedInt *> *)classifications __attribute__((swift_name("classifications()")));
- (void)classifyCondition:(BOOL)condition label:(NSString *)label __attribute__((swift_name("classify(condition:label:)")));
- (void)classifyCondition:(BOOL)condition trueLabel:(NSString *)trueLabel falseLabel:(NSString *)falseLabel __attribute__((swift_name("classify(condition:trueLabel:falseLabel:)")));
- (void)classifyInput:(int32_t)input label:(NSString *)label __attribute__((swift_name("classify(input:label:)")));
- (void)classifyLabel:(NSString *)label __attribute__((swift_name("classify(label:)")));
- (int32_t)failures __attribute__((swift_name("failures()")));
- (void)markFailure __attribute__((swift_name("markFailure()")));
- (void)markSuccess __attribute__((swift_name("markSuccess()")));
- (int32_t)successes __attribute__((swift_name("successes()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PropertyResult")))
@interface SharedPropertyResult : SharedBase
- (instancetype)initWithInputs:(NSArray<NSString *> *)inputs seed:(int64_t)seed attempts:(int32_t)attempts successes:(int32_t)successes failures:(int32_t)failures labels:(NSDictionary<NSString *, NSDictionary<NSString *, SharedInt *> *> *)labels __attribute__((swift_name("init(inputs:seed:attempts:successes:failures:labels:)"))) __attribute__((objc_designated_initializer));
- (NSArray<NSString *> *)component1 __attribute__((swift_name("component1()")));
- (int64_t)component2 __attribute__((swift_name("component2()")));
- (int32_t)component3 __attribute__((swift_name("component3()")));
- (int32_t)component4 __attribute__((swift_name("component4()")));
- (int32_t)component5 __attribute__((swift_name("component5()")));
- (NSDictionary<NSString *, NSDictionary<NSString *, SharedInt *> *> *)component6 __attribute__((swift_name("component6()")));
- (SharedPropertyResult *)doCopyInputs:(NSArray<NSString *> *)inputs seed:(int64_t)seed attempts:(int32_t)attempts successes:(int32_t)successes failures:(int32_t)failures labels:(NSDictionary<NSString *, NSDictionary<NSString *, SharedInt *> *> *)labels __attribute__((swift_name("doCopy(inputs:seed:attempts:successes:failures:labels:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t attempts __attribute__((swift_name("attempts")));
@property (readonly) int32_t failures __attribute__((swift_name("failures")));
@property (readonly) NSArray<NSString *> *inputs __attribute__((swift_name("inputs")));
@property (readonly) NSDictionary<NSString *, NSDictionary<NSString *, SharedInt *> *> *labels __attribute__((swift_name("labels")));
@property (readonly) int64_t seed __attribute__((swift_name("seed")));
@property (readonly) int32_t successes __attribute__((swift_name("successes")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PropertyTesting")))
@interface SharedPropertyTesting : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)propertyTesting __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedPropertyTesting *shared __attribute__((swift_name("shared")));
@property double defaultEdgecasesGenerationProbability __attribute__((swift_name("defaultEdgecasesGenerationProbability")));
@property int32_t defaultIterationCount __attribute__((swift_name("defaultIterationCount")));
@property NSArray<id<SharedPropTestListener>> *defaultListeners __attribute__((swift_name("defaultListeners")));
@property int32_t defaultMaxFailure __attribute__((swift_name("defaultMaxFailure")));
@property int32_t defaultMinSuccess __attribute__((swift_name("defaultMinSuccess")));
@property BOOL defaultOutputClassifications __attribute__((swift_name("defaultOutputClassifications")));
@property SharedLong * _Nullable defaultSeed __attribute__((swift_name("defaultSeed")));
@property SharedShrinkingMode *defaultShrinkingMode __attribute__((swift_name("defaultShrinkingMode")));
@property double edgecasesBindDeterminism __attribute__((swift_name("edgecasesBindDeterminism")));
@property BOOL failOnSeed __attribute__((swift_name("failOnSeed")));
@property int32_t maxFilterAttempts __attribute__((swift_name("maxFilterAttempts")));
@property BOOL shouldPrintGeneratedValues __attribute__((swift_name("shouldPrintGeneratedValues")));
@property BOOL shouldPrintShrinkSteps __attribute__((swift_name("shouldPrintShrinkSteps")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("RTree")))
@interface SharedRTree<__covariant A> : SharedBase
- (instancetype)initWithValue:(A _Nullable (^)(void))value children:(id<SharedKotlinLazy>)children __attribute__((swift_name("init(value:children:)"))) __attribute__((objc_designated_initializer));
- (A _Nullable (^)(void))component1 __attribute__((swift_name("component1()")));
- (id<SharedKotlinLazy>)component2 __attribute__((swift_name("component2()")));
- (SharedRTree<A> *)doCopyValue:(A _Nullable (^)(void))value children:(id<SharedKotlinLazy>)children __attribute__((swift_name("doCopy(value:children:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) id<SharedKotlinLazy> children __attribute__((swift_name("children")));
@property (readonly) A _Nullable (^value)(void) __attribute__((swift_name("value")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("RandomSource")))
@interface SharedRandomSource : SharedBase
- (instancetype)initWithRandom:(SharedKotlinRandom *)random seed:(int64_t)seed __attribute__((swift_name("init(random:seed:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedRandomSourceCompanion *companion __attribute__((swift_name("companion")));
- (SharedKotlinRandom *)component1 __attribute__((swift_name("component1()")));
- (int64_t)component2 __attribute__((swift_name("component2()")));
- (SharedRandomSource *)doCopyRandom:(SharedKotlinRandom *)random seed:(int64_t)seed __attribute__((swift_name("doCopy(random:seed:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedKotlinRandom *random __attribute__((swift_name("random")));
@property (readonly) int64_t seed __attribute__((swift_name("seed")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("RandomSource.Companion")))
@interface SharedRandomSourceCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedRandomSourceCompanion *shared __attribute__((swift_name("shared")));
- (SharedRandomSource *)default __attribute__((swift_name("default()")));
- (SharedRandomSource *)seededSeed:(int64_t)seed __attribute__((swift_name("seeded(seed:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Sample")))
@interface SharedSample<__covariant A> : SharedBase
- (instancetype)initWithValue:(A _Nullable)value shrinks:(SharedRTree<A> *)shrinks __attribute__((swift_name("init(value:shrinks:)"))) __attribute__((objc_designated_initializer));
- (A _Nullable)component1 __attribute__((swift_name("component1()")));
- (SharedRTree<A> *)component2 __attribute__((swift_name("component2()")));
- (SharedSample<A> *)doCopyValue:(A _Nullable)value shrinks:(SharedRTree<A> *)shrinks __attribute__((swift_name("doCopy(value:shrinks:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedRTree<A> *shrinks __attribute__((swift_name("shrinks")));
@property (readonly) A _Nullable value __attribute__((swift_name("value")));
@end;

__attribute__((swift_name("Shrinker")))
@protocol SharedShrinker
@required
- (NSArray<id> *)shrinkValue:(id _Nullable)value __attribute__((swift_name("shrink(value:)")));
@end;

__attribute__((swift_name("ShrinkingMode")))
@interface SharedShrinkingMode : SharedBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ShrinkingMode.Bounded")))
@interface SharedShrinkingModeBounded : SharedShrinkingMode
- (instancetype)initWithBound:(int32_t)bound __attribute__((swift_name("init(bound:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (int32_t)component1 __attribute__((swift_name("component1()")));
- (SharedShrinkingModeBounded *)doCopyBound:(int32_t)bound __attribute__((swift_name("doCopy(bound:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t bound __attribute__((swift_name("bound")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ShrinkingMode.Off")))
@interface SharedShrinkingModeOff : SharedShrinkingMode
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
+ (instancetype)off __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedShrinkingModeOff *shared __attribute__((swift_name("shared")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ShrinkingMode.Unbounded")))
@interface SharedShrinkingModeUnbounded : SharedShrinkingMode
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
+ (instancetype)unbounded __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedShrinkingModeUnbounded *shared __attribute__((swift_name("shared")));
@end;

__attribute__((swift_name("LabelsReporter")))
@protocol SharedLabelsReporter
@required
- (void)outputResult:(SharedPropertyResult *)result __attribute__((swift_name("output(result:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StandardLabelsReporter")))
@interface SharedStandardLabelsReporter : SharedBase <SharedLabelsReporter>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)standardLabelsReporter __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedStandardLabelsReporter *shared __attribute__((swift_name("shared")));
- (void)outputResult:(SharedPropertyResult *)result __attribute__((swift_name("output(result:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Counter")))
@interface SharedCounter : SharedBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (int32_t)inc __attribute__((swift_name("inc()")));
@property int32_t count __attribute__((swift_name("count")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ShrinkResult")))
@interface SharedShrinkResult<__covariant A> : SharedBase
- (instancetype)initWithInitial:(A _Nullable)initial shrink:(A _Nullable)shrink cause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(initial:shrink:cause:)"))) __attribute__((objc_designated_initializer));
- (A _Nullable)component1 __attribute__((swift_name("component1()")));
- (A _Nullable)component2 __attribute__((swift_name("component2()")));
- (SharedKotlinThrowable * _Nullable)component3 __attribute__((swift_name("component3()")));
- (SharedShrinkResult<A> *)doCopyInitial:(A _Nullable)initial shrink:(A _Nullable)shrink cause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("doCopy(initial:shrink:cause:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedKotlinThrowable * _Nullable cause __attribute__((swift_name("cause")));
@property (readonly) A _Nullable initial __attribute__((swift_name("initial")));
@property (readonly) A _Nullable shrink __attribute__((swift_name("shrink")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StepResult")))
@interface SharedStepResult<A> : SharedBase
- (instancetype)initWithFailed:(A _Nullable)failed cause:(SharedKotlinThrowable *)cause __attribute__((swift_name("init(failed:cause:)"))) __attribute__((objc_designated_initializer));
- (A _Nullable)component1 __attribute__((swift_name("component1()")));
- (SharedKotlinThrowable *)component2 __attribute__((swift_name("component2()")));
- (SharedStepResult<A> *)doCopyFailed:(A _Nullable)failed cause:(SharedKotlinThrowable *)cause __attribute__((swift_name("doCopy(failed:cause:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedKotlinThrowable *cause __attribute__((swift_name("cause")));
@property (readonly) A _Nullable failed __attribute__((swift_name("failed")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ArbitraryBuilder")))
@interface SharedArbitraryBuilder<A> : SharedBase
- (instancetype)initWithSampleFn:(A _Nullable (^)(SharedRandomSource *))sampleFn classifier:(id<SharedClassifier> _Nullable)classifier shrinker:(id<SharedShrinker> _Nullable)shrinker edgecaseFn:(A _Nullable (^ _Nullable)(SharedRandomSource *))edgecaseFn __attribute__((swift_name("init(sampleFn:classifier:shrinker:edgecaseFn:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedArbitraryBuilderCompanion *companion __attribute__((swift_name("companion")));
- (SharedArb<A> *)build __attribute__((swift_name("build()")));
- (SharedArbitraryBuilder<A> *)withClassifierClassifier:(id<SharedClassifier>)classifier __attribute__((swift_name("withClassifier(classifier:)")));
- (SharedArbitraryBuilder<A> *)withEdgecaseFnEdgecaseFn:(A _Nullable (^)(SharedRandomSource *))edgecaseFn __attribute__((swift_name("withEdgecaseFn(edgecaseFn:)")));
- (SharedArbitraryBuilder<A> *)withEdgecasesEdgecases:(NSArray<id> *)edgecases __attribute__((swift_name("withEdgecases(edgecases:)")));
- (SharedArbitraryBuilder<A> *)withShrinkerShrinker:(id<SharedShrinker>)shrinker __attribute__((swift_name("withShrinker(shrinker:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ArbitraryBuilderCompanion")))
@interface SharedArbitraryBuilderCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedArbitraryBuilderCompanion *shared __attribute__((swift_name("shared")));
- (SharedArbitraryBuilder<id> *)createF:(id _Nullable (^)(SharedRandomSource *))f __attribute__((swift_name("create(f:)")));
@end;

__attribute__((swift_name("BaseArbitraryBuilderSyntax")))
@protocol SharedBaseArbitraryBuilderSyntax
@required

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)bind:(SharedArb<id> *)receiver completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("bind(_:completionHandler:)")));
@end;

__attribute__((swift_name("ArbitraryBuilderContext")))
@protocol SharedArbitraryBuilderContext <SharedBaseArbitraryBuilderSyntax>
@required
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Codepoint")))
@interface SharedCodepoint : SharedBase
- (instancetype)initWithValue:(int32_t)value __attribute__((swift_name("init(value:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedCodepointCompanion *companion __attribute__((swift_name("companion")));
- (int32_t)component1 __attribute__((swift_name("component1()")));
- (SharedCodepoint *)doCopyValue:(int32_t)value __attribute__((swift_name("doCopy(value:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t value __attribute__((swift_name("value")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Codepoint.Companion")))
@interface SharedCodepointCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedCodepointCompanion *shared __attribute__((swift_name("shared")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DoubleShrinker")))
@interface SharedDoubleShrinker : SharedBase <SharedShrinker>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)doubleShrinker __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedDoubleShrinker *shared __attribute__((swift_name("shared")));
- (NSArray<SharedDouble *> *)shrinkValue:(SharedDouble *)value __attribute__((swift_name("shrink(value:)")));
- (NSString * _Nullable)shrinkValue_:(NSString *)value __attribute__((swift_name("shrink(value_:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FloatShrinker")))
@interface SharedFloatShrinker : SharedBase <SharedShrinker>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)floatShrinker __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedFloatShrinker *shared __attribute__((swift_name("shared")));
- (NSArray<SharedFloat *> *)shrinkValue:(SharedFloat *)value __attribute__((swift_name("shrink(value:)")));
@end;

__attribute__((swift_name("GenerateArbitraryBuilderContext")))
@protocol SharedGenerateArbitraryBuilderContext <SharedBaseArbitraryBuilderSyntax>
@required
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GeoLocation")))
@interface SharedGeoLocation : SharedBase
- (instancetype)initWithLatitude:(double)latitude longitude:(double)longitude __attribute__((swift_name("init(latitude:longitude:)"))) __attribute__((objc_designated_initializer));
- (double)component1 __attribute__((swift_name("component1()")));
- (double)component2 __attribute__((swift_name("component2()")));
- (SharedGeoLocation *)doCopyLatitude:(double)latitude longitude:(double)longitude __attribute__((swift_name("doCopy(latitude:longitude:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) double first __attribute__((swift_name("first"))) __attribute__((deprecated("Use latitude")));
@property (readonly) double latitude __attribute__((swift_name("latitude")));
@property (readonly) double latitudeDeg __attribute__((swift_name("latitudeDeg")));
@property (readonly) double longitude __attribute__((swift_name("longitude")));
@property (readonly) double longitudeDeg __attribute__((swift_name("longitudeDeg")));
@property (readonly) double second __attribute__((swift_name("second"))) __attribute__((deprecated("Use longitude")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IntShrinker")))
@interface SharedIntShrinker : SharedBase <SharedShrinker>
- (instancetype)initWithRange:(SharedKotlinIntRange *)range __attribute__((swift_name("init(range:)"))) __attribute__((objc_designated_initializer));
- (NSArray<SharedInt *> *)shrinkValue:(SharedInt *)value __attribute__((swift_name("shrink(value:)")));
@property (readonly) SharedKotlinIntRange *range __attribute__((swift_name("range")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ListShrinker")))
@interface SharedListShrinker<A> : SharedBase <SharedShrinker>
- (instancetype)initWithRange:(SharedKotlinIntRange *)range __attribute__((swift_name("init(range:)"))) __attribute__((objc_designated_initializer));
- (NSArray<NSArray<id> *> *)shrinkValue:(NSArray<id> *)value __attribute__((swift_name("shrink(value:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LongShrinker")))
@interface SharedLongShrinker : SharedBase <SharedShrinker>
- (instancetype)initWithRange:(SharedKotlinLongRange *)range __attribute__((swift_name("init(range:)"))) __attribute__((objc_designated_initializer));
- (NSArray<SharedLong *> *)shrinkValue:(SharedLong *)value __attribute__((swift_name("shrink(value:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MapShrinker")))
@interface SharedMapShrinker<K, V> : SharedBase <SharedShrinker>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (NSArray<NSDictionary<id, id> *> *)shrinkValue:(NSDictionary<id, id> *)value __attribute__((swift_name("shrink(value:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MultiplesShrinker")))
@interface SharedMultiplesShrinker : SharedBase <SharedShrinker>
- (instancetype)initWithMultiple:(int32_t)multiple __attribute__((swift_name("init(multiple:)"))) __attribute__((objc_designated_initializer));
- (NSArray<SharedInt *> *)shrinkValue:(SharedInt *)value __attribute__((swift_name("shrink(value:)")));
@end;

__attribute__((swift_name("KotlinRuntimeException")))
@interface SharedKotlinRuntimeException : SharedKotlinException
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (instancetype)initWithMessage:(NSString * _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithCause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("NoGeneratorFoundException")))
@interface SharedNoGeneratorFoundException : SharedKotlinRuntimeException
- (instancetype)initWithMsg:(NSString *)msg __attribute__((swift_name("init(msg:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithCause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end;

__attribute__((swift_name("KotlinContinuation")))
@protocol SharedKotlinContinuation
@required
- (void)resumeWithResult:(id _Nullable)result __attribute__((swift_name("resumeWith(result:)")));
@property (readonly) id<SharedKotlinCoroutineContext> context __attribute__((swift_name("context")));
@end;

__attribute__((swift_name("SingleShotArbContinuation")))
@interface SharedSingleShotArbContinuation<F, A> : SharedBase <SharedKotlinContinuation, SharedBaseArbitraryBuilderSyntax>
- (instancetype)initWithContext:(id<SharedKotlinCoroutineContext>)context fn:(id<SharedKotlinSuspendFunction1>)fn __attribute__((swift_name("init(context:fn:)"))) __attribute__((objc_designated_initializer));
- (void)resumeWithResult:(id _Nullable)result __attribute__((swift_name("resumeWith(result:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)bind:(SharedArb<id> *)receiver completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("bind(_:completionHandler:)")));
- (SharedArb<A> *)createSingleShotArb:(F)receiver __attribute__((swift_name("createSingleShotArb(_:)")));
@property (readonly) id<SharedKotlinCoroutineContext> context __attribute__((swift_name("context")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SingleShotArbContinuationRestricted")))
@interface SharedSingleShotArbContinuationRestricted<A> : SharedSingleShotArbContinuation<id<SharedArbitraryBuilderContext>, A> <SharedArbitraryBuilderContext>
- (instancetype)initWithFn:(id<SharedKotlinSuspendFunction1>)fn __attribute__((swift_name("init(fn:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithContext:(id<SharedKotlinCoroutineContext>)context fn:(id<SharedKotlinSuspendFunction1>)fn __attribute__((swift_name("init(context:fn:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SingleShotArbContinuationSuspendedable")))
@interface SharedSingleShotArbContinuationSuspendedable<A> : SharedSingleShotArbContinuation<id<SharedGenerateArbitraryBuilderContext>, A> <SharedGenerateArbitraryBuilderContext>
- (instancetype)initWithContext:(id<SharedKotlinCoroutineContext>)context fn:(id<SharedKotlinSuspendFunction1>)fn __attribute__((swift_name("init(context:fn:)"))) __attribute__((objc_designated_initializer));
@property (readonly) id<SharedKotlinCoroutineContext> context __attribute__((swift_name("context")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StringShrinker")))
@interface SharedStringShrinker : SharedBase <SharedShrinker>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)stringShrinker __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedStringShrinker *shared __attribute__((swift_name("shared")));
- (NSArray<NSString *> *)shrinkValue:(NSString *)value __attribute__((swift_name("shrink(value:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StringShrinkerWithMin")))
@interface SharedStringShrinkerWithMin : SharedBase <SharedShrinker>
- (instancetype)initWithMinLength:(int32_t)minLength simplestCharSelector:(id _Nullable (^)(NSString *))simplestCharSelector __attribute__((swift_name("init(minLength:simplestCharSelector:)"))) __attribute__((objc_designated_initializer));
- (NSArray<NSString *> *)shrinkValue:(NSString *)value __attribute__((swift_name("shrink(value:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("UIntShrinker")))
@interface SharedUIntShrinker : SharedBase <SharedShrinker>
- (instancetype)initWithRange:(SharedKotlinUIntRange *)range __attribute__((swift_name("init(range:)"))) __attribute__((objc_designated_initializer));
- (NSArray<SharedUInt *> *)shrinkValue:(SharedUInt *)value __attribute__((swift_name("shrink(value:)")));
@property (readonly) SharedKotlinUIntRange *range __attribute__((swift_name("range")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ULongShrinker")))
@interface SharedULongShrinker : SharedBase <SharedShrinker>
- (instancetype)initWithRange:(SharedKotlinULongRange *)range __attribute__((swift_name("init(range:)"))) __attribute__((objc_designated_initializer));
- (NSArray<SharedULong *> *)shrinkValue:(SharedULong *)value __attribute__((swift_name("shrink(value:)")));
@property (readonly) SharedKotlinULongRange *range __attribute__((swift_name("range")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IntClassifier")))
@interface SharedIntClassifier : SharedBase <SharedClassifier>
- (instancetype)initWithRange:(SharedKotlinIntRange *)range __attribute__((swift_name("init(range:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithMin:(int32_t)min max:(int32_t)max __attribute__((swift_name("init(min:max:)"))) __attribute__((objc_designated_initializer));
- (NSString * _Nullable)classifyValue:(SharedInt *)value __attribute__((swift_name("classify(value:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LongClassifier")))
@interface SharedLongClassifier : SharedBase <SharedClassifier>
- (instancetype)initWithRange:(SharedKotlinLongRange *)range __attribute__((swift_name("init(range:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithMin:(int64_t)min max:(int64_t)max __attribute__((swift_name("init(min:max:)"))) __attribute__((objc_designated_initializer));
- (NSString * _Nullable)classifyValue:(SharedLong *)value __attribute__((swift_name("classify(value:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StringClassifier")))
@interface SharedStringClassifier : SharedBase <SharedClassifier>
- (instancetype)initWithMin:(int32_t)min max:(int32_t)max __attribute__((swift_name("init(min:max:)"))) __attribute__((objc_designated_initializer));
- (NSString * _Nullable)classifyValue:(NSString *)value __attribute__((swift_name("classify(value:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Actual")))
@interface SharedActual : SharedBase
- (instancetype)initWithValue:(SharedPrinted *)value __attribute__((swift_name("init(value:)"))) __attribute__((objc_designated_initializer));
- (SharedPrinted *)component1 __attribute__((swift_name("component1()")));
- (SharedActual *)doCopyValue:(SharedPrinted *)value __attribute__((swift_name("doCopy(value:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedPrinted *value __attribute__((swift_name("value")));
@end;

__attribute__((swift_name("AssertionCounter")))
@protocol SharedAssertionCounter
@required
- (int32_t)get __attribute__((swift_name("get()")));
- (void)inc __attribute__((swift_name("inc()")));
- (void)reset __attribute__((swift_name("reset()")));
@end;

__attribute__((swift_name("KotlinError")))
@interface SharedKotlinError : SharedKotlinThrowable
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (instancetype)initWithMessage:(NSString * _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithCause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer));
@end;

__attribute__((swift_name("KotlinAssertionError")))
@interface SharedKotlinAssertionError : SharedKotlinError
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (instancetype)initWithCause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithMessage:(id _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer));
@end;

__attribute__((swift_name("ComparisonError")))
@protocol SharedComparisonError
@required
@property (readonly) NSString *actualValue __attribute__((swift_name("actualValue")));
@property (readonly) NSString *expectedValue __attribute__((swift_name("expectedValue")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AssertionFailedError")))
@interface SharedAssertionFailedError : SharedKotlinAssertionError <SharedComparisonError>
- (instancetype)initWithMessage:(NSString *)message expectedValue:(NSString *)expectedValue actualValue:(NSString *)actualValue __attribute__((swift_name("init(message:expectedValue:actualValue:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (instancetype)initWithCause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithMessage:(id _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (readonly) NSString *actualValue __attribute__((swift_name("actualValue")));
@property (readonly) NSString *expectedValue __attribute__((swift_name("expectedValue")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AssertionsConfig")))
@interface SharedAssertionsConfig : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)assertionsConfig __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedAssertionsConfig *shared __attribute__((swift_name("shared")));
@property (readonly) int32_t largeStringDiffMinSize __attribute__((swift_name("largeStringDiffMinSize")));
@property (readonly) int32_t maxCollectionEnumerateSize __attribute__((swift_name("maxCollectionEnumerateSize")));
@property (readonly) int32_t maxErrorsOutput __attribute__((swift_name("maxErrorsOutput")));
@property (readonly) NSString *multiLineDiff __attribute__((swift_name("multiLineDiff")));
@property (readonly) BOOL showDataClassDiff __attribute__((swift_name("showDataClassDiff")));
@end;

__attribute__((swift_name("BasicAssertionCounter")))
@interface SharedBasicAssertionCounter : SharedBase <SharedAssertionCounter>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (int32_t)get __attribute__((swift_name("get()")));
- (void)inc __attribute__((swift_name("inc()")));
- (void)reset __attribute__((swift_name("reset()")));
@end;

__attribute__((swift_name("ErrorCollector")))
@protocol SharedErrorCollector
@required
- (void)clear __attribute__((swift_name("clear()")));
- (NSArray<NSString *(^)(void)> *)clueContext __attribute__((swift_name("clueContext()")));
- (NSArray<SharedKotlinThrowable *> *)errors __attribute__((swift_name("errors()")));
- (SharedErrorCollectionMode *)getCollectionMode __attribute__((swift_name("getCollectionMode()")));
- (void)popClue __attribute__((swift_name("popClue()")));
- (void)pushClueClue:(NSString *(^)(void))clue __attribute__((swift_name("pushClue(clue:)")));
- (void)pushErrorT:(SharedKotlinThrowable *)t __attribute__((swift_name("pushError(t:)")));
- (void)setCollectionModeMode:(SharedErrorCollectionMode *)mode __attribute__((swift_name("setCollectionMode(mode:)")));
@end;

__attribute__((swift_name("BasicErrorCollector")))
@interface SharedBasicErrorCollector : SharedBase <SharedErrorCollector>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (void)clear __attribute__((swift_name("clear()")));
- (NSArray<NSString *(^)(void)> *)clueContext __attribute__((swift_name("clueContext()")));
- (NSArray<SharedKotlinThrowable *> *)errors __attribute__((swift_name("errors()")));
- (SharedErrorCollectionMode *)getCollectionMode __attribute__((swift_name("getCollectionMode()")));
- (void)popClue __attribute__((swift_name("popClue()")));
- (void)pushClueClue:(NSString *(^)(void))clue __attribute__((swift_name("pushClue(clue:)")));
- (void)pushErrorT:(SharedKotlinThrowable *)t __attribute__((swift_name("pushError(t:)")));
- (void)setCollectionModeMode:(SharedErrorCollectionMode *)mode __attribute__((swift_name("setCollectionMode(mode:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ErrorCollectionMode")))
@interface SharedErrorCollectionMode : SharedKotlinEnum<SharedErrorCollectionMode *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedErrorCollectionMode *soft __attribute__((swift_name("soft")));
@property (class, readonly) SharedErrorCollectionMode *hard __attribute__((swift_name("hard")));
+ (SharedKotlinArray<SharedErrorCollectionMode *> *)values __attribute__((swift_name("values()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Exceptions")))
@interface SharedExceptions : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)exceptions __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedExceptions *shared __attribute__((swift_name("shared")));
- (SharedKotlinAssertionError *)createAssertionErrorMessage:(NSString *)message cause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("createAssertionError(message:cause:)")));
- (SharedKotlinThrowable *)createAssertionErrorMessage:(NSString *)message cause:(SharedKotlinThrowable * _Nullable)cause expected:(SharedExpected *)expected actual:(SharedActual *)actual __attribute__((swift_name("createAssertionError(message:cause:expected:actual:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Expected")))
@interface SharedExpected : SharedBase
- (instancetype)initWithValue:(SharedPrinted *)value __attribute__((swift_name("init(value:)"))) __attribute__((objc_designated_initializer));
- (SharedPrinted *)component1 __attribute__((swift_name("component1()")));
- (SharedExpected *)doCopyValue:(SharedPrinted *)value __attribute__((swift_name("doCopy(value:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedPrinted *value __attribute__((swift_name("value")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MultiAssertionError")))
@interface SharedMultiAssertionError : SharedKotlinAssertionError
- (instancetype)initWithErrors:(NSArray<SharedKotlinThrowable *> *)errors __attribute__((swift_name("init(errors:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (instancetype)initWithCause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithMessage:(id _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedMultiAssertionErrorCompanion *companion __attribute__((swift_name("companion")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MultiAssertionError.Companion")))
@interface SharedMultiAssertionErrorCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedMultiAssertionErrorCompanion *shared __attribute__((swift_name("shared")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("NoopAssertionsCounter")))
@interface SharedNoopAssertionsCounter : SharedBase <SharedAssertionCounter>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)noopAssertionsCounter __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedNoopAssertionsCounter *shared __attribute__((swift_name("shared")));
- (int32_t)get __attribute__((swift_name("get()")));
- (void)inc __attribute__((swift_name("inc()")));
- (void)reset __attribute__((swift_name("reset()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("NoopErrorCollector")))
@interface SharedNoopErrorCollector : SharedBase <SharedErrorCollector>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)noopErrorCollector __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedNoopErrorCollector *shared __attribute__((swift_name("shared")));
- (void)clear __attribute__((swift_name("clear()")));
- (NSArray<NSString *(^)(void)> *)clueContext __attribute__((swift_name("clueContext()")));
- (NSArray<SharedKotlinThrowable *> *)errors __attribute__((swift_name("errors()")));
- (SharedErrorCollectionMode *)getCollectionMode __attribute__((swift_name("getCollectionMode()")));
- (void)popClue __attribute__((swift_name("popClue()")));
- (void)pushClueClue:(NSString *(^)(void))clue __attribute__((swift_name("pushClue(clue:)")));
- (void)pushErrorT:(SharedKotlinThrowable *)t __attribute__((swift_name("pushError(t:)")));
- (void)setCollectionModeMode:(SharedErrorCollectionMode *)mode __attribute__((swift_name("setCollectionMode(mode:)")));
@end;

__attribute__((swift_name("Print")))
@protocol SharedPrint
@required
- (SharedPrinted *)printA:(id _Nullable)a __attribute__((swift_name("print(a:)"))) __attribute__((deprecated("Use print(a, level) to respect level hints. Deprecated in 5.0.3")));
- (SharedPrinted *)printA:(id _Nullable)a level:(int32_t)level __attribute__((swift_name("print(a:level:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ArrayPrint")))
@interface SharedArrayPrint : SharedBase <SharedPrint>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)arrayPrint __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedArrayPrint *shared __attribute__((swift_name("shared")));
- (SharedPrinted *)printA:(id)a __attribute__((swift_name("print(a:)"))) __attribute__((deprecated("Overrides deprecated member in 'io.kotest.assertions.print.Print'. Use print(a, level) to respect level hints. Deprecated in 5.0.3")));
- (SharedPrinted *)printA:(id)a level:(int32_t)level __attribute__((swift_name("print(a:level:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("BooleanPrint")))
@interface SharedBooleanPrint : SharedBase <SharedPrint>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)booleanPrint __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedBooleanPrint *shared __attribute__((swift_name("shared")));
- (SharedPrinted *)printA:(SharedBoolean *)a __attribute__((swift_name("print(a:)"))) __attribute__((deprecated("Overrides deprecated member in 'io.kotest.assertions.print.Print'. Use print(a, level) to respect level hints. Deprecated in 5.0.3")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("BytePrint")))
@interface SharedBytePrint : SharedBase <SharedPrint>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)bytePrint __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedBytePrint *shared __attribute__((swift_name("shared")));
- (SharedPrinted *)printA:(SharedByte *)a __attribute__((swift_name("print(a:)"))) __attribute__((deprecated("Overrides deprecated member in 'io.kotest.assertions.print.Print'. Use print(a, level) to respect level hints. Deprecated in 5.0.3")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CharPrint")))
@interface SharedCharPrint : SharedBase <SharedPrint>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)charPrint __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedCharPrint *shared __attribute__((swift_name("shared")));
- (SharedPrinted *)printA:(id)a __attribute__((swift_name("print(a:)"))) __attribute__((deprecated("Overrides deprecated member in 'io.kotest.assertions.print.Print'. Use print(a, level) to respect level hints. Deprecated in 5.0.3")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DoublePrint")))
@interface SharedDoublePrint : SharedBase <SharedPrint>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)doublePrint __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedDoublePrint *shared __attribute__((swift_name("shared")));
- (SharedPrinted *)printA:(SharedDouble *)a __attribute__((swift_name("print(a:)"))) __attribute__((deprecated("Overrides deprecated member in 'io.kotest.assertions.print.Print'. Use print(a, level) to respect level hints. Deprecated in 5.0.3")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FloatPrint")))
@interface SharedFloatPrint : SharedBase <SharedPrint>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)floatPrint __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedFloatPrint *shared __attribute__((swift_name("shared")));
- (SharedPrinted *)printA:(SharedFloat *)a __attribute__((swift_name("print(a:)"))) __attribute__((deprecated("Overrides deprecated member in 'io.kotest.assertions.print.Print'. Use print(a, level) to respect level hints. Deprecated in 5.0.3")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IntPrint")))
@interface SharedIntPrint : SharedBase <SharedPrint>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)intPrint __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedIntPrint *shared __attribute__((swift_name("shared")));
- (SharedPrinted *)printA:(SharedInt *)a __attribute__((swift_name("print(a:)"))) __attribute__((deprecated("Overrides deprecated member in 'io.kotest.assertions.print.Print'. Use print(a, level) to respect level hints. Deprecated in 5.0.3")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IterablePrint")))
@interface SharedIterablePrint<T> : SharedBase <SharedPrint>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (SharedPrinted *)printA:(id)a __attribute__((swift_name("print(a:)"))) __attribute__((deprecated("Overrides deprecated member in 'io.kotest.assertions.print.Print'. Use print(a, level) to respect level hints. Deprecated in 5.0.3")));
- (SharedPrinted *)printA:(id)a level:(int32_t)level __attribute__((swift_name("print(a:level:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KClassPrint")))
@interface SharedKClassPrint : SharedBase <SharedPrint>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)kClassPrint __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedKClassPrint *shared __attribute__((swift_name("shared")));
- (SharedPrinted *)printA:(id<SharedKotlinKClass>)a __attribute__((swift_name("print(a:)"))) __attribute__((deprecated("Overrides deprecated member in 'io.kotest.assertions.print.Print'. Use print(a, level) to respect level hints. Deprecated in 5.0.3")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ListPrint")))
@interface SharedListPrint<T> : SharedBase <SharedPrint>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (SharedPrinted *)printA:(NSArray<id> *)a __attribute__((swift_name("print(a:)"))) __attribute__((deprecated("Overrides deprecated member in 'io.kotest.assertions.print.Print'. Use print(a, level) to respect level hints. Deprecated in 5.0.3")));
- (SharedPrinted *)printA:(NSArray<id> *)a level:(int32_t)level __attribute__((swift_name("print(a:level:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LongPrint")))
@interface SharedLongPrint : SharedBase <SharedPrint>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)longPrint __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedLongPrint *shared __attribute__((swift_name("shared")));
- (SharedPrinted *)printA:(SharedLong *)a __attribute__((swift_name("print(a:)"))) __attribute__((deprecated("Overrides deprecated member in 'io.kotest.assertions.print.Print'. Use print(a, level) to respect level hints. Deprecated in 5.0.3")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MapPrint")))
@interface SharedMapPrint : SharedBase <SharedPrint>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)mapPrint __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedMapPrint *shared __attribute__((swift_name("shared")));
- (SharedPrinted *)printA:(NSDictionary<id, id> *)a __attribute__((swift_name("print(a:)"))) __attribute__((deprecated("Overrides deprecated member in 'io.kotest.assertions.print.Print'. Use print(a, level) to respect level hints. Deprecated in 5.0.3")));
- (SharedPrinted *)printA:(NSDictionary<id, id> *)a level:(int32_t)level __attribute__((swift_name("print(a:level:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("NullPrint")))
@interface SharedNullPrint : SharedBase <SharedPrint>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)nullPrint __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedNullPrint *shared __attribute__((swift_name("shared")));
- (SharedPrinted *)printA:(id _Nullable)a __attribute__((swift_name("print(a:)"))) __attribute__((deprecated("Overrides deprecated member in 'io.kotest.assertions.print.Print'. Use print(a, level) to respect level hints. Deprecated in 5.0.3")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Printed")))
@interface SharedPrinted : SharedBase
- (instancetype)initWithValue:(NSString *)value __attribute__((swift_name("init(value:)"))) __attribute__((objc_designated_initializer));
- (NSString *)component1 __attribute__((swift_name("component1()")));
- (SharedPrinted *)doCopyValue:(NSString *)value __attribute__((swift_name("doCopy(value:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Printers")))
@interface SharedPrinters : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)printers __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedPrinters *shared __attribute__((swift_name("shared")));
- (void)addKclass:(id<SharedKotlinKClass>)kclass print:(id<SharedPrint>)print __attribute__((swift_name("add(kclass:print:)")));
- (NSDictionary<id<SharedKotlinKClass>, id<SharedPrint>> *)all __attribute__((swift_name("all()")));
- (void)removeKclass:(id<SharedKotlinKClass>)kclass __attribute__((swift_name("remove(kclass:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ShortPrint")))
@interface SharedShortPrint : SharedBase <SharedPrint>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)shortPrint __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedShortPrint *shared __attribute__((swift_name("shared")));
- (SharedPrinted *)printA:(SharedShort *)a __attribute__((swift_name("print(a:)"))) __attribute__((deprecated("Overrides deprecated member in 'io.kotest.assertions.print.Print'. Use print(a, level) to respect level hints. Deprecated in 5.0.3")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StringPrint")))
@interface SharedStringPrint : SharedBase <SharedPrint>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)stringPrint __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedStringPrint *shared __attribute__((swift_name("shared")));
- (SharedPrinted *)printA:(NSString *)a __attribute__((swift_name("print(a:)"))) __attribute__((deprecated("Overrides deprecated member in 'io.kotest.assertions.print.Print'. Use print(a, level) to respect level hints. Deprecated in 5.0.3")));
- (SharedPrinted *)showNoWrapA:(NSString *)a __attribute__((swift_name("showNoWrap(a:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ToStringPrint")))
@interface SharedToStringPrint : SharedBase <SharedPrint>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)toStringPrint __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedToStringPrint *shared __attribute__((swift_name("shared")));
- (SharedPrinted *)printA:(id)a __attribute__((swift_name("print(a:)"))) __attribute__((deprecated("Overrides deprecated member in 'io.kotest.assertions.print.Print'. Use print(a, level) to respect level hints. Deprecated in 5.0.3")));
- (SharedPrinted *)printA:(id)a level:(int32_t)level __attribute__((swift_name("print(a:level:)")));
@end;

__attribute__((swift_name("Interval")))
@protocol SharedInterval
@required
- (int64_t)nextCount:(int32_t)count __attribute__((swift_name("next(count:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ExponentialInterval")))
@interface SharedExponentialInterval : SharedBase <SharedInterval>
- (instancetype)initWithBase:(int64_t)base factor:(double)factor max:(id _Nullable)max __attribute__((swift_name("init(base:factor:max:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedExponentialIntervalCompanion *companion __attribute__((swift_name("companion")));
- (int64_t)nextCount:(int32_t)count __attribute__((swift_name("next(count:)")));
- (NSString *)description __attribute__((swift_name("description()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ExponentialInterval.Companion")))
@interface SharedExponentialIntervalCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedExponentialIntervalCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) double defaultFactor __attribute__((swift_name("defaultFactor")));
@property (readonly) int64_t defaultMax __attribute__((swift_name("defaultMax")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FibonacciInterval")))
@interface SharedFibonacciInterval : SharedBase <SharedInterval>
- (instancetype)initWithBase:(int64_t)base offset:(int32_t)offset max:(id _Nullable)max __attribute__((swift_name("init(base:offset:max:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedFibonacciIntervalCompanion *companion __attribute__((swift_name("companion")));
- (int64_t)nextCount:(int32_t)count __attribute__((swift_name("next(count:)")));
- (NSString *)description __attribute__((swift_name("description()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FibonacciInterval.Companion")))
@interface SharedFibonacciIntervalCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedFibonacciIntervalCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) int64_t defaultMax __attribute__((swift_name("defaultMax")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FixedInterval")))
@interface SharedFixedInterval : SharedBase <SharedInterval>
- (instancetype)initWithDuration:(int64_t)duration __attribute__((swift_name("init(duration:)"))) __attribute__((objc_designated_initializer));
- (int64_t)nextCount:(int32_t)count __attribute__((swift_name("next(count:)")));
- (NSString *)description __attribute__((swift_name("description()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PatienceConfig")))
@interface SharedPatienceConfig : SharedBase
- (instancetype)initWithDuration:(int64_t)duration interval:(id<SharedInterval>)interval __attribute__((swift_name("init(duration:interval:)"))) __attribute__((objc_designated_initializer));
- (int64_t)component1 __attribute__((swift_name("component1()")));
- (id<SharedInterval>)component2 __attribute__((swift_name("component2()")));
- (SharedPatienceConfig *)doCopyDuration:(int64_t)duration interval:(id<SharedInterval>)interval __attribute__((swift_name("doCopy(duration:interval:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int64_t duration __attribute__((swift_name("duration")));
@property (readonly) id<SharedInterval> interval __attribute__((swift_name("interval")));
@end;

__attribute__((swift_name("UntilListener")))
@protocol SharedUntilListener
@required
- (void)onEvalT:(id _Nullable)t __attribute__((swift_name("onEval(t:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("UntilListenerCompanion")))
@interface SharedUntilListenerCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedUntilListenerCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) id<SharedUntilListener> noop __attribute__((swift_name("noop"))) __attribute__((deprecated("UntilListener is a functional interface. Simply use a lambda")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Continually")))
@interface SharedContinually<T> : SharedBase
- (instancetype)initWithDuration:(int64_t)duration interval:(id<SharedInterval>)interval listener:(id<SharedContinuallyListener>)listener __attribute__((swift_name("init(duration:interval:listener:)"))) __attribute__((objc_designated_initializer));
- (int64_t)component1 __attribute__((swift_name("component1()")));
- (id<SharedInterval>)component2 __attribute__((swift_name("component2()")));
- (id<SharedContinuallyListener>)component3 __attribute__((swift_name("component3()")));
- (SharedContinually<T> *)doCopyDuration:(int64_t)duration interval:(id<SharedInterval>)interval listener:(id<SharedContinuallyListener>)listener __attribute__((swift_name("doCopy(duration:interval:listener:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)invokeF:(id<SharedKotlinSuspendFunction0>)f completionHandler:(void (^)(T _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("invoke(f:completionHandler:)")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int64_t duration __attribute__((swift_name("duration")));
@property (readonly) id<SharedInterval> interval __attribute__((swift_name("interval")));
@property (readonly) id<SharedContinuallyListener> listener __attribute__((swift_name("listener")));
@end;

__attribute__((swift_name("ContinuallyListener")))
@protocol SharedContinuallyListener
@required
- (void)onEvalT:(id _Nullable)t state:(SharedContinuallyState *)state __attribute__((swift_name("onEval(t:state:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContinuallyListenerCompanion")))
@interface SharedContinuallyListenerCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedContinuallyListenerCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) id<SharedContinuallyListener> noop __attribute__((swift_name("noop")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContinuallyState")))
@interface SharedContinuallyState : SharedBase
- (instancetype)initWithStart:(SharedKotlinTimeMark *)start end:(SharedKotlinTimeMark *)end times:(int32_t)times __attribute__((swift_name("init(start:end:times:)"))) __attribute__((objc_designated_initializer));
- (SharedKotlinTimeMark *)component1 __attribute__((swift_name("component1()")));
- (SharedKotlinTimeMark *)component2 __attribute__((swift_name("component2()")));
- (int32_t)component3 __attribute__((swift_name("component3()")));
- (SharedContinuallyState *)doCopyStart:(SharedKotlinTimeMark *)start end:(SharedKotlinTimeMark *)end times:(int32_t)times __attribute__((swift_name("doCopy(start:end:times:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedKotlinTimeMark *end __attribute__((swift_name("end")));
@property (readonly) SharedKotlinTimeMark *start __attribute__((swift_name("start")));
@property (readonly) int32_t times __attribute__((swift_name("times")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("EventuallyConfig")))
@interface SharedEventuallyConfig : SharedBase
- (instancetype)initWithDuration:(int64_t)duration interval:(id<SharedInterval>)interval retries:(int32_t)retries exceptionClass:(id<SharedKotlinKClass> _Nullable)exceptionClass __attribute__((swift_name("init(duration:interval:retries:exceptionClass:)"))) __attribute__((objc_designated_initializer));
- (int64_t)component1 __attribute__((swift_name("component1()")));
- (id<SharedInterval>)component2 __attribute__((swift_name("component2()")));
- (int32_t)component3 __attribute__((swift_name("component3()")));
- (id<SharedKotlinKClass> _Nullable)component4 __attribute__((swift_name("component4()")));
- (SharedEventuallyConfig *)doCopyDuration:(int64_t)duration interval:(id<SharedInterval>)interval retries:(int32_t)retries exceptionClass:(id<SharedKotlinKClass> _Nullable)exceptionClass __attribute__((swift_name("doCopy(duration:interval:retries:exceptionClass:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int64_t duration __attribute__((swift_name("duration")));
@property (readonly) id<SharedKotlinKClass> _Nullable exceptionClass __attribute__((swift_name("exceptionClass")));
@property (readonly) id<SharedInterval> interval __attribute__((swift_name("interval")));
@property (readonly) int32_t retries __attribute__((swift_name("retries")));
@end;

__attribute__((swift_name("EventuallyListener")))
@protocol SharedEventuallyListener
@required
- (void)onEvalState:(SharedEventuallyState<id> *)state __attribute__((swift_name("onEval(state:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("EventuallyState")))
@interface SharedEventuallyState<T> : SharedBase
- (instancetype)initWithResult:(T _Nullable)result start:(SharedKotlinTimeMark *)start end:(SharedKotlinTimeMark *)end iteration:(int32_t)iteration firstError:(SharedKotlinThrowable * _Nullable)firstError thisError:(SharedKotlinThrowable * _Nullable)thisError __attribute__((swift_name("init(result:start:end:iteration:firstError:thisError:)"))) __attribute__((objc_designated_initializer));
- (T _Nullable)component1 __attribute__((swift_name("component1()")));
- (SharedKotlinTimeMark *)component2 __attribute__((swift_name("component2()")));
- (SharedKotlinTimeMark *)component3 __attribute__((swift_name("component3()")));
- (int32_t)component4 __attribute__((swift_name("component4()")));
- (SharedKotlinThrowable * _Nullable)component5 __attribute__((swift_name("component5()")));
- (SharedKotlinThrowable * _Nullable)component6 __attribute__((swift_name("component6()")));
- (SharedEventuallyState<T> *)doCopyResult:(T _Nullable)result start:(SharedKotlinTimeMark *)start end:(SharedKotlinTimeMark *)end iteration:(int32_t)iteration firstError:(SharedKotlinThrowable * _Nullable)firstError thisError:(SharedKotlinThrowable * _Nullable)thisError __attribute__((swift_name("doCopy(result:start:end:iteration:firstError:thisError:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedKotlinTimeMark *end __attribute__((swift_name("end")));
@property (readonly) SharedKotlinThrowable * _Nullable firstError __attribute__((swift_name("firstError")));
@property (readonly) int32_t iteration __attribute__((swift_name("iteration")));
@property (readonly) T _Nullable result __attribute__((swift_name("result")));
@property (readonly) SharedKotlinTimeMark *start __attribute__((swift_name("start")));
@property (readonly) SharedKotlinThrowable * _Nullable thisError __attribute__((swift_name("thisError")));
@end;

__attribute__((swift_name("Eq")))
@protocol SharedEq
@required
- (SharedKotlinThrowable * _Nullable)equalsActual:(id _Nullable)actual expected:(id _Nullable)expected __attribute__((swift_name("equals(actual:expected:)")));
- (SharedKotlinThrowable * _Nullable)equalsActual:(id _Nullable)actual expected:(id _Nullable)expected strictNumberEq:(BOOL)strictNumberEq __attribute__((swift_name("equals(actual:expected:strictNumberEq:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IterableEq")))
@interface SharedIterableEq : SharedBase <SharedEq>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)iterableEq __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedIterableEq *shared __attribute__((swift_name("shared")));
- (id)asIterableIt:(id)it __attribute__((swift_name("asIterable(it:)")));
- (SharedKotlinThrowable * _Nullable)equalsActual:(id)actual expected:(id)expected strictNumberEq:(BOOL)strictNumberEq __attribute__((swift_name("equals(actual:expected:strictNumberEq:)")));
- (BOOL)isOrderedSetItem:(id)item __attribute__((swift_name("isOrderedSet(item:)")));
- (BOOL)isValidIterableIt:(id)it __attribute__((swift_name("isValidIterable(it:)")));
@property (readonly) NSString *trigger __attribute__((swift_name("trigger")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("NumberEq")))
@interface SharedNumberEq : SharedBase <SharedEq>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)numberEq __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedNumberEq *shared __attribute__((swift_name("shared")));
- (SharedKotlinThrowable * _Nullable)equalsActual:(id)actual expected:(id)expected strictNumberEq:(BOOL)strictNumberEq __attribute__((swift_name("equals(actual:expected:strictNumberEq:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SequenceEq")))
@interface SharedSequenceEq : SharedBase <SharedEq>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)sequenceEq __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedSequenceEq *shared __attribute__((swift_name("shared")));
- (SharedKotlinThrowable * _Nullable)equalsActual:(id<SharedKotlinSequence>)actual expected:(id<SharedKotlinSequence>)expected strictNumberEq:(BOOL)strictNumberEq __attribute__((swift_name("equals(actual:expected:strictNumberEq:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StringEq")))
@interface SharedStringEq : SharedBase <SharedEq>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)stringEq __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedStringEq *shared __attribute__((swift_name("shared")));
- (SharedKotlinThrowable * _Nullable)equalsActual:(NSString *)actual expected:(NSString *)expected strictNumberEq:(BOOL)strictNumberEq __attribute__((swift_name("equals(actual:expected:strictNumberEq:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ThrowableEq")))
@interface SharedThrowableEq : SharedBase <SharedEq>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)throwableEq __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedThrowableEq *shared __attribute__((swift_name("shared")));
- (SharedKotlinThrowable * _Nullable)equalsActual:(SharedKotlinThrowable *)actual expected:(SharedKotlinThrowable *)expected strictNumberEq:(BOOL)strictNumberEq __attribute__((swift_name("equals(actual:expected:strictNumberEq:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Headers1")))
@interface SharedHeaders1 : SharedBase
- (instancetype)initWithLabelA:(NSString *)labelA __attribute__((swift_name("init(labelA:)"))) __attribute__((objc_designated_initializer));
- (NSString *)component1 __attribute__((swift_name("component1()")));
- (SharedHeaders1 *)doCopyLabelA:(NSString *)labelA __attribute__((swift_name("doCopy(labelA:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
- (NSArray<NSString *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *labelA __attribute__((swift_name("labelA")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Headers10")))
@interface SharedHeaders10 : SharedBase
- (instancetype)initWithLabelA:(NSString *)labelA labelB:(NSString *)labelB labelC:(NSString *)labelC labelD:(NSString *)labelD labelE:(NSString *)labelE labelF:(NSString *)labelF labelG:(NSString *)labelG labelH:(NSString *)labelH labelI:(NSString *)labelI labelJ:(NSString *)labelJ __attribute__((swift_name("init(labelA:labelB:labelC:labelD:labelE:labelF:labelG:labelH:labelI:labelJ:)"))) __attribute__((objc_designated_initializer));
- (NSString *)component1 __attribute__((swift_name("component1()")));
- (NSString *)component10 __attribute__((swift_name("component10()")));
- (NSString *)component2 __attribute__((swift_name("component2()")));
- (NSString *)component3 __attribute__((swift_name("component3()")));
- (NSString *)component4 __attribute__((swift_name("component4()")));
- (NSString *)component5 __attribute__((swift_name("component5()")));
- (NSString *)component6 __attribute__((swift_name("component6()")));
- (NSString *)component7 __attribute__((swift_name("component7()")));
- (NSString *)component8 __attribute__((swift_name("component8()")));
- (NSString *)component9 __attribute__((swift_name("component9()")));
- (SharedHeaders10 *)doCopyLabelA:(NSString *)labelA labelB:(NSString *)labelB labelC:(NSString *)labelC labelD:(NSString *)labelD labelE:(NSString *)labelE labelF:(NSString *)labelF labelG:(NSString *)labelG labelH:(NSString *)labelH labelI:(NSString *)labelI labelJ:(NSString *)labelJ __attribute__((swift_name("doCopy(labelA:labelB:labelC:labelD:labelE:labelF:labelG:labelH:labelI:labelJ:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
- (NSArray<NSString *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *labelA __attribute__((swift_name("labelA")));
@property (readonly) NSString *labelB __attribute__((swift_name("labelB")));
@property (readonly) NSString *labelC __attribute__((swift_name("labelC")));
@property (readonly) NSString *labelD __attribute__((swift_name("labelD")));
@property (readonly) NSString *labelE __attribute__((swift_name("labelE")));
@property (readonly) NSString *labelF __attribute__((swift_name("labelF")));
@property (readonly) NSString *labelG __attribute__((swift_name("labelG")));
@property (readonly) NSString *labelH __attribute__((swift_name("labelH")));
@property (readonly) NSString *labelI __attribute__((swift_name("labelI")));
@property (readonly) NSString *labelJ __attribute__((swift_name("labelJ")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Headers11")))
@interface SharedHeaders11 : SharedBase
- (instancetype)initWithLabelA:(NSString *)labelA labelB:(NSString *)labelB labelC:(NSString *)labelC labelD:(NSString *)labelD labelE:(NSString *)labelE labelF:(NSString *)labelF labelG:(NSString *)labelG labelH:(NSString *)labelH labelI:(NSString *)labelI labelJ:(NSString *)labelJ labelK:(NSString *)labelK __attribute__((swift_name("init(labelA:labelB:labelC:labelD:labelE:labelF:labelG:labelH:labelI:labelJ:labelK:)"))) __attribute__((objc_designated_initializer));
- (NSString *)component1 __attribute__((swift_name("component1()")));
- (NSString *)component10 __attribute__((swift_name("component10()")));
- (NSString *)component11 __attribute__((swift_name("component11()")));
- (NSString *)component2 __attribute__((swift_name("component2()")));
- (NSString *)component3 __attribute__((swift_name("component3()")));
- (NSString *)component4 __attribute__((swift_name("component4()")));
- (NSString *)component5 __attribute__((swift_name("component5()")));
- (NSString *)component6 __attribute__((swift_name("component6()")));
- (NSString *)component7 __attribute__((swift_name("component7()")));
- (NSString *)component8 __attribute__((swift_name("component8()")));
- (NSString *)component9 __attribute__((swift_name("component9()")));
- (SharedHeaders11 *)doCopyLabelA:(NSString *)labelA labelB:(NSString *)labelB labelC:(NSString *)labelC labelD:(NSString *)labelD labelE:(NSString *)labelE labelF:(NSString *)labelF labelG:(NSString *)labelG labelH:(NSString *)labelH labelI:(NSString *)labelI labelJ:(NSString *)labelJ labelK:(NSString *)labelK __attribute__((swift_name("doCopy(labelA:labelB:labelC:labelD:labelE:labelF:labelG:labelH:labelI:labelJ:labelK:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
- (NSArray<NSString *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *labelA __attribute__((swift_name("labelA")));
@property (readonly) NSString *labelB __attribute__((swift_name("labelB")));
@property (readonly) NSString *labelC __attribute__((swift_name("labelC")));
@property (readonly) NSString *labelD __attribute__((swift_name("labelD")));
@property (readonly) NSString *labelE __attribute__((swift_name("labelE")));
@property (readonly) NSString *labelF __attribute__((swift_name("labelF")));
@property (readonly) NSString *labelG __attribute__((swift_name("labelG")));
@property (readonly) NSString *labelH __attribute__((swift_name("labelH")));
@property (readonly) NSString *labelI __attribute__((swift_name("labelI")));
@property (readonly) NSString *labelJ __attribute__((swift_name("labelJ")));
@property (readonly) NSString *labelK __attribute__((swift_name("labelK")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Headers12")))
@interface SharedHeaders12 : SharedBase
- (instancetype)initWithLabelA:(NSString *)labelA labelB:(NSString *)labelB labelC:(NSString *)labelC labelD:(NSString *)labelD labelE:(NSString *)labelE labelF:(NSString *)labelF labelG:(NSString *)labelG labelH:(NSString *)labelH labelI:(NSString *)labelI labelJ:(NSString *)labelJ labelK:(NSString *)labelK labelL:(NSString *)labelL __attribute__((swift_name("init(labelA:labelB:labelC:labelD:labelE:labelF:labelG:labelH:labelI:labelJ:labelK:labelL:)"))) __attribute__((objc_designated_initializer));
- (NSString *)component1 __attribute__((swift_name("component1()")));
- (NSString *)component10 __attribute__((swift_name("component10()")));
- (NSString *)component11 __attribute__((swift_name("component11()")));
- (NSString *)component12 __attribute__((swift_name("component12()")));
- (NSString *)component2 __attribute__((swift_name("component2()")));
- (NSString *)component3 __attribute__((swift_name("component3()")));
- (NSString *)component4 __attribute__((swift_name("component4()")));
- (NSString *)component5 __attribute__((swift_name("component5()")));
- (NSString *)component6 __attribute__((swift_name("component6()")));
- (NSString *)component7 __attribute__((swift_name("component7()")));
- (NSString *)component8 __attribute__((swift_name("component8()")));
- (NSString *)component9 __attribute__((swift_name("component9()")));
- (SharedHeaders12 *)doCopyLabelA:(NSString *)labelA labelB:(NSString *)labelB labelC:(NSString *)labelC labelD:(NSString *)labelD labelE:(NSString *)labelE labelF:(NSString *)labelF labelG:(NSString *)labelG labelH:(NSString *)labelH labelI:(NSString *)labelI labelJ:(NSString *)labelJ labelK:(NSString *)labelK labelL:(NSString *)labelL __attribute__((swift_name("doCopy(labelA:labelB:labelC:labelD:labelE:labelF:labelG:labelH:labelI:labelJ:labelK:labelL:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
- (NSArray<NSString *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *labelA __attribute__((swift_name("labelA")));
@property (readonly) NSString *labelB __attribute__((swift_name("labelB")));
@property (readonly) NSString *labelC __attribute__((swift_name("labelC")));
@property (readonly) NSString *labelD __attribute__((swift_name("labelD")));
@property (readonly) NSString *labelE __attribute__((swift_name("labelE")));
@property (readonly) NSString *labelF __attribute__((swift_name("labelF")));
@property (readonly) NSString *labelG __attribute__((swift_name("labelG")));
@property (readonly) NSString *labelH __attribute__((swift_name("labelH")));
@property (readonly) NSString *labelI __attribute__((swift_name("labelI")));
@property (readonly) NSString *labelJ __attribute__((swift_name("labelJ")));
@property (readonly) NSString *labelK __attribute__((swift_name("labelK")));
@property (readonly) NSString *labelL __attribute__((swift_name("labelL")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Headers13")))
@interface SharedHeaders13 : SharedBase
- (instancetype)initWithLabelA:(NSString *)labelA labelB:(NSString *)labelB labelC:(NSString *)labelC labelD:(NSString *)labelD labelE:(NSString *)labelE labelF:(NSString *)labelF labelG:(NSString *)labelG labelH:(NSString *)labelH labelI:(NSString *)labelI labelJ:(NSString *)labelJ labelK:(NSString *)labelK labelL:(NSString *)labelL labelM:(NSString *)labelM __attribute__((swift_name("init(labelA:labelB:labelC:labelD:labelE:labelF:labelG:labelH:labelI:labelJ:labelK:labelL:labelM:)"))) __attribute__((objc_designated_initializer));
- (NSString *)component1 __attribute__((swift_name("component1()")));
- (NSString *)component10 __attribute__((swift_name("component10()")));
- (NSString *)component11 __attribute__((swift_name("component11()")));
- (NSString *)component12 __attribute__((swift_name("component12()")));
- (NSString *)component13 __attribute__((swift_name("component13()")));
- (NSString *)component2 __attribute__((swift_name("component2()")));
- (NSString *)component3 __attribute__((swift_name("component3()")));
- (NSString *)component4 __attribute__((swift_name("component4()")));
- (NSString *)component5 __attribute__((swift_name("component5()")));
- (NSString *)component6 __attribute__((swift_name("component6()")));
- (NSString *)component7 __attribute__((swift_name("component7()")));
- (NSString *)component8 __attribute__((swift_name("component8()")));
- (NSString *)component9 __attribute__((swift_name("component9()")));
- (SharedHeaders13 *)doCopyLabelA:(NSString *)labelA labelB:(NSString *)labelB labelC:(NSString *)labelC labelD:(NSString *)labelD labelE:(NSString *)labelE labelF:(NSString *)labelF labelG:(NSString *)labelG labelH:(NSString *)labelH labelI:(NSString *)labelI labelJ:(NSString *)labelJ labelK:(NSString *)labelK labelL:(NSString *)labelL labelM:(NSString *)labelM __attribute__((swift_name("doCopy(labelA:labelB:labelC:labelD:labelE:labelF:labelG:labelH:labelI:labelJ:labelK:labelL:labelM:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
- (NSArray<NSString *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *labelA __attribute__((swift_name("labelA")));
@property (readonly) NSString *labelB __attribute__((swift_name("labelB")));
@property (readonly) NSString *labelC __attribute__((swift_name("labelC")));
@property (readonly) NSString *labelD __attribute__((swift_name("labelD")));
@property (readonly) NSString *labelE __attribute__((swift_name("labelE")));
@property (readonly) NSString *labelF __attribute__((swift_name("labelF")));
@property (readonly) NSString *labelG __attribute__((swift_name("labelG")));
@property (readonly) NSString *labelH __attribute__((swift_name("labelH")));
@property (readonly) NSString *labelI __attribute__((swift_name("labelI")));
@property (readonly) NSString *labelJ __attribute__((swift_name("labelJ")));
@property (readonly) NSString *labelK __attribute__((swift_name("labelK")));
@property (readonly) NSString *labelL __attribute__((swift_name("labelL")));
@property (readonly) NSString *labelM __attribute__((swift_name("labelM")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Headers14")))
@interface SharedHeaders14 : SharedBase
- (instancetype)initWithLabelA:(NSString *)labelA labelB:(NSString *)labelB labelC:(NSString *)labelC labelD:(NSString *)labelD labelE:(NSString *)labelE labelF:(NSString *)labelF labelG:(NSString *)labelG labelH:(NSString *)labelH labelI:(NSString *)labelI labelJ:(NSString *)labelJ labelK:(NSString *)labelK labelL:(NSString *)labelL labelM:(NSString *)labelM labelN:(NSString *)labelN __attribute__((swift_name("init(labelA:labelB:labelC:labelD:labelE:labelF:labelG:labelH:labelI:labelJ:labelK:labelL:labelM:labelN:)"))) __attribute__((objc_designated_initializer));
- (NSString *)component1 __attribute__((swift_name("component1()")));
- (NSString *)component10 __attribute__((swift_name("component10()")));
- (NSString *)component11 __attribute__((swift_name("component11()")));
- (NSString *)component12 __attribute__((swift_name("component12()")));
- (NSString *)component13 __attribute__((swift_name("component13()")));
- (NSString *)component14 __attribute__((swift_name("component14()")));
- (NSString *)component2 __attribute__((swift_name("component2()")));
- (NSString *)component3 __attribute__((swift_name("component3()")));
- (NSString *)component4 __attribute__((swift_name("component4()")));
- (NSString *)component5 __attribute__((swift_name("component5()")));
- (NSString *)component6 __attribute__((swift_name("component6()")));
- (NSString *)component7 __attribute__((swift_name("component7()")));
- (NSString *)component8 __attribute__((swift_name("component8()")));
- (NSString *)component9 __attribute__((swift_name("component9()")));
- (SharedHeaders14 *)doCopyLabelA:(NSString *)labelA labelB:(NSString *)labelB labelC:(NSString *)labelC labelD:(NSString *)labelD labelE:(NSString *)labelE labelF:(NSString *)labelF labelG:(NSString *)labelG labelH:(NSString *)labelH labelI:(NSString *)labelI labelJ:(NSString *)labelJ labelK:(NSString *)labelK labelL:(NSString *)labelL labelM:(NSString *)labelM labelN:(NSString *)labelN __attribute__((swift_name("doCopy(labelA:labelB:labelC:labelD:labelE:labelF:labelG:labelH:labelI:labelJ:labelK:labelL:labelM:labelN:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
- (NSArray<NSString *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *labelA __attribute__((swift_name("labelA")));
@property (readonly) NSString *labelB __attribute__((swift_name("labelB")));
@property (readonly) NSString *labelC __attribute__((swift_name("labelC")));
@property (readonly) NSString *labelD __attribute__((swift_name("labelD")));
@property (readonly) NSString *labelE __attribute__((swift_name("labelE")));
@property (readonly) NSString *labelF __attribute__((swift_name("labelF")));
@property (readonly) NSString *labelG __attribute__((swift_name("labelG")));
@property (readonly) NSString *labelH __attribute__((swift_name("labelH")));
@property (readonly) NSString *labelI __attribute__((swift_name("labelI")));
@property (readonly) NSString *labelJ __attribute__((swift_name("labelJ")));
@property (readonly) NSString *labelK __attribute__((swift_name("labelK")));
@property (readonly) NSString *labelL __attribute__((swift_name("labelL")));
@property (readonly) NSString *labelM __attribute__((swift_name("labelM")));
@property (readonly) NSString *labelN __attribute__((swift_name("labelN")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Headers15")))
@interface SharedHeaders15 : SharedBase
- (instancetype)initWithLabelA:(NSString *)labelA labelB:(NSString *)labelB labelC:(NSString *)labelC labelD:(NSString *)labelD labelE:(NSString *)labelE labelF:(NSString *)labelF labelG:(NSString *)labelG labelH:(NSString *)labelH labelI:(NSString *)labelI labelJ:(NSString *)labelJ labelK:(NSString *)labelK labelL:(NSString *)labelL labelM:(NSString *)labelM labelN:(NSString *)labelN labelO:(NSString *)labelO __attribute__((swift_name("init(labelA:labelB:labelC:labelD:labelE:labelF:labelG:labelH:labelI:labelJ:labelK:labelL:labelM:labelN:labelO:)"))) __attribute__((objc_designated_initializer));
- (NSString *)component1 __attribute__((swift_name("component1()")));
- (NSString *)component10 __attribute__((swift_name("component10()")));
- (NSString *)component11 __attribute__((swift_name("component11()")));
- (NSString *)component12 __attribute__((swift_name("component12()")));
- (NSString *)component13 __attribute__((swift_name("component13()")));
- (NSString *)component14 __attribute__((swift_name("component14()")));
- (NSString *)component15 __attribute__((swift_name("component15()")));
- (NSString *)component2 __attribute__((swift_name("component2()")));
- (NSString *)component3 __attribute__((swift_name("component3()")));
- (NSString *)component4 __attribute__((swift_name("component4()")));
- (NSString *)component5 __attribute__((swift_name("component5()")));
- (NSString *)component6 __attribute__((swift_name("component6()")));
- (NSString *)component7 __attribute__((swift_name("component7()")));
- (NSString *)component8 __attribute__((swift_name("component8()")));
- (NSString *)component9 __attribute__((swift_name("component9()")));
- (SharedHeaders15 *)doCopyLabelA:(NSString *)labelA labelB:(NSString *)labelB labelC:(NSString *)labelC labelD:(NSString *)labelD labelE:(NSString *)labelE labelF:(NSString *)labelF labelG:(NSString *)labelG labelH:(NSString *)labelH labelI:(NSString *)labelI labelJ:(NSString *)labelJ labelK:(NSString *)labelK labelL:(NSString *)labelL labelM:(NSString *)labelM labelN:(NSString *)labelN labelO:(NSString *)labelO __attribute__((swift_name("doCopy(labelA:labelB:labelC:labelD:labelE:labelF:labelG:labelH:labelI:labelJ:labelK:labelL:labelM:labelN:labelO:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
- (NSArray<NSString *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *labelA __attribute__((swift_name("labelA")));
@property (readonly) NSString *labelB __attribute__((swift_name("labelB")));
@property (readonly) NSString *labelC __attribute__((swift_name("labelC")));
@property (readonly) NSString *labelD __attribute__((swift_name("labelD")));
@property (readonly) NSString *labelE __attribute__((swift_name("labelE")));
@property (readonly) NSString *labelF __attribute__((swift_name("labelF")));
@property (readonly) NSString *labelG __attribute__((swift_name("labelG")));
@property (readonly) NSString *labelH __attribute__((swift_name("labelH")));
@property (readonly) NSString *labelI __attribute__((swift_name("labelI")));
@property (readonly) NSString *labelJ __attribute__((swift_name("labelJ")));
@property (readonly) NSString *labelK __attribute__((swift_name("labelK")));
@property (readonly) NSString *labelL __attribute__((swift_name("labelL")));
@property (readonly) NSString *labelM __attribute__((swift_name("labelM")));
@property (readonly) NSString *labelN __attribute__((swift_name("labelN")));
@property (readonly) NSString *labelO __attribute__((swift_name("labelO")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Headers16")))
@interface SharedHeaders16 : SharedBase
- (instancetype)initWithLabelA:(NSString *)labelA labelB:(NSString *)labelB labelC:(NSString *)labelC labelD:(NSString *)labelD labelE:(NSString *)labelE labelF:(NSString *)labelF labelG:(NSString *)labelG labelH:(NSString *)labelH labelI:(NSString *)labelI labelJ:(NSString *)labelJ labelK:(NSString *)labelK labelL:(NSString *)labelL labelM:(NSString *)labelM labelN:(NSString *)labelN labelO:(NSString *)labelO labelP:(NSString *)labelP __attribute__((swift_name("init(labelA:labelB:labelC:labelD:labelE:labelF:labelG:labelH:labelI:labelJ:labelK:labelL:labelM:labelN:labelO:labelP:)"))) __attribute__((objc_designated_initializer));
- (NSString *)component1 __attribute__((swift_name("component1()")));
- (NSString *)component10 __attribute__((swift_name("component10()")));
- (NSString *)component11 __attribute__((swift_name("component11()")));
- (NSString *)component12 __attribute__((swift_name("component12()")));
- (NSString *)component13 __attribute__((swift_name("component13()")));
- (NSString *)component14 __attribute__((swift_name("component14()")));
- (NSString *)component15 __attribute__((swift_name("component15()")));
- (NSString *)component16 __attribute__((swift_name("component16()")));
- (NSString *)component2 __attribute__((swift_name("component2()")));
- (NSString *)component3 __attribute__((swift_name("component3()")));
- (NSString *)component4 __attribute__((swift_name("component4()")));
- (NSString *)component5 __attribute__((swift_name("component5()")));
- (NSString *)component6 __attribute__((swift_name("component6()")));
- (NSString *)component7 __attribute__((swift_name("component7()")));
- (NSString *)component8 __attribute__((swift_name("component8()")));
- (NSString *)component9 __attribute__((swift_name("component9()")));
- (SharedHeaders16 *)doCopyLabelA:(NSString *)labelA labelB:(NSString *)labelB labelC:(NSString *)labelC labelD:(NSString *)labelD labelE:(NSString *)labelE labelF:(NSString *)labelF labelG:(NSString *)labelG labelH:(NSString *)labelH labelI:(NSString *)labelI labelJ:(NSString *)labelJ labelK:(NSString *)labelK labelL:(NSString *)labelL labelM:(NSString *)labelM labelN:(NSString *)labelN labelO:(NSString *)labelO labelP:(NSString *)labelP __attribute__((swift_name("doCopy(labelA:labelB:labelC:labelD:labelE:labelF:labelG:labelH:labelI:labelJ:labelK:labelL:labelM:labelN:labelO:labelP:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
- (NSArray<NSString *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *labelA __attribute__((swift_name("labelA")));
@property (readonly) NSString *labelB __attribute__((swift_name("labelB")));
@property (readonly) NSString *labelC __attribute__((swift_name("labelC")));
@property (readonly) NSString *labelD __attribute__((swift_name("labelD")));
@property (readonly) NSString *labelE __attribute__((swift_name("labelE")));
@property (readonly) NSString *labelF __attribute__((swift_name("labelF")));
@property (readonly) NSString *labelG __attribute__((swift_name("labelG")));
@property (readonly) NSString *labelH __attribute__((swift_name("labelH")));
@property (readonly) NSString *labelI __attribute__((swift_name("labelI")));
@property (readonly) NSString *labelJ __attribute__((swift_name("labelJ")));
@property (readonly) NSString *labelK __attribute__((swift_name("labelK")));
@property (readonly) NSString *labelL __attribute__((swift_name("labelL")));
@property (readonly) NSString *labelM __attribute__((swift_name("labelM")));
@property (readonly) NSString *labelN __attribute__((swift_name("labelN")));
@property (readonly) NSString *labelO __attribute__((swift_name("labelO")));
@property (readonly) NSString *labelP __attribute__((swift_name("labelP")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Headers17")))
@interface SharedHeaders17 : SharedBase
- (instancetype)initWithLabelA:(NSString *)labelA labelB:(NSString *)labelB labelC:(NSString *)labelC labelD:(NSString *)labelD labelE:(NSString *)labelE labelF:(NSString *)labelF labelG:(NSString *)labelG labelH:(NSString *)labelH labelI:(NSString *)labelI labelJ:(NSString *)labelJ labelK:(NSString *)labelK labelL:(NSString *)labelL labelM:(NSString *)labelM labelN:(NSString *)labelN labelO:(NSString *)labelO labelP:(NSString *)labelP labelQ:(NSString *)labelQ __attribute__((swift_name("init(labelA:labelB:labelC:labelD:labelE:labelF:labelG:labelH:labelI:labelJ:labelK:labelL:labelM:labelN:labelO:labelP:labelQ:)"))) __attribute__((objc_designated_initializer));
- (NSString *)component1 __attribute__((swift_name("component1()")));
- (NSString *)component10 __attribute__((swift_name("component10()")));
- (NSString *)component11 __attribute__((swift_name("component11()")));
- (NSString *)component12 __attribute__((swift_name("component12()")));
- (NSString *)component13 __attribute__((swift_name("component13()")));
- (NSString *)component14 __attribute__((swift_name("component14()")));
- (NSString *)component15 __attribute__((swift_name("component15()")));
- (NSString *)component16 __attribute__((swift_name("component16()")));
- (NSString *)component17 __attribute__((swift_name("component17()")));
- (NSString *)component2 __attribute__((swift_name("component2()")));
- (NSString *)component3 __attribute__((swift_name("component3()")));
- (NSString *)component4 __attribute__((swift_name("component4()")));
- (NSString *)component5 __attribute__((swift_name("component5()")));
- (NSString *)component6 __attribute__((swift_name("component6()")));
- (NSString *)component7 __attribute__((swift_name("component7()")));
- (NSString *)component8 __attribute__((swift_name("component8()")));
- (NSString *)component9 __attribute__((swift_name("component9()")));
- (SharedHeaders17 *)doCopyLabelA:(NSString *)labelA labelB:(NSString *)labelB labelC:(NSString *)labelC labelD:(NSString *)labelD labelE:(NSString *)labelE labelF:(NSString *)labelF labelG:(NSString *)labelG labelH:(NSString *)labelH labelI:(NSString *)labelI labelJ:(NSString *)labelJ labelK:(NSString *)labelK labelL:(NSString *)labelL labelM:(NSString *)labelM labelN:(NSString *)labelN labelO:(NSString *)labelO labelP:(NSString *)labelP labelQ:(NSString *)labelQ __attribute__((swift_name("doCopy(labelA:labelB:labelC:labelD:labelE:labelF:labelG:labelH:labelI:labelJ:labelK:labelL:labelM:labelN:labelO:labelP:labelQ:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
- (NSArray<NSString *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *labelA __attribute__((swift_name("labelA")));
@property (readonly) NSString *labelB __attribute__((swift_name("labelB")));
@property (readonly) NSString *labelC __attribute__((swift_name("labelC")));
@property (readonly) NSString *labelD __attribute__((swift_name("labelD")));
@property (readonly) NSString *labelE __attribute__((swift_name("labelE")));
@property (readonly) NSString *labelF __attribute__((swift_name("labelF")));
@property (readonly) NSString *labelG __attribute__((swift_name("labelG")));
@property (readonly) NSString *labelH __attribute__((swift_name("labelH")));
@property (readonly) NSString *labelI __attribute__((swift_name("labelI")));
@property (readonly) NSString *labelJ __attribute__((swift_name("labelJ")));
@property (readonly) NSString *labelK __attribute__((swift_name("labelK")));
@property (readonly) NSString *labelL __attribute__((swift_name("labelL")));
@property (readonly) NSString *labelM __attribute__((swift_name("labelM")));
@property (readonly) NSString *labelN __attribute__((swift_name("labelN")));
@property (readonly) NSString *labelO __attribute__((swift_name("labelO")));
@property (readonly) NSString *labelP __attribute__((swift_name("labelP")));
@property (readonly) NSString *labelQ __attribute__((swift_name("labelQ")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Headers18")))
@interface SharedHeaders18 : SharedBase
- (instancetype)initWithLabelA:(NSString *)labelA labelB:(NSString *)labelB labelC:(NSString *)labelC labelD:(NSString *)labelD labelE:(NSString *)labelE labelF:(NSString *)labelF labelG:(NSString *)labelG labelH:(NSString *)labelH labelI:(NSString *)labelI labelJ:(NSString *)labelJ labelK:(NSString *)labelK labelL:(NSString *)labelL labelM:(NSString *)labelM labelN:(NSString *)labelN labelO:(NSString *)labelO labelP:(NSString *)labelP labelQ:(NSString *)labelQ labelR:(NSString *)labelR __attribute__((swift_name("init(labelA:labelB:labelC:labelD:labelE:labelF:labelG:labelH:labelI:labelJ:labelK:labelL:labelM:labelN:labelO:labelP:labelQ:labelR:)"))) __attribute__((objc_designated_initializer));
- (NSString *)component1 __attribute__((swift_name("component1()")));
- (NSString *)component10 __attribute__((swift_name("component10()")));
- (NSString *)component11 __attribute__((swift_name("component11()")));
- (NSString *)component12 __attribute__((swift_name("component12()")));
- (NSString *)component13 __attribute__((swift_name("component13()")));
- (NSString *)component14 __attribute__((swift_name("component14()")));
- (NSString *)component15 __attribute__((swift_name("component15()")));
- (NSString *)component16 __attribute__((swift_name("component16()")));
- (NSString *)component17 __attribute__((swift_name("component17()")));
- (NSString *)component18 __attribute__((swift_name("component18()")));
- (NSString *)component2 __attribute__((swift_name("component2()")));
- (NSString *)component3 __attribute__((swift_name("component3()")));
- (NSString *)component4 __attribute__((swift_name("component4()")));
- (NSString *)component5 __attribute__((swift_name("component5()")));
- (NSString *)component6 __attribute__((swift_name("component6()")));
- (NSString *)component7 __attribute__((swift_name("component7()")));
- (NSString *)component8 __attribute__((swift_name("component8()")));
- (NSString *)component9 __attribute__((swift_name("component9()")));
- (SharedHeaders18 *)doCopyLabelA:(NSString *)labelA labelB:(NSString *)labelB labelC:(NSString *)labelC labelD:(NSString *)labelD labelE:(NSString *)labelE labelF:(NSString *)labelF labelG:(NSString *)labelG labelH:(NSString *)labelH labelI:(NSString *)labelI labelJ:(NSString *)labelJ labelK:(NSString *)labelK labelL:(NSString *)labelL labelM:(NSString *)labelM labelN:(NSString *)labelN labelO:(NSString *)labelO labelP:(NSString *)labelP labelQ:(NSString *)labelQ labelR:(NSString *)labelR __attribute__((swift_name("doCopy(labelA:labelB:labelC:labelD:labelE:labelF:labelG:labelH:labelI:labelJ:labelK:labelL:labelM:labelN:labelO:labelP:labelQ:labelR:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
- (NSArray<NSString *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *labelA __attribute__((swift_name("labelA")));
@property (readonly) NSString *labelB __attribute__((swift_name("labelB")));
@property (readonly) NSString *labelC __attribute__((swift_name("labelC")));
@property (readonly) NSString *labelD __attribute__((swift_name("labelD")));
@property (readonly) NSString *labelE __attribute__((swift_name("labelE")));
@property (readonly) NSString *labelF __attribute__((swift_name("labelF")));
@property (readonly) NSString *labelG __attribute__((swift_name("labelG")));
@property (readonly) NSString *labelH __attribute__((swift_name("labelH")));
@property (readonly) NSString *labelI __attribute__((swift_name("labelI")));
@property (readonly) NSString *labelJ __attribute__((swift_name("labelJ")));
@property (readonly) NSString *labelK __attribute__((swift_name("labelK")));
@property (readonly) NSString *labelL __attribute__((swift_name("labelL")));
@property (readonly) NSString *labelM __attribute__((swift_name("labelM")));
@property (readonly) NSString *labelN __attribute__((swift_name("labelN")));
@property (readonly) NSString *labelO __attribute__((swift_name("labelO")));
@property (readonly) NSString *labelP __attribute__((swift_name("labelP")));
@property (readonly) NSString *labelQ __attribute__((swift_name("labelQ")));
@property (readonly) NSString *labelR __attribute__((swift_name("labelR")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Headers19")))
@interface SharedHeaders19 : SharedBase
- (instancetype)initWithLabelA:(NSString *)labelA labelB:(NSString *)labelB labelC:(NSString *)labelC labelD:(NSString *)labelD labelE:(NSString *)labelE labelF:(NSString *)labelF labelG:(NSString *)labelG labelH:(NSString *)labelH labelI:(NSString *)labelI labelJ:(NSString *)labelJ labelK:(NSString *)labelK labelL:(NSString *)labelL labelM:(NSString *)labelM labelN:(NSString *)labelN labelO:(NSString *)labelO labelP:(NSString *)labelP labelQ:(NSString *)labelQ labelR:(NSString *)labelR labelS:(NSString *)labelS __attribute__((swift_name("init(labelA:labelB:labelC:labelD:labelE:labelF:labelG:labelH:labelI:labelJ:labelK:labelL:labelM:labelN:labelO:labelP:labelQ:labelR:labelS:)"))) __attribute__((objc_designated_initializer));
- (NSString *)component1 __attribute__((swift_name("component1()")));
- (NSString *)component10 __attribute__((swift_name("component10()")));
- (NSString *)component11 __attribute__((swift_name("component11()")));
- (NSString *)component12 __attribute__((swift_name("component12()")));
- (NSString *)component13 __attribute__((swift_name("component13()")));
- (NSString *)component14 __attribute__((swift_name("component14()")));
- (NSString *)component15 __attribute__((swift_name("component15()")));
- (NSString *)component16 __attribute__((swift_name("component16()")));
- (NSString *)component17 __attribute__((swift_name("component17()")));
- (NSString *)component18 __attribute__((swift_name("component18()")));
- (NSString *)component19 __attribute__((swift_name("component19()")));
- (NSString *)component2 __attribute__((swift_name("component2()")));
- (NSString *)component3 __attribute__((swift_name("component3()")));
- (NSString *)component4 __attribute__((swift_name("component4()")));
- (NSString *)component5 __attribute__((swift_name("component5()")));
- (NSString *)component6 __attribute__((swift_name("component6()")));
- (NSString *)component7 __attribute__((swift_name("component7()")));
- (NSString *)component8 __attribute__((swift_name("component8()")));
- (NSString *)component9 __attribute__((swift_name("component9()")));
- (SharedHeaders19 *)doCopyLabelA:(NSString *)labelA labelB:(NSString *)labelB labelC:(NSString *)labelC labelD:(NSString *)labelD labelE:(NSString *)labelE labelF:(NSString *)labelF labelG:(NSString *)labelG labelH:(NSString *)labelH labelI:(NSString *)labelI labelJ:(NSString *)labelJ labelK:(NSString *)labelK labelL:(NSString *)labelL labelM:(NSString *)labelM labelN:(NSString *)labelN labelO:(NSString *)labelO labelP:(NSString *)labelP labelQ:(NSString *)labelQ labelR:(NSString *)labelR labelS:(NSString *)labelS __attribute__((swift_name("doCopy(labelA:labelB:labelC:labelD:labelE:labelF:labelG:labelH:labelI:labelJ:labelK:labelL:labelM:labelN:labelO:labelP:labelQ:labelR:labelS:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
- (NSArray<NSString *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *labelA __attribute__((swift_name("labelA")));
@property (readonly) NSString *labelB __attribute__((swift_name("labelB")));
@property (readonly) NSString *labelC __attribute__((swift_name("labelC")));
@property (readonly) NSString *labelD __attribute__((swift_name("labelD")));
@property (readonly) NSString *labelE __attribute__((swift_name("labelE")));
@property (readonly) NSString *labelF __attribute__((swift_name("labelF")));
@property (readonly) NSString *labelG __attribute__((swift_name("labelG")));
@property (readonly) NSString *labelH __attribute__((swift_name("labelH")));
@property (readonly) NSString *labelI __attribute__((swift_name("labelI")));
@property (readonly) NSString *labelJ __attribute__((swift_name("labelJ")));
@property (readonly) NSString *labelK __attribute__((swift_name("labelK")));
@property (readonly) NSString *labelL __attribute__((swift_name("labelL")));
@property (readonly) NSString *labelM __attribute__((swift_name("labelM")));
@property (readonly) NSString *labelN __attribute__((swift_name("labelN")));
@property (readonly) NSString *labelO __attribute__((swift_name("labelO")));
@property (readonly) NSString *labelP __attribute__((swift_name("labelP")));
@property (readonly) NSString *labelQ __attribute__((swift_name("labelQ")));
@property (readonly) NSString *labelR __attribute__((swift_name("labelR")));
@property (readonly) NSString *labelS __attribute__((swift_name("labelS")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Headers2")))
@interface SharedHeaders2 : SharedBase
- (instancetype)initWithLabelA:(NSString *)labelA labelB:(NSString *)labelB __attribute__((swift_name("init(labelA:labelB:)"))) __attribute__((objc_designated_initializer));
- (NSString *)component1 __attribute__((swift_name("component1()")));
- (NSString *)component2 __attribute__((swift_name("component2()")));
- (SharedHeaders2 *)doCopyLabelA:(NSString *)labelA labelB:(NSString *)labelB __attribute__((swift_name("doCopy(labelA:labelB:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
- (NSArray<NSString *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *labelA __attribute__((swift_name("labelA")));
@property (readonly) NSString *labelB __attribute__((swift_name("labelB")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Headers20")))
@interface SharedHeaders20 : SharedBase
- (instancetype)initWithLabelA:(NSString *)labelA labelB:(NSString *)labelB labelC:(NSString *)labelC labelD:(NSString *)labelD labelE:(NSString *)labelE labelF:(NSString *)labelF labelG:(NSString *)labelG labelH:(NSString *)labelH labelI:(NSString *)labelI labelJ:(NSString *)labelJ labelK:(NSString *)labelK labelL:(NSString *)labelL labelM:(NSString *)labelM labelN:(NSString *)labelN labelO:(NSString *)labelO labelP:(NSString *)labelP labelQ:(NSString *)labelQ labelR:(NSString *)labelR labelS:(NSString *)labelS labelT:(NSString *)labelT __attribute__((swift_name("init(labelA:labelB:labelC:labelD:labelE:labelF:labelG:labelH:labelI:labelJ:labelK:labelL:labelM:labelN:labelO:labelP:labelQ:labelR:labelS:labelT:)"))) __attribute__((objc_designated_initializer));
- (NSString *)component1 __attribute__((swift_name("component1()")));
- (NSString *)component10 __attribute__((swift_name("component10()")));
- (NSString *)component11 __attribute__((swift_name("component11()")));
- (NSString *)component12 __attribute__((swift_name("component12()")));
- (NSString *)component13 __attribute__((swift_name("component13()")));
- (NSString *)component14 __attribute__((swift_name("component14()")));
- (NSString *)component15 __attribute__((swift_name("component15()")));
- (NSString *)component16 __attribute__((swift_name("component16()")));
- (NSString *)component17 __attribute__((swift_name("component17()")));
- (NSString *)component18 __attribute__((swift_name("component18()")));
- (NSString *)component19 __attribute__((swift_name("component19()")));
- (NSString *)component2 __attribute__((swift_name("component2()")));
- (NSString *)component20 __attribute__((swift_name("component20()")));
- (NSString *)component3 __attribute__((swift_name("component3()")));
- (NSString *)component4 __attribute__((swift_name("component4()")));
- (NSString *)component5 __attribute__((swift_name("component5()")));
- (NSString *)component6 __attribute__((swift_name("component6()")));
- (NSString *)component7 __attribute__((swift_name("component7()")));
- (NSString *)component8 __attribute__((swift_name("component8()")));
- (NSString *)component9 __attribute__((swift_name("component9()")));
- (SharedHeaders20 *)doCopyLabelA:(NSString *)labelA labelB:(NSString *)labelB labelC:(NSString *)labelC labelD:(NSString *)labelD labelE:(NSString *)labelE labelF:(NSString *)labelF labelG:(NSString *)labelG labelH:(NSString *)labelH labelI:(NSString *)labelI labelJ:(NSString *)labelJ labelK:(NSString *)labelK labelL:(NSString *)labelL labelM:(NSString *)labelM labelN:(NSString *)labelN labelO:(NSString *)labelO labelP:(NSString *)labelP labelQ:(NSString *)labelQ labelR:(NSString *)labelR labelS:(NSString *)labelS labelT:(NSString *)labelT __attribute__((swift_name("doCopy(labelA:labelB:labelC:labelD:labelE:labelF:labelG:labelH:labelI:labelJ:labelK:labelL:labelM:labelN:labelO:labelP:labelQ:labelR:labelS:labelT:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
- (NSArray<NSString *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *labelA __attribute__((swift_name("labelA")));
@property (readonly) NSString *labelB __attribute__((swift_name("labelB")));
@property (readonly) NSString *labelC __attribute__((swift_name("labelC")));
@property (readonly) NSString *labelD __attribute__((swift_name("labelD")));
@property (readonly) NSString *labelE __attribute__((swift_name("labelE")));
@property (readonly) NSString *labelF __attribute__((swift_name("labelF")));
@property (readonly) NSString *labelG __attribute__((swift_name("labelG")));
@property (readonly) NSString *labelH __attribute__((swift_name("labelH")));
@property (readonly) NSString *labelI __attribute__((swift_name("labelI")));
@property (readonly) NSString *labelJ __attribute__((swift_name("labelJ")));
@property (readonly) NSString *labelK __attribute__((swift_name("labelK")));
@property (readonly) NSString *labelL __attribute__((swift_name("labelL")));
@property (readonly) NSString *labelM __attribute__((swift_name("labelM")));
@property (readonly) NSString *labelN __attribute__((swift_name("labelN")));
@property (readonly) NSString *labelO __attribute__((swift_name("labelO")));
@property (readonly) NSString *labelP __attribute__((swift_name("labelP")));
@property (readonly) NSString *labelQ __attribute__((swift_name("labelQ")));
@property (readonly) NSString *labelR __attribute__((swift_name("labelR")));
@property (readonly) NSString *labelS __attribute__((swift_name("labelS")));
@property (readonly) NSString *labelT __attribute__((swift_name("labelT")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Headers21")))
@interface SharedHeaders21 : SharedBase
- (instancetype)initWithLabelA:(NSString *)labelA labelB:(NSString *)labelB labelC:(NSString *)labelC labelD:(NSString *)labelD labelE:(NSString *)labelE labelF:(NSString *)labelF labelG:(NSString *)labelG labelH:(NSString *)labelH labelI:(NSString *)labelI labelJ:(NSString *)labelJ labelK:(NSString *)labelK labelL:(NSString *)labelL labelM:(NSString *)labelM labelN:(NSString *)labelN labelO:(NSString *)labelO labelP:(NSString *)labelP labelQ:(NSString *)labelQ labelR:(NSString *)labelR labelS:(NSString *)labelS labelT:(NSString *)labelT labelU:(NSString *)labelU __attribute__((swift_name("init(labelA:labelB:labelC:labelD:labelE:labelF:labelG:labelH:labelI:labelJ:labelK:labelL:labelM:labelN:labelO:labelP:labelQ:labelR:labelS:labelT:labelU:)"))) __attribute__((objc_designated_initializer));
- (NSString *)component1 __attribute__((swift_name("component1()")));
- (NSString *)component10 __attribute__((swift_name("component10()")));
- (NSString *)component11 __attribute__((swift_name("component11()")));
- (NSString *)component12 __attribute__((swift_name("component12()")));
- (NSString *)component13 __attribute__((swift_name("component13()")));
- (NSString *)component14 __attribute__((swift_name("component14()")));
- (NSString *)component15 __attribute__((swift_name("component15()")));
- (NSString *)component16 __attribute__((swift_name("component16()")));
- (NSString *)component17 __attribute__((swift_name("component17()")));
- (NSString *)component18 __attribute__((swift_name("component18()")));
- (NSString *)component19 __attribute__((swift_name("component19()")));
- (NSString *)component2 __attribute__((swift_name("component2()")));
- (NSString *)component20 __attribute__((swift_name("component20()")));
- (NSString *)component21 __attribute__((swift_name("component21()")));
- (NSString *)component3 __attribute__((swift_name("component3()")));
- (NSString *)component4 __attribute__((swift_name("component4()")));
- (NSString *)component5 __attribute__((swift_name("component5()")));
- (NSString *)component6 __attribute__((swift_name("component6()")));
- (NSString *)component7 __attribute__((swift_name("component7()")));
- (NSString *)component8 __attribute__((swift_name("component8()")));
- (NSString *)component9 __attribute__((swift_name("component9()")));
- (SharedHeaders21 *)doCopyLabelA:(NSString *)labelA labelB:(NSString *)labelB labelC:(NSString *)labelC labelD:(NSString *)labelD labelE:(NSString *)labelE labelF:(NSString *)labelF labelG:(NSString *)labelG labelH:(NSString *)labelH labelI:(NSString *)labelI labelJ:(NSString *)labelJ labelK:(NSString *)labelK labelL:(NSString *)labelL labelM:(NSString *)labelM labelN:(NSString *)labelN labelO:(NSString *)labelO labelP:(NSString *)labelP labelQ:(NSString *)labelQ labelR:(NSString *)labelR labelS:(NSString *)labelS labelT:(NSString *)labelT labelU:(NSString *)labelU __attribute__((swift_name("doCopy(labelA:labelB:labelC:labelD:labelE:labelF:labelG:labelH:labelI:labelJ:labelK:labelL:labelM:labelN:labelO:labelP:labelQ:labelR:labelS:labelT:labelU:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
- (NSArray<NSString *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *labelA __attribute__((swift_name("labelA")));
@property (readonly) NSString *labelB __attribute__((swift_name("labelB")));
@property (readonly) NSString *labelC __attribute__((swift_name("labelC")));
@property (readonly) NSString *labelD __attribute__((swift_name("labelD")));
@property (readonly) NSString *labelE __attribute__((swift_name("labelE")));
@property (readonly) NSString *labelF __attribute__((swift_name("labelF")));
@property (readonly) NSString *labelG __attribute__((swift_name("labelG")));
@property (readonly) NSString *labelH __attribute__((swift_name("labelH")));
@property (readonly) NSString *labelI __attribute__((swift_name("labelI")));
@property (readonly) NSString *labelJ __attribute__((swift_name("labelJ")));
@property (readonly) NSString *labelK __attribute__((swift_name("labelK")));
@property (readonly) NSString *labelL __attribute__((swift_name("labelL")));
@property (readonly) NSString *labelM __attribute__((swift_name("labelM")));
@property (readonly) NSString *labelN __attribute__((swift_name("labelN")));
@property (readonly) NSString *labelO __attribute__((swift_name("labelO")));
@property (readonly) NSString *labelP __attribute__((swift_name("labelP")));
@property (readonly) NSString *labelQ __attribute__((swift_name("labelQ")));
@property (readonly) NSString *labelR __attribute__((swift_name("labelR")));
@property (readonly) NSString *labelS __attribute__((swift_name("labelS")));
@property (readonly) NSString *labelT __attribute__((swift_name("labelT")));
@property (readonly) NSString *labelU __attribute__((swift_name("labelU")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Headers22")))
@interface SharedHeaders22 : SharedBase
- (instancetype)initWithLabelA:(NSString *)labelA labelB:(NSString *)labelB labelC:(NSString *)labelC labelD:(NSString *)labelD labelE:(NSString *)labelE labelF:(NSString *)labelF labelG:(NSString *)labelG labelH:(NSString *)labelH labelI:(NSString *)labelI labelJ:(NSString *)labelJ labelK:(NSString *)labelK labelL:(NSString *)labelL labelM:(NSString *)labelM labelN:(NSString *)labelN labelO:(NSString *)labelO labelP:(NSString *)labelP labelQ:(NSString *)labelQ labelR:(NSString *)labelR labelS:(NSString *)labelS labelT:(NSString *)labelT labelU:(NSString *)labelU labelV:(NSString *)labelV __attribute__((swift_name("init(labelA:labelB:labelC:labelD:labelE:labelF:labelG:labelH:labelI:labelJ:labelK:labelL:labelM:labelN:labelO:labelP:labelQ:labelR:labelS:labelT:labelU:labelV:)"))) __attribute__((objc_designated_initializer));
- (NSString *)component1 __attribute__((swift_name("component1()")));
- (NSString *)component10 __attribute__((swift_name("component10()")));
- (NSString *)component11 __attribute__((swift_name("component11()")));
- (NSString *)component12 __attribute__((swift_name("component12()")));
- (NSString *)component13 __attribute__((swift_name("component13()")));
- (NSString *)component14 __attribute__((swift_name("component14()")));
- (NSString *)component15 __attribute__((swift_name("component15()")));
- (NSString *)component16 __attribute__((swift_name("component16()")));
- (NSString *)component17 __attribute__((swift_name("component17()")));
- (NSString *)component18 __attribute__((swift_name("component18()")));
- (NSString *)component19 __attribute__((swift_name("component19()")));
- (NSString *)component2 __attribute__((swift_name("component2()")));
- (NSString *)component20 __attribute__((swift_name("component20()")));
- (NSString *)component21 __attribute__((swift_name("component21()")));
- (NSString *)component22 __attribute__((swift_name("component22()")));
- (NSString *)component3 __attribute__((swift_name("component3()")));
- (NSString *)component4 __attribute__((swift_name("component4()")));
- (NSString *)component5 __attribute__((swift_name("component5()")));
- (NSString *)component6 __attribute__((swift_name("component6()")));
- (NSString *)component7 __attribute__((swift_name("component7()")));
- (NSString *)component8 __attribute__((swift_name("component8()")));
- (NSString *)component9 __attribute__((swift_name("component9()")));
- (SharedHeaders22 *)doCopyLabelA:(NSString *)labelA labelB:(NSString *)labelB labelC:(NSString *)labelC labelD:(NSString *)labelD labelE:(NSString *)labelE labelF:(NSString *)labelF labelG:(NSString *)labelG labelH:(NSString *)labelH labelI:(NSString *)labelI labelJ:(NSString *)labelJ labelK:(NSString *)labelK labelL:(NSString *)labelL labelM:(NSString *)labelM labelN:(NSString *)labelN labelO:(NSString *)labelO labelP:(NSString *)labelP labelQ:(NSString *)labelQ labelR:(NSString *)labelR labelS:(NSString *)labelS labelT:(NSString *)labelT labelU:(NSString *)labelU labelV:(NSString *)labelV __attribute__((swift_name("doCopy(labelA:labelB:labelC:labelD:labelE:labelF:labelG:labelH:labelI:labelJ:labelK:labelL:labelM:labelN:labelO:labelP:labelQ:labelR:labelS:labelT:labelU:labelV:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
- (NSArray<NSString *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *labelA __attribute__((swift_name("labelA")));
@property (readonly) NSString *labelB __attribute__((swift_name("labelB")));
@property (readonly) NSString *labelC __attribute__((swift_name("labelC")));
@property (readonly) NSString *labelD __attribute__((swift_name("labelD")));
@property (readonly) NSString *labelE __attribute__((swift_name("labelE")));
@property (readonly) NSString *labelF __attribute__((swift_name("labelF")));
@property (readonly) NSString *labelG __attribute__((swift_name("labelG")));
@property (readonly) NSString *labelH __attribute__((swift_name("labelH")));
@property (readonly) NSString *labelI __attribute__((swift_name("labelI")));
@property (readonly) NSString *labelJ __attribute__((swift_name("labelJ")));
@property (readonly) NSString *labelK __attribute__((swift_name("labelK")));
@property (readonly) NSString *labelL __attribute__((swift_name("labelL")));
@property (readonly) NSString *labelM __attribute__((swift_name("labelM")));
@property (readonly) NSString *labelN __attribute__((swift_name("labelN")));
@property (readonly) NSString *labelO __attribute__((swift_name("labelO")));
@property (readonly) NSString *labelP __attribute__((swift_name("labelP")));
@property (readonly) NSString *labelQ __attribute__((swift_name("labelQ")));
@property (readonly) NSString *labelR __attribute__((swift_name("labelR")));
@property (readonly) NSString *labelS __attribute__((swift_name("labelS")));
@property (readonly) NSString *labelT __attribute__((swift_name("labelT")));
@property (readonly) NSString *labelU __attribute__((swift_name("labelU")));
@property (readonly) NSString *labelV __attribute__((swift_name("labelV")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Headers3")))
@interface SharedHeaders3 : SharedBase
- (instancetype)initWithLabelA:(NSString *)labelA labelB:(NSString *)labelB labelC:(NSString *)labelC __attribute__((swift_name("init(labelA:labelB:labelC:)"))) __attribute__((objc_designated_initializer));
- (NSString *)component1 __attribute__((swift_name("component1()")));
- (NSString *)component2 __attribute__((swift_name("component2()")));
- (NSString *)component3 __attribute__((swift_name("component3()")));
- (SharedHeaders3 *)doCopyLabelA:(NSString *)labelA labelB:(NSString *)labelB labelC:(NSString *)labelC __attribute__((swift_name("doCopy(labelA:labelB:labelC:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
- (NSArray<NSString *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *labelA __attribute__((swift_name("labelA")));
@property (readonly) NSString *labelB __attribute__((swift_name("labelB")));
@property (readonly) NSString *labelC __attribute__((swift_name("labelC")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Headers4")))
@interface SharedHeaders4 : SharedBase
- (instancetype)initWithLabelA:(NSString *)labelA labelB:(NSString *)labelB labelC:(NSString *)labelC labelD:(NSString *)labelD __attribute__((swift_name("init(labelA:labelB:labelC:labelD:)"))) __attribute__((objc_designated_initializer));
- (NSString *)component1 __attribute__((swift_name("component1()")));
- (NSString *)component2 __attribute__((swift_name("component2()")));
- (NSString *)component3 __attribute__((swift_name("component3()")));
- (NSString *)component4 __attribute__((swift_name("component4()")));
- (SharedHeaders4 *)doCopyLabelA:(NSString *)labelA labelB:(NSString *)labelB labelC:(NSString *)labelC labelD:(NSString *)labelD __attribute__((swift_name("doCopy(labelA:labelB:labelC:labelD:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
- (NSArray<NSString *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *labelA __attribute__((swift_name("labelA")));
@property (readonly) NSString *labelB __attribute__((swift_name("labelB")));
@property (readonly) NSString *labelC __attribute__((swift_name("labelC")));
@property (readonly) NSString *labelD __attribute__((swift_name("labelD")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Headers5")))
@interface SharedHeaders5 : SharedBase
- (instancetype)initWithLabelA:(NSString *)labelA labelB:(NSString *)labelB labelC:(NSString *)labelC labelD:(NSString *)labelD labelE:(NSString *)labelE __attribute__((swift_name("init(labelA:labelB:labelC:labelD:labelE:)"))) __attribute__((objc_designated_initializer));
- (NSString *)component1 __attribute__((swift_name("component1()")));
- (NSString *)component2 __attribute__((swift_name("component2()")));
- (NSString *)component3 __attribute__((swift_name("component3()")));
- (NSString *)component4 __attribute__((swift_name("component4()")));
- (NSString *)component5 __attribute__((swift_name("component5()")));
- (SharedHeaders5 *)doCopyLabelA:(NSString *)labelA labelB:(NSString *)labelB labelC:(NSString *)labelC labelD:(NSString *)labelD labelE:(NSString *)labelE __attribute__((swift_name("doCopy(labelA:labelB:labelC:labelD:labelE:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
- (NSArray<NSString *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *labelA __attribute__((swift_name("labelA")));
@property (readonly) NSString *labelB __attribute__((swift_name("labelB")));
@property (readonly) NSString *labelC __attribute__((swift_name("labelC")));
@property (readonly) NSString *labelD __attribute__((swift_name("labelD")));
@property (readonly) NSString *labelE __attribute__((swift_name("labelE")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Headers6")))
@interface SharedHeaders6 : SharedBase
- (instancetype)initWithLabelA:(NSString *)labelA labelB:(NSString *)labelB labelC:(NSString *)labelC labelD:(NSString *)labelD labelE:(NSString *)labelE labelF:(NSString *)labelF __attribute__((swift_name("init(labelA:labelB:labelC:labelD:labelE:labelF:)"))) __attribute__((objc_designated_initializer));
- (NSString *)component1 __attribute__((swift_name("component1()")));
- (NSString *)component2 __attribute__((swift_name("component2()")));
- (NSString *)component3 __attribute__((swift_name("component3()")));
- (NSString *)component4 __attribute__((swift_name("component4()")));
- (NSString *)component5 __attribute__((swift_name("component5()")));
- (NSString *)component6 __attribute__((swift_name("component6()")));
- (SharedHeaders6 *)doCopyLabelA:(NSString *)labelA labelB:(NSString *)labelB labelC:(NSString *)labelC labelD:(NSString *)labelD labelE:(NSString *)labelE labelF:(NSString *)labelF __attribute__((swift_name("doCopy(labelA:labelB:labelC:labelD:labelE:labelF:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
- (NSArray<NSString *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *labelA __attribute__((swift_name("labelA")));
@property (readonly) NSString *labelB __attribute__((swift_name("labelB")));
@property (readonly) NSString *labelC __attribute__((swift_name("labelC")));
@property (readonly) NSString *labelD __attribute__((swift_name("labelD")));
@property (readonly) NSString *labelE __attribute__((swift_name("labelE")));
@property (readonly) NSString *labelF __attribute__((swift_name("labelF")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Headers7")))
@interface SharedHeaders7 : SharedBase
- (instancetype)initWithLabelA:(NSString *)labelA labelB:(NSString *)labelB labelC:(NSString *)labelC labelD:(NSString *)labelD labelE:(NSString *)labelE labelF:(NSString *)labelF labelG:(NSString *)labelG __attribute__((swift_name("init(labelA:labelB:labelC:labelD:labelE:labelF:labelG:)"))) __attribute__((objc_designated_initializer));
- (NSString *)component1 __attribute__((swift_name("component1()")));
- (NSString *)component2 __attribute__((swift_name("component2()")));
- (NSString *)component3 __attribute__((swift_name("component3()")));
- (NSString *)component4 __attribute__((swift_name("component4()")));
- (NSString *)component5 __attribute__((swift_name("component5()")));
- (NSString *)component6 __attribute__((swift_name("component6()")));
- (NSString *)component7 __attribute__((swift_name("component7()")));
- (SharedHeaders7 *)doCopyLabelA:(NSString *)labelA labelB:(NSString *)labelB labelC:(NSString *)labelC labelD:(NSString *)labelD labelE:(NSString *)labelE labelF:(NSString *)labelF labelG:(NSString *)labelG __attribute__((swift_name("doCopy(labelA:labelB:labelC:labelD:labelE:labelF:labelG:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
- (NSArray<NSString *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *labelA __attribute__((swift_name("labelA")));
@property (readonly) NSString *labelB __attribute__((swift_name("labelB")));
@property (readonly) NSString *labelC __attribute__((swift_name("labelC")));
@property (readonly) NSString *labelD __attribute__((swift_name("labelD")));
@property (readonly) NSString *labelE __attribute__((swift_name("labelE")));
@property (readonly) NSString *labelF __attribute__((swift_name("labelF")));
@property (readonly) NSString *labelG __attribute__((swift_name("labelG")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Headers8")))
@interface SharedHeaders8 : SharedBase
- (instancetype)initWithLabelA:(NSString *)labelA labelB:(NSString *)labelB labelC:(NSString *)labelC labelD:(NSString *)labelD labelE:(NSString *)labelE labelF:(NSString *)labelF labelG:(NSString *)labelG labelH:(NSString *)labelH __attribute__((swift_name("init(labelA:labelB:labelC:labelD:labelE:labelF:labelG:labelH:)"))) __attribute__((objc_designated_initializer));
- (NSString *)component1 __attribute__((swift_name("component1()")));
- (NSString *)component2 __attribute__((swift_name("component2()")));
- (NSString *)component3 __attribute__((swift_name("component3()")));
- (NSString *)component4 __attribute__((swift_name("component4()")));
- (NSString *)component5 __attribute__((swift_name("component5()")));
- (NSString *)component6 __attribute__((swift_name("component6()")));
- (NSString *)component7 __attribute__((swift_name("component7()")));
- (NSString *)component8 __attribute__((swift_name("component8()")));
- (SharedHeaders8 *)doCopyLabelA:(NSString *)labelA labelB:(NSString *)labelB labelC:(NSString *)labelC labelD:(NSString *)labelD labelE:(NSString *)labelE labelF:(NSString *)labelF labelG:(NSString *)labelG labelH:(NSString *)labelH __attribute__((swift_name("doCopy(labelA:labelB:labelC:labelD:labelE:labelF:labelG:labelH:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
- (NSArray<NSString *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *labelA __attribute__((swift_name("labelA")));
@property (readonly) NSString *labelB __attribute__((swift_name("labelB")));
@property (readonly) NSString *labelC __attribute__((swift_name("labelC")));
@property (readonly) NSString *labelD __attribute__((swift_name("labelD")));
@property (readonly) NSString *labelE __attribute__((swift_name("labelE")));
@property (readonly) NSString *labelF __attribute__((swift_name("labelF")));
@property (readonly) NSString *labelG __attribute__((swift_name("labelG")));
@property (readonly) NSString *labelH __attribute__((swift_name("labelH")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Headers9")))
@interface SharedHeaders9 : SharedBase
- (instancetype)initWithLabelA:(NSString *)labelA labelB:(NSString *)labelB labelC:(NSString *)labelC labelD:(NSString *)labelD labelE:(NSString *)labelE labelF:(NSString *)labelF labelG:(NSString *)labelG labelH:(NSString *)labelH labelI:(NSString *)labelI __attribute__((swift_name("init(labelA:labelB:labelC:labelD:labelE:labelF:labelG:labelH:labelI:)"))) __attribute__((objc_designated_initializer));
- (NSString *)component1 __attribute__((swift_name("component1()")));
- (NSString *)component2 __attribute__((swift_name("component2()")));
- (NSString *)component3 __attribute__((swift_name("component3()")));
- (NSString *)component4 __attribute__((swift_name("component4()")));
- (NSString *)component5 __attribute__((swift_name("component5()")));
- (NSString *)component6 __attribute__((swift_name("component6()")));
- (NSString *)component7 __attribute__((swift_name("component7()")));
- (NSString *)component8 __attribute__((swift_name("component8()")));
- (NSString *)component9 __attribute__((swift_name("component9()")));
- (SharedHeaders9 *)doCopyLabelA:(NSString *)labelA labelB:(NSString *)labelB labelC:(NSString *)labelC labelD:(NSString *)labelD labelE:(NSString *)labelE labelF:(NSString *)labelF labelG:(NSString *)labelG labelH:(NSString *)labelH labelI:(NSString *)labelI __attribute__((swift_name("doCopy(labelA:labelB:labelC:labelD:labelE:labelF:labelG:labelH:labelI:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
- (NSArray<NSString *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *labelA __attribute__((swift_name("labelA")));
@property (readonly) NSString *labelB __attribute__((swift_name("labelB")));
@property (readonly) NSString *labelC __attribute__((swift_name("labelC")));
@property (readonly) NSString *labelD __attribute__((swift_name("labelD")));
@property (readonly) NSString *labelE __attribute__((swift_name("labelE")));
@property (readonly) NSString *labelF __attribute__((swift_name("labelF")));
@property (readonly) NSString *labelG __attribute__((swift_name("labelG")));
@property (readonly) NSString *labelH __attribute__((swift_name("labelH")));
@property (readonly) NSString *labelI __attribute__((swift_name("labelI")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Row1")))
@interface SharedRow1<__covariant A> : SharedBase
- (instancetype)initWithA:(A _Nullable)a __attribute__((swift_name("init(a:)"))) __attribute__((objc_designated_initializer));
- (A _Nullable)component1 __attribute__((swift_name("component1()")));
- (SharedRow1<A> *)doCopyA:(A _Nullable)a __attribute__((swift_name("doCopy(a:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
- (NSArray<id> *)values __attribute__((swift_name("values()")));
@property (readonly) A _Nullable a __attribute__((swift_name("a")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Row10")))
@interface SharedRow10<__covariant A, __covariant B, __covariant C, __covariant D, __covariant E, __covariant F, __covariant G, __covariant H, __covariant I, __covariant J> : SharedBase
- (instancetype)initWithA:(A _Nullable)a b:(B _Nullable)b c:(C _Nullable)c d:(D _Nullable)d e:(E _Nullable)e f:(F _Nullable)f g:(G _Nullable)g h:(H _Nullable)h i:(I _Nullable)i j:(J _Nullable)j __attribute__((swift_name("init(a:b:c:d:e:f:g:h:i:j:)"))) __attribute__((objc_designated_initializer));
- (A _Nullable)component1 __attribute__((swift_name("component1()")));
- (J _Nullable)component10 __attribute__((swift_name("component10()")));
- (B _Nullable)component2 __attribute__((swift_name("component2()")));
- (C _Nullable)component3 __attribute__((swift_name("component3()")));
- (D _Nullable)component4 __attribute__((swift_name("component4()")));
- (E _Nullable)component5 __attribute__((swift_name("component5()")));
- (F _Nullable)component6 __attribute__((swift_name("component6()")));
- (G _Nullable)component7 __attribute__((swift_name("component7()")));
- (H _Nullable)component8 __attribute__((swift_name("component8()")));
- (I _Nullable)component9 __attribute__((swift_name("component9()")));
- (SharedRow10<A, B, C, D, E, F, G, H, I, J> *)doCopyA:(A _Nullable)a b:(B _Nullable)b c:(C _Nullable)c d:(D _Nullable)d e:(E _Nullable)e f:(F _Nullable)f g:(G _Nullable)g h:(H _Nullable)h i:(I _Nullable)i j:(J _Nullable)j __attribute__((swift_name("doCopy(a:b:c:d:e:f:g:h:i:j:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
- (NSArray<id> *)values __attribute__((swift_name("values()")));
@property (readonly) A _Nullable a __attribute__((swift_name("a")));
@property (readonly) B _Nullable b __attribute__((swift_name("b")));
@property (readonly) C _Nullable c __attribute__((swift_name("c")));
@property (readonly) D _Nullable d __attribute__((swift_name("d")));
@property (readonly) E _Nullable e __attribute__((swift_name("e")));
@property (readonly) F _Nullable f __attribute__((swift_name("f")));
@property (readonly) G _Nullable g __attribute__((swift_name("g")));
@property (readonly) H _Nullable h __attribute__((swift_name("h")));
@property (readonly) I _Nullable i __attribute__((swift_name("i")));
@property (readonly) J _Nullable j __attribute__((swift_name("j")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Row11")))
@interface SharedRow11<__covariant A, __covariant B, __covariant C, __covariant D, __covariant E, __covariant F, __covariant G, __covariant H, __covariant I, __covariant J, __covariant K> : SharedBase
- (instancetype)initWithA:(A _Nullable)a b:(B _Nullable)b c:(C _Nullable)c d:(D _Nullable)d e:(E _Nullable)e f:(F _Nullable)f g:(G _Nullable)g h:(H _Nullable)h i:(I _Nullable)i j:(J _Nullable)j k:(K _Nullable)k __attribute__((swift_name("init(a:b:c:d:e:f:g:h:i:j:k:)"))) __attribute__((objc_designated_initializer));
- (A _Nullable)component1 __attribute__((swift_name("component1()")));
- (J _Nullable)component10 __attribute__((swift_name("component10()")));
- (K _Nullable)component11 __attribute__((swift_name("component11()")));
- (B _Nullable)component2 __attribute__((swift_name("component2()")));
- (C _Nullable)component3 __attribute__((swift_name("component3()")));
- (D _Nullable)component4 __attribute__((swift_name("component4()")));
- (E _Nullable)component5 __attribute__((swift_name("component5()")));
- (F _Nullable)component6 __attribute__((swift_name("component6()")));
- (G _Nullable)component7 __attribute__((swift_name("component7()")));
- (H _Nullable)component8 __attribute__((swift_name("component8()")));
- (I _Nullable)component9 __attribute__((swift_name("component9()")));
- (SharedRow11<A, B, C, D, E, F, G, H, I, J, K> *)doCopyA:(A _Nullable)a b:(B _Nullable)b c:(C _Nullable)c d:(D _Nullable)d e:(E _Nullable)e f:(F _Nullable)f g:(G _Nullable)g h:(H _Nullable)h i:(I _Nullable)i j:(J _Nullable)j k:(K _Nullable)k __attribute__((swift_name("doCopy(a:b:c:d:e:f:g:h:i:j:k:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
- (NSArray<id> *)values __attribute__((swift_name("values()")));
@property (readonly) A _Nullable a __attribute__((swift_name("a")));
@property (readonly) B _Nullable b __attribute__((swift_name("b")));
@property (readonly) C _Nullable c __attribute__((swift_name("c")));
@property (readonly) D _Nullable d __attribute__((swift_name("d")));
@property (readonly) E _Nullable e __attribute__((swift_name("e")));
@property (readonly) F _Nullable f __attribute__((swift_name("f")));
@property (readonly) G _Nullable g __attribute__((swift_name("g")));
@property (readonly) H _Nullable h __attribute__((swift_name("h")));
@property (readonly) I _Nullable i __attribute__((swift_name("i")));
@property (readonly) J _Nullable j __attribute__((swift_name("j")));
@property (readonly) K _Nullable k __attribute__((swift_name("k")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Row12")))
@interface SharedRow12<__covariant A, __covariant B, __covariant C, __covariant D, __covariant E, __covariant F, __covariant G, __covariant H, __covariant I, __covariant J, __covariant K, __covariant L> : SharedBase
- (instancetype)initWithA:(A _Nullable)a b:(B _Nullable)b c:(C _Nullable)c d:(D _Nullable)d e:(E _Nullable)e f:(F _Nullable)f g:(G _Nullable)g h:(H _Nullable)h i:(I _Nullable)i j:(J _Nullable)j k:(K _Nullable)k l:(L _Nullable)l __attribute__((swift_name("init(a:b:c:d:e:f:g:h:i:j:k:l:)"))) __attribute__((objc_designated_initializer));
- (A _Nullable)component1 __attribute__((swift_name("component1()")));
- (J _Nullable)component10 __attribute__((swift_name("component10()")));
- (K _Nullable)component11 __attribute__((swift_name("component11()")));
- (L _Nullable)component12 __attribute__((swift_name("component12()")));
- (B _Nullable)component2 __attribute__((swift_name("component2()")));
- (C _Nullable)component3 __attribute__((swift_name("component3()")));
- (D _Nullable)component4 __attribute__((swift_name("component4()")));
- (E _Nullable)component5 __attribute__((swift_name("component5()")));
- (F _Nullable)component6 __attribute__((swift_name("component6()")));
- (G _Nullable)component7 __attribute__((swift_name("component7()")));
- (H _Nullable)component8 __attribute__((swift_name("component8()")));
- (I _Nullable)component9 __attribute__((swift_name("component9()")));
- (SharedRow12<A, B, C, D, E, F, G, H, I, J, K, L> *)doCopyA:(A _Nullable)a b:(B _Nullable)b c:(C _Nullable)c d:(D _Nullable)d e:(E _Nullable)e f:(F _Nullable)f g:(G _Nullable)g h:(H _Nullable)h i:(I _Nullable)i j:(J _Nullable)j k:(K _Nullable)k l:(L _Nullable)l __attribute__((swift_name("doCopy(a:b:c:d:e:f:g:h:i:j:k:l:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
- (NSArray<id> *)values __attribute__((swift_name("values()")));
@property (readonly) A _Nullable a __attribute__((swift_name("a")));
@property (readonly) B _Nullable b __attribute__((swift_name("b")));
@property (readonly) C _Nullable c __attribute__((swift_name("c")));
@property (readonly) D _Nullable d __attribute__((swift_name("d")));
@property (readonly) E _Nullable e __attribute__((swift_name("e")));
@property (readonly) F _Nullable f __attribute__((swift_name("f")));
@property (readonly) G _Nullable g __attribute__((swift_name("g")));
@property (readonly) H _Nullable h __attribute__((swift_name("h")));
@property (readonly) I _Nullable i __attribute__((swift_name("i")));
@property (readonly) J _Nullable j __attribute__((swift_name("j")));
@property (readonly) K _Nullable k __attribute__((swift_name("k")));
@property (readonly) L _Nullable l __attribute__((swift_name("l")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Row13")))
@interface SharedRow13<__covariant A, __covariant B, __covariant C, __covariant D, __covariant E, __covariant F, __covariant G, __covariant H, __covariant I, __covariant J, __covariant K, __covariant L, __covariant M> : SharedBase
- (instancetype)initWithA:(A _Nullable)a b:(B _Nullable)b c:(C _Nullable)c d:(D _Nullable)d e:(E _Nullable)e f:(F _Nullable)f g:(G _Nullable)g h:(H _Nullable)h i:(I _Nullable)i j:(J _Nullable)j k:(K _Nullable)k l:(L _Nullable)l m:(M _Nullable)m __attribute__((swift_name("init(a:b:c:d:e:f:g:h:i:j:k:l:m:)"))) __attribute__((objc_designated_initializer));
- (A _Nullable)component1 __attribute__((swift_name("component1()")));
- (J _Nullable)component10 __attribute__((swift_name("component10()")));
- (K _Nullable)component11 __attribute__((swift_name("component11()")));
- (L _Nullable)component12 __attribute__((swift_name("component12()")));
- (M _Nullable)component13 __attribute__((swift_name("component13()")));
- (B _Nullable)component2 __attribute__((swift_name("component2()")));
- (C _Nullable)component3 __attribute__((swift_name("component3()")));
- (D _Nullable)component4 __attribute__((swift_name("component4()")));
- (E _Nullable)component5 __attribute__((swift_name("component5()")));
- (F _Nullable)component6 __attribute__((swift_name("component6()")));
- (G _Nullable)component7 __attribute__((swift_name("component7()")));
- (H _Nullable)component8 __attribute__((swift_name("component8()")));
- (I _Nullable)component9 __attribute__((swift_name("component9()")));
- (SharedRow13<A, B, C, D, E, F, G, H, I, J, K, L, M> *)doCopyA:(A _Nullable)a b:(B _Nullable)b c:(C _Nullable)c d:(D _Nullable)d e:(E _Nullable)e f:(F _Nullable)f g:(G _Nullable)g h:(H _Nullable)h i:(I _Nullable)i j:(J _Nullable)j k:(K _Nullable)k l:(L _Nullable)l m:(M _Nullable)m __attribute__((swift_name("doCopy(a:b:c:d:e:f:g:h:i:j:k:l:m:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
- (NSArray<id> *)values __attribute__((swift_name("values()")));
@property (readonly) A _Nullable a __attribute__((swift_name("a")));
@property (readonly) B _Nullable b __attribute__((swift_name("b")));
@property (readonly) C _Nullable c __attribute__((swift_name("c")));
@property (readonly) D _Nullable d __attribute__((swift_name("d")));
@property (readonly) E _Nullable e __attribute__((swift_name("e")));
@property (readonly) F _Nullable f __attribute__((swift_name("f")));
@property (readonly) G _Nullable g __attribute__((swift_name("g")));
@property (readonly) H _Nullable h __attribute__((swift_name("h")));
@property (readonly) I _Nullable i __attribute__((swift_name("i")));
@property (readonly) J _Nullable j __attribute__((swift_name("j")));
@property (readonly) K _Nullable k __attribute__((swift_name("k")));
@property (readonly) L _Nullable l __attribute__((swift_name("l")));
@property (readonly) M _Nullable m __attribute__((swift_name("m")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Row14")))
@interface SharedRow14<__covariant A, __covariant B, __covariant C, __covariant D, __covariant E, __covariant F, __covariant G, __covariant H, __covariant I, __covariant J, __covariant K, __covariant L, __covariant M, __covariant N> : SharedBase
- (instancetype)initWithA:(A _Nullable)a b:(B _Nullable)b c:(C _Nullable)c d:(D _Nullable)d e:(E _Nullable)e f:(F _Nullable)f g:(G _Nullable)g h:(H _Nullable)h i:(I _Nullable)i j:(J _Nullable)j k:(K _Nullable)k l:(L _Nullable)l m:(M _Nullable)m n:(N _Nullable)n __attribute__((swift_name("init(a:b:c:d:e:f:g:h:i:j:k:l:m:n:)"))) __attribute__((objc_designated_initializer));
- (A _Nullable)component1 __attribute__((swift_name("component1()")));
- (J _Nullable)component10 __attribute__((swift_name("component10()")));
- (K _Nullable)component11 __attribute__((swift_name("component11()")));
- (L _Nullable)component12 __attribute__((swift_name("component12()")));
- (M _Nullable)component13 __attribute__((swift_name("component13()")));
- (N _Nullable)component14 __attribute__((swift_name("component14()")));
- (B _Nullable)component2 __attribute__((swift_name("component2()")));
- (C _Nullable)component3 __attribute__((swift_name("component3()")));
- (D _Nullable)component4 __attribute__((swift_name("component4()")));
- (E _Nullable)component5 __attribute__((swift_name("component5()")));
- (F _Nullable)component6 __attribute__((swift_name("component6()")));
- (G _Nullable)component7 __attribute__((swift_name("component7()")));
- (H _Nullable)component8 __attribute__((swift_name("component8()")));
- (I _Nullable)component9 __attribute__((swift_name("component9()")));
- (SharedRow14<A, B, C, D, E, F, G, H, I, J, K, L, M, N> *)doCopyA:(A _Nullable)a b:(B _Nullable)b c:(C _Nullable)c d:(D _Nullable)d e:(E _Nullable)e f:(F _Nullable)f g:(G _Nullable)g h:(H _Nullable)h i:(I _Nullable)i j:(J _Nullable)j k:(K _Nullable)k l:(L _Nullable)l m:(M _Nullable)m n:(N _Nullable)n __attribute__((swift_name("doCopy(a:b:c:d:e:f:g:h:i:j:k:l:m:n:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
- (NSArray<id> *)values __attribute__((swift_name("values()")));
@property (readonly) A _Nullable a __attribute__((swift_name("a")));
@property (readonly) B _Nullable b __attribute__((swift_name("b")));
@property (readonly) C _Nullable c __attribute__((swift_name("c")));
@property (readonly) D _Nullable d __attribute__((swift_name("d")));
@property (readonly) E _Nullable e __attribute__((swift_name("e")));
@property (readonly) F _Nullable f __attribute__((swift_name("f")));
@property (readonly) G _Nullable g __attribute__((swift_name("g")));
@property (readonly) H _Nullable h __attribute__((swift_name("h")));
@property (readonly) I _Nullable i __attribute__((swift_name("i")));
@property (readonly) J _Nullable j __attribute__((swift_name("j")));
@property (readonly) K _Nullable k __attribute__((swift_name("k")));
@property (readonly) L _Nullable l __attribute__((swift_name("l")));
@property (readonly) M _Nullable m __attribute__((swift_name("m")));
@property (readonly) N _Nullable n __attribute__((swift_name("n")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Row15")))
@interface SharedRow15<__covariant A, __covariant B, __covariant C, __covariant D, __covariant E, __covariant F, __covariant G, __covariant H, __covariant I, __covariant J, __covariant K, __covariant L, __covariant M, __covariant N, __covariant O> : SharedBase
- (instancetype)initWithA:(A _Nullable)a b:(B _Nullable)b c:(C _Nullable)c d:(D _Nullable)d e:(E _Nullable)e f:(F _Nullable)f g:(G _Nullable)g h:(H _Nullable)h i:(I _Nullable)i j:(J _Nullable)j k:(K _Nullable)k l:(L _Nullable)l m:(M _Nullable)m n:(N _Nullable)n o:(O _Nullable)o __attribute__((swift_name("init(a:b:c:d:e:f:g:h:i:j:k:l:m:n:o:)"))) __attribute__((objc_designated_initializer));
- (A _Nullable)component1 __attribute__((swift_name("component1()")));
- (J _Nullable)component10 __attribute__((swift_name("component10()")));
- (K _Nullable)component11 __attribute__((swift_name("component11()")));
- (L _Nullable)component12 __attribute__((swift_name("component12()")));
- (M _Nullable)component13 __attribute__((swift_name("component13()")));
- (N _Nullable)component14 __attribute__((swift_name("component14()")));
- (O _Nullable)component15 __attribute__((swift_name("component15()")));
- (B _Nullable)component2 __attribute__((swift_name("component2()")));
- (C _Nullable)component3 __attribute__((swift_name("component3()")));
- (D _Nullable)component4 __attribute__((swift_name("component4()")));
- (E _Nullable)component5 __attribute__((swift_name("component5()")));
- (F _Nullable)component6 __attribute__((swift_name("component6()")));
- (G _Nullable)component7 __attribute__((swift_name("component7()")));
- (H _Nullable)component8 __attribute__((swift_name("component8()")));
- (I _Nullable)component9 __attribute__((swift_name("component9()")));
- (SharedRow15<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O> *)doCopyA:(A _Nullable)a b:(B _Nullable)b c:(C _Nullable)c d:(D _Nullable)d e:(E _Nullable)e f:(F _Nullable)f g:(G _Nullable)g h:(H _Nullable)h i:(I _Nullable)i j:(J _Nullable)j k:(K _Nullable)k l:(L _Nullable)l m:(M _Nullable)m n:(N _Nullable)n o:(O _Nullable)o __attribute__((swift_name("doCopy(a:b:c:d:e:f:g:h:i:j:k:l:m:n:o:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
- (NSArray<id> *)values __attribute__((swift_name("values()")));
@property (readonly) A _Nullable a __attribute__((swift_name("a")));
@property (readonly) B _Nullable b __attribute__((swift_name("b")));
@property (readonly) C _Nullable c __attribute__((swift_name("c")));
@property (readonly) D _Nullable d __attribute__((swift_name("d")));
@property (readonly) E _Nullable e __attribute__((swift_name("e")));
@property (readonly) F _Nullable f __attribute__((swift_name("f")));
@property (readonly) G _Nullable g __attribute__((swift_name("g")));
@property (readonly) H _Nullable h __attribute__((swift_name("h")));
@property (readonly) I _Nullable i __attribute__((swift_name("i")));
@property (readonly) J _Nullable j __attribute__((swift_name("j")));
@property (readonly) K _Nullable k __attribute__((swift_name("k")));
@property (readonly) L _Nullable l __attribute__((swift_name("l")));
@property (readonly) M _Nullable m __attribute__((swift_name("m")));
@property (readonly) N _Nullable n __attribute__((swift_name("n")));
@property (readonly) O _Nullable o __attribute__((swift_name("o")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Row16")))
@interface SharedRow16<__covariant A, __covariant B, __covariant C, __covariant D, __covariant E, __covariant F, __covariant G, __covariant H, __covariant I, __covariant J, __covariant K, __covariant L, __covariant M, __covariant N, __covariant O, __covariant P> : SharedBase
- (instancetype)initWithA:(A _Nullable)a b:(B _Nullable)b c:(C _Nullable)c d:(D _Nullable)d e:(E _Nullable)e f:(F _Nullable)f g:(G _Nullable)g h:(H _Nullable)h i:(I _Nullable)i j:(J _Nullable)j k:(K _Nullable)k l:(L _Nullable)l m:(M _Nullable)m n:(N _Nullable)n o:(O _Nullable)o p:(P _Nullable)p __attribute__((swift_name("init(a:b:c:d:e:f:g:h:i:j:k:l:m:n:o:p:)"))) __attribute__((objc_designated_initializer));
- (A _Nullable)component1 __attribute__((swift_name("component1()")));
- (J _Nullable)component10 __attribute__((swift_name("component10()")));
- (K _Nullable)component11 __attribute__((swift_name("component11()")));
- (L _Nullable)component12 __attribute__((swift_name("component12()")));
- (M _Nullable)component13 __attribute__((swift_name("component13()")));
- (N _Nullable)component14 __attribute__((swift_name("component14()")));
- (O _Nullable)component15 __attribute__((swift_name("component15()")));
- (P _Nullable)component16 __attribute__((swift_name("component16()")));
- (B _Nullable)component2 __attribute__((swift_name("component2()")));
- (C _Nullable)component3 __attribute__((swift_name("component3()")));
- (D _Nullable)component4 __attribute__((swift_name("component4()")));
- (E _Nullable)component5 __attribute__((swift_name("component5()")));
- (F _Nullable)component6 __attribute__((swift_name("component6()")));
- (G _Nullable)component7 __attribute__((swift_name("component7()")));
- (H _Nullable)component8 __attribute__((swift_name("component8()")));
- (I _Nullable)component9 __attribute__((swift_name("component9()")));
- (SharedRow16<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P> *)doCopyA:(A _Nullable)a b:(B _Nullable)b c:(C _Nullable)c d:(D _Nullable)d e:(E _Nullable)e f:(F _Nullable)f g:(G _Nullable)g h:(H _Nullable)h i:(I _Nullable)i j:(J _Nullable)j k:(K _Nullable)k l:(L _Nullable)l m:(M _Nullable)m n:(N _Nullable)n o:(O _Nullable)o p:(P _Nullable)p __attribute__((swift_name("doCopy(a:b:c:d:e:f:g:h:i:j:k:l:m:n:o:p:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
- (NSArray<id> *)values __attribute__((swift_name("values()")));
@property (readonly) A _Nullable a __attribute__((swift_name("a")));
@property (readonly) B _Nullable b __attribute__((swift_name("b")));
@property (readonly) C _Nullable c __attribute__((swift_name("c")));
@property (readonly) D _Nullable d __attribute__((swift_name("d")));
@property (readonly) E _Nullable e __attribute__((swift_name("e")));
@property (readonly) F _Nullable f __attribute__((swift_name("f")));
@property (readonly) G _Nullable g __attribute__((swift_name("g")));
@property (readonly) H _Nullable h __attribute__((swift_name("h")));
@property (readonly) I _Nullable i __attribute__((swift_name("i")));
@property (readonly) J _Nullable j __attribute__((swift_name("j")));
@property (readonly) K _Nullable k __attribute__((swift_name("k")));
@property (readonly) L _Nullable l __attribute__((swift_name("l")));
@property (readonly) M _Nullable m __attribute__((swift_name("m")));
@property (readonly) N _Nullable n __attribute__((swift_name("n")));
@property (readonly) O _Nullable o __attribute__((swift_name("o")));
@property (readonly) P _Nullable p __attribute__((swift_name("p")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Row17")))
@interface SharedRow17<__covariant A, __covariant B, __covariant C, __covariant D, __covariant E, __covariant F, __covariant G, __covariant H, __covariant I, __covariant J, __covariant K, __covariant L, __covariant M, __covariant N, __covariant O, __covariant P, __covariant Q> : SharedBase
- (instancetype)initWithA:(A _Nullable)a b:(B _Nullable)b c:(C _Nullable)c d:(D _Nullable)d e:(E _Nullable)e f:(F _Nullable)f g:(G _Nullable)g h:(H _Nullable)h i:(I _Nullable)i j:(J _Nullable)j k:(K _Nullable)k l:(L _Nullable)l m:(M _Nullable)m n:(N _Nullable)n o:(O _Nullable)o p:(P _Nullable)p q:(Q _Nullable)q __attribute__((swift_name("init(a:b:c:d:e:f:g:h:i:j:k:l:m:n:o:p:q:)"))) __attribute__((objc_designated_initializer));
- (A _Nullable)component1 __attribute__((swift_name("component1()")));
- (J _Nullable)component10 __attribute__((swift_name("component10()")));
- (K _Nullable)component11 __attribute__((swift_name("component11()")));
- (L _Nullable)component12 __attribute__((swift_name("component12()")));
- (M _Nullable)component13 __attribute__((swift_name("component13()")));
- (N _Nullable)component14 __attribute__((swift_name("component14()")));
- (O _Nullable)component15 __attribute__((swift_name("component15()")));
- (P _Nullable)component16 __attribute__((swift_name("component16()")));
- (Q _Nullable)component17 __attribute__((swift_name("component17()")));
- (B _Nullable)component2 __attribute__((swift_name("component2()")));
- (C _Nullable)component3 __attribute__((swift_name("component3()")));
- (D _Nullable)component4 __attribute__((swift_name("component4()")));
- (E _Nullable)component5 __attribute__((swift_name("component5()")));
- (F _Nullable)component6 __attribute__((swift_name("component6()")));
- (G _Nullable)component7 __attribute__((swift_name("component7()")));
- (H _Nullable)component8 __attribute__((swift_name("component8()")));
- (I _Nullable)component9 __attribute__((swift_name("component9()")));
- (SharedRow17<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q> *)doCopyA:(A _Nullable)a b:(B _Nullable)b c:(C _Nullable)c d:(D _Nullable)d e:(E _Nullable)e f:(F _Nullable)f g:(G _Nullable)g h:(H _Nullable)h i:(I _Nullable)i j:(J _Nullable)j k:(K _Nullable)k l:(L _Nullable)l m:(M _Nullable)m n:(N _Nullable)n o:(O _Nullable)o p:(P _Nullable)p q:(Q _Nullable)q __attribute__((swift_name("doCopy(a:b:c:d:e:f:g:h:i:j:k:l:m:n:o:p:q:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
- (NSArray<id> *)values __attribute__((swift_name("values()")));
@property (readonly) A _Nullable a __attribute__((swift_name("a")));
@property (readonly) B _Nullable b __attribute__((swift_name("b")));
@property (readonly) C _Nullable c __attribute__((swift_name("c")));
@property (readonly) D _Nullable d __attribute__((swift_name("d")));
@property (readonly) E _Nullable e __attribute__((swift_name("e")));
@property (readonly) F _Nullable f __attribute__((swift_name("f")));
@property (readonly) G _Nullable g __attribute__((swift_name("g")));
@property (readonly) H _Nullable h __attribute__((swift_name("h")));
@property (readonly) I _Nullable i __attribute__((swift_name("i")));
@property (readonly) J _Nullable j __attribute__((swift_name("j")));
@property (readonly) K _Nullable k __attribute__((swift_name("k")));
@property (readonly) L _Nullable l __attribute__((swift_name("l")));
@property (readonly) M _Nullable m __attribute__((swift_name("m")));
@property (readonly) N _Nullable n __attribute__((swift_name("n")));
@property (readonly) O _Nullable o __attribute__((swift_name("o")));
@property (readonly) P _Nullable p __attribute__((swift_name("p")));
@property (readonly) Q _Nullable q __attribute__((swift_name("q")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Row18")))
@interface SharedRow18<__covariant A, __covariant B, __covariant C, __covariant D, __covariant E, __covariant F, __covariant G, __covariant H, __covariant I, __covariant J, __covariant K, __covariant L, __covariant M, __covariant N, __covariant O, __covariant P, __covariant Q, __covariant R> : SharedBase
- (instancetype)initWithA:(A _Nullable)a b:(B _Nullable)b c:(C _Nullable)c d:(D _Nullable)d e:(E _Nullable)e f:(F _Nullable)f g:(G _Nullable)g h:(H _Nullable)h i:(I _Nullable)i j:(J _Nullable)j k:(K _Nullable)k l:(L _Nullable)l m:(M _Nullable)m n:(N _Nullable)n o:(O _Nullable)o p:(P _Nullable)p q:(Q _Nullable)q r:(R _Nullable)r __attribute__((swift_name("init(a:b:c:d:e:f:g:h:i:j:k:l:m:n:o:p:q:r:)"))) __attribute__((objc_designated_initializer));
- (A _Nullable)component1 __attribute__((swift_name("component1()")));
- (J _Nullable)component10 __attribute__((swift_name("component10()")));
- (K _Nullable)component11 __attribute__((swift_name("component11()")));
- (L _Nullable)component12 __attribute__((swift_name("component12()")));
- (M _Nullable)component13 __attribute__((swift_name("component13()")));
- (N _Nullable)component14 __attribute__((swift_name("component14()")));
- (O _Nullable)component15 __attribute__((swift_name("component15()")));
- (P _Nullable)component16 __attribute__((swift_name("component16()")));
- (Q _Nullable)component17 __attribute__((swift_name("component17()")));
- (R _Nullable)component18 __attribute__((swift_name("component18()")));
- (B _Nullable)component2 __attribute__((swift_name("component2()")));
- (C _Nullable)component3 __attribute__((swift_name("component3()")));
- (D _Nullable)component4 __attribute__((swift_name("component4()")));
- (E _Nullable)component5 __attribute__((swift_name("component5()")));
- (F _Nullable)component6 __attribute__((swift_name("component6()")));
- (G _Nullable)component7 __attribute__((swift_name("component7()")));
- (H _Nullable)component8 __attribute__((swift_name("component8()")));
- (I _Nullable)component9 __attribute__((swift_name("component9()")));
- (SharedRow18<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R> *)doCopyA:(A _Nullable)a b:(B _Nullable)b c:(C _Nullable)c d:(D _Nullable)d e:(E _Nullable)e f:(F _Nullable)f g:(G _Nullable)g h:(H _Nullable)h i:(I _Nullable)i j:(J _Nullable)j k:(K _Nullable)k l:(L _Nullable)l m:(M _Nullable)m n:(N _Nullable)n o:(O _Nullable)o p:(P _Nullable)p q:(Q _Nullable)q r:(R _Nullable)r __attribute__((swift_name("doCopy(a:b:c:d:e:f:g:h:i:j:k:l:m:n:o:p:q:r:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
- (NSArray<id> *)values __attribute__((swift_name("values()")));
@property (readonly) A _Nullable a __attribute__((swift_name("a")));
@property (readonly) B _Nullable b __attribute__((swift_name("b")));
@property (readonly) C _Nullable c __attribute__((swift_name("c")));
@property (readonly) D _Nullable d __attribute__((swift_name("d")));
@property (readonly) E _Nullable e __attribute__((swift_name("e")));
@property (readonly) F _Nullable f __attribute__((swift_name("f")));
@property (readonly) G _Nullable g __attribute__((swift_name("g")));
@property (readonly) H _Nullable h __attribute__((swift_name("h")));
@property (readonly) I _Nullable i __attribute__((swift_name("i")));
@property (readonly) J _Nullable j __attribute__((swift_name("j")));
@property (readonly) K _Nullable k __attribute__((swift_name("k")));
@property (readonly) L _Nullable l __attribute__((swift_name("l")));
@property (readonly) M _Nullable m __attribute__((swift_name("m")));
@property (readonly) N _Nullable n __attribute__((swift_name("n")));
@property (readonly) O _Nullable o __attribute__((swift_name("o")));
@property (readonly) P _Nullable p __attribute__((swift_name("p")));
@property (readonly) Q _Nullable q __attribute__((swift_name("q")));
@property (readonly) R _Nullable r __attribute__((swift_name("r")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Row19")))
@interface SharedRow19<__covariant A, __covariant B, __covariant C, __covariant D, __covariant E, __covariant F, __covariant G, __covariant H, __covariant I, __covariant J, __covariant K, __covariant L, __covariant M, __covariant N, __covariant O, __covariant P, __covariant Q, __covariant R, __covariant S> : SharedBase
- (instancetype)initWithA:(A _Nullable)a b:(B _Nullable)b c:(C _Nullable)c d:(D _Nullable)d e:(E _Nullable)e f:(F _Nullable)f g:(G _Nullable)g h:(H _Nullable)h i:(I _Nullable)i j:(J _Nullable)j k:(K _Nullable)k l:(L _Nullable)l m:(M _Nullable)m n:(N _Nullable)n o:(O _Nullable)o p:(P _Nullable)p q:(Q _Nullable)q r:(R _Nullable)r s:(S _Nullable)s __attribute__((swift_name("init(a:b:c:d:e:f:g:h:i:j:k:l:m:n:o:p:q:r:s:)"))) __attribute__((objc_designated_initializer));
- (A _Nullable)component1 __attribute__((swift_name("component1()")));
- (J _Nullable)component10 __attribute__((swift_name("component10()")));
- (K _Nullable)component11 __attribute__((swift_name("component11()")));
- (L _Nullable)component12 __attribute__((swift_name("component12()")));
- (M _Nullable)component13 __attribute__((swift_name("component13()")));
- (N _Nullable)component14 __attribute__((swift_name("component14()")));
- (O _Nullable)component15 __attribute__((swift_name("component15()")));
- (P _Nullable)component16 __attribute__((swift_name("component16()")));
- (Q _Nullable)component17 __attribute__((swift_name("component17()")));
- (R _Nullable)component18 __attribute__((swift_name("component18()")));
- (S _Nullable)component19 __attribute__((swift_name("component19()")));
- (B _Nullable)component2 __attribute__((swift_name("component2()")));
- (C _Nullable)component3 __attribute__((swift_name("component3()")));
- (D _Nullable)component4 __attribute__((swift_name("component4()")));
- (E _Nullable)component5 __attribute__((swift_name("component5()")));
- (F _Nullable)component6 __attribute__((swift_name("component6()")));
- (G _Nullable)component7 __attribute__((swift_name("component7()")));
- (H _Nullable)component8 __attribute__((swift_name("component8()")));
- (I _Nullable)component9 __attribute__((swift_name("component9()")));
- (SharedRow19<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S> *)doCopyA:(A _Nullable)a b:(B _Nullable)b c:(C _Nullable)c d:(D _Nullable)d e:(E _Nullable)e f:(F _Nullable)f g:(G _Nullable)g h:(H _Nullable)h i:(I _Nullable)i j:(J _Nullable)j k:(K _Nullable)k l:(L _Nullable)l m:(M _Nullable)m n:(N _Nullable)n o:(O _Nullable)o p:(P _Nullable)p q:(Q _Nullable)q r:(R _Nullable)r s:(S _Nullable)s __attribute__((swift_name("doCopy(a:b:c:d:e:f:g:h:i:j:k:l:m:n:o:p:q:r:s:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
- (NSArray<id> *)values __attribute__((swift_name("values()")));
@property (readonly) A _Nullable a __attribute__((swift_name("a")));
@property (readonly) B _Nullable b __attribute__((swift_name("b")));
@property (readonly) C _Nullable c __attribute__((swift_name("c")));
@property (readonly) D _Nullable d __attribute__((swift_name("d")));
@property (readonly) E _Nullable e __attribute__((swift_name("e")));
@property (readonly) F _Nullable f __attribute__((swift_name("f")));
@property (readonly) G _Nullable g __attribute__((swift_name("g")));
@property (readonly) H _Nullable h __attribute__((swift_name("h")));
@property (readonly) I _Nullable i __attribute__((swift_name("i")));
@property (readonly) J _Nullable j __attribute__((swift_name("j")));
@property (readonly) K _Nullable k __attribute__((swift_name("k")));
@property (readonly) L _Nullable l __attribute__((swift_name("l")));
@property (readonly) M _Nullable m __attribute__((swift_name("m")));
@property (readonly) N _Nullable n __attribute__((swift_name("n")));
@property (readonly) O _Nullable o __attribute__((swift_name("o")));
@property (readonly) P _Nullable p __attribute__((swift_name("p")));
@property (readonly) Q _Nullable q __attribute__((swift_name("q")));
@property (readonly) R _Nullable r __attribute__((swift_name("r")));
@property (readonly) S _Nullable s __attribute__((swift_name("s")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Row2")))
@interface SharedRow2<__covariant A, __covariant B> : SharedBase
- (instancetype)initWithA:(A _Nullable)a b:(B _Nullable)b __attribute__((swift_name("init(a:b:)"))) __attribute__((objc_designated_initializer));
- (A _Nullable)component1 __attribute__((swift_name("component1()")));
- (B _Nullable)component2 __attribute__((swift_name("component2()")));
- (SharedRow2<A, B> *)doCopyA:(A _Nullable)a b:(B _Nullable)b __attribute__((swift_name("doCopy(a:b:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
- (NSArray<id> *)values __attribute__((swift_name("values()")));
@property (readonly) A _Nullable a __attribute__((swift_name("a")));
@property (readonly) B _Nullable b __attribute__((swift_name("b")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Row20")))
@interface SharedRow20<__covariant A, __covariant B, __covariant C, __covariant D, __covariant E, __covariant F, __covariant G, __covariant H, __covariant I, __covariant J, __covariant K, __covariant L, __covariant M, __covariant N, __covariant O, __covariant P, __covariant Q, __covariant R, __covariant S, __covariant T> : SharedBase
- (instancetype)initWithA:(A _Nullable)a b:(B _Nullable)b c:(C _Nullable)c d:(D _Nullable)d e:(E _Nullable)e f:(F _Nullable)f g:(G _Nullable)g h:(H _Nullable)h i:(I _Nullable)i j:(J _Nullable)j k:(K _Nullable)k l:(L _Nullable)l m:(M _Nullable)m n:(N _Nullable)n o:(O _Nullable)o p:(P _Nullable)p q:(Q _Nullable)q r:(R _Nullable)r s:(S _Nullable)s t:(T _Nullable)t __attribute__((swift_name("init(a:b:c:d:e:f:g:h:i:j:k:l:m:n:o:p:q:r:s:t:)"))) __attribute__((objc_designated_initializer));
- (A _Nullable)component1 __attribute__((swift_name("component1()")));
- (J _Nullable)component10 __attribute__((swift_name("component10()")));
- (K _Nullable)component11 __attribute__((swift_name("component11()")));
- (L _Nullable)component12 __attribute__((swift_name("component12()")));
- (M _Nullable)component13 __attribute__((swift_name("component13()")));
- (N _Nullable)component14 __attribute__((swift_name("component14()")));
- (O _Nullable)component15 __attribute__((swift_name("component15()")));
- (P _Nullable)component16 __attribute__((swift_name("component16()")));
- (Q _Nullable)component17 __attribute__((swift_name("component17()")));
- (R _Nullable)component18 __attribute__((swift_name("component18()")));
- (S _Nullable)component19 __attribute__((swift_name("component19()")));
- (B _Nullable)component2 __attribute__((swift_name("component2()")));
- (T _Nullable)component20 __attribute__((swift_name("component20()")));
- (C _Nullable)component3 __attribute__((swift_name("component3()")));
- (D _Nullable)component4 __attribute__((swift_name("component4()")));
- (E _Nullable)component5 __attribute__((swift_name("component5()")));
- (F _Nullable)component6 __attribute__((swift_name("component6()")));
- (G _Nullable)component7 __attribute__((swift_name("component7()")));
- (H _Nullable)component8 __attribute__((swift_name("component8()")));
- (I _Nullable)component9 __attribute__((swift_name("component9()")));
- (SharedRow20<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T> *)doCopyA:(A _Nullable)a b:(B _Nullable)b c:(C _Nullable)c d:(D _Nullable)d e:(E _Nullable)e f:(F _Nullable)f g:(G _Nullable)g h:(H _Nullable)h i:(I _Nullable)i j:(J _Nullable)j k:(K _Nullable)k l:(L _Nullable)l m:(M _Nullable)m n:(N _Nullable)n o:(O _Nullable)o p:(P _Nullable)p q:(Q _Nullable)q r:(R _Nullable)r s:(S _Nullable)s t:(T _Nullable)t __attribute__((swift_name("doCopy(a:b:c:d:e:f:g:h:i:j:k:l:m:n:o:p:q:r:s:t:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
- (NSArray<id> *)values __attribute__((swift_name("values()")));
@property (readonly) A _Nullable a __attribute__((swift_name("a")));
@property (readonly) B _Nullable b __attribute__((swift_name("b")));
@property (readonly) C _Nullable c __attribute__((swift_name("c")));
@property (readonly) D _Nullable d __attribute__((swift_name("d")));
@property (readonly) E _Nullable e __attribute__((swift_name("e")));
@property (readonly) F _Nullable f __attribute__((swift_name("f")));
@property (readonly) G _Nullable g __attribute__((swift_name("g")));
@property (readonly) H _Nullable h __attribute__((swift_name("h")));
@property (readonly) I _Nullable i __attribute__((swift_name("i")));
@property (readonly) J _Nullable j __attribute__((swift_name("j")));
@property (readonly) K _Nullable k __attribute__((swift_name("k")));
@property (readonly) L _Nullable l __attribute__((swift_name("l")));
@property (readonly) M _Nullable m __attribute__((swift_name("m")));
@property (readonly) N _Nullable n __attribute__((swift_name("n")));
@property (readonly) O _Nullable o __attribute__((swift_name("o")));
@property (readonly) P _Nullable p __attribute__((swift_name("p")));
@property (readonly) Q _Nullable q __attribute__((swift_name("q")));
@property (readonly) R _Nullable r __attribute__((swift_name("r")));
@property (readonly) S _Nullable s __attribute__((swift_name("s")));
@property (readonly) T _Nullable t __attribute__((swift_name("t")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Row21")))
@interface SharedRow21<__covariant A, __covariant B, __covariant C, __covariant D, __covariant E, __covariant F, __covariant G, __covariant H, __covariant I, __covariant J, __covariant K, __covariant L, __covariant M, __covariant N, __covariant O, __covariant P, __covariant Q, __covariant R, __covariant S, __covariant T, __covariant U> : SharedBase
- (instancetype)initWithA:(A _Nullable)a b:(B _Nullable)b c:(C _Nullable)c d:(D _Nullable)d e:(E _Nullable)e f:(F _Nullable)f g:(G _Nullable)g h:(H _Nullable)h i:(I _Nullable)i j:(J _Nullable)j k:(K _Nullable)k l:(L _Nullable)l m:(M _Nullable)m n:(N _Nullable)n o:(O _Nullable)o p:(P _Nullable)p q:(Q _Nullable)q r:(R _Nullable)r s:(S _Nullable)s t:(T _Nullable)t u:(U _Nullable)u __attribute__((swift_name("init(a:b:c:d:e:f:g:h:i:j:k:l:m:n:o:p:q:r:s:t:u:)"))) __attribute__((objc_designated_initializer));
- (A _Nullable)component1 __attribute__((swift_name("component1()")));
- (J _Nullable)component10 __attribute__((swift_name("component10()")));
- (K _Nullable)component11 __attribute__((swift_name("component11()")));
- (L _Nullable)component12 __attribute__((swift_name("component12()")));
- (M _Nullable)component13 __attribute__((swift_name("component13()")));
- (N _Nullable)component14 __attribute__((swift_name("component14()")));
- (O _Nullable)component15 __attribute__((swift_name("component15()")));
- (P _Nullable)component16 __attribute__((swift_name("component16()")));
- (Q _Nullable)component17 __attribute__((swift_name("component17()")));
- (R _Nullable)component18 __attribute__((swift_name("component18()")));
- (S _Nullable)component19 __attribute__((swift_name("component19()")));
- (B _Nullable)component2 __attribute__((swift_name("component2()")));
- (T _Nullable)component20 __attribute__((swift_name("component20()")));
- (U _Nullable)component21 __attribute__((swift_name("component21()")));
- (C _Nullable)component3 __attribute__((swift_name("component3()")));
- (D _Nullable)component4 __attribute__((swift_name("component4()")));
- (E _Nullable)component5 __attribute__((swift_name("component5()")));
- (F _Nullable)component6 __attribute__((swift_name("component6()")));
- (G _Nullable)component7 __attribute__((swift_name("component7()")));
- (H _Nullable)component8 __attribute__((swift_name("component8()")));
- (I _Nullable)component9 __attribute__((swift_name("component9()")));
- (SharedRow21<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U> *)doCopyA:(A _Nullable)a b:(B _Nullable)b c:(C _Nullable)c d:(D _Nullable)d e:(E _Nullable)e f:(F _Nullable)f g:(G _Nullable)g h:(H _Nullable)h i:(I _Nullable)i j:(J _Nullable)j k:(K _Nullable)k l:(L _Nullable)l m:(M _Nullable)m n:(N _Nullable)n o:(O _Nullable)o p:(P _Nullable)p q:(Q _Nullable)q r:(R _Nullable)r s:(S _Nullable)s t:(T _Nullable)t u:(U _Nullable)u __attribute__((swift_name("doCopy(a:b:c:d:e:f:g:h:i:j:k:l:m:n:o:p:q:r:s:t:u:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
- (NSArray<id> *)values __attribute__((swift_name("values()")));
@property (readonly) A _Nullable a __attribute__((swift_name("a")));
@property (readonly) B _Nullable b __attribute__((swift_name("b")));
@property (readonly) C _Nullable c __attribute__((swift_name("c")));
@property (readonly) D _Nullable d __attribute__((swift_name("d")));
@property (readonly) E _Nullable e __attribute__((swift_name("e")));
@property (readonly) F _Nullable f __attribute__((swift_name("f")));
@property (readonly) G _Nullable g __attribute__((swift_name("g")));
@property (readonly) H _Nullable h __attribute__((swift_name("h")));
@property (readonly) I _Nullable i __attribute__((swift_name("i")));
@property (readonly) J _Nullable j __attribute__((swift_name("j")));
@property (readonly) K _Nullable k __attribute__((swift_name("k")));
@property (readonly) L _Nullable l __attribute__((swift_name("l")));
@property (readonly) M _Nullable m __attribute__((swift_name("m")));
@property (readonly) N _Nullable n __attribute__((swift_name("n")));
@property (readonly) O _Nullable o __attribute__((swift_name("o")));
@property (readonly) P _Nullable p __attribute__((swift_name("p")));
@property (readonly) Q _Nullable q __attribute__((swift_name("q")));
@property (readonly) R _Nullable r __attribute__((swift_name("r")));
@property (readonly) S _Nullable s __attribute__((swift_name("s")));
@property (readonly) T _Nullable t __attribute__((swift_name("t")));
@property (readonly) U _Nullable u __attribute__((swift_name("u")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Row22")))
@interface SharedRow22<__covariant A, __covariant B, __covariant C, __covariant D, __covariant E, __covariant F, __covariant G, __covariant H, __covariant I, __covariant J, __covariant K, __covariant L, __covariant M, __covariant N, __covariant O, __covariant P, __covariant Q, __covariant R, __covariant S, __covariant T, __covariant U, __covariant V> : SharedBase
- (instancetype)initWithA:(A _Nullable)a b:(B _Nullable)b c:(C _Nullable)c d:(D _Nullable)d e:(E _Nullable)e f:(F _Nullable)f g:(G _Nullable)g h:(H _Nullable)h i:(I _Nullable)i j:(J _Nullable)j k:(K _Nullable)k l:(L _Nullable)l m:(M _Nullable)m n:(N _Nullable)n o:(O _Nullable)o p:(P _Nullable)p q:(Q _Nullable)q r:(R _Nullable)r s:(S _Nullable)s t:(T _Nullable)t u:(U _Nullable)u v:(V _Nullable)v __attribute__((swift_name("init(a:b:c:d:e:f:g:h:i:j:k:l:m:n:o:p:q:r:s:t:u:v:)"))) __attribute__((objc_designated_initializer));
- (A _Nullable)component1 __attribute__((swift_name("component1()")));
- (J _Nullable)component10 __attribute__((swift_name("component10()")));
- (K _Nullable)component11 __attribute__((swift_name("component11()")));
- (L _Nullable)component12 __attribute__((swift_name("component12()")));
- (M _Nullable)component13 __attribute__((swift_name("component13()")));
- (N _Nullable)component14 __attribute__((swift_name("component14()")));
- (O _Nullable)component15 __attribute__((swift_name("component15()")));
- (P _Nullable)component16 __attribute__((swift_name("component16()")));
- (Q _Nullable)component17 __attribute__((swift_name("component17()")));
- (R _Nullable)component18 __attribute__((swift_name("component18()")));
- (S _Nullable)component19 __attribute__((swift_name("component19()")));
- (B _Nullable)component2 __attribute__((swift_name("component2()")));
- (T _Nullable)component20 __attribute__((swift_name("component20()")));
- (U _Nullable)component21 __attribute__((swift_name("component21()")));
- (V _Nullable)component22 __attribute__((swift_name("component22()")));
- (C _Nullable)component3 __attribute__((swift_name("component3()")));
- (D _Nullable)component4 __attribute__((swift_name("component4()")));
- (E _Nullable)component5 __attribute__((swift_name("component5()")));
- (F _Nullable)component6 __attribute__((swift_name("component6()")));
- (G _Nullable)component7 __attribute__((swift_name("component7()")));
- (H _Nullable)component8 __attribute__((swift_name("component8()")));
- (I _Nullable)component9 __attribute__((swift_name("component9()")));
- (SharedRow22<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V> *)doCopyA:(A _Nullable)a b:(B _Nullable)b c:(C _Nullable)c d:(D _Nullable)d e:(E _Nullable)e f:(F _Nullable)f g:(G _Nullable)g h:(H _Nullable)h i:(I _Nullable)i j:(J _Nullable)j k:(K _Nullable)k l:(L _Nullable)l m:(M _Nullable)m n:(N _Nullable)n o:(O _Nullable)o p:(P _Nullable)p q:(Q _Nullable)q r:(R _Nullable)r s:(S _Nullable)s t:(T _Nullable)t u:(U _Nullable)u v:(V _Nullable)v __attribute__((swift_name("doCopy(a:b:c:d:e:f:g:h:i:j:k:l:m:n:o:p:q:r:s:t:u:v:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
- (NSArray<id> *)values __attribute__((swift_name("values()")));
@property (readonly) A _Nullable a __attribute__((swift_name("a")));
@property (readonly) B _Nullable b __attribute__((swift_name("b")));
@property (readonly) C _Nullable c __attribute__((swift_name("c")));
@property (readonly) D _Nullable d __attribute__((swift_name("d")));
@property (readonly) E _Nullable e __attribute__((swift_name("e")));
@property (readonly) F _Nullable f __attribute__((swift_name("f")));
@property (readonly) G _Nullable g __attribute__((swift_name("g")));
@property (readonly) H _Nullable h __attribute__((swift_name("h")));
@property (readonly) I _Nullable i __attribute__((swift_name("i")));
@property (readonly) J _Nullable j __attribute__((swift_name("j")));
@property (readonly) K _Nullable k __attribute__((swift_name("k")));
@property (readonly) L _Nullable l __attribute__((swift_name("l")));
@property (readonly) M _Nullable m __attribute__((swift_name("m")));
@property (readonly) N _Nullable n __attribute__((swift_name("n")));
@property (readonly) O _Nullable o __attribute__((swift_name("o")));
@property (readonly) P _Nullable p __attribute__((swift_name("p")));
@property (readonly) Q _Nullable q __attribute__((swift_name("q")));
@property (readonly) R _Nullable r __attribute__((swift_name("r")));
@property (readonly) S _Nullable s __attribute__((swift_name("s")));
@property (readonly) T _Nullable t __attribute__((swift_name("t")));
@property (readonly) U _Nullable u __attribute__((swift_name("u")));
@property (readonly) V _Nullable v __attribute__((swift_name("v")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Row3")))
@interface SharedRow3<__covariant A, __covariant B, __covariant C> : SharedBase
- (instancetype)initWithA:(A _Nullable)a b:(B _Nullable)b c:(C _Nullable)c __attribute__((swift_name("init(a:b:c:)"))) __attribute__((objc_designated_initializer));
- (A _Nullable)component1 __attribute__((swift_name("component1()")));
- (B _Nullable)component2 __attribute__((swift_name("component2()")));
- (C _Nullable)component3 __attribute__((swift_name("component3()")));
- (SharedRow3<A, B, C> *)doCopyA:(A _Nullable)a b:(B _Nullable)b c:(C _Nullable)c __attribute__((swift_name("doCopy(a:b:c:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
- (NSArray<id> *)values __attribute__((swift_name("values()")));
@property (readonly) A _Nullable a __attribute__((swift_name("a")));
@property (readonly) B _Nullable b __attribute__((swift_name("b")));
@property (readonly) C _Nullable c __attribute__((swift_name("c")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Row4")))
@interface SharedRow4<__covariant A, __covariant B, __covariant C, __covariant D> : SharedBase
- (instancetype)initWithA:(A _Nullable)a b:(B _Nullable)b c:(C _Nullable)c d:(D _Nullable)d __attribute__((swift_name("init(a:b:c:d:)"))) __attribute__((objc_designated_initializer));
- (A _Nullable)component1 __attribute__((swift_name("component1()")));
- (B _Nullable)component2 __attribute__((swift_name("component2()")));
- (C _Nullable)component3 __attribute__((swift_name("component3()")));
- (D _Nullable)component4 __attribute__((swift_name("component4()")));
- (SharedRow4<A, B, C, D> *)doCopyA:(A _Nullable)a b:(B _Nullable)b c:(C _Nullable)c d:(D _Nullable)d __attribute__((swift_name("doCopy(a:b:c:d:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
- (NSArray<id> *)values __attribute__((swift_name("values()")));
@property (readonly) A _Nullable a __attribute__((swift_name("a")));
@property (readonly) B _Nullable b __attribute__((swift_name("b")));
@property (readonly) C _Nullable c __attribute__((swift_name("c")));
@property (readonly) D _Nullable d __attribute__((swift_name("d")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Row5")))
@interface SharedRow5<__covariant A, __covariant B, __covariant C, __covariant D, __covariant E> : SharedBase
- (instancetype)initWithA:(A _Nullable)a b:(B _Nullable)b c:(C _Nullable)c d:(D _Nullable)d e:(E _Nullable)e __attribute__((swift_name("init(a:b:c:d:e:)"))) __attribute__((objc_designated_initializer));
- (A _Nullable)component1 __attribute__((swift_name("component1()")));
- (B _Nullable)component2 __attribute__((swift_name("component2()")));
- (C _Nullable)component3 __attribute__((swift_name("component3()")));
- (D _Nullable)component4 __attribute__((swift_name("component4()")));
- (E _Nullable)component5 __attribute__((swift_name("component5()")));
- (SharedRow5<A, B, C, D, E> *)doCopyA:(A _Nullable)a b:(B _Nullable)b c:(C _Nullable)c d:(D _Nullable)d e:(E _Nullable)e __attribute__((swift_name("doCopy(a:b:c:d:e:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
- (NSArray<id> *)values __attribute__((swift_name("values()")));
@property (readonly) A _Nullable a __attribute__((swift_name("a")));
@property (readonly) B _Nullable b __attribute__((swift_name("b")));
@property (readonly) C _Nullable c __attribute__((swift_name("c")));
@property (readonly) D _Nullable d __attribute__((swift_name("d")));
@property (readonly) E _Nullable e __attribute__((swift_name("e")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Row6")))
@interface SharedRow6<__covariant A, __covariant B, __covariant C, __covariant D, __covariant E, __covariant F> : SharedBase
- (instancetype)initWithA:(A _Nullable)a b:(B _Nullable)b c:(C _Nullable)c d:(D _Nullable)d e:(E _Nullable)e f:(F _Nullable)f __attribute__((swift_name("init(a:b:c:d:e:f:)"))) __attribute__((objc_designated_initializer));
- (A _Nullable)component1 __attribute__((swift_name("component1()")));
- (B _Nullable)component2 __attribute__((swift_name("component2()")));
- (C _Nullable)component3 __attribute__((swift_name("component3()")));
- (D _Nullable)component4 __attribute__((swift_name("component4()")));
- (E _Nullable)component5 __attribute__((swift_name("component5()")));
- (F _Nullable)component6 __attribute__((swift_name("component6()")));
- (SharedRow6<A, B, C, D, E, F> *)doCopyA:(A _Nullable)a b:(B _Nullable)b c:(C _Nullable)c d:(D _Nullable)d e:(E _Nullable)e f:(F _Nullable)f __attribute__((swift_name("doCopy(a:b:c:d:e:f:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
- (NSArray<id> *)values __attribute__((swift_name("values()")));
@property (readonly) A _Nullable a __attribute__((swift_name("a")));
@property (readonly) B _Nullable b __attribute__((swift_name("b")));
@property (readonly) C _Nullable c __attribute__((swift_name("c")));
@property (readonly) D _Nullable d __attribute__((swift_name("d")));
@property (readonly) E _Nullable e __attribute__((swift_name("e")));
@property (readonly) F _Nullable f __attribute__((swift_name("f")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Row7")))
@interface SharedRow7<__covariant A, __covariant B, __covariant C, __covariant D, __covariant E, __covariant F, __covariant G> : SharedBase
- (instancetype)initWithA:(A _Nullable)a b:(B _Nullable)b c:(C _Nullable)c d:(D _Nullable)d e:(E _Nullable)e f:(F _Nullable)f g:(G _Nullable)g __attribute__((swift_name("init(a:b:c:d:e:f:g:)"))) __attribute__((objc_designated_initializer));
- (A _Nullable)component1 __attribute__((swift_name("component1()")));
- (B _Nullable)component2 __attribute__((swift_name("component2()")));
- (C _Nullable)component3 __attribute__((swift_name("component3()")));
- (D _Nullable)component4 __attribute__((swift_name("component4()")));
- (E _Nullable)component5 __attribute__((swift_name("component5()")));
- (F _Nullable)component6 __attribute__((swift_name("component6()")));
- (G _Nullable)component7 __attribute__((swift_name("component7()")));
- (SharedRow7<A, B, C, D, E, F, G> *)doCopyA:(A _Nullable)a b:(B _Nullable)b c:(C _Nullable)c d:(D _Nullable)d e:(E _Nullable)e f:(F _Nullable)f g:(G _Nullable)g __attribute__((swift_name("doCopy(a:b:c:d:e:f:g:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
- (NSArray<id> *)values __attribute__((swift_name("values()")));
@property (readonly) A _Nullable a __attribute__((swift_name("a")));
@property (readonly) B _Nullable b __attribute__((swift_name("b")));
@property (readonly) C _Nullable c __attribute__((swift_name("c")));
@property (readonly) D _Nullable d __attribute__((swift_name("d")));
@property (readonly) E _Nullable e __attribute__((swift_name("e")));
@property (readonly) F _Nullable f __attribute__((swift_name("f")));
@property (readonly) G _Nullable g __attribute__((swift_name("g")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Row8")))
@interface SharedRow8<__covariant A, __covariant B, __covariant C, __covariant D, __covariant E, __covariant F, __covariant G, __covariant H> : SharedBase
- (instancetype)initWithA:(A _Nullable)a b:(B _Nullable)b c:(C _Nullable)c d:(D _Nullable)d e:(E _Nullable)e f:(F _Nullable)f g:(G _Nullable)g h:(H _Nullable)h __attribute__((swift_name("init(a:b:c:d:e:f:g:h:)"))) __attribute__((objc_designated_initializer));
- (A _Nullable)component1 __attribute__((swift_name("component1()")));
- (B _Nullable)component2 __attribute__((swift_name("component2()")));
- (C _Nullable)component3 __attribute__((swift_name("component3()")));
- (D _Nullable)component4 __attribute__((swift_name("component4()")));
- (E _Nullable)component5 __attribute__((swift_name("component5()")));
- (F _Nullable)component6 __attribute__((swift_name("component6()")));
- (G _Nullable)component7 __attribute__((swift_name("component7()")));
- (H _Nullable)component8 __attribute__((swift_name("component8()")));
- (SharedRow8<A, B, C, D, E, F, G, H> *)doCopyA:(A _Nullable)a b:(B _Nullable)b c:(C _Nullable)c d:(D _Nullable)d e:(E _Nullable)e f:(F _Nullable)f g:(G _Nullable)g h:(H _Nullable)h __attribute__((swift_name("doCopy(a:b:c:d:e:f:g:h:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
- (NSArray<id> *)values __attribute__((swift_name("values()")));
@property (readonly) A _Nullable a __attribute__((swift_name("a")));
@property (readonly) B _Nullable b __attribute__((swift_name("b")));
@property (readonly) C _Nullable c __attribute__((swift_name("c")));
@property (readonly) D _Nullable d __attribute__((swift_name("d")));
@property (readonly) E _Nullable e __attribute__((swift_name("e")));
@property (readonly) F _Nullable f __attribute__((swift_name("f")));
@property (readonly) G _Nullable g __attribute__((swift_name("g")));
@property (readonly) H _Nullable h __attribute__((swift_name("h")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Row9")))
@interface SharedRow9<__covariant A, __covariant B, __covariant C, __covariant D, __covariant E, __covariant F, __covariant G, __covariant H, __covariant I> : SharedBase
- (instancetype)initWithA:(A _Nullable)a b:(B _Nullable)b c:(C _Nullable)c d:(D _Nullable)d e:(E _Nullable)e f:(F _Nullable)f g:(G _Nullable)g h:(H _Nullable)h i:(I _Nullable)i __attribute__((swift_name("init(a:b:c:d:e:f:g:h:i:)"))) __attribute__((objc_designated_initializer));
- (A _Nullable)component1 __attribute__((swift_name("component1()")));
- (B _Nullable)component2 __attribute__((swift_name("component2()")));
- (C _Nullable)component3 __attribute__((swift_name("component3()")));
- (D _Nullable)component4 __attribute__((swift_name("component4()")));
- (E _Nullable)component5 __attribute__((swift_name("component5()")));
- (F _Nullable)component6 __attribute__((swift_name("component6()")));
- (G _Nullable)component7 __attribute__((swift_name("component7()")));
- (H _Nullable)component8 __attribute__((swift_name("component8()")));
- (I _Nullable)component9 __attribute__((swift_name("component9()")));
- (SharedRow9<A, B, C, D, E, F, G, H, I> *)doCopyA:(A _Nullable)a b:(B _Nullable)b c:(C _Nullable)c d:(D _Nullable)d e:(E _Nullable)e f:(F _Nullable)f g:(G _Nullable)g h:(H _Nullable)h i:(I _Nullable)i __attribute__((swift_name("doCopy(a:b:c:d:e:f:g:h:i:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
- (NSArray<id> *)values __attribute__((swift_name("values()")));
@property (readonly) A _Nullable a __attribute__((swift_name("a")));
@property (readonly) B _Nullable b __attribute__((swift_name("b")));
@property (readonly) C _Nullable c __attribute__((swift_name("c")));
@property (readonly) D _Nullable d __attribute__((swift_name("d")));
@property (readonly) E _Nullable e __attribute__((swift_name("e")));
@property (readonly) F _Nullable f __attribute__((swift_name("f")));
@property (readonly) G _Nullable g __attribute__((swift_name("g")));
@property (readonly) H _Nullable h __attribute__((swift_name("h")));
@property (readonly) I _Nullable i __attribute__((swift_name("i")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Table1")))
@interface SharedTable1<__covariant A> : SharedBase
- (instancetype)initWithHeaders:(SharedHeaders1 *)headers rows:(NSArray<SharedRow1<A> *> *)rows __attribute__((swift_name("init(headers:rows:)"))) __attribute__((objc_designated_initializer));
- (SharedHeaders1 *)component1 __attribute__((swift_name("component1()")));
- (NSArray<SharedRow1<A> *> *)component2 __attribute__((swift_name("component2()")));
- (SharedTable1<A> *)doCopyHeaders:(SharedHeaders1 *)headers rows:(NSArray<SharedRow1<A> *> *)rows __attribute__((swift_name("doCopy(headers:rows:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedHeaders1 *headers __attribute__((swift_name("headers")));
@property (readonly) NSArray<SharedRow1<A> *> *rows __attribute__((swift_name("rows")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Table10")))
@interface SharedTable10<__covariant A, __covariant B, __covariant C, __covariant D, __covariant E, __covariant F, __covariant G, __covariant H, __covariant I, __covariant J> : SharedBase
- (instancetype)initWithHeaders:(SharedHeaders10 *)headers rows:(NSArray<SharedRow10<A, B, C, D, E, F, G, H, I, J> *> *)rows __attribute__((swift_name("init(headers:rows:)"))) __attribute__((objc_designated_initializer));
- (SharedHeaders10 *)component1 __attribute__((swift_name("component1()")));
- (NSArray<SharedRow10<A, B, C, D, E, F, G, H, I, J> *> *)component2 __attribute__((swift_name("component2()")));
- (SharedTable10<A, B, C, D, E, F, G, H, I, J> *)doCopyHeaders:(SharedHeaders10 *)headers rows:(NSArray<SharedRow10<A, B, C, D, E, F, G, H, I, J> *> *)rows __attribute__((swift_name("doCopy(headers:rows:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedHeaders10 *headers __attribute__((swift_name("headers")));
@property (readonly) NSArray<SharedRow10<A, B, C, D, E, F, G, H, I, J> *> *rows __attribute__((swift_name("rows")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Table11")))
@interface SharedTable11<__covariant A, __covariant B, __covariant C, __covariant D, __covariant E, __covariant F, __covariant G, __covariant H, __covariant I, __covariant J, __covariant K> : SharedBase
- (instancetype)initWithHeaders:(SharedHeaders11 *)headers rows:(NSArray<SharedRow11<A, B, C, D, E, F, G, H, I, J, K> *> *)rows __attribute__((swift_name("init(headers:rows:)"))) __attribute__((objc_designated_initializer));
- (SharedHeaders11 *)component1 __attribute__((swift_name("component1()")));
- (NSArray<SharedRow11<A, B, C, D, E, F, G, H, I, J, K> *> *)component2 __attribute__((swift_name("component2()")));
- (SharedTable11<A, B, C, D, E, F, G, H, I, J, K> *)doCopyHeaders:(SharedHeaders11 *)headers rows:(NSArray<SharedRow11<A, B, C, D, E, F, G, H, I, J, K> *> *)rows __attribute__((swift_name("doCopy(headers:rows:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedHeaders11 *headers __attribute__((swift_name("headers")));
@property (readonly) NSArray<SharedRow11<A, B, C, D, E, F, G, H, I, J, K> *> *rows __attribute__((swift_name("rows")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Table12")))
@interface SharedTable12<__covariant A, __covariant B, __covariant C, __covariant D, __covariant E, __covariant F, __covariant G, __covariant H, __covariant I, __covariant J, __covariant K, __covariant L> : SharedBase
- (instancetype)initWithHeaders:(SharedHeaders12 *)headers rows:(NSArray<SharedRow12<A, B, C, D, E, F, G, H, I, J, K, L> *> *)rows __attribute__((swift_name("init(headers:rows:)"))) __attribute__((objc_designated_initializer));
- (SharedHeaders12 *)component1 __attribute__((swift_name("component1()")));
- (NSArray<SharedRow12<A, B, C, D, E, F, G, H, I, J, K, L> *> *)component2 __attribute__((swift_name("component2()")));
- (SharedTable12<A, B, C, D, E, F, G, H, I, J, K, L> *)doCopyHeaders:(SharedHeaders12 *)headers rows:(NSArray<SharedRow12<A, B, C, D, E, F, G, H, I, J, K, L> *> *)rows __attribute__((swift_name("doCopy(headers:rows:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedHeaders12 *headers __attribute__((swift_name("headers")));
@property (readonly) NSArray<SharedRow12<A, B, C, D, E, F, G, H, I, J, K, L> *> *rows __attribute__((swift_name("rows")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Table13")))
@interface SharedTable13<__covariant A, __covariant B, __covariant C, __covariant D, __covariant E, __covariant F, __covariant G, __covariant H, __covariant I, __covariant J, __covariant K, __covariant L, __covariant M> : SharedBase
- (instancetype)initWithHeaders:(SharedHeaders13 *)headers rows:(NSArray<SharedRow13<A, B, C, D, E, F, G, H, I, J, K, L, M> *> *)rows __attribute__((swift_name("init(headers:rows:)"))) __attribute__((objc_designated_initializer));
- (SharedHeaders13 *)component1 __attribute__((swift_name("component1()")));
- (NSArray<SharedRow13<A, B, C, D, E, F, G, H, I, J, K, L, M> *> *)component2 __attribute__((swift_name("component2()")));
- (SharedTable13<A, B, C, D, E, F, G, H, I, J, K, L, M> *)doCopyHeaders:(SharedHeaders13 *)headers rows:(NSArray<SharedRow13<A, B, C, D, E, F, G, H, I, J, K, L, M> *> *)rows __attribute__((swift_name("doCopy(headers:rows:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedHeaders13 *headers __attribute__((swift_name("headers")));
@property (readonly) NSArray<SharedRow13<A, B, C, D, E, F, G, H, I, J, K, L, M> *> *rows __attribute__((swift_name("rows")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Table14")))
@interface SharedTable14<__covariant A, __covariant B, __covariant C, __covariant D, __covariant E, __covariant F, __covariant G, __covariant H, __covariant I, __covariant J, __covariant K, __covariant L, __covariant M, __covariant N> : SharedBase
- (instancetype)initWithHeaders:(SharedHeaders14 *)headers rows:(NSArray<SharedRow14<A, B, C, D, E, F, G, H, I, J, K, L, M, N> *> *)rows __attribute__((swift_name("init(headers:rows:)"))) __attribute__((objc_designated_initializer));
- (SharedHeaders14 *)component1 __attribute__((swift_name("component1()")));
- (NSArray<SharedRow14<A, B, C, D, E, F, G, H, I, J, K, L, M, N> *> *)component2 __attribute__((swift_name("component2()")));
- (SharedTable14<A, B, C, D, E, F, G, H, I, J, K, L, M, N> *)doCopyHeaders:(SharedHeaders14 *)headers rows:(NSArray<SharedRow14<A, B, C, D, E, F, G, H, I, J, K, L, M, N> *> *)rows __attribute__((swift_name("doCopy(headers:rows:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedHeaders14 *headers __attribute__((swift_name("headers")));
@property (readonly) NSArray<SharedRow14<A, B, C, D, E, F, G, H, I, J, K, L, M, N> *> *rows __attribute__((swift_name("rows")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Table15")))
@interface SharedTable15<__covariant A, __covariant B, __covariant C, __covariant D, __covariant E, __covariant F, __covariant G, __covariant H, __covariant I, __covariant J, __covariant K, __covariant L, __covariant M, __covariant N, __covariant O> : SharedBase
- (instancetype)initWithHeaders:(SharedHeaders15 *)headers rows:(NSArray<SharedRow15<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O> *> *)rows __attribute__((swift_name("init(headers:rows:)"))) __attribute__((objc_designated_initializer));
- (SharedHeaders15 *)component1 __attribute__((swift_name("component1()")));
- (NSArray<SharedRow15<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O> *> *)component2 __attribute__((swift_name("component2()")));
- (SharedTable15<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O> *)doCopyHeaders:(SharedHeaders15 *)headers rows:(NSArray<SharedRow15<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O> *> *)rows __attribute__((swift_name("doCopy(headers:rows:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedHeaders15 *headers __attribute__((swift_name("headers")));
@property (readonly) NSArray<SharedRow15<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O> *> *rows __attribute__((swift_name("rows")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Table16")))
@interface SharedTable16<__covariant A, __covariant B, __covariant C, __covariant D, __covariant E, __covariant F, __covariant G, __covariant H, __covariant I, __covariant J, __covariant K, __covariant L, __covariant M, __covariant N, __covariant O, __covariant P> : SharedBase
- (instancetype)initWithHeaders:(SharedHeaders16 *)headers rows:(NSArray<SharedRow16<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P> *> *)rows __attribute__((swift_name("init(headers:rows:)"))) __attribute__((objc_designated_initializer));
- (SharedHeaders16 *)component1 __attribute__((swift_name("component1()")));
- (NSArray<SharedRow16<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P> *> *)component2 __attribute__((swift_name("component2()")));
- (SharedTable16<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P> *)doCopyHeaders:(SharedHeaders16 *)headers rows:(NSArray<SharedRow16<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P> *> *)rows __attribute__((swift_name("doCopy(headers:rows:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedHeaders16 *headers __attribute__((swift_name("headers")));
@property (readonly) NSArray<SharedRow16<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P> *> *rows __attribute__((swift_name("rows")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Table17")))
@interface SharedTable17<__covariant A, __covariant B, __covariant C, __covariant D, __covariant E, __covariant F, __covariant G, __covariant H, __covariant I, __covariant J, __covariant K, __covariant L, __covariant M, __covariant N, __covariant O, __covariant P, __covariant Q> : SharedBase
- (instancetype)initWithHeaders:(SharedHeaders17 *)headers rows:(NSArray<SharedRow17<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q> *> *)rows __attribute__((swift_name("init(headers:rows:)"))) __attribute__((objc_designated_initializer));
- (SharedHeaders17 *)component1 __attribute__((swift_name("component1()")));
- (NSArray<SharedRow17<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q> *> *)component2 __attribute__((swift_name("component2()")));
- (SharedTable17<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q> *)doCopyHeaders:(SharedHeaders17 *)headers rows:(NSArray<SharedRow17<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q> *> *)rows __attribute__((swift_name("doCopy(headers:rows:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedHeaders17 *headers __attribute__((swift_name("headers")));
@property (readonly) NSArray<SharedRow17<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q> *> *rows __attribute__((swift_name("rows")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Table18")))
@interface SharedTable18<__covariant A, __covariant B, __covariant C, __covariant D, __covariant E, __covariant F, __covariant G, __covariant H, __covariant I, __covariant J, __covariant K, __covariant L, __covariant M, __covariant N, __covariant O, __covariant P, __covariant Q, __covariant R> : SharedBase
- (instancetype)initWithHeaders:(SharedHeaders18 *)headers rows:(NSArray<SharedRow18<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R> *> *)rows __attribute__((swift_name("init(headers:rows:)"))) __attribute__((objc_designated_initializer));
- (SharedHeaders18 *)component1 __attribute__((swift_name("component1()")));
- (NSArray<SharedRow18<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R> *> *)component2 __attribute__((swift_name("component2()")));
- (SharedTable18<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R> *)doCopyHeaders:(SharedHeaders18 *)headers rows:(NSArray<SharedRow18<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R> *> *)rows __attribute__((swift_name("doCopy(headers:rows:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedHeaders18 *headers __attribute__((swift_name("headers")));
@property (readonly) NSArray<SharedRow18<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R> *> *rows __attribute__((swift_name("rows")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Table19")))
@interface SharedTable19<__covariant A, __covariant B, __covariant C, __covariant D, __covariant E, __covariant F, __covariant G, __covariant H, __covariant I, __covariant J, __covariant K, __covariant L, __covariant M, __covariant N, __covariant O, __covariant P, __covariant Q, __covariant R, __covariant S> : SharedBase
- (instancetype)initWithHeaders:(SharedHeaders19 *)headers rows:(NSArray<SharedRow19<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S> *> *)rows __attribute__((swift_name("init(headers:rows:)"))) __attribute__((objc_designated_initializer));
- (SharedHeaders19 *)component1 __attribute__((swift_name("component1()")));
- (NSArray<SharedRow19<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S> *> *)component2 __attribute__((swift_name("component2()")));
- (SharedTable19<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S> *)doCopyHeaders:(SharedHeaders19 *)headers rows:(NSArray<SharedRow19<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S> *> *)rows __attribute__((swift_name("doCopy(headers:rows:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedHeaders19 *headers __attribute__((swift_name("headers")));
@property (readonly) NSArray<SharedRow19<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S> *> *rows __attribute__((swift_name("rows")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Table2")))
@interface SharedTable2<__covariant A, __covariant B> : SharedBase
- (instancetype)initWithHeaders:(SharedHeaders2 *)headers rows:(NSArray<SharedRow2<A, B> *> *)rows __attribute__((swift_name("init(headers:rows:)"))) __attribute__((objc_designated_initializer));
- (SharedHeaders2 *)component1 __attribute__((swift_name("component1()")));
- (NSArray<SharedRow2<A, B> *> *)component2 __attribute__((swift_name("component2()")));
- (SharedTable2<A, B> *)doCopyHeaders:(SharedHeaders2 *)headers rows:(NSArray<SharedRow2<A, B> *> *)rows __attribute__((swift_name("doCopy(headers:rows:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedHeaders2 *headers __attribute__((swift_name("headers")));
@property (readonly) NSArray<SharedRow2<A, B> *> *rows __attribute__((swift_name("rows")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Table20")))
@interface SharedTable20<__covariant A, __covariant B, __covariant C, __covariant D, __covariant E, __covariant F, __covariant G, __covariant H, __covariant I, __covariant J, __covariant K, __covariant L, __covariant M, __covariant N, __covariant O, __covariant P, __covariant Q, __covariant R, __covariant S, __covariant T> : SharedBase
- (instancetype)initWithHeaders:(SharedHeaders20 *)headers rows:(NSArray<SharedRow20<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T> *> *)rows __attribute__((swift_name("init(headers:rows:)"))) __attribute__((objc_designated_initializer));
- (SharedHeaders20 *)component1 __attribute__((swift_name("component1()")));
- (NSArray<SharedRow20<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T> *> *)component2 __attribute__((swift_name("component2()")));
- (SharedTable20<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T> *)doCopyHeaders:(SharedHeaders20 *)headers rows:(NSArray<SharedRow20<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T> *> *)rows __attribute__((swift_name("doCopy(headers:rows:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedHeaders20 *headers __attribute__((swift_name("headers")));
@property (readonly) NSArray<SharedRow20<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T> *> *rows __attribute__((swift_name("rows")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Table21")))
@interface SharedTable21<__covariant A, __covariant B, __covariant C, __covariant D, __covariant E, __covariant F, __covariant G, __covariant H, __covariant I, __covariant J, __covariant K, __covariant L, __covariant M, __covariant N, __covariant O, __covariant P, __covariant Q, __covariant R, __covariant S, __covariant T, __covariant U> : SharedBase
- (instancetype)initWithHeaders:(SharedHeaders21 *)headers rows:(NSArray<SharedRow21<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U> *> *)rows __attribute__((swift_name("init(headers:rows:)"))) __attribute__((objc_designated_initializer));
- (SharedHeaders21 *)component1 __attribute__((swift_name("component1()")));
- (NSArray<SharedRow21<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U> *> *)component2 __attribute__((swift_name("component2()")));
- (SharedTable21<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U> *)doCopyHeaders:(SharedHeaders21 *)headers rows:(NSArray<SharedRow21<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U> *> *)rows __attribute__((swift_name("doCopy(headers:rows:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedHeaders21 *headers __attribute__((swift_name("headers")));
@property (readonly) NSArray<SharedRow21<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U> *> *rows __attribute__((swift_name("rows")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Table22")))
@interface SharedTable22<__covariant A, __covariant B, __covariant C, __covariant D, __covariant E, __covariant F, __covariant G, __covariant H, __covariant I, __covariant J, __covariant K, __covariant L, __covariant M, __covariant N, __covariant O, __covariant P, __covariant Q, __covariant R, __covariant S, __covariant T, __covariant U, __covariant V> : SharedBase
- (instancetype)initWithHeaders:(SharedHeaders22 *)headers rows:(NSArray<SharedRow22<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V> *> *)rows __attribute__((swift_name("init(headers:rows:)"))) __attribute__((objc_designated_initializer));
- (SharedHeaders22 *)component1 __attribute__((swift_name("component1()")));
- (NSArray<SharedRow22<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V> *> *)component2 __attribute__((swift_name("component2()")));
- (SharedTable22<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V> *)doCopyHeaders:(SharedHeaders22 *)headers rows:(NSArray<SharedRow22<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V> *> *)rows __attribute__((swift_name("doCopy(headers:rows:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedHeaders22 *headers __attribute__((swift_name("headers")));
@property (readonly) NSArray<SharedRow22<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V> *> *rows __attribute__((swift_name("rows")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Table3")))
@interface SharedTable3<__covariant A, __covariant B, __covariant C> : SharedBase
- (instancetype)initWithHeaders:(SharedHeaders3 *)headers rows:(NSArray<SharedRow3<A, B, C> *> *)rows __attribute__((swift_name("init(headers:rows:)"))) __attribute__((objc_designated_initializer));
- (SharedHeaders3 *)component1 __attribute__((swift_name("component1()")));
- (NSArray<SharedRow3<A, B, C> *> *)component2 __attribute__((swift_name("component2()")));
- (SharedTable3<A, B, C> *)doCopyHeaders:(SharedHeaders3 *)headers rows:(NSArray<SharedRow3<A, B, C> *> *)rows __attribute__((swift_name("doCopy(headers:rows:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedHeaders3 *headers __attribute__((swift_name("headers")));
@property (readonly) NSArray<SharedRow3<A, B, C> *> *rows __attribute__((swift_name("rows")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Table4")))
@interface SharedTable4<__covariant A, __covariant B, __covariant C, __covariant D> : SharedBase
- (instancetype)initWithHeaders:(SharedHeaders4 *)headers rows:(NSArray<SharedRow4<A, B, C, D> *> *)rows __attribute__((swift_name("init(headers:rows:)"))) __attribute__((objc_designated_initializer));
- (SharedHeaders4 *)component1 __attribute__((swift_name("component1()")));
- (NSArray<SharedRow4<A, B, C, D> *> *)component2 __attribute__((swift_name("component2()")));
- (SharedTable4<A, B, C, D> *)doCopyHeaders:(SharedHeaders4 *)headers rows:(NSArray<SharedRow4<A, B, C, D> *> *)rows __attribute__((swift_name("doCopy(headers:rows:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedHeaders4 *headers __attribute__((swift_name("headers")));
@property (readonly) NSArray<SharedRow4<A, B, C, D> *> *rows __attribute__((swift_name("rows")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Table5")))
@interface SharedTable5<__covariant A, __covariant B, __covariant C, __covariant D, __covariant E> : SharedBase
- (instancetype)initWithHeaders:(SharedHeaders5 *)headers rows:(NSArray<SharedRow5<A, B, C, D, E> *> *)rows __attribute__((swift_name("init(headers:rows:)"))) __attribute__((objc_designated_initializer));
- (SharedHeaders5 *)component1 __attribute__((swift_name("component1()")));
- (NSArray<SharedRow5<A, B, C, D, E> *> *)component2 __attribute__((swift_name("component2()")));
- (SharedTable5<A, B, C, D, E> *)doCopyHeaders:(SharedHeaders5 *)headers rows:(NSArray<SharedRow5<A, B, C, D, E> *> *)rows __attribute__((swift_name("doCopy(headers:rows:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedHeaders5 *headers __attribute__((swift_name("headers")));
@property (readonly) NSArray<SharedRow5<A, B, C, D, E> *> *rows __attribute__((swift_name("rows")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Table6")))
@interface SharedTable6<__covariant A, __covariant B, __covariant C, __covariant D, __covariant E, __covariant F> : SharedBase
- (instancetype)initWithHeaders:(SharedHeaders6 *)headers rows:(NSArray<SharedRow6<A, B, C, D, E, F> *> *)rows __attribute__((swift_name("init(headers:rows:)"))) __attribute__((objc_designated_initializer));
- (SharedHeaders6 *)component1 __attribute__((swift_name("component1()")));
- (NSArray<SharedRow6<A, B, C, D, E, F> *> *)component2 __attribute__((swift_name("component2()")));
- (SharedTable6<A, B, C, D, E, F> *)doCopyHeaders:(SharedHeaders6 *)headers rows:(NSArray<SharedRow6<A, B, C, D, E, F> *> *)rows __attribute__((swift_name("doCopy(headers:rows:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedHeaders6 *headers __attribute__((swift_name("headers")));
@property (readonly) NSArray<SharedRow6<A, B, C, D, E, F> *> *rows __attribute__((swift_name("rows")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Table7")))
@interface SharedTable7<__covariant A, __covariant B, __covariant C, __covariant D, __covariant E, __covariant F, __covariant G> : SharedBase
- (instancetype)initWithHeaders:(SharedHeaders7 *)headers rows:(NSArray<SharedRow7<A, B, C, D, E, F, G> *> *)rows __attribute__((swift_name("init(headers:rows:)"))) __attribute__((objc_designated_initializer));
- (SharedHeaders7 *)component1 __attribute__((swift_name("component1()")));
- (NSArray<SharedRow7<A, B, C, D, E, F, G> *> *)component2 __attribute__((swift_name("component2()")));
- (SharedTable7<A, B, C, D, E, F, G> *)doCopyHeaders:(SharedHeaders7 *)headers rows:(NSArray<SharedRow7<A, B, C, D, E, F, G> *> *)rows __attribute__((swift_name("doCopy(headers:rows:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedHeaders7 *headers __attribute__((swift_name("headers")));
@property (readonly) NSArray<SharedRow7<A, B, C, D, E, F, G> *> *rows __attribute__((swift_name("rows")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Table8")))
@interface SharedTable8<__covariant A, __covariant B, __covariant C, __covariant D, __covariant E, __covariant F, __covariant G, __covariant H> : SharedBase
- (instancetype)initWithHeaders:(SharedHeaders8 *)headers rows:(NSArray<SharedRow8<A, B, C, D, E, F, G, H> *> *)rows __attribute__((swift_name("init(headers:rows:)"))) __attribute__((objc_designated_initializer));
- (SharedHeaders8 *)component1 __attribute__((swift_name("component1()")));
- (NSArray<SharedRow8<A, B, C, D, E, F, G, H> *> *)component2 __attribute__((swift_name("component2()")));
- (SharedTable8<A, B, C, D, E, F, G, H> *)doCopyHeaders:(SharedHeaders8 *)headers rows:(NSArray<SharedRow8<A, B, C, D, E, F, G, H> *> *)rows __attribute__((swift_name("doCopy(headers:rows:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedHeaders8 *headers __attribute__((swift_name("headers")));
@property (readonly) NSArray<SharedRow8<A, B, C, D, E, F, G, H> *> *rows __attribute__((swift_name("rows")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Table9")))
@interface SharedTable9<__covariant A, __covariant B, __covariant C, __covariant D, __covariant E, __covariant F, __covariant G, __covariant H, __covariant I> : SharedBase
- (instancetype)initWithHeaders:(SharedHeaders9 *)headers rows:(NSArray<SharedRow9<A, B, C, D, E, F, G, H, I> *> *)rows __attribute__((swift_name("init(headers:rows:)"))) __attribute__((objc_designated_initializer));
- (SharedHeaders9 *)component1 __attribute__((swift_name("component1()")));
- (NSArray<SharedRow9<A, B, C, D, E, F, G, H, I> *> *)component2 __attribute__((swift_name("component2()")));
- (SharedTable9<A, B, C, D, E, F, G, H, I> *)doCopyHeaders:(SharedHeaders9 *)headers rows:(NSArray<SharedRow9<A, B, C, D, E, F, G, H, I> *> *)rows __attribute__((swift_name("doCopy(headers:rows:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedHeaders9 *headers __attribute__((swift_name("headers")));
@property (readonly) NSArray<SharedRow9<A, B, C, D, E, F, G, H, I> *> *rows __attribute__((swift_name("rows")));
@end;

__attribute__((swift_name("ElementResult")))
@interface SharedElementResult<__covariant T> : SharedBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (SharedKotlinThrowable * _Nullable)error __attribute__((swift_name("error()")));
- (T _Nullable)value __attribute__((swift_name("value()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ElementFail")))
@interface SharedElementFail<__covariant T> : SharedElementResult<T>
- (instancetype)initWithT:(T _Nullable)t throwable:(SharedKotlinThrowable *)throwable __attribute__((swift_name("init(t:throwable:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (SharedKotlinThrowable * _Nullable)error __attribute__((swift_name("error()")));
- (T _Nullable)value __attribute__((swift_name("value()")));
@property (readonly) T _Nullable t __attribute__((swift_name("t")));
@property (readonly) SharedKotlinThrowable *throwable __attribute__((swift_name("throwable")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ElementPass")))
@interface SharedElementPass<__covariant T> : SharedElementResult<T>
- (instancetype)initWithT:(T _Nullable)t __attribute__((swift_name("init(t:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (SharedKotlinThrowable * _Nullable)error __attribute__((swift_name("error()")));
- (T _Nullable)value __attribute__((swift_name("value()")));
@property (readonly) T _Nullable t __attribute__((swift_name("t")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Platform")))
@interface SharedPlatform : SharedKotlinEnum<SharedPlatform *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedPlatform *jvm __attribute__((swift_name("jvm")));
@property (class, readonly) SharedPlatform *js __attribute__((swift_name("js")));
@property (class, readonly) SharedPlatform *native __attribute__((swift_name("native")));
+ (SharedKotlinArray<SharedPlatform *> *)values __attribute__((swift_name("values()")));
@end;

__attribute__((swift_name("Reflection")))
@protocol SharedReflection
@required
- (NSArray<id<SharedKotlinAnnotation>> *)annotationsKclass:(id<SharedKotlinKClass>)kclass recursive:(BOOL)recursive __attribute__((swift_name("annotations(kclass:recursive:)")));
- (NSString * _Nullable)fqnKclass:(id<SharedKotlinKClass>)kclass __attribute__((swift_name("fqn(kclass:)")));
- (BOOL)isDataClassKclass:(id<SharedKotlinKClass>)kclass __attribute__((swift_name("isDataClass(kclass:)")));
- (BOOL)isEnumClassKclass:(id<SharedKotlinKClass>)kclass __attribute__((swift_name("isEnumClass(kclass:)")));
- (BOOL)isPublicKclass:(id<SharedKotlinKClass>)kclass __attribute__((swift_name("isPublic(kclass:)")));
- (id)doNewInstanceNoArgConstructorKlass:(id<SharedKotlinKClass>)klass __attribute__((swift_name("doNewInstanceNoArgConstructor(klass:)")));
- (id)doNewInstanceNoArgConstructorOrObjectInstanceKlass:(id<SharedKotlinKClass>)klass __attribute__((swift_name("doNewInstanceNoArgConstructorOrObjectInstance(klass:)")));
- (NSArray<NSString *> * _Nullable)paramNamesFn:(id)fn __attribute__((swift_name("paramNames(fn:)")));
- (NSArray<SharedProperty *> *)primaryConstructorMembersKlass:(id<SharedKotlinKClass>)klass __attribute__((swift_name("primaryConstructorMembers(klass:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("BasicReflection")))
@interface SharedBasicReflection : SharedBase <SharedReflection>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)basicReflection __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedBasicReflection *shared __attribute__((swift_name("shared")));
- (NSArray<id<SharedKotlinAnnotation>> *)annotationsKclass:(id<SharedKotlinKClass>)kclass recursive:(BOOL)recursive __attribute__((swift_name("annotations(kclass:recursive:)")));
- (NSString * _Nullable)fqnKclass:(id<SharedKotlinKClass>)kclass __attribute__((swift_name("fqn(kclass:)")));
- (BOOL)isDataClassKclass:(id<SharedKotlinKClass>)kclass __attribute__((swift_name("isDataClass(kclass:)")));
- (BOOL)isEnumClassKclass:(id<SharedKotlinKClass>)kclass __attribute__((swift_name("isEnumClass(kclass:)")));
- (BOOL)isPublicKclass:(id<SharedKotlinKClass>)kclass __attribute__((swift_name("isPublic(kclass:)")));
- (id)doNewInstanceNoArgConstructorKlass:(id<SharedKotlinKClass>)klass __attribute__((swift_name("doNewInstanceNoArgConstructor(klass:)")));
- (id)doNewInstanceNoArgConstructorOrObjectInstanceKlass:(id<SharedKotlinKClass>)klass __attribute__((swift_name("doNewInstanceNoArgConstructorOrObjectInstance(klass:)")));
- (NSArray<NSString *> * _Nullable)paramNamesFn:(id)fn __attribute__((swift_name("paramNames(fn:)")));
- (NSArray<SharedProperty *> *)primaryConstructorMembersKlass:(id<SharedKotlinKClass>)klass __attribute__((swift_name("primaryConstructorMembers(klass:)")));
@end;

__attribute__((swift_name("StackTraces")))
@protocol SharedStackTraces
@required
- (SharedKotlinThrowable *)cleanStackTraceThrowable:(SharedKotlinThrowable *)throwable __attribute__((swift_name("cleanStackTrace(throwable:)")));
- (SharedKotlinThrowable *)rootThrowable:(SharedKotlinThrowable *)throwable __attribute__((swift_name("root(throwable:)")));
- (NSString * _Nullable)throwableLocationT:(SharedKotlinThrowable *)t __attribute__((swift_name("throwableLocation(t:)")));
- (NSArray<NSString *> * _Nullable)throwableLocationT:(SharedKotlinThrowable *)t n:(int32_t)n __attribute__((swift_name("throwableLocation(t:n:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("BasicStackTraces")))
@interface SharedBasicStackTraces : SharedBase <SharedStackTraces>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)basicStackTraces __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedBasicStackTraces *shared __attribute__((swift_name("shared")));
- (SharedKotlinThrowable *)cleanStackTraceThrowable:(SharedKotlinThrowable *)throwable __attribute__((swift_name("cleanStackTrace(throwable:)")));
- (SharedKotlinThrowable *)rootThrowable:(SharedKotlinThrowable *)throwable __attribute__((swift_name("root(throwable:)")));
- (NSArray<NSString *> * _Nullable)throwableLocationT:(SharedKotlinThrowable *)t n:(int32_t)n __attribute__((swift_name("throwableLocation(t:n:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Logger_")))
@interface SharedLogger : SharedBase
- (instancetype)initWithKclass:(id<SharedKotlinKClass>)kclass __attribute__((swift_name("init(kclass:)"))) __attribute__((objc_designated_initializer));
- (void)logF:(SharedKotlinPair<NSString *, NSString *> *(^)(void))f __attribute__((swift_name("log(f:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Property")))
@interface SharedProperty : SharedBase
- (instancetype)initWithName:(NSString *)name type:(id<SharedKotlinKType>)type call:(id _Nullable (^)(id))call __attribute__((swift_name("init(name:type:call:)"))) __attribute__((objc_designated_initializer));
- (NSString *)component1 __attribute__((swift_name("component1()")));
- (id<SharedKotlinKType>)component2 __attribute__((swift_name("component2()")));
- (id _Nullable (^)(id))component3 __attribute__((swift_name("component3()")));
- (SharedProperty *)doCopyName:(NSString *)name type:(id<SharedKotlinKType>)type call:(id _Nullable (^)(id))call __attribute__((swift_name("doCopy(name:type:call:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) id _Nullable (^call)(id) __attribute__((swift_name("call")));
@property (readonly) NSString *name __attribute__((swift_name("name")));
@property (readonly) id<SharedKotlinKType> type __attribute__((swift_name("type")));
@end;

__attribute__((swift_name("KotlinReadOnlyProperty")))
@protocol SharedKotlinReadOnlyProperty
@required
- (id _Nullable)getValueThisRef:(id _Nullable)thisRef property:(id<SharedKotlinKProperty>)property __attribute__((swift_name("getValue(thisRef:property:)")));
@end;

__attribute__((swift_name("KotlinReadWriteProperty")))
@protocol SharedKotlinReadWriteProperty <SharedKotlinReadOnlyProperty>
@required
- (void)setValueThisRef:(id _Nullable)thisRef property:(id<SharedKotlinKProperty>)property value:(id _Nullable)value __attribute__((swift_name("setValue(thisRef:property:value:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AtomicProperty")))
@interface SharedAtomicProperty<T, V> : SharedBase <SharedKotlinReadWriteProperty>
- (instancetype)initWithDefaultValue:(V _Nullable (^)(void))defaultValue __attribute__((swift_name("init(defaultValue:)"))) __attribute__((objc_designated_initializer));
- (V _Nullable)getValueThisRef:(T _Nullable)thisRef property:(id<SharedKotlinKProperty>)property __attribute__((swift_name("getValue(thisRef:property:)")));
- (void)setValueThisRef:(T _Nullable)thisRef property:(id<SharedKotlinKProperty>)property value:(V _Nullable)value __attribute__((swift_name("setValue(thisRef:property:value:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AtomicReference")))
@interface SharedAtomicReference<T> : SharedBase
- (instancetype)initWithInitialValue:(T _Nullable)initialValue __attribute__((swift_name("init(initialValue:)"))) __attribute__((objc_designated_initializer));
- (BOOL)compareAndSetExpectedValue:(T _Nullable)expectedValue newValue:(T _Nullable)newValue __attribute__((swift_name("compareAndSet(expectedValue:newValue:)")));
@property T _Nullable value __attribute__((swift_name("value")));
@end;

__attribute__((swift_name("CoroutineScope")))
@protocol SharedCoroutineScope
@required
@property (readonly) id<SharedKotlinCoroutineContext> coroutineContext __attribute__((swift_name("coroutineContext")));
@end;

__attribute__((swift_name("Closeable_")))
@protocol SharedCloseable_
@required
- (void)close __attribute__((swift_name("close()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpClient")))
@interface SharedHttpClient : SharedBase <SharedCoroutineScope, SharedCloseable_>
- (instancetype)initWithEngine:(id<SharedHttpClientEngine>)engine userConfig:(SharedHttpClientConfig<SharedHttpClientEngineConfig *> *)userConfig __attribute__((swift_name("init(engine:userConfig:)"))) __attribute__((objc_designated_initializer));
- (void)close __attribute__((swift_name("close()")));
- (SharedHttpClient *)configBlock:(void (^)(SharedHttpClientConfig<id> *))block __attribute__((swift_name("config(block:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)executeBuilder:(SharedHttpRequestBuilder *)builder completionHandler:(void (^)(SharedHttpClientCall * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("execute(builder:completionHandler:)"))) __attribute__((unavailable("Unbound [HttpClientCall] is deprecated. Consider using [request<HttpResponse>(builder)] instead.")));
- (BOOL)isSupportedCapability:(id<SharedHttpClientEngineCapability>)capability __attribute__((swift_name("isSupported(capability:)")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) id<SharedAttributes> attributes __attribute__((swift_name("attributes")));
@property (readonly) id<SharedKotlinCoroutineContext> coroutineContext __attribute__((swift_name("coroutineContext")));
@property (readonly) SharedCoroutineDispatcher *dispatcher __attribute__((swift_name("dispatcher"))) __attribute__((unavailable("[dispatcher] is deprecated. Use coroutineContext instead.")));
@property (readonly) id<SharedHttpClientEngine> engine __attribute__((swift_name("engine")));
@property (readonly) SharedHttpClientEngineConfig *engineConfig __attribute__((swift_name("engineConfig")));
@property (readonly) SharedHttpReceivePipeline *receivePipeline __attribute__((swift_name("receivePipeline")));
@property (readonly) SharedHttpRequestPipeline *requestPipeline __attribute__((swift_name("requestPipeline")));
@property (readonly) SharedHttpResponsePipeline *responsePipeline __attribute__((swift_name("responsePipeline")));
@property (readonly) SharedHttpSendPipeline *sendPipeline __attribute__((swift_name("sendPipeline")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpClientConfig")))
@interface SharedHttpClientConfig<T> : SharedBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (SharedHttpClientConfig<T> *)clone __attribute__((swift_name("clone()")));
- (void)engineBlock:(void (^)(T))block __attribute__((swift_name("engine(block:)")));
- (void)installClient:(SharedHttpClient *)client __attribute__((swift_name("install(client:)")));
- (void)installFeature:(id<SharedHttpClientFeature>)feature configure:(void (^)(id))configure __attribute__((swift_name("install(feature:configure:)")));
- (void)installKey:(NSString *)key block:(void (^)(SharedHttpClient *))block __attribute__((swift_name("install(key:block:)")));
- (void)plusAssignOther:(SharedHttpClientConfig<T> *)other __attribute__((swift_name("plusAssign(other:)")));
@property BOOL developmentMode __attribute__((swift_name("developmentMode")));
@property BOOL expectSuccess __attribute__((swift_name("expectSuccess")));
@property BOOL followRedirects __attribute__((swift_name("followRedirects")));
@property BOOL useDefaultTransformers __attribute__((swift_name("useDefaultTransformers")));
@end;

__attribute__((swift_name("KotlinIllegalStateException")))
@interface SharedKotlinIllegalStateException : SharedKotlinRuntimeException
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (instancetype)initWithMessage:(NSString * _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithCause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DoubleReceiveException")))
@interface SharedDoubleReceiveException : SharedKotlinIllegalStateException
- (instancetype)initWithCall:(SharedHttpClientCall *)call __attribute__((swift_name("init(call:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithCause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (readonly) NSString *message __attribute__((swift_name("message")));
@end;

__attribute__((swift_name("HttpClientCall")))
@interface SharedHttpClientCall : SharedBase <SharedCoroutineScope>
@property (class, readonly, getter=companion) SharedHttpClientCallCompanion *companion __attribute__((swift_name("companion")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)getResponseContentWithCompletionHandler:(void (^)(id<SharedByteReadChannel> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getResponseContent(completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)receiveInfo:(SharedTypeInfo *)info completionHandler:(void (^)(id _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("receive(info:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)receiveInfo:(id<SharedTypeInfo>)info completionHandler_:(void (^)(id _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("receive(info:completionHandler_:)")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) BOOL allowDoubleReceive __attribute__((swift_name("allowDoubleReceive")));
@property (readonly) id<SharedAttributes> attributes __attribute__((swift_name("attributes")));
@property (readonly) SharedHttpClient * _Nullable client __attribute__((swift_name("client")));
@property (readonly) id<SharedKotlinCoroutineContext> coroutineContext __attribute__((swift_name("coroutineContext")));
@property (readonly) id<SharedHttpRequest> request __attribute__((swift_name("request")));
@property (readonly) SharedHttpResponse *response __attribute__((swift_name("response")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpClientCall.Companion")))
@interface SharedHttpClientCallCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedHttpClientCallCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) SharedAttributeKey<id> *CustomResponse __attribute__((swift_name("CustomResponse"))) __attribute__((deprecated("This is going to be removed. Please file a ticket with clarification why and what for do you need it.")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpEngineCall")))
@interface SharedHttpEngineCall : SharedBase
- (instancetype)initWithRequest:(id<SharedHttpRequest>)request response:(SharedHttpResponse *)response __attribute__((swift_name("init(request:response:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable("HttpEngineCall deprecated.")));
- (id<SharedHttpRequest>)component1 __attribute__((swift_name("component1()")));
- (SharedHttpResponse *)component2 __attribute__((swift_name("component2()")));
- (SharedHttpEngineCall *)doCopyRequest:(id<SharedHttpRequest>)request response:(SharedHttpResponse *)response __attribute__((swift_name("doCopy(request:response:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) id<SharedHttpRequest> request __attribute__((swift_name("request")));
@property (readonly) SharedHttpResponse *response __attribute__((swift_name("response")));
@end;

__attribute__((swift_name("KotlinUnsupportedOperationException")))
@interface SharedKotlinUnsupportedOperationException : SharedKotlinRuntimeException
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (instancetype)initWithMessage:(NSString * _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithCause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("NoTransformationFoundException")))
@interface SharedNoTransformationFoundException : SharedKotlinUnsupportedOperationException
- (instancetype)initWithResponse:(SharedHttpResponse *)response from:(id<SharedKotlinKClass>)from to:(id<SharedKotlinKClass>)to __attribute__((swift_name("init(response:from:to:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithCause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (readonly) NSString * _Nullable message __attribute__((swift_name("message")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ReceivePipelineException")))
@interface SharedReceivePipelineException : SharedKotlinIllegalStateException
- (instancetype)initWithRequest:(SharedHttpClientCall *)request info:(id<SharedTypeInfo>)info cause:(SharedKotlinThrowable *)cause __attribute__((swift_name("init(request:info:cause:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithRequest:(SharedHttpClientCall *)request info:(SharedTypeInfo *)info cause_:(SharedKotlinThrowable *)cause __attribute__((swift_name("init(request:info:cause_:)"))) __attribute__((objc_designated_initializer)) __attribute__((deprecated("Please use overload with io.ktor.util.reflect.TypeInfo parameter")));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithCause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (readonly) SharedKotlinThrowable *cause __attribute__((swift_name("cause")));
@property (readonly) SharedTypeInfo *info __attribute__((swift_name("info")));
@property (readonly) SharedHttpClientCall *request __attribute__((swift_name("request")));
@end;

__attribute__((swift_name("TypeInfo_")))
@protocol SharedTypeInfo
@required
@property (readonly) id<SharedKotlinKType> _Nullable kotlinType __attribute__((swift_name("kotlinType")));
@property (readonly) id<SharedKotlinKType> reifiedType __attribute__((swift_name("reifiedType")));
@property (readonly) id<SharedKotlinKClass> type __attribute__((swift_name("type")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TypeInfo")))
@interface SharedTypeInfo : SharedBase <SharedTypeInfo>
- (instancetype)initWithType:(id<SharedKotlinKClass>)type reifiedType:(id<SharedKotlinKType>)reifiedType kotlinType:(id<SharedKotlinKType> _Nullable)kotlinType __attribute__((swift_name("init(type:reifiedType:kotlinType:)"))) __attribute__((objc_designated_initializer)) __attribute__((deprecated("This was moved to another package.")));
- (id<SharedKotlinKClass>)component1 __attribute__((swift_name("component1()")));
- (id<SharedKotlinKType>)component2 __attribute__((swift_name("component2()")));
- (id<SharedKotlinKType> _Nullable)component3 __attribute__((swift_name("component3()")));
- (SharedTypeInfo *)doCopyType:(id<SharedKotlinKClass>)type reifiedType:(id<SharedKotlinKType>)reifiedType kotlinType:(id<SharedKotlinKType> _Nullable)kotlinType __attribute__((swift_name("doCopy(type:reifiedType:kotlinType:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) id<SharedKotlinKType> _Nullable kotlinType __attribute__((swift_name("kotlinType")));
@property (readonly) id<SharedKotlinKType> reifiedType __attribute__((swift_name("reifiedType")));
@property (readonly) id<SharedKotlinKClass> type __attribute__((swift_name("type")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("UnsupportedContentTypeException")))
@interface SharedUnsupportedContentTypeException : SharedKotlinIllegalStateException
- (instancetype)initWithContent:(SharedOutgoingContent *)content __attribute__((swift_name("init(content:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithCause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end;

__attribute__((swift_name("KotlinIllegalArgumentException")))
@interface SharedKotlinIllegalArgumentException : SharedKotlinRuntimeException
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (instancetype)initWithMessage:(NSString * _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithCause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("UnsupportedUpgradeProtocolException")))
@interface SharedUnsupportedUpgradeProtocolException : SharedKotlinIllegalArgumentException
- (instancetype)initWithUrl:(SharedUrl *)url __attribute__((swift_name("init(url:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithCause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CacheControl")))
@interface SharedCacheControl : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)cacheControl __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedCacheControl *shared __attribute__((swift_name("shared")));
@property (readonly) NSString *MAX_AGE __attribute__((swift_name("MAX_AGE")));
@property (readonly) NSString *MAX_STALE __attribute__((swift_name("MAX_STALE")));
@property (readonly) NSString *MIN_FRESH __attribute__((swift_name("MIN_FRESH")));
@property (readonly) NSString *MUST_REVALIDATE __attribute__((swift_name("MUST_REVALIDATE")));
@property (readonly) NSString *NO_CACHE __attribute__((swift_name("NO_CACHE")));
@property (readonly) NSString *NO_STORE __attribute__((swift_name("NO_STORE")));
@property (readonly) NSString *NO_TRANSFORM __attribute__((swift_name("NO_TRANSFORM")));
@property (readonly) NSString *ONLY_IF_CACHED __attribute__((swift_name("ONLY_IF_CACHED")));
@property (readonly) NSString *PRIVATE __attribute__((swift_name("PRIVATE")));
@property (readonly) NSString *PROXY_REVALIDATE __attribute__((swift_name("PROXY_REVALIDATE")));
@property (readonly) NSString *PUBLIC __attribute__((swift_name("PUBLIC")));
@property (readonly) NSString *S_MAX_AGE __attribute__((swift_name("S_MAX_AGE")));
@end;

__attribute__((swift_name("OutgoingContent")))
@interface SharedOutgoingContent : SharedBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (id _Nullable)getPropertyKey:(SharedAttributeKey<id> *)key __attribute__((swift_name("getProperty(key:)")));
- (void)setPropertyKey:(SharedAttributeKey<id> *)key value:(id _Nullable)value __attribute__((swift_name("setProperty(key:value:)")));
@property (readonly) SharedLong * _Nullable contentLength __attribute__((swift_name("contentLength")));
@property (readonly) SharedContentType * _Nullable contentType __attribute__((swift_name("contentType")));
@property (readonly) id<SharedHeaders> headers __attribute__((swift_name("headers")));
@property (readonly) SharedHttpStatusCode * _Nullable status __attribute__((swift_name("status")));
@end;

__attribute__((swift_name("OutgoingContent.NoContent")))
@interface SharedOutgoingContentNoContent : SharedOutgoingContent
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("EmptyContent")))
@interface SharedEmptyContent : SharedOutgoingContentNoContent
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
+ (instancetype)emptyContent __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedEmptyContent *shared __attribute__((swift_name("shared")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedLong *contentLength __attribute__((swift_name("contentLength")));
@end;

__attribute__((swift_name("ClientUpgradeContent")))
@interface SharedClientUpgradeContent : SharedOutgoingContentNoContent
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)pipeToOutput:(id<SharedByteWriteChannel>)output completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("pipeTo(output:completionHandler:)")));
- (void)verifyHeaders:(id<SharedHeaders>)headers __attribute__((swift_name("verify(headers:)")));
@property (readonly) id<SharedByteWriteChannel> output __attribute__((swift_name("output")));
@end;

__attribute__((swift_name("HttpMessage")))
@protocol SharedHttpMessage
@required
@property (readonly) id<SharedHeaders> headers_ __attribute__((swift_name("headers_")));
@end;

__attribute__((swift_name("HttpRequest")))
@protocol SharedHttpRequest <SharedHttpMessage, SharedCoroutineScope>
@required
@property (readonly) id<SharedAttributes> attributes __attribute__((swift_name("attributes")));
@property (readonly) SharedHttpClientCall *call __attribute__((swift_name("call")));
@property (readonly) SharedOutgoingContent *content __attribute__((swift_name("content")));
@property (readonly) SharedHttpMethod *method __attribute__((swift_name("method")));
@property (readonly) SharedUrl *url __attribute__((swift_name("url")));
@end;

__attribute__((swift_name("DefaultHttpRequest")))
@interface SharedDefaultHttpRequest : SharedBase <SharedHttpRequest>
- (instancetype)initWithCall:(SharedHttpClientCall *)call data:(SharedHttpRequestData *)data __attribute__((swift_name("init(call:data:)"))) __attribute__((objc_designated_initializer));
@property (readonly) id<SharedAttributes> attributes __attribute__((swift_name("attributes")));
@property (readonly) SharedHttpClientCall *call __attribute__((swift_name("call")));
@property (readonly) SharedOutgoingContent *content __attribute__((swift_name("content")));
@property (readonly) id<SharedKotlinCoroutineContext> coroutineContext __attribute__((swift_name("coroutineContext")));
@property (readonly) id<SharedHeaders> headers_ __attribute__((swift_name("headers_")));
@property (readonly) SharedHttpMethod *method __attribute__((swift_name("method")));
@property (readonly) SharedUrl *url __attribute__((swift_name("url")));
@end;

__attribute__((swift_name("HttpMessageBuilder")))
@protocol SharedHttpMessageBuilder
@required
@property (readonly) SharedHeadersBuilder *headers_ __attribute__((swift_name("headers_")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpRequestBuilder")))
@interface SharedHttpRequestBuilder : SharedBase <SharedHttpMessageBuilder>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
@property (class, readonly, getter=companion) SharedHttpRequestBuilderCompanion *companion __attribute__((swift_name("companion")));
- (SharedHttpRequestData *)build __attribute__((swift_name("build()")));
- (id _Nullable)getCapabilityOrNullKey:(id<SharedHttpClientEngineCapability>)key __attribute__((swift_name("getCapabilityOrNull(key:)")));
- (void)setAttributesBlock:(void (^)(id<SharedAttributes>))block __attribute__((swift_name("setAttributes(block:)")));
- (void)setCapabilityKey:(id<SharedHttpClientEngineCapability>)key capability:(id)capability __attribute__((swift_name("setCapability(key:capability:)")));
- (SharedHttpRequestBuilder *)takeFromBuilder:(SharedHttpRequestBuilder *)builder __attribute__((swift_name("takeFrom(builder:)")));
- (SharedHttpRequestBuilder *)takeFromWithExecutionContextBuilder:(SharedHttpRequestBuilder *)builder __attribute__((swift_name("takeFromWithExecutionContext(builder:)")));
- (void)urlBlock:(void (^)(SharedURLBuilder *, SharedURLBuilder *))block __attribute__((swift_name("url(block:)")));
@property (readonly) id<SharedAttributes> attributes __attribute__((swift_name("attributes")));
@property id body __attribute__((swift_name("body")));
@property (readonly) id<SharedJob> executionContext __attribute__((swift_name("executionContext")));
@property (readonly) SharedHeadersBuilder *headers_ __attribute__((swift_name("headers_")));
@property SharedHttpMethod *method __attribute__((swift_name("method")));
@property (readonly) SharedURLBuilder *url __attribute__((swift_name("url")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpRequestBuilder.Companion")))
@interface SharedHttpRequestBuilderCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedHttpRequestBuilderCompanion *shared __attribute__((swift_name("shared")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpRequestData")))
@interface SharedHttpRequestData : SharedBase
- (instancetype)initWithUrl:(SharedUrl *)url method:(SharedHttpMethod *)method headers:(id<SharedHeaders>)headers body:(SharedOutgoingContent *)body executionContext:(id<SharedJob>)executionContext attributes:(id<SharedAttributes>)attributes __attribute__((swift_name("init(url:method:headers:body:executionContext:attributes:)"))) __attribute__((objc_designated_initializer));
- (id _Nullable)getCapabilityOrNullKey:(id<SharedHttpClientEngineCapability>)key __attribute__((swift_name("getCapabilityOrNull(key:)")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) id<SharedAttributes> attributes __attribute__((swift_name("attributes")));
@property (readonly) SharedOutgoingContent *body __attribute__((swift_name("body")));
@property (readonly) id<SharedJob> executionContext __attribute__((swift_name("executionContext")));
@property (readonly) id<SharedHeaders> headers __attribute__((swift_name("headers")));
@property (readonly) SharedHttpMethod *method __attribute__((swift_name("method")));
@property (readonly) SharedUrl *url __attribute__((swift_name("url")));
@end;

__attribute__((swift_name("Pipeline")))
@interface SharedPipeline<TSubject, TContext> : SharedBase
- (instancetype)initWithPhase:(SharedPipelinePhase *)phase interceptors:(NSArray<id<SharedKotlinSuspendFunction2>> *)interceptors __attribute__((swift_name("init(phase:interceptors:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithPhases:(SharedKotlinArray<SharedPipelinePhase *> *)phases __attribute__((swift_name("init(phases:)"))) __attribute__((objc_designated_initializer));
- (void)addPhasePhase:(SharedPipelinePhase *)phase __attribute__((swift_name("addPhase(phase:)")));
- (void)afterIntercepted __attribute__((swift_name("afterIntercepted()")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)executeContext:(TContext)context subject:(TSubject)subject completionHandler:(void (^)(TSubject _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("execute(context:subject:completionHandler:)")));
- (void)insertPhaseAfterReference:(SharedPipelinePhase *)reference phase:(SharedPipelinePhase *)phase __attribute__((swift_name("insertPhaseAfter(reference:phase:)")));
- (void)insertPhaseBeforeReference:(SharedPipelinePhase *)reference phase:(SharedPipelinePhase *)phase __attribute__((swift_name("insertPhaseBefore(reference:phase:)")));
- (void)interceptPhase:(SharedPipelinePhase *)phase block:(id<SharedKotlinSuspendFunction2>)block __attribute__((swift_name("intercept(phase:block:)")));
- (void)mergeFrom:(SharedPipeline<TSubject, TContext> *)from __attribute__((swift_name("merge(from:)")));
@property (readonly) id<SharedAttributes> attributes __attribute__((swift_name("attributes")));
@property (readonly) BOOL developmentMode __attribute__((swift_name("developmentMode")));
@property (readonly) BOOL isEmpty __attribute__((swift_name("isEmpty")));
@property (readonly) NSArray<SharedPipelinePhase *> *items __attribute__((swift_name("items")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpRequestPipeline")))
@interface SharedHttpRequestPipeline : SharedPipeline<id, SharedHttpRequestBuilder *>
- (instancetype)initWithDevelopmentMode:(BOOL)developmentMode __attribute__((swift_name("init(developmentMode:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithPhase:(SharedPipelinePhase *)phase interceptors:(NSArray<id<SharedKotlinSuspendFunction2>> *)interceptors __attribute__((swift_name("init(phase:interceptors:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithPhases:(SharedKotlinArray<SharedPipelinePhase *> *)phases __attribute__((swift_name("init(phases:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedHttpRequestPipelinePhases *companion __attribute__((swift_name("companion")));
@property (readonly) BOOL developmentMode __attribute__((swift_name("developmentMode")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpRequestPipeline.Phases")))
@interface SharedHttpRequestPipelinePhases : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)phases __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedHttpRequestPipelinePhases *shared __attribute__((swift_name("shared")));
@property (readonly) SharedPipelinePhase *Before __attribute__((swift_name("Before")));
@property (readonly) SharedPipelinePhase *Render __attribute__((swift_name("Render")));
@property (readonly) SharedPipelinePhase *Send __attribute__((swift_name("Send")));
@property (readonly) SharedPipelinePhase *State __attribute__((swift_name("State")));
@property (readonly) SharedPipelinePhase *Transform __attribute__((swift_name("Transform")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpResponseData")))
@interface SharedHttpResponseData : SharedBase
- (instancetype)initWithStatusCode:(SharedHttpStatusCode *)statusCode requestTime:(SharedGMTDate *)requestTime headers:(id<SharedHeaders>)headers version:(SharedHttpProtocolVersion *)version body:(id)body callContext:(id<SharedKotlinCoroutineContext>)callContext __attribute__((swift_name("init(statusCode:requestTime:headers:version:body:callContext:)"))) __attribute__((objc_designated_initializer));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) id body __attribute__((swift_name("body")));
@property (readonly) id<SharedKotlinCoroutineContext> callContext __attribute__((swift_name("callContext")));
@property (readonly) id<SharedHeaders> headers __attribute__((swift_name("headers")));
@property (readonly) SharedGMTDate *requestTime __attribute__((swift_name("requestTime")));
@property (readonly) SharedGMTDate *responseTime __attribute__((swift_name("responseTime")));
@property (readonly) SharedHttpStatusCode *statusCode __attribute__((swift_name("statusCode")));
@property (readonly) SharedHttpProtocolVersion *version __attribute__((swift_name("version")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpSendPipeline")))
@interface SharedHttpSendPipeline : SharedPipeline<id, SharedHttpRequestBuilder *>
- (instancetype)initWithDevelopmentMode:(BOOL)developmentMode __attribute__((swift_name("init(developmentMode:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithPhase:(SharedPipelinePhase *)phase interceptors:(NSArray<id<SharedKotlinSuspendFunction2>> *)interceptors __attribute__((swift_name("init(phase:interceptors:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithPhases:(SharedKotlinArray<SharedPipelinePhase *> *)phases __attribute__((swift_name("init(phases:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedHttpSendPipelinePhases *companion __attribute__((swift_name("companion")));
@property (readonly) BOOL developmentMode __attribute__((swift_name("developmentMode")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpSendPipeline.Phases")))
@interface SharedHttpSendPipelinePhases : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)phases __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedHttpSendPipelinePhases *shared __attribute__((swift_name("shared")));
@property (readonly) SharedPipelinePhase *Before __attribute__((swift_name("Before")));
@property (readonly) SharedPipelinePhase *Engine __attribute__((swift_name("Engine")));
@property (readonly) SharedPipelinePhase *Monitoring __attribute__((swift_name("Monitoring")));
@property (readonly) SharedPipelinePhase *Receive __attribute__((swift_name("Receive")));
@property (readonly) SharedPipelinePhase *State __attribute__((swift_name("State")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FormBuilder")))
@interface SharedFormBuilder : SharedBase
- (void)appendPart:(SharedFormPart<id> *)part __attribute__((swift_name("append(part:)")));
- (void)appendKey:(NSString *)key value:(id)value headers:(id<SharedHeaders>)headers __attribute__((swift_name("append(key:value:headers:)")));
- (void)appendKey:(NSString *)key value:(SharedInputProvider *)value headers_:(id<SharedHeaders>)headers __attribute__((swift_name("append(key:value:headers_:)")));
- (void)appendKey:(NSString *)key value:(SharedByteReadPacket *)value headers__:(id<SharedHeaders>)headers __attribute__((swift_name("append(key:value:headers__:)")));
- (void)appendKey:(NSString *)key value:(id<SharedInput>)value headers___:(id<SharedHeaders>)headers __attribute__((swift_name("append(key:value:headers___:)"))) __attribute__((unavailable("Input is not reusable. Please use [InputProvider] instead.")));
- (void)appendKey:(NSString *)key value:(SharedKotlinByteArray *)value headers____:(id<SharedHeaders>)headers __attribute__((swift_name("append(key:value:headers____:)")));
- (void)appendKey:(NSString *)key value:(id)value headers_____:(id<SharedHeaders>)headers __attribute__((swift_name("append(key:value:headers_____:)")));
- (void)appendKey:(NSString *)key value:(NSString *)value headers______:(id<SharedHeaders>)headers __attribute__((swift_name("append(key:value:headers______:)")));
- (void)appendInputKey:(NSString *)key headers:(id<SharedHeaders>)headers size:(SharedLong * _Nullable)size block:(id<SharedInput> (^)(void))block __attribute__((swift_name("appendInput(key:headers:size:block:)")));
@end;

__attribute__((swift_name("OutgoingContent.ByteArrayContent")))
@interface SharedOutgoingContentByteArrayContent : SharedOutgoingContent
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (SharedKotlinByteArray *)bytes __attribute__((swift_name("bytes()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FormDataContent")))
@interface SharedFormDataContent : SharedOutgoingContentByteArrayContent
- (instancetype)initWithFormData:(id<SharedParameters>)formData __attribute__((swift_name("init(formData:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (SharedKotlinByteArray *)bytes __attribute__((swift_name("bytes()")));
@property (readonly) SharedLong *contentLength __attribute__((swift_name("contentLength")));
@property (readonly) SharedContentType *contentType __attribute__((swift_name("contentType")));
@property (readonly) id<SharedParameters> formData __attribute__((swift_name("formData")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FormPart")))
@interface SharedFormPart<T> : SharedBase
- (instancetype)initWithKey:(NSString *)key value:(T)value headers:(id<SharedHeaders>)headers __attribute__((swift_name("init(key:value:headers:)"))) __attribute__((objc_designated_initializer));
- (NSString *)component1 __attribute__((swift_name("component1()")));
- (T)component2 __attribute__((swift_name("component2()")));
- (id<SharedHeaders>)component3 __attribute__((swift_name("component3()")));
- (SharedFormPart<T> *)doCopyKey:(NSString *)key value:(T)value headers:(id<SharedHeaders>)headers __attribute__((swift_name("doCopy(key:value:headers:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) id<SharedHeaders> headers __attribute__((swift_name("headers")));
@property (readonly) NSString *key __attribute__((swift_name("key")));
@property (readonly) T value __attribute__((swift_name("value")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("InputProvider")))
@interface SharedInputProvider : SharedBase
- (instancetype)initWithSize:(SharedLong * _Nullable)size block:(id<SharedInput> (^)(void))block __attribute__((swift_name("init(size:block:)"))) __attribute__((objc_designated_initializer));
@property (readonly) id<SharedInput> (^block)(void) __attribute__((swift_name("block")));
@property (readonly) SharedLong * _Nullable size __attribute__((swift_name("size")));
@end;

__attribute__((swift_name("OutgoingContent.WriteChannelContent")))
@interface SharedOutgoingContentWriteChannelContent : SharedOutgoingContent
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)writeToChannel:(id<SharedByteWriteChannel>)channel completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("writeTo(channel:completionHandler:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MultiPartFormDataContent")))
@interface SharedMultiPartFormDataContent : SharedOutgoingContentWriteChannelContent
- (instancetype)initWithParts:(NSArray<SharedPartData *> *)parts __attribute__((swift_name("init(parts:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)writeToChannel:(id<SharedByteWriteChannel>)channel completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("writeTo(channel:completionHandler:)")));
@property (readonly) SharedLong * _Nullable contentLength __attribute__((swift_name("contentLength")));
@property (readonly) SharedContentType *contentType __attribute__((swift_name("contentType")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpResponse_")))
@interface SharedHttpResponse_ : SharedBase <SharedCoroutineScope, SharedHttpMessage>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable("Unbound streaming [HttpResponse] is deprecated. Consider using [HttpStatement] instead.")));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
@property (readonly) id<SharedKotlinCoroutineContext> coroutineContext __attribute__((swift_name("coroutineContext")));
@property (readonly) id<SharedHeaders> headers_ __attribute__((swift_name("headers_")));
@end;

__attribute__((swift_name("HttpResponse")))
@interface SharedHttpResponse : SharedBase <SharedHttpMessage, SharedCoroutineScope>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedHttpClientCall *call __attribute__((swift_name("call")));
@property (readonly) id<SharedByteReadChannel> content __attribute__((swift_name("content")));
@property (readonly) SharedGMTDate *requestTime __attribute__((swift_name("requestTime")));
@property (readonly) SharedGMTDate *responseTime __attribute__((swift_name("responseTime")));
@property (readonly) SharedHttpStatusCode *status __attribute__((swift_name("status")));
@property (readonly) SharedHttpProtocolVersion *version __attribute__((swift_name("version")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DefaultHttpResponse")))
@interface SharedDefaultHttpResponse : SharedHttpResponse
- (instancetype)initWithCall:(SharedHttpClientCall *)call responseData:(SharedHttpResponseData *)responseData __attribute__((swift_name("init(call:responseData:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
@property (readonly) SharedHttpClientCall *call __attribute__((swift_name("call")));
@property (readonly) id<SharedByteReadChannel> content __attribute__((swift_name("content")));
@property (readonly) id<SharedKotlinCoroutineContext> coroutineContext __attribute__((swift_name("coroutineContext")));
@property (readonly) id<SharedHeaders> headers_ __attribute__((swift_name("headers_")));
@property (readonly) SharedGMTDate *requestTime __attribute__((swift_name("requestTime")));
@property (readonly) SharedGMTDate *responseTime __attribute__((swift_name("responseTime")));
@property (readonly) SharedHttpStatusCode *status __attribute__((swift_name("status")));
@property (readonly) SharedHttpProtocolVersion *version __attribute__((swift_name("version")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpReceivePipeline")))
@interface SharedHttpReceivePipeline : SharedPipeline<SharedHttpResponse *, SharedHttpClientCall *>
- (instancetype)initWithDevelopmentMode:(BOOL)developmentMode __attribute__((swift_name("init(developmentMode:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithPhase:(SharedPipelinePhase *)phase interceptors:(NSArray<id<SharedKotlinSuspendFunction2>> *)interceptors __attribute__((swift_name("init(phase:interceptors:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithPhases:(SharedKotlinArray<SharedPipelinePhase *> *)phases __attribute__((swift_name("init(phases:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedHttpReceivePipelinePhases *companion __attribute__((swift_name("companion")));
@property (readonly) BOOL developmentMode __attribute__((swift_name("developmentMode")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpReceivePipeline.Phases")))
@interface SharedHttpReceivePipelinePhases : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)phases __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedHttpReceivePipelinePhases *shared __attribute__((swift_name("shared")));
@property (readonly) SharedPipelinePhase *After __attribute__((swift_name("After")));
@property (readonly) SharedPipelinePhase *Before __attribute__((swift_name("Before")));
@property (readonly) SharedPipelinePhase *State __attribute__((swift_name("State")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpResponseContainer")))
@interface SharedHttpResponseContainer : SharedBase
- (instancetype)initWithExpectedType:(id<SharedTypeInfo>)expectedType response:(id)response __attribute__((swift_name("init(expectedType:response:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithExpectedType:(SharedTypeInfo *)expectedType response_:(id)response __attribute__((swift_name("init(expectedType:response_:)"))) __attribute__((objc_designated_initializer));
- (SharedTypeInfo *)component1 __attribute__((swift_name("component1()")));
- (id)component2 __attribute__((swift_name("component2()")));
- (SharedHttpResponseContainer *)doCopyExpectedType:(SharedTypeInfo *)expectedType response:(id)response __attribute__((swift_name("doCopy(expectedType:response:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedTypeInfo *expectedType __attribute__((swift_name("expectedType")));
@property (readonly) id response __attribute__((swift_name("response")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpResponsePipeline")))
@interface SharedHttpResponsePipeline : SharedPipeline<SharedHttpResponseContainer *, SharedHttpClientCall *>
- (instancetype)initWithDevelopmentMode:(BOOL)developmentMode __attribute__((swift_name("init(developmentMode:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithPhase:(SharedPipelinePhase *)phase interceptors:(NSArray<id<SharedKotlinSuspendFunction2>> *)interceptors __attribute__((swift_name("init(phase:interceptors:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithPhases:(SharedKotlinArray<SharedPipelinePhase *> *)phases __attribute__((swift_name("init(phases:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedHttpResponsePipelinePhases *companion __attribute__((swift_name("companion")));
@property (readonly) BOOL developmentMode __attribute__((swift_name("developmentMode")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpResponsePipeline.Phases")))
@interface SharedHttpResponsePipelinePhases : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)phases __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedHttpResponsePipelinePhases *shared __attribute__((swift_name("shared")));
@property (readonly) SharedPipelinePhase *After __attribute__((swift_name("After")));
@property (readonly) SharedPipelinePhase *Parse __attribute__((swift_name("Parse")));
@property (readonly) SharedPipelinePhase *Receive __attribute__((swift_name("Receive")));
@property (readonly) SharedPipelinePhase *State __attribute__((swift_name("State")));
@property (readonly) SharedPipelinePhase *Transform __attribute__((swift_name("Transform")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpStatement")))
@interface SharedHttpStatement : SharedBase
- (instancetype)initWithBuilder:(SharedHttpRequestBuilder *)builder client:(SharedHttpClient *)client __attribute__((swift_name("init(builder:client:)"))) __attribute__((objc_designated_initializer));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)executeWithCompletionHandler:(void (^)(SharedHttpResponse * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("execute(completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)executeBlock:(id<SharedKotlinSuspendFunction1>)block completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("execute(block:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)receiveWithCompletionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("receive(completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)receiveBlock:(id<SharedKotlinSuspendFunction1>)block completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("receive(block:completionHandler:)")));
- (NSString *)description __attribute__((swift_name("description()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ClientEngineClosedException")))
@interface SharedClientEngineClosedException : SharedKotlinIllegalStateException
- (instancetype)initWithCause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (readonly) SharedKotlinThrowable * _Nullable cause __attribute__((swift_name("cause")));
@end;

__attribute__((swift_name("HttpClientEngine")))
@protocol SharedHttpClientEngine <SharedCoroutineScope, SharedCloseable_>
@required

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)executeData:(SharedHttpRequestData *)data completionHandler:(void (^)(SharedHttpResponseData * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("execute(data:completionHandler:)")));
- (void)installClient:(SharedHttpClient *)client __attribute__((swift_name("install(client:)")));
@property (readonly) SharedHttpClientEngineConfig *config __attribute__((swift_name("config")));
@property (readonly) SharedCoroutineDispatcher *dispatcher __attribute__((swift_name("dispatcher")));
@property (readonly) NSSet<id<SharedHttpClientEngineCapability>> *supportedCapabilities __attribute__((swift_name("supportedCapabilities")));
@end;

__attribute__((swift_name("HttpClientEngineBase")))
@interface SharedHttpClientEngineBase : SharedBase <SharedHttpClientEngine>
- (instancetype)initWithEngineName:(NSString *)engineName __attribute__((swift_name("init(engineName:)"))) __attribute__((objc_designated_initializer));
- (void)close __attribute__((swift_name("close()")));
@property (readonly) id<SharedKotlinCoroutineContext> coroutineContext __attribute__((swift_name("coroutineContext")));
@end;

__attribute__((swift_name("HttpClientEngineCapability")))
@protocol SharedHttpClientEngineCapability
@required
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ProxyBuilder")))
@interface SharedProxyBuilder : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)proxyBuilder __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedProxyBuilder *shared __attribute__((swift_name("shared")));
- (SharedProxyConfig *)httpUrl:(SharedUrl *)url __attribute__((swift_name("http(url:)")));
- (SharedProxyConfig *)socksHost:(NSString *)host port:(int32_t)port __attribute__((swift_name("socks(host:port:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ProxyConfig")))
@interface SharedProxyConfig : SharedBase
- (instancetype)initWithUrl:(SharedUrl *)url __attribute__((swift_name("init(url:)"))) __attribute__((objc_designated_initializer));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedUrl *url __attribute__((swift_name("url")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ProxyType")))
@interface SharedProxyType : SharedKotlinEnum<SharedProxyType *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedProxyType *socks __attribute__((swift_name("socks")));
@property (class, readonly) SharedProxyType *http __attribute__((swift_name("http")));
@property (class, readonly) SharedProxyType *unknown __attribute__((swift_name("unknown")));
+ (SharedKotlinArray<SharedProxyType *> *)values __attribute__((swift_name("values()")));
@end;

__attribute__((swift_name("KotlinIterable")))
@protocol SharedKotlinIterable
@required
- (id<SharedKotlinIterator>)iterator __attribute__((swift_name("iterator()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("engines")))
@interface Sharedengines : SharedBase <SharedKotlinIterable>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)engines __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) Sharedengines *shared __attribute__((swift_name("shared")));
- (void)appendItem:(id<SharedHttpClientEngineFactory>)item __attribute__((swift_name("append(item:)")));
- (id<SharedKotlinIterator>)iterator __attribute__((swift_name("iterator()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("BodyProgress")))
@interface SharedBodyProgress : SharedBase
@property (class, readonly, getter=companion) SharedBodyProgressFeature *companion __attribute__((swift_name("companion")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("BodyProgress.Feature")))
@interface SharedBodyProgressFeature : SharedBase <SharedHttpClientFeature>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)feature __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedBodyProgressFeature *shared __attribute__((swift_name("shared")));
- (void)installFeature:(SharedBodyProgress *)feature scope:(SharedHttpClient *)scope __attribute__((swift_name("install(feature:scope:)")));
- (SharedBodyProgress *)prepareBlock:(void (^)(SharedKotlinUnit *))block __attribute__((swift_name("prepare(block:)")));
@property (readonly) SharedAttributeKey<SharedBodyProgress *> *key __attribute__((swift_name("key")));
@end;

__attribute__((swift_name("ResponseException")))
@interface SharedResponseException : SharedKotlinIllegalStateException
- (instancetype)initWithResponse:(SharedHttpResponse *)response __attribute__((swift_name("init(response:)"))) __attribute__((objc_designated_initializer)) __attribute__((deprecated("Please, provide response text in constructor")));
- (instancetype)initWithResponse:(SharedHttpResponse *)response cachedResponseText:(NSString *)cachedResponseText __attribute__((swift_name("init(response:cachedResponseText:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithCause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (readonly) SharedHttpResponse *response __attribute__((swift_name("response")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ClientRequestException")))
@interface SharedClientRequestException : SharedResponseException
- (instancetype)initWithResponse:(SharedHttpResponse *)response __attribute__((swift_name("init(response:)"))) __attribute__((objc_designated_initializer)) __attribute__((deprecated("Please, provide response text in constructor")));
- (instancetype)initWithResponse:(SharedHttpResponse *)response cachedResponseText:(NSString *)cachedResponseText __attribute__((swift_name("init(response:cachedResponseText:)"))) __attribute__((objc_designated_initializer));
@property (readonly) NSString *message __attribute__((swift_name("message")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DataConversion")))
@interface SharedDataConversion : SharedBase <SharedHttpClientFeature>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)dataConversion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedDataConversion *shared __attribute__((swift_name("shared")));
- (void)installFeature:(SharedDataConversion_ *)feature scope:(SharedHttpClient *)scope __attribute__((swift_name("install(feature:scope:)")));
- (SharedDataConversion_ *)prepareBlock:(void (^)(SharedDataConversion_Configuration *))block __attribute__((swift_name("prepare(block:)")));
@property (readonly) SharedAttributeKey<SharedDataConversion_ *> *key __attribute__((swift_name("key")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DefaultRequest")))
@interface SharedDefaultRequest : SharedBase
- (instancetype)initWithBuilder:(void (^)(SharedHttpRequestBuilder *))builder __attribute__((swift_name("init(builder:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedDefaultRequestFeature *companion __attribute__((swift_name("companion")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DefaultRequest.Feature")))
@interface SharedDefaultRequestFeature : SharedBase <SharedHttpClientFeature>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)feature __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedDefaultRequestFeature *shared __attribute__((swift_name("shared")));
- (void)installFeature:(SharedDefaultRequest *)feature scope:(SharedHttpClient *)scope __attribute__((swift_name("install(feature:scope:)")));
- (SharedDefaultRequest *)prepareBlock:(void (^)(SharedHttpRequestBuilder *))block __attribute__((swift_name("prepare(block:)")));
@property (readonly) SharedAttributeKey<SharedDefaultRequest *> *key __attribute__((swift_name("key")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ExpectSuccess")))
@interface SharedExpectSuccess : SharedBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable("Use [HttpCallValidator] instead.")));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
@property (class, readonly, getter=companion) SharedExpectSuccessCompanion *companion __attribute__((swift_name("companion")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ExpectSuccess.Companion")))
@interface SharedExpectSuccessCompanion : SharedBase <SharedHttpClientFeature>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedExpectSuccessCompanion *shared __attribute__((swift_name("shared")));
- (void)installFeature:(SharedExpectSuccess *)feature scope:(SharedHttpClient *)scope __attribute__((swift_name("install(feature:scope:)")));
- (SharedExpectSuccess *)prepareBlock:(void (^)(SharedKotlinUnit *))block __attribute__((swift_name("prepare(block:)")));
@property (readonly) SharedAttributeKey<SharedExpectSuccess *> *key __attribute__((swift_name("key")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpCallValidator")))
@interface SharedHttpCallValidator : SharedBase
- (instancetype)initWithResponseValidators:(NSArray<id<SharedKotlinSuspendFunction1>> *)responseValidators callExceptionHandlers:(NSArray<id<SharedKotlinSuspendFunction1>> *)callExceptionHandlers __attribute__((swift_name("init(responseValidators:callExceptionHandlers:)"))) __attribute__((objc_designated_initializer)) __attribute__((deprecated("This is going to become internal. Please file a ticket and clarify, why do you need it.")));
@property (class, readonly, getter=companion) SharedHttpCallValidatorCompanion *companion __attribute__((swift_name("companion")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpCallValidator.Companion")))
@interface SharedHttpCallValidatorCompanion : SharedBase <SharedHttpClientFeature>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedHttpCallValidatorCompanion *shared __attribute__((swift_name("shared")));
- (void)installFeature:(SharedHttpCallValidator *)feature scope:(SharedHttpClient *)scope __attribute__((swift_name("install(feature:scope:)")));
- (SharedHttpCallValidator *)prepareBlock:(void (^)(SharedHttpCallValidatorConfig *))block __attribute__((swift_name("prepare(block:)")));
@property (readonly) SharedAttributeKey<SharedHttpCallValidator *> *key __attribute__((swift_name("key")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpCallValidator.Config")))
@interface SharedHttpCallValidatorConfig : SharedBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (void)handleResponseExceptionBlock:(id<SharedKotlinSuspendFunction1>)block __attribute__((swift_name("handleResponseException(block:)")));
- (void)validateResponseBlock:(id<SharedKotlinSuspendFunction1>)block __attribute__((swift_name("validateResponse(block:)")));
@property BOOL expectSuccess __attribute__((swift_name("expectSuccess"))) __attribute__((deprecated("This property is ignored. Please use `expectSuccess` property in HttpClientConfig. This is going to become internal.")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpPlainText")))
@interface SharedHttpPlainText : SharedBase
@property (class, readonly, getter=companion) SharedHttpPlainTextFeature *companion __attribute__((swift_name("companion")));
@property SharedCharset *defaultCharset __attribute__((swift_name("defaultCharset"))) __attribute__((unavailable("Use [Config.register] method instead.")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpPlainText.Config")))
@interface SharedHttpPlainTextConfig : SharedBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (void)registerCharset:(SharedCharset *)charset quality:(SharedFloat * _Nullable)quality __attribute__((swift_name("register(charset:quality:)")));
@property SharedCharset *defaultCharset __attribute__((swift_name("defaultCharset"))) __attribute__((unavailable("Use [register] method instead.")));
@property SharedCharset *responseCharsetFallback __attribute__((swift_name("responseCharsetFallback")));
@property SharedCharset * _Nullable sendCharset __attribute__((swift_name("sendCharset")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpPlainText.Feature")))
@interface SharedHttpPlainTextFeature : SharedBase <SharedHttpClientFeature>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)feature __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedHttpPlainTextFeature *shared __attribute__((swift_name("shared")));
- (void)installFeature:(SharedHttpPlainText *)feature scope:(SharedHttpClient *)scope __attribute__((swift_name("install(feature:scope:)")));
- (SharedHttpPlainText *)prepareBlock:(void (^)(SharedHttpPlainTextConfig *))block __attribute__((swift_name("prepare(block:)")));
@property (readonly) SharedAttributeKey<SharedHttpPlainText *> *key __attribute__((swift_name("key")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpRedirect")))
@interface SharedHttpRedirect : SharedBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
@property (class, readonly, getter=companion) SharedHttpRedirectFeature *companion __attribute__((swift_name("companion")));
@property BOOL allowHttpsDowngrade __attribute__((swift_name("allowHttpsDowngrade")));
@property BOOL checkHttpMethod __attribute__((swift_name("checkHttpMethod")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpRedirect.Feature")))
@interface SharedHttpRedirectFeature : SharedBase <SharedHttpClientFeature>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)feature __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedHttpRedirectFeature *shared __attribute__((swift_name("shared")));
- (void)installFeature:(SharedHttpRedirect *)feature scope:(SharedHttpClient *)scope __attribute__((swift_name("install(feature:scope:)")));
- (SharedHttpRedirect *)prepareBlock:(void (^)(SharedHttpRedirect *))block __attribute__((swift_name("prepare(block:)")));
@property (readonly) SharedAttributeKey<SharedHttpRedirect *> *key __attribute__((swift_name("key")));
@end;

__attribute__((swift_name("KotlinCancellationException")))
@interface SharedKotlinCancellationException : SharedKotlinIllegalStateException
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (instancetype)initWithMessage:(NSString * _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithCause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpRequestTimeoutException")))
@interface SharedHttpRequestTimeoutException : SharedKotlinCancellationException
- (instancetype)initWithRequest:(SharedHttpRequestBuilder *)request __attribute__((swift_name("init(request:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithCause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpSend")))
@interface SharedHttpSend : SharedBase
- (instancetype)initWithMaxSendCount:(int32_t)maxSendCount __attribute__((swift_name("init(maxSendCount:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedHttpSendFeature *companion __attribute__((swift_name("companion")));
- (void)interceptBlock:(id<SharedKotlinSuspendFunction3>)block __attribute__((swift_name("intercept(block:)")));
- (void)interceptBlock_:(id<SharedKotlinSuspendFunction2>)block __attribute__((swift_name("intercept(block_:)"))) __attribute__((deprecated("Intercept with one parameter is deprecated, use both call and request builder as parameters.")));
@property int32_t maxSendCount __attribute__((swift_name("maxSendCount")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpSend.Feature")))
@interface SharedHttpSendFeature : SharedBase <SharedHttpClientFeature>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)feature __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedHttpSendFeature *shared __attribute__((swift_name("shared")));
- (void)installFeature:(SharedHttpSend *)feature scope:(SharedHttpClient *)scope __attribute__((swift_name("install(feature:scope:)")));
- (SharedHttpSend *)prepareBlock:(void (^)(SharedHttpSend *))block __attribute__((swift_name("prepare(block:)")));
@property (readonly) SharedAttributeKey<SharedHttpSend *> *key __attribute__((swift_name("key")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpTimeout")))
@interface SharedHttpTimeout : SharedBase
- (instancetype)initWithRequestTimeoutMillis:(SharedLong * _Nullable)requestTimeoutMillis connectTimeoutMillis:(SharedLong * _Nullable)connectTimeoutMillis socketTimeoutMillis:(SharedLong * _Nullable)socketTimeoutMillis __attribute__((swift_name("init(requestTimeoutMillis:connectTimeoutMillis:socketTimeoutMillis:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedHttpTimeoutFeature *companion __attribute__((swift_name("companion")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpTimeout.Feature")))
@interface SharedHttpTimeoutFeature : SharedBase <SharedHttpClientFeature, SharedHttpClientEngineCapability>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)feature __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedHttpTimeoutFeature *shared __attribute__((swift_name("shared")));
- (void)installFeature:(SharedHttpTimeout *)feature scope:(SharedHttpClient *)scope __attribute__((swift_name("install(feature:scope:)")));
- (SharedHttpTimeout *)prepareBlock:(void (^)(SharedHttpTimeoutHttpTimeoutCapabilityConfiguration *))block __attribute__((swift_name("prepare(block:)")));
@property (readonly) int64_t INFINITE_TIMEOUT_MS __attribute__((swift_name("INFINITE_TIMEOUT_MS")));
@property (readonly) SharedAttributeKey<SharedHttpTimeout *> *key __attribute__((swift_name("key")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpTimeout.HttpTimeoutCapabilityConfiguration")))
@interface SharedHttpTimeoutHttpTimeoutCapabilityConfiguration : SharedBase
- (instancetype)initWithRequestTimeoutMillis:(SharedLong * _Nullable)requestTimeoutMillis connectTimeoutMillis:(SharedLong * _Nullable)connectTimeoutMillis socketTimeoutMillis:(SharedLong * _Nullable)socketTimeoutMillis __attribute__((swift_name("init(requestTimeoutMillis:connectTimeoutMillis:socketTimeoutMillis:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedHttpTimeoutHttpTimeoutCapabilityConfigurationCompanion *companion __attribute__((swift_name("companion")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
@property SharedLong * _Nullable connectTimeoutMillis __attribute__((swift_name("connectTimeoutMillis")));
@property SharedLong * _Nullable requestTimeoutMillis __attribute__((swift_name("requestTimeoutMillis")));
@property SharedLong * _Nullable socketTimeoutMillis __attribute__((swift_name("socketTimeoutMillis")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpTimeout.HttpTimeoutCapabilityConfigurationCompanion")))
@interface SharedHttpTimeoutHttpTimeoutCapabilityConfigurationCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedHttpTimeoutHttpTimeoutCapabilityConfigurationCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) SharedAttributeKey<SharedHttpTimeoutHttpTimeoutCapabilityConfiguration *> *key __attribute__((swift_name("key")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("RedirectResponseException")))
@interface SharedRedirectResponseException : SharedResponseException
- (instancetype)initWithResponse:(SharedHttpResponse *)response __attribute__((swift_name("init(response:)"))) __attribute__((objc_designated_initializer)) __attribute__((deprecated("Please, provide response text in constructor")));
- (instancetype)initWithResponse:(SharedHttpResponse *)response cachedResponseText:(NSString *)cachedResponseText __attribute__((swift_name("init(response:cachedResponseText:)"))) __attribute__((objc_designated_initializer));
@property (readonly) NSString * _Nullable message __attribute__((swift_name("message")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SendCountExceedException")))
@interface SharedSendCountExceedException : SharedKotlinIllegalStateException
- (instancetype)initWithMessage:(NSString *)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithCause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end;

__attribute__((swift_name("Sender")))
@protocol SharedSender
@required

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)executeRequestBuilder:(SharedHttpRequestBuilder *)requestBuilder completionHandler:(void (^)(SharedHttpClientCall * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("execute(requestBuilder:completionHandler:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ServerResponseException")))
@interface SharedServerResponseException : SharedResponseException
- (instancetype)initWithResponse:(SharedHttpResponse *)response __attribute__((swift_name("init(response:)"))) __attribute__((objc_designated_initializer)) __attribute__((deprecated("Please, provide response text in constructor")));
- (instancetype)initWithResponse:(SharedHttpResponse *)response cachedResponseText:(NSString *)cachedResponseText __attribute__((swift_name("init(response:cachedResponseText:)"))) __attribute__((objc_designated_initializer));
@property (readonly) NSString * _Nullable message __attribute__((swift_name("message")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("UserAgent")))
@interface SharedUserAgent : SharedBase
- (instancetype)initWithAgent:(NSString *)agent __attribute__((swift_name("init(agent:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedUserAgentFeature *companion __attribute__((swift_name("companion")));
@property (readonly) NSString *agent __attribute__((swift_name("agent")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("UserAgent.Config")))
@interface SharedUserAgentConfig : SharedBase
- (instancetype)initWithAgent:(NSString *)agent __attribute__((swift_name("init(agent:)"))) __attribute__((objc_designated_initializer));
@property NSString *agent __attribute__((swift_name("agent")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("UserAgent.Feature")))
@interface SharedUserAgentFeature : SharedBase <SharedHttpClientFeature>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)feature __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedUserAgentFeature *shared __attribute__((swift_name("shared")));
- (void)installFeature:(SharedUserAgent *)feature scope:(SharedHttpClient *)scope __attribute__((swift_name("install(feature:scope:)")));
- (SharedUserAgent *)prepareBlock:(void (^)(SharedUserAgentConfig *))block __attribute__((swift_name("prepare(block:)")));
@property (readonly) SharedAttributeKey<SharedUserAgent *> *key __attribute__((swift_name("key")));
@end;

__attribute__((swift_name("CookiesStorage")))
@protocol SharedCookiesStorage <SharedCloseable_>
@required

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)addCookieRequestUrl:(SharedUrl *)requestUrl cookie:(SharedCookie *)cookie completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("addCookie(requestUrl:cookie:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)getRequestUrl:(SharedUrl *)requestUrl completionHandler:(void (^)(NSArray<SharedCookie *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("get(requestUrl:completionHandler:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AcceptAllCookiesStorage")))
@interface SharedAcceptAllCookiesStorage : SharedBase <SharedCookiesStorage>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)addCookieRequestUrl:(SharedUrl *)requestUrl cookie:(SharedCookie *)cookie completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("addCookie(requestUrl:cookie:completionHandler:)")));
- (void)close __attribute__((swift_name("close()")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)getRequestUrl:(SharedUrl *)requestUrl completionHandler:(void (^)(NSArray<SharedCookie *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("get(requestUrl:completionHandler:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ConstantCookiesStorage")))
@interface SharedConstantCookiesStorage : SharedBase <SharedCookiesStorage>
- (instancetype)initWithCookies:(SharedKotlinArray<SharedCookie *> *)cookies __attribute__((swift_name("init(cookies:)"))) __attribute__((objc_designated_initializer));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)addCookieRequestUrl:(SharedUrl *)requestUrl cookie:(SharedCookie *)cookie completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("addCookie(requestUrl:cookie:completionHandler:)")));
- (void)close __attribute__((swift_name("close()")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)getRequestUrl:(SharedUrl *)requestUrl completionHandler:(void (^)(NSArray<SharedCookie *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("get(requestUrl:completionHandler:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpCookies")))
@interface SharedHttpCookies : SharedBase <SharedCloseable_>
- (instancetype)initWithStorage:(id<SharedCookiesStorage>)storage defaults:(NSArray<id<SharedKotlinSuspendFunction1>> *)defaults __attribute__((swift_name("init(storage:defaults:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedHttpCookiesCompanion *companion __attribute__((swift_name("companion")));
- (void)close __attribute__((swift_name("close()")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)getRequestUrl:(SharedUrl *)requestUrl completionHandler:(void (^)(NSArray<SharedCookie *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("get(requestUrl:completionHandler:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpCookies.Companion")))
@interface SharedHttpCookiesCompanion : SharedBase <SharedHttpClientFeature>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedHttpCookiesCompanion *shared __attribute__((swift_name("shared")));
- (void)installFeature:(SharedHttpCookies *)plugin scope:(SharedHttpClient *)scope __attribute__((swift_name("install(feature:scope:)")));
- (SharedHttpCookies *)prepareBlock:(void (^)(SharedHttpCookiesConfig *))block __attribute__((swift_name("prepare(block:)")));
@property (readonly) SharedAttributeKey<SharedHttpCookies *> *key __attribute__((swift_name("key")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpCookies.Config")))
@interface SharedHttpCookiesConfig : SharedBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (void)defaultBlock:(id<SharedKotlinSuspendFunction1>)block __attribute__((swift_name("default(block:)")));
@property id<SharedCookiesStorage> storage __attribute__((swift_name("storage")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ResponseObserver")))
@interface SharedResponseObserver : SharedBase
- (instancetype)initWithResponseHandler:(id<SharedKotlinSuspendFunction1>)responseHandler __attribute__((swift_name("init(responseHandler:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedResponseObserverFeature *companion __attribute__((swift_name("companion")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ResponseObserver.Config")))
@interface SharedResponseObserverConfig : SharedBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (void)onResponseBlock:(id<SharedKotlinSuspendFunction1>)block __attribute__((swift_name("onResponse(block:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ResponseObserver.Feature")))
@interface SharedResponseObserverFeature : SharedBase <SharedHttpClientFeature>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)feature __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedResponseObserverFeature *shared __attribute__((swift_name("shared")));
- (void)installFeature:(SharedResponseObserver *)feature scope:(SharedHttpClient *)scope __attribute__((swift_name("install(feature:scope:)")));
- (SharedResponseObserver *)prepareBlock:(void (^)(SharedResponseObserverConfig *))block __attribute__((swift_name("prepare(block:)")));
@property (readonly) SharedAttributeKey<SharedResponseObserver *> *key __attribute__((swift_name("key")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpCache")))
@interface SharedHttpCache : SharedBase
- (instancetype)initWithPublicStorage:(SharedHttpCacheStorage *)publicStorage privateStorage:(SharedHttpCacheStorage *)privateStorage __attribute__((swift_name("init(publicStorage:privateStorage:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedHttpCacheCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) SharedHttpCacheStorage *privateStorage __attribute__((swift_name("privateStorage")));
@property (readonly) SharedHttpCacheStorage *publicStorage __attribute__((swift_name("publicStorage")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpCache.Companion")))
@interface SharedHttpCacheCompanion : SharedBase <SharedHttpClientFeature>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedHttpCacheCompanion *shared __attribute__((swift_name("shared")));
- (void)installFeature:(SharedHttpCache *)feature scope:(SharedHttpClient *)scope __attribute__((swift_name("install(feature:scope:)")));
- (SharedHttpCache *)prepareBlock:(void (^)(SharedHttpCacheConfig *))block __attribute__((swift_name("prepare(block:)")));
@property (readonly) SharedAttributeKey<SharedHttpCache *> *key __attribute__((swift_name("key")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpCache.Config")))
@interface SharedHttpCacheConfig : SharedBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
@property SharedHttpCacheStorage *privateStorage __attribute__((swift_name("privateStorage")));
@property SharedHttpCacheStorage *publicStorage __attribute__((swift_name("publicStorage")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpCacheEntry")))
@interface SharedHttpCacheEntry : SharedBase
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
@property (readonly) SharedKotlinByteArray *body __attribute__((swift_name("body")));
@property (readonly) SharedGMTDate *expires __attribute__((swift_name("expires")));
@property (readonly) SharedHttpResponse *response __attribute__((swift_name("response")));
@property (readonly) NSDictionary<NSString *, NSString *> *varyKeys __attribute__((swift_name("varyKeys")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("InvalidCacheStateException")))
@interface SharedInvalidCacheStateException : SharedKotlinIllegalStateException
- (instancetype)initWithRequestUrl:(SharedUrl *)requestUrl __attribute__((swift_name("init(requestUrl:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithCause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end;

__attribute__((swift_name("HttpCacheStorage")))
@interface SharedHttpCacheStorage : SharedBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
@property (class, readonly, getter=companion) SharedHttpCacheStorageCompanion *companion __attribute__((swift_name("companion")));
- (SharedHttpCacheEntry * _Nullable)findUrl:(SharedUrl *)url varyKeys:(NSDictionary<NSString *, NSString *> *)varyKeys __attribute__((swift_name("find(url:varyKeys:)")));
- (NSSet<SharedHttpCacheEntry *> *)findByUrlUrl:(SharedUrl *)url __attribute__((swift_name("findByUrl(url:)")));
- (void)storeUrl:(SharedUrl *)url value:(SharedHttpCacheEntry *)value __attribute__((swift_name("store(url:value:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpCacheStorage.Companion")))
@interface SharedHttpCacheStorageCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedHttpCacheStorageCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) SharedHttpCacheStorage *Disabled __attribute__((swift_name("Disabled")));
@property (readonly) SharedHttpCacheStorage *(^Unlimited)(void) __attribute__((swift_name("Unlimited")));
@end;

__attribute__((swift_name("WebSocketSession")))
@protocol SharedWebSocketSession <SharedCoroutineScope>
@required

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)flushWithCompletionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("flush(completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)sendFrame:(SharedFrame *)frame completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("send(frame:completionHandler:)")));
- (void)terminate __attribute__((swift_name("terminate()"))) __attribute__((deprecated("Use cancel() instead.")));
@property (readonly) NSArray<id<SharedWebSocketExtension>> *extensions __attribute__((swift_name("extensions")));
@property (readonly) id<SharedReceiveChannel> incoming __attribute__((swift_name("incoming")));
@property int64_t maxFrameSize __attribute__((swift_name("maxFrameSize")));
@property (readonly) id<SharedSendChannel> outgoing __attribute__((swift_name("outgoing")));
@end;

__attribute__((swift_name("ClientWebSocketSession")))
@protocol SharedClientWebSocketSession <SharedWebSocketSession>
@required
@property (readonly) SharedHttpClientCall *call __attribute__((swift_name("call")));
@end;

__attribute__((swift_name("DefaultWebSocketSession")))
@protocol SharedDefaultWebSocketSession <SharedWebSocketSession>
@required
- (void)startNegotiatedExtensions:(NSArray<id<SharedWebSocketExtension>> *)negotiatedExtensions __attribute__((swift_name("start(negotiatedExtensions:)")));
@property (readonly) id<SharedDeferred> closeReason __attribute__((swift_name("closeReason")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DefaultClientWebSocketSession")))
@interface SharedDefaultClientWebSocketSession : SharedBase <SharedClientWebSocketSession, SharedDefaultWebSocketSession>
- (instancetype)initWithCall:(SharedHttpClientCall *)call delegate:(id<SharedDefaultWebSocketSession>)delegate __attribute__((swift_name("init(call:delegate:)"))) __attribute__((objc_designated_initializer));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)flushWithCompletionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("flush(completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)sendFrame:(SharedFrame *)frame completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("send(frame:completionHandler:)")));
- (void)startNegotiatedExtensions:(NSArray<id<SharedWebSocketExtension>> *)negotiatedExtensions __attribute__((swift_name("start(negotiatedExtensions:)")));
- (void)terminate __attribute__((swift_name("terminate()"))) __attribute__((deprecated("Use cancel() instead.")));
@property (readonly) SharedHttpClientCall *call __attribute__((swift_name("call")));
@property (readonly) id<SharedDeferred> closeReason __attribute__((swift_name("closeReason")));
@property (readonly) id<SharedKotlinCoroutineContext> coroutineContext __attribute__((swift_name("coroutineContext")));
@property (readonly) NSArray<id<SharedWebSocketExtension>> *extensions __attribute__((swift_name("extensions")));
@property (readonly) id<SharedReceiveChannel> incoming __attribute__((swift_name("incoming")));
@property int64_t maxFrameSize __attribute__((swift_name("maxFrameSize")));
@property (readonly) id<SharedSendChannel> outgoing __attribute__((swift_name("outgoing")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WebSocketCapability")))
@interface SharedWebSocketCapability : SharedBase <SharedHttpClientEngineCapability>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)webSocketCapability __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedWebSocketCapability *shared __attribute__((swift_name("shared")));
- (NSString *)description __attribute__((swift_name("description()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WebSocketException")))
@interface SharedWebSocketException : SharedKotlinIllegalStateException
- (instancetype)initWithMessage:(NSString *)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithCause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WebSocketExtensionsCapability")))
@interface SharedWebSocketExtensionsCapability : SharedBase <SharedHttpClientEngineCapability>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)webSocketExtensionsCapability __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedWebSocketExtensionsCapability *shared __attribute__((swift_name("shared")));
- (NSString *)description __attribute__((swift_name("description()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WebSockets")))
@interface SharedWebSockets : SharedBase
- (instancetype)initWithPingInterval:(int64_t)pingInterval maxFrameSize:(int64_t)maxFrameSize __attribute__((swift_name("init(pingInterval:maxFrameSize:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
@property (class, readonly, getter=companion) SharedWebSocketsFeature *companion __attribute__((swift_name("companion")));
@property (readonly) int64_t maxFrameSize __attribute__((swift_name("maxFrameSize")));
@property (readonly) int64_t pingInterval __attribute__((swift_name("pingInterval")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WebSockets.Config")))
@interface SharedWebSocketsConfig : SharedBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (void)extensionsBlock:(void (^)(SharedWebSocketExtensionsConfig *))block __attribute__((swift_name("extensions(block:)")));
@property int64_t maxFrameSize __attribute__((swift_name("maxFrameSize")));
@property int64_t pingInterval __attribute__((swift_name("pingInterval")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WebSockets.Feature")))
@interface SharedWebSocketsFeature : SharedBase <SharedHttpClientFeature>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)feature __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedWebSocketsFeature *shared __attribute__((swift_name("shared")));
- (void)installFeature:(SharedWebSockets *)feature scope:(SharedHttpClient *)scope __attribute__((swift_name("install(feature:scope:)")));
- (SharedWebSockets *)prepareBlock:(void (^)(SharedWebSocketsConfig *))block __attribute__((swift_name("prepare(block:)")));
@property (readonly) SharedAttributeKey<SharedWebSockets *> *key __attribute__((swift_name("key")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ConnectTimeoutException")))
@interface SharedConnectTimeoutException : SharedIOException
- (instancetype)initWithMessage:(NSString *)message cause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithMessage:(NSString *)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SocketTimeoutException")))
@interface SharedSocketTimeoutException : SharedIOException
- (instancetype)initWithMessage:(NSString *)message cause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithMessage:(NSString *)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end;

__attribute__((swift_name("StringValues")))
@protocol SharedStringValues
@required
- (BOOL)containsName:(NSString *)name __attribute__((swift_name("contains(name:)")));
- (BOOL)containsName:(NSString *)name value:(NSString *)value __attribute__((swift_name("contains(name:value:)")));
- (NSSet<id<SharedKotlinMapEntry>> *)entries __attribute__((swift_name("entries()")));
- (void)forEachBody:(void (^)(NSString *, NSArray<NSString *> *))body __attribute__((swift_name("forEach(body:)")));
- (NSString * _Nullable)getName:(NSString *)name __attribute__((swift_name("get(name:)")));
- (NSArray<NSString *> * _Nullable)getAllName:(NSString *)name __attribute__((swift_name("getAll(name:)")));
- (BOOL)isEmpty_ __attribute__((swift_name("isEmpty()")));
- (NSSet<NSString *> *)names __attribute__((swift_name("names()")));
@property (readonly) BOOL caseInsensitiveName __attribute__((swift_name("caseInsensitiveName")));
@end;

__attribute__((swift_name("Headers")))
@protocol SharedHeaders <SharedStringValues>
@required
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CIOHeaders")))
@interface SharedCIOHeaders : SharedBase <SharedHeaders>
- (instancetype)initWithHeaders:(SharedHttpHeadersMap *)headers __attribute__((swift_name("init(headers:)"))) __attribute__((objc_designated_initializer));
- (NSSet<id<SharedKotlinMapEntry>> *)entries __attribute__((swift_name("entries()")));
- (NSString * _Nullable)getName:(NSString *)name __attribute__((swift_name("get(name:)")));
- (NSArray<NSString *> * _Nullable)getAllName:(NSString *)name __attribute__((swift_name("getAll(name:)")));
- (BOOL)isEmpty_ __attribute__((swift_name("isEmpty()")));
- (NSSet<NSString *> *)names __attribute__((swift_name("names()")));
@property (readonly) BOOL caseInsensitiveName __attribute__((swift_name("caseInsensitiveName")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ConnectionOptions")))
@interface SharedConnectionOptions : SharedBase
- (instancetype)initWithClose:(BOOL)close keepAlive:(BOOL)keepAlive upgrade:(BOOL)upgrade extraOptions:(NSArray<NSString *> *)extraOptions __attribute__((swift_name("init(close:keepAlive:upgrade:extraOptions:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedConnectionOptionsCompanion *companion __attribute__((swift_name("companion")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) BOOL close __attribute__((swift_name("close")));
@property (readonly) NSArray<NSString *> *extraOptions __attribute__((swift_name("extraOptions")));
@property (readonly) BOOL keepAlive __attribute__((swift_name("keepAlive")));
@property (readonly) BOOL upgrade __attribute__((swift_name("upgrade")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ConnectionOptions.Companion")))
@interface SharedConnectionOptionsCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedConnectionOptionsCompanion *shared __attribute__((swift_name("shared")));
- (SharedConnectionOptions * _Nullable)parseConnection:(id _Nullable)connection __attribute__((swift_name("parse(connection:)")));
@property (readonly) SharedConnectionOptions *Close __attribute__((swift_name("Close")));
@property (readonly) SharedConnectionOptions *KeepAlive __attribute__((swift_name("KeepAlive")));
@property (readonly) SharedConnectionOptions *Upgrade __attribute__((swift_name("Upgrade")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpHeadersMap")))
@interface SharedHttpHeadersMap : SharedBase
- (int32_t)findName:(NSString *)name fromIndex:(int32_t)fromIndex __attribute__((swift_name("find(name:fromIndex:)")));
- (id _Nullable)getName:(NSString *)name __attribute__((swift_name("get(name:)")));
- (id<SharedKotlinSequence>)getAllName:(NSString *)name __attribute__((swift_name("getAll(name:)")));
- (id)nameAtIdx:(int32_t)idx __attribute__((swift_name("nameAt(idx:)")));
- (void)putNameHash:(int32_t)nameHash valueHash:(int32_t)valueHash nameStartIndex:(int32_t)nameStartIndex nameEndIndex:(int32_t)nameEndIndex valueStartIndex:(int32_t)valueStartIndex valueEndIndex:(int32_t)valueEndIndex __attribute__((swift_name("put(nameHash:valueHash:nameStartIndex:nameEndIndex:valueStartIndex:valueEndIndex:)")));
- (void)release_ __attribute__((swift_name("release()")));
- (NSString *)description __attribute__((swift_name("description()")));
- (id)valueAtIdx:(int32_t)idx __attribute__((swift_name("valueAt(idx:)")));
@property (readonly) int32_t size __attribute__((swift_name("size")));
@end;

__attribute__((swift_name("HttpMessage_")))
@interface SharedHttpMessage : SharedBase <SharedCloseable_>
- (void)close __attribute__((swift_name("close()")));
- (void)release_ __attribute__((swift_name("release()")));
@property (readonly) SharedHttpHeadersMap *headers __attribute__((swift_name("headers")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ParserException")))
@interface SharedParserException : SharedKotlinException
- (instancetype)initWithMessage:(NSString *)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithCause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Request")))
@interface SharedRequest : SharedHttpMessage
@property (readonly) SharedHttpMethod *method __attribute__((swift_name("method")));
@property (readonly) id uri __attribute__((swift_name("uri")));
@property (readonly) id version __attribute__((swift_name("version")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("RequestResponseBuilder")))
@interface SharedRequestResponseBuilder : SharedBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (SharedByteReadPacket *)build __attribute__((swift_name("build()")));
- (void)bytesContent:(SharedKotlinByteArray *)content offset:(int32_t)offset length:(int32_t)length __attribute__((swift_name("bytes(content:offset:length:)")));
- (void)emptyLine __attribute__((swift_name("emptyLine()")));
- (void)headerLineName:(id)name value:(id)value __attribute__((swift_name("headerLine(name:value:)")));
- (void)lineLine:(id)line __attribute__((swift_name("line(line:)")));
- (void)release_ __attribute__((swift_name("release()")));
- (void)requestLineMethod:(SharedHttpMethod *)method uri:(id)uri version:(id)version __attribute__((swift_name("requestLine(method:uri:version:)")));
- (void)responseLineVersion:(id)version status:(int32_t)status statusText:(id)statusText __attribute__((swift_name("responseLine(version:status:statusText:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Response")))
@interface SharedResponse : SharedHttpMessage
@property (readonly) int32_t status __attribute__((swift_name("status")));
@property (readonly) id statusText __attribute__((swift_name("statusText")));
@property (readonly) id version __attribute__((swift_name("version")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CloseReason")))
@interface SharedCloseReason : SharedBase
- (instancetype)initWithCode:(SharedCloseReasonCodes *)code message:(NSString *)message __attribute__((swift_name("init(code:message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithCode:(int16_t)code message_:(NSString *)message __attribute__((swift_name("init(code:message_:)"))) __attribute__((objc_designated_initializer));
- (int16_t)component1 __attribute__((swift_name("component1()")));
- (NSString *)component2 __attribute__((swift_name("component2()")));
- (SharedCloseReason *)doCopyCode:(int16_t)code message:(NSString *)message __attribute__((swift_name("doCopy(code:message:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int16_t code __attribute__((swift_name("code")));
@property (readonly) SharedCloseReasonCodes * _Nullable knownReason __attribute__((swift_name("knownReason")));
@property (readonly) NSString *message __attribute__((swift_name("message")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CloseReason.Codes")))
@interface SharedCloseReasonCodes : SharedKotlinEnum<SharedCloseReasonCodes *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedCloseReasonCodesCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) SharedCloseReasonCodes *normal __attribute__((swift_name("normal")));
@property (class, readonly) SharedCloseReasonCodes *goingAway __attribute__((swift_name("goingAway")));
@property (class, readonly) SharedCloseReasonCodes *protocolError __attribute__((swift_name("protocolError")));
@property (class, readonly) SharedCloseReasonCodes *cannotAccept __attribute__((swift_name("cannotAccept")));
@property (class, readonly) SharedCloseReasonCodes *closedAbnormally __attribute__((swift_name("closedAbnormally")));
@property (class, readonly) SharedCloseReasonCodes *notConsistent __attribute__((swift_name("notConsistent")));
@property (class, readonly) SharedCloseReasonCodes *violatedPolicy __attribute__((swift_name("violatedPolicy")));
@property (class, readonly) SharedCloseReasonCodes *tooBig __attribute__((swift_name("tooBig")));
@property (class, readonly) SharedCloseReasonCodes *noExtension __attribute__((swift_name("noExtension")));
@property (class, readonly) SharedCloseReasonCodes *internalError __attribute__((swift_name("internalError")));
@property (class, readonly) SharedCloseReasonCodes *serviceRestart __attribute__((swift_name("serviceRestart")));
@property (class, readonly) SharedCloseReasonCodes *tryAgainLater __attribute__((swift_name("tryAgainLater")));
+ (SharedKotlinArray<SharedCloseReasonCodes *> *)values __attribute__((swift_name("values()")));
@property (readonly) int16_t code __attribute__((swift_name("code")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CloseReason.CodesCompanion")))
@interface SharedCloseReasonCodesCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedCloseReasonCodesCompanion *shared __attribute__((swift_name("shared")));
- (SharedCloseReasonCodes * _Nullable)byCodeCode:(int16_t)code __attribute__((swift_name("byCode(code:)")));
@property (readonly) SharedCloseReasonCodes *UNEXPECTED_CONDITION __attribute__((swift_name("UNEXPECTED_CONDITION"))) __attribute__((deprecated("Use INTERNAL_ERROR instead.")));
@end;

__attribute__((swift_name("Frame")))
@interface SharedFrame : SharedBase
- (instancetype)initWithFin:(BOOL)fin frameType:(SharedFrameType *)frameType data:(SharedKotlinByteArray *)data disposableHandle:(id<SharedDisposableHandle>)disposableHandle rsv1:(BOOL)rsv1 rsv2:(BOOL)rsv2 rsv3:(BOOL)rsv3 __attribute__((swift_name("init(fin:frameType:data:disposableHandle:rsv1:rsv2:rsv3:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedFrameCompanion *companion __attribute__((swift_name("companion")));
- (SharedFrame *)doCopy __attribute__((swift_name("doCopy()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedKotlinByteArray *data __attribute__((swift_name("data")));
@property (readonly) id<SharedDisposableHandle> disposableHandle __attribute__((swift_name("disposableHandle")));
@property (readonly) BOOL fin __attribute__((swift_name("fin")));
@property (readonly) SharedFrameType *frameType __attribute__((swift_name("frameType")));
@property (readonly) BOOL rsv1 __attribute__((swift_name("rsv1")));
@property (readonly) BOOL rsv2 __attribute__((swift_name("rsv2")));
@property (readonly) BOOL rsv3 __attribute__((swift_name("rsv3")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Frame.Binary")))
@interface SharedFrameBinary : SharedFrame
- (instancetype)initWithFin:(BOOL)fin data:(SharedKotlinByteArray *)data __attribute__((swift_name("init(fin:data:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithFin:(BOOL)fin packet:(SharedByteReadPacket *)packet __attribute__((swift_name("init(fin:packet:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithFin:(BOOL)fin data:(SharedKotlinByteArray *)data rsv1:(BOOL)rsv1 rsv2:(BOOL)rsv2 rsv3:(BOOL)rsv3 __attribute__((swift_name("init(fin:data:rsv1:rsv2:rsv3:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithFin:(BOOL)fin frameType:(SharedFrameType *)frameType data:(SharedKotlinByteArray *)data disposableHandle:(id<SharedDisposableHandle>)disposableHandle rsv1:(BOOL)rsv1 rsv2:(BOOL)rsv2 rsv3:(BOOL)rsv3 __attribute__((swift_name("init(fin:frameType:data:disposableHandle:rsv1:rsv2:rsv3:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Frame.Close")))
@interface SharedFrameClose : SharedFrame
- (instancetype)initWithReason:(SharedCloseReason *)reason __attribute__((swift_name("init(reason:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithPacket:(SharedByteReadPacket *)packet __attribute__((swift_name("init(packet:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (instancetype)initWithData:(SharedKotlinByteArray *)data __attribute__((swift_name("init(data:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithFin:(BOOL)fin frameType:(SharedFrameType *)frameType data:(SharedKotlinByteArray *)data disposableHandle:(id<SharedDisposableHandle>)disposableHandle rsv1:(BOOL)rsv1 rsv2:(BOOL)rsv2 rsv3:(BOOL)rsv3 __attribute__((swift_name("init(fin:frameType:data:disposableHandle:rsv1:rsv2:rsv3:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Frame.Companion")))
@interface SharedFrameCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedFrameCompanion *shared __attribute__((swift_name("shared")));
- (SharedFrame *)byTypeFin:(BOOL)fin frameType:(SharedFrameType *)frameType data:(SharedKotlinByteArray *)data __attribute__((swift_name("byType(fin:frameType:data:)")));
- (SharedFrame *)byTypeFin:(BOOL)fin frameType:(SharedFrameType *)frameType data:(SharedKotlinByteArray *)data rsv1:(BOOL)rsv1 rsv2:(BOOL)rsv2 rsv3:(BOOL)rsv3 __attribute__((swift_name("byType(fin:frameType:data:rsv1:rsv2:rsv3:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Frame.Ping")))
@interface SharedFramePing : SharedFrame
- (instancetype)initWithPacket:(SharedByteReadPacket *)packet __attribute__((swift_name("init(packet:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithData:(SharedKotlinByteArray *)data __attribute__((swift_name("init(data:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithFin:(BOOL)fin frameType:(SharedFrameType *)frameType data:(SharedKotlinByteArray *)data disposableHandle:(id<SharedDisposableHandle>)disposableHandle rsv1:(BOOL)rsv1 rsv2:(BOOL)rsv2 rsv3:(BOOL)rsv3 __attribute__((swift_name("init(fin:frameType:data:disposableHandle:rsv1:rsv2:rsv3:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Frame.Pong")))
@interface SharedFramePong : SharedFrame
- (instancetype)initWithPacket:(SharedByteReadPacket *)packet __attribute__((swift_name("init(packet:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithData:(SharedKotlinByteArray *)data disposableHandle:(id<SharedDisposableHandle>)disposableHandle __attribute__((swift_name("init(data:disposableHandle:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithFin:(BOOL)fin frameType:(SharedFrameType *)frameType data:(SharedKotlinByteArray *)data disposableHandle:(id<SharedDisposableHandle>)disposableHandle rsv1:(BOOL)rsv1 rsv2:(BOOL)rsv2 rsv3:(BOOL)rsv3 __attribute__((swift_name("init(fin:frameType:data:disposableHandle:rsv1:rsv2:rsv3:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Frame.Text")))
@interface SharedFrameText : SharedFrame
- (instancetype)initWithFin:(BOOL)fin data:(SharedKotlinByteArray *)data __attribute__((swift_name("init(fin:data:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithText:(NSString *)text __attribute__((swift_name("init(text:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithFin:(BOOL)fin packet:(SharedByteReadPacket *)packet __attribute__((swift_name("init(fin:packet:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithFin:(BOOL)fin data:(SharedKotlinByteArray *)data rsv1:(BOOL)rsv1 rsv2:(BOOL)rsv2 rsv3:(BOOL)rsv3 __attribute__((swift_name("init(fin:data:rsv1:rsv2:rsv3:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithFin:(BOOL)fin frameType:(SharedFrameType *)frameType data:(SharedKotlinByteArray *)data disposableHandle:(id<SharedDisposableHandle>)disposableHandle rsv1:(BOOL)rsv1 rsv2:(BOOL)rsv2 rsv3:(BOOL)rsv3 __attribute__((swift_name("init(fin:frameType:data:disposableHandle:rsv1:rsv2:rsv3:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FrameType")))
@interface SharedFrameType : SharedKotlinEnum<SharedFrameType *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedFrameTypeCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) SharedFrameType *text __attribute__((swift_name("text")));
@property (class, readonly) SharedFrameType *binary __attribute__((swift_name("binary")));
@property (class, readonly) SharedFrameType *close __attribute__((swift_name("close")));
@property (class, readonly) SharedFrameType *ping __attribute__((swift_name("ping")));
@property (class, readonly) SharedFrameType *pong __attribute__((swift_name("pong")));
+ (SharedKotlinArray<SharedFrameType *> *)values __attribute__((swift_name("values()")));
@property (readonly) BOOL controlFrame __attribute__((swift_name("controlFrame")));
@property (readonly) int32_t opcode __attribute__((swift_name("opcode")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FrameType.Companion")))
@interface SharedFrameTypeCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedFrameTypeCompanion *shared __attribute__((swift_name("shared")));
- (SharedFrameType * _Nullable)getOpcode:(int32_t)opcode __attribute__((swift_name("get(opcode:)")));
@end;

__attribute__((swift_name("WebSocketExtension")))
@protocol SharedWebSocketExtension
@required
- (BOOL)clientNegotiationNegotiatedProtocols:(NSArray<SharedWebSocketExtensionHeader *> *)negotiatedProtocols __attribute__((swift_name("clientNegotiation(negotiatedProtocols:)")));
- (SharedFrame *)processIncomingFrameFrame:(SharedFrame *)frame __attribute__((swift_name("processIncomingFrame(frame:)")));
- (SharedFrame *)processOutgoingFrameFrame:(SharedFrame *)frame __attribute__((swift_name("processOutgoingFrame(frame:)")));
- (NSArray<SharedWebSocketExtensionHeader *> *)serverNegotiationRequestedProtocols:(NSArray<SharedWebSocketExtensionHeader *> *)requestedProtocols __attribute__((swift_name("serverNegotiation(requestedProtocols:)")));
@property (readonly) id<SharedWebSocketExtensionFactory> factory __attribute__((swift_name("factory")));
@property (readonly) NSArray<SharedWebSocketExtensionHeader *> *protocols __attribute__((swift_name("protocols")));
@end;

__attribute__((swift_name("WebSocketExtensionFactory")))
@protocol SharedWebSocketExtensionFactory
@required
- (id<SharedWebSocketExtension>)installConfig:(void (^)(id))config __attribute__((swift_name("install(config:)")));
@property (readonly) SharedAttributeKey<id<SharedWebSocketExtension>> *key __attribute__((swift_name("key")));
@property (readonly) BOOL rsv1 __attribute__((swift_name("rsv1")));
@property (readonly) BOOL rsv2 __attribute__((swift_name("rsv2")));
@property (readonly) BOOL rsv3 __attribute__((swift_name("rsv3")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WebSocketExtensionHeader")))
@interface SharedWebSocketExtensionHeader : SharedBase
- (instancetype)initWithName:(NSString *)name parameters:(NSArray<NSString *> *)parameters __attribute__((swift_name("init(name:parameters:)"))) __attribute__((objc_designated_initializer));
- (id<SharedKotlinSequence>)parseParameters __attribute__((swift_name("parseParameters()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *name __attribute__((swift_name("name")));
@property (readonly) NSArray<NSString *> *parameters __attribute__((swift_name("parameters")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WebSocketExtensionsConfig")))
@interface SharedWebSocketExtensionsConfig : SharedBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (NSArray<id<SharedWebSocketExtension>> *)build __attribute__((swift_name("build()")));
- (void)installExtension:(id<SharedWebSocketExtensionFactory>)extension config:(void (^)(id))config __attribute__((swift_name("install(extension:config:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MutableRange")))
@interface SharedMutableRange : SharedBase
- (instancetype)initWithStart:(int32_t)start end:(int32_t)end __attribute__((swift_name("init(start:end:)"))) __attribute__((objc_designated_initializer));
- (NSString *)description __attribute__((swift_name("description()")));
@property int32_t end __attribute__((swift_name("end")));
@property int32_t start __attribute__((swift_name("start")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("BadContentTypeFormatException")))
@interface SharedBadContentTypeFormatException : SharedKotlinException
- (instancetype)initWithValue:(NSString *)value __attribute__((swift_name("init(value:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithCause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end;

__attribute__((swift_name("CacheControl_")))
@interface SharedCacheControl_ : SharedBase
- (instancetype)initWithVisibility:(SharedCacheControl_Visibility * _Nullable)visibility __attribute__((swift_name("init(visibility:)"))) __attribute__((objc_designated_initializer));
@property (readonly) SharedCacheControl_Visibility * _Nullable visibility __attribute__((swift_name("visibility")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CacheControl_.MaxAge")))
@interface SharedCacheControl_MaxAge : SharedCacheControl_
- (instancetype)initWithMaxAgeSeconds:(int32_t)maxAgeSeconds proxyMaxAgeSeconds:(SharedInt * _Nullable)proxyMaxAgeSeconds mustRevalidate:(BOOL)mustRevalidate proxyRevalidate:(BOOL)proxyRevalidate visibility:(SharedCacheControl_Visibility * _Nullable)visibility __attribute__((swift_name("init(maxAgeSeconds:proxyMaxAgeSeconds:mustRevalidate:proxyRevalidate:visibility:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithVisibility:(SharedCacheControl_Visibility * _Nullable)visibility __attribute__((swift_name("init(visibility:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t maxAgeSeconds __attribute__((swift_name("maxAgeSeconds")));
@property (readonly) BOOL mustRevalidate __attribute__((swift_name("mustRevalidate")));
@property (readonly) SharedInt * _Nullable proxyMaxAgeSeconds __attribute__((swift_name("proxyMaxAgeSeconds")));
@property (readonly) BOOL proxyRevalidate __attribute__((swift_name("proxyRevalidate")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CacheControl_.NoCache")))
@interface SharedCacheControl_NoCache : SharedCacheControl_
- (instancetype)initWithVisibility:(SharedCacheControl_Visibility * _Nullable)visibility __attribute__((swift_name("init(visibility:)"))) __attribute__((objc_designated_initializer));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CacheControl_.NoStore")))
@interface SharedCacheControl_NoStore : SharedCacheControl_
- (instancetype)initWithVisibility:(SharedCacheControl_Visibility * _Nullable)visibility __attribute__((swift_name("init(visibility:)"))) __attribute__((objc_designated_initializer));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CacheControl_.Visibility")))
@interface SharedCacheControl_Visibility : SharedKotlinEnum<SharedCacheControl_Visibility *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedCacheControl_Visibility *public_ __attribute__((swift_name("public_")));
@property (class, readonly) SharedCacheControl_Visibility *private_ __attribute__((swift_name("private_")));
+ (SharedKotlinArray<SharedCacheControl_Visibility *> *)values __attribute__((swift_name("values()")));
@end;

__attribute__((swift_name("HeaderValueWithParameters")))
@interface SharedHeaderValueWithParameters : SharedBase
- (instancetype)initWithContent:(NSString *)content parameters:(NSArray<SharedHeaderValueParam *> *)parameters __attribute__((swift_name("init(content:parameters:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedHeaderValueWithParametersCompanion *companion __attribute__((swift_name("companion")));
- (NSString * _Nullable)parameterName:(NSString *)name __attribute__((swift_name("parameter(name:)")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *content __attribute__((swift_name("content")));
@property (readonly) NSArray<SharedHeaderValueParam *> *parameters __attribute__((swift_name("parameters")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContentDisposition")))
@interface SharedContentDisposition : SharedHeaderValueWithParameters
- (instancetype)initWithDisposition:(NSString *)disposition parameters:(NSArray<SharedHeaderValueParam *> *)parameters __attribute__((swift_name("init(disposition:parameters:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithContent:(NSString *)content parameters:(NSArray<SharedHeaderValueParam *> *)parameters __attribute__((swift_name("init(content:parameters:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedContentDispositionCompanion *companion __attribute__((swift_name("companion")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (SharedContentDisposition *)withParameterKey:(NSString *)key value:(NSString *)value __attribute__((swift_name("withParameter(key:value:)")));
- (SharedContentDisposition *)withParametersNewParameters:(NSArray<SharedHeaderValueParam *> *)newParameters __attribute__((swift_name("withParameters(newParameters:)")));
@property (readonly) NSString *disposition __attribute__((swift_name("disposition")));
@property (readonly) NSString * _Nullable name __attribute__((swift_name("name")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContentDisposition.Companion")))
@interface SharedContentDispositionCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedContentDispositionCompanion *shared __attribute__((swift_name("shared")));
- (SharedContentDisposition *)parseValue:(NSString *)value __attribute__((swift_name("parse(value:)")));
@property (readonly) SharedContentDisposition *Attachment __attribute__((swift_name("Attachment")));
@property (readonly) SharedContentDisposition *File __attribute__((swift_name("File")));
@property (readonly) SharedContentDisposition *Inline __attribute__((swift_name("Inline")));
@property (readonly) SharedContentDisposition *Mixed __attribute__((swift_name("Mixed")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContentDisposition.Parameters")))
@interface SharedContentDispositionParameters : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)parameters __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedContentDispositionParameters *shared __attribute__((swift_name("shared")));
@property (readonly) NSString *CreationDate __attribute__((swift_name("CreationDate")));
@property (readonly) NSString *FileName __attribute__((swift_name("FileName")));
@property (readonly) NSString *FileNameAsterisk __attribute__((swift_name("FileNameAsterisk")));
@property (readonly) NSString *Handling __attribute__((swift_name("Handling")));
@property (readonly) NSString *ModificationDate __attribute__((swift_name("ModificationDate")));
@property (readonly) NSString *Name __attribute__((swift_name("Name")));
@property (readonly) NSString *ReadDate __attribute__((swift_name("ReadDate")));
@property (readonly) NSString *Size __attribute__((swift_name("Size")));
@end;

__attribute__((swift_name("ContentRange")))
@interface SharedContentRange : SharedBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContentRange.Bounded")))
@interface SharedContentRangeBounded : SharedContentRange
- (instancetype)initWithFrom:(int64_t)from to:(int64_t)to __attribute__((swift_name("init(from:to:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (int64_t)component1 __attribute__((swift_name("component1()")));
- (int64_t)component2 __attribute__((swift_name("component2()")));
- (SharedContentRangeBounded *)doCopyFrom:(int64_t)from to:(int64_t)to __attribute__((swift_name("doCopy(from:to:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int64_t from __attribute__((swift_name("from")));
@property (readonly) int64_t to __attribute__((swift_name("to")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContentRange.Suffix")))
@interface SharedContentRangeSuffix : SharedContentRange
- (instancetype)initWithLastCount:(int64_t)lastCount __attribute__((swift_name("init(lastCount:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (int64_t)component1 __attribute__((swift_name("component1()")));
- (SharedContentRangeSuffix *)doCopyLastCount:(int64_t)lastCount __attribute__((swift_name("doCopy(lastCount:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int64_t lastCount __attribute__((swift_name("lastCount")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContentRange.TailFrom")))
@interface SharedContentRangeTailFrom : SharedContentRange
- (instancetype)initWithFrom:(int64_t)from __attribute__((swift_name("init(from:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (int64_t)component1 __attribute__((swift_name("component1()")));
- (SharedContentRangeTailFrom *)doCopyFrom:(int64_t)from __attribute__((swift_name("doCopy(from:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int64_t from __attribute__((swift_name("from")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContentType")))
@interface SharedContentType : SharedHeaderValueWithParameters
- (instancetype)initWithContentType:(NSString *)contentType contentSubtype:(NSString *)contentSubtype parameters:(NSArray<SharedHeaderValueParam *> *)parameters __attribute__((swift_name("init(contentType:contentSubtype:parameters:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithContent:(NSString *)content parameters:(NSArray<SharedHeaderValueParam *> *)parameters __attribute__((swift_name("init(content:parameters:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedContentTypeCompanion *companion __attribute__((swift_name("companion")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (BOOL)matchPattern:(SharedContentType *)pattern __attribute__((swift_name("match(pattern:)")));
- (BOOL)matchPattern_:(NSString *)pattern __attribute__((swift_name("match(pattern_:)")));
- (SharedContentType *)withParameterName:(NSString *)name value:(NSString *)value __attribute__((swift_name("withParameter(name:value:)")));
- (SharedContentType *)withoutParameters __attribute__((swift_name("withoutParameters()")));
@property (readonly) NSString *contentSubtype __attribute__((swift_name("contentSubtype")));
@property (readonly) NSString *contentType __attribute__((swift_name("contentType")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContentType.Application")))
@interface SharedContentTypeApplication : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)application __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedContentTypeApplication *shared __attribute__((swift_name("shared")));
@property (readonly) SharedContentType *Any __attribute__((swift_name("Any")));
@property (readonly) SharedContentType *Atom __attribute__((swift_name("Atom")));
@property (readonly) SharedContentType *Cbor __attribute__((swift_name("Cbor")));
@property (readonly) SharedContentType *FontWoff __attribute__((swift_name("FontWoff")));
@property (readonly) SharedContentType *FormUrlEncoded __attribute__((swift_name("FormUrlEncoded")));
@property (readonly) SharedContentType *GZip __attribute__((swift_name("GZip")));
@property (readonly) SharedContentType *HalJson __attribute__((swift_name("HalJson")));
@property (readonly) SharedContentType *JavaScript __attribute__((swift_name("JavaScript")));
@property (readonly) SharedContentType *Json __attribute__((swift_name("Json")));
@property (readonly) SharedContentType *OctetStream __attribute__((swift_name("OctetStream")));
@property (readonly) SharedContentType *Pdf __attribute__((swift_name("Pdf")));
@property (readonly) SharedContentType *ProblemJson __attribute__((swift_name("ProblemJson")));
@property (readonly) SharedContentType *ProblemXml __attribute__((swift_name("ProblemXml")));
@property (readonly) SharedContentType *ProtoBuf __attribute__((swift_name("ProtoBuf")));
@property (readonly) SharedContentType *Rss __attribute__((swift_name("Rss")));
@property (readonly) SharedContentType *Wasm __attribute__((swift_name("Wasm")));
@property (readonly) SharedContentType *Xml __attribute__((swift_name("Xml")));
@property (readonly) SharedContentType *Xml_Dtd __attribute__((swift_name("Xml_Dtd")));
@property (readonly) SharedContentType *Zip __attribute__((swift_name("Zip")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContentType.Audio")))
@interface SharedContentTypeAudio : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)audio __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedContentTypeAudio *shared __attribute__((swift_name("shared")));
@property (readonly) SharedContentType *Any __attribute__((swift_name("Any")));
@property (readonly) SharedContentType *MP4 __attribute__((swift_name("MP4")));
@property (readonly) SharedContentType *MPEG __attribute__((swift_name("MPEG")));
@property (readonly) SharedContentType *OGG __attribute__((swift_name("OGG")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContentType.Companion")))
@interface SharedContentTypeCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedContentTypeCompanion *shared __attribute__((swift_name("shared")));
- (SharedContentType *)parseValue:(NSString *)value __attribute__((swift_name("parse(value:)")));
@property (readonly) SharedContentType *Any __attribute__((swift_name("Any")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContentType.Image")))
@interface SharedContentTypeImage : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)image __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedContentTypeImage *shared __attribute__((swift_name("shared")));
@property (readonly) SharedContentType *Any __attribute__((swift_name("Any")));
@property (readonly) SharedContentType *GIF __attribute__((swift_name("GIF")));
@property (readonly) SharedContentType *JPEG __attribute__((swift_name("JPEG")));
@property (readonly) SharedContentType *PNG __attribute__((swift_name("PNG")));
@property (readonly) SharedContentType *SVG __attribute__((swift_name("SVG")));
@property (readonly) SharedContentType *XIcon __attribute__((swift_name("XIcon")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContentType.Message")))
@interface SharedContentTypeMessage : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)message __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedContentTypeMessage *shared __attribute__((swift_name("shared")));
@property (readonly) SharedContentType *Any __attribute__((swift_name("Any")));
@property (readonly) SharedContentType *Http __attribute__((swift_name("Http")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContentType.MultiPart")))
@interface SharedContentTypeMultiPart : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)multiPart __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedContentTypeMultiPart *shared __attribute__((swift_name("shared")));
@property (readonly) SharedContentType *Alternative __attribute__((swift_name("Alternative")));
@property (readonly) SharedContentType *Any __attribute__((swift_name("Any")));
@property (readonly) SharedContentType *ByteRanges __attribute__((swift_name("ByteRanges")));
@property (readonly) SharedContentType *Encrypted __attribute__((swift_name("Encrypted")));
@property (readonly) SharedContentType *FormData __attribute__((swift_name("FormData")));
@property (readonly) SharedContentType *Mixed __attribute__((swift_name("Mixed")));
@property (readonly) SharedContentType *Related __attribute__((swift_name("Related")));
@property (readonly) SharedContentType *Signed __attribute__((swift_name("Signed")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContentType.Text")))
@interface SharedContentTypeText : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)text __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedContentTypeText *shared __attribute__((swift_name("shared")));
@property (readonly) SharedContentType *Any __attribute__((swift_name("Any")));
@property (readonly) SharedContentType *CSS __attribute__((swift_name("CSS")));
@property (readonly) SharedContentType *CSV __attribute__((swift_name("CSV")));
@property (readonly) SharedContentType *EventStream __attribute__((swift_name("EventStream")));
@property (readonly) SharedContentType *Html __attribute__((swift_name("Html")));
@property (readonly) SharedContentType *JavaScript __attribute__((swift_name("JavaScript")));
@property (readonly) SharedContentType *Plain __attribute__((swift_name("Plain")));
@property (readonly) SharedContentType *VCard __attribute__((swift_name("VCard")));
@property (readonly) SharedContentType *Xml __attribute__((swift_name("Xml")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContentType.Video")))
@interface SharedContentTypeVideo : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)video __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedContentTypeVideo *shared __attribute__((swift_name("shared")));
@property (readonly) SharedContentType *Any __attribute__((swift_name("Any")));
@property (readonly) SharedContentType *MP4 __attribute__((swift_name("MP4")));
@property (readonly) SharedContentType *MPEG __attribute__((swift_name("MPEG")));
@property (readonly) SharedContentType *OGG __attribute__((swift_name("OGG")));
@property (readonly) SharedContentType *QuickTime __attribute__((swift_name("QuickTime")));
@end;

__attribute__((swift_name("ContentTypeMatcher")))
@protocol SharedContentTypeMatcher
@required
- (BOOL)containsContentType:(SharedContentType *)contentType __attribute__((swift_name("contains(contentType:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cookie")))
@interface SharedCookie : SharedBase
- (instancetype)initWithName:(NSString *)name value:(NSString *)value encoding:(SharedCookieEncoding *)encoding maxAge:(int32_t)maxAge expires:(SharedGMTDate * _Nullable)expires domain:(NSString * _Nullable)domain path:(NSString * _Nullable)path secure:(BOOL)secure httpOnly:(BOOL)httpOnly extensions:(NSDictionary<NSString *, id> *)extensions __attribute__((swift_name("init(name:value:encoding:maxAge:expires:domain:path:secure:httpOnly:extensions:)"))) __attribute__((objc_designated_initializer));
- (NSString *)component1 __attribute__((swift_name("component1()")));
- (NSDictionary<NSString *, id> *)component10 __attribute__((swift_name("component10()")));
- (NSString *)component2 __attribute__((swift_name("component2()")));
- (SharedCookieEncoding *)component3 __attribute__((swift_name("component3()")));
- (int32_t)component4 __attribute__((swift_name("component4()")));
- (SharedGMTDate * _Nullable)component5 __attribute__((swift_name("component5()")));
- (NSString * _Nullable)component6 __attribute__((swift_name("component6()")));
- (NSString * _Nullable)component7 __attribute__((swift_name("component7()")));
- (BOOL)component8 __attribute__((swift_name("component8()")));
- (BOOL)component9 __attribute__((swift_name("component9()")));
- (SharedCookie *)doCopyName:(NSString *)name value:(NSString *)value encoding:(SharedCookieEncoding *)encoding maxAge:(int32_t)maxAge expires:(SharedGMTDate * _Nullable)expires domain:(NSString * _Nullable)domain path:(NSString * _Nullable)path secure:(BOOL)secure httpOnly:(BOOL)httpOnly extensions:(NSDictionary<NSString *, id> *)extensions __attribute__((swift_name("doCopy(name:value:encoding:maxAge:expires:domain:path:secure:httpOnly:extensions:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable domain __attribute__((swift_name("domain")));
@property (readonly) SharedCookieEncoding *encoding __attribute__((swift_name("encoding")));
@property (readonly) SharedGMTDate * _Nullable expires __attribute__((swift_name("expires")));
@property (readonly) NSDictionary<NSString *, id> *extensions __attribute__((swift_name("extensions")));
@property (readonly) BOOL httpOnly __attribute__((swift_name("httpOnly")));
@property (readonly) int32_t maxAge __attribute__((swift_name("maxAge")));
@property (readonly) NSString *name __attribute__((swift_name("name")));
@property (readonly) NSString * _Nullable path __attribute__((swift_name("path")));
@property (readonly) BOOL secure __attribute__((swift_name("secure")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CookieEncoding")))
@interface SharedCookieEncoding : SharedKotlinEnum<SharedCookieEncoding *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedCookieEncoding *raw __attribute__((swift_name("raw")));
@property (class, readonly) SharedCookieEncoding *dquotes __attribute__((swift_name("dquotes")));
@property (class, readonly) SharedCookieEncoding *uriEncoding __attribute__((swift_name("uriEncoding")));
@property (class, readonly) SharedCookieEncoding *base64Encoding __attribute__((swift_name("base64Encoding")));
+ (SharedKotlinArray<SharedCookieEncoding *> *)values __attribute__((swift_name("values()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("EmptyHeaders")))
@interface SharedEmptyHeaders : SharedBase <SharedHeaders>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)emptyHeaders __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedEmptyHeaders *shared __attribute__((swift_name("shared")));
- (NSSet<id<SharedKotlinMapEntry>> *)entries __attribute__((swift_name("entries()")));
- (NSArray<NSString *> * _Nullable)getAllName:(NSString *)name __attribute__((swift_name("getAll(name:)")));
- (BOOL)isEmpty_ __attribute__((swift_name("isEmpty()")));
- (NSSet<NSString *> *)names __attribute__((swift_name("names()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) BOOL caseInsensitiveName __attribute__((swift_name("caseInsensitiveName")));
@end;

__attribute__((swift_name("Parameters")))
@protocol SharedParameters <SharedStringValues>
@required
@property (readonly) SharedUrlEncodingOption *urlEncodingOption __attribute__((swift_name("urlEncodingOption")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("EmptyParameters")))
@interface SharedEmptyParameters : SharedBase <SharedParameters>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)emptyParameters __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedEmptyParameters *shared __attribute__((swift_name("shared")));
- (NSSet<id<SharedKotlinMapEntry>> *)entries __attribute__((swift_name("entries()")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSArray<NSString *> * _Nullable)getAllName:(NSString *)name __attribute__((swift_name("getAll(name:)")));
- (BOOL)isEmpty_ __attribute__((swift_name("isEmpty()")));
- (NSSet<NSString *> *)names __attribute__((swift_name("names()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) BOOL caseInsensitiveName __attribute__((swift_name("caseInsensitiveName")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HeaderValue")))
@interface SharedHeaderValue : SharedBase
- (instancetype)initWithValue:(NSString *)value params:(NSArray<SharedHeaderValueParam *> *)params __attribute__((swift_name("init(value:params:)"))) __attribute__((objc_designated_initializer));
- (NSString *)component1 __attribute__((swift_name("component1()")));
- (NSArray<SharedHeaderValueParam *> *)component2 __attribute__((swift_name("component2()")));
- (SharedHeaderValue *)doCopyValue:(NSString *)value params:(NSArray<SharedHeaderValueParam *> *)params __attribute__((swift_name("doCopy(value:params:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSArray<SharedHeaderValueParam *> *params __attribute__((swift_name("params")));
@property (readonly) double quality __attribute__((swift_name("quality")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HeaderValueParam")))
@interface SharedHeaderValueParam : SharedBase
- (instancetype)initWithName:(NSString *)name value:(NSString *)value __attribute__((swift_name("init(name:value:)"))) __attribute__((objc_designated_initializer));
- (NSString *)component1 __attribute__((swift_name("component1()")));
- (NSString *)component2 __attribute__((swift_name("component2()")));
- (SharedHeaderValueParam *)doCopyName:(NSString *)name value:(NSString *)value __attribute__((swift_name("doCopy(name:value:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *name __attribute__((swift_name("name")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HeaderValueWithParameters.Companion")))
@interface SharedHeaderValueWithParametersCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedHeaderValueWithParametersCompanion *shared __attribute__((swift_name("shared")));
- (id _Nullable)parseValue:(NSString *)value init:(id _Nullable (^)(NSString *, NSArray<SharedHeaderValueParam *> *))init __attribute__((swift_name("parse(value:init:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HeadersCompanion")))
@interface SharedHeadersCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedHeadersCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedHeaders>)buildBuilder:(void (^)(SharedHeadersBuilder *))builder __attribute__((swift_name("build(builder:)")));
@property (readonly) id<SharedHeaders> Empty __attribute__((swift_name("Empty")));
@end;

__attribute__((swift_name("StringValuesBuilder")))
@interface SharedStringValuesBuilder : SharedBase
- (instancetype)initWithCaseInsensitiveName:(BOOL)caseInsensitiveName size:(int32_t)size __attribute__((swift_name("init(caseInsensitiveName:size:)"))) __attribute__((objc_designated_initializer));
- (void)appendName:(NSString *)name value:(NSString *)value __attribute__((swift_name("append(name:value:)")));
- (void)appendAllStringValues:(id<SharedStringValues>)stringValues __attribute__((swift_name("appendAll(stringValues:)")));
- (void)appendAllName:(NSString *)name values:(id)values __attribute__((swift_name("appendAll(name:values:)")));
- (void)appendMissingStringValues:(id<SharedStringValues>)stringValues __attribute__((swift_name("appendMissing(stringValues:)")));
- (void)appendMissingName:(NSString *)name values:(id)values __attribute__((swift_name("appendMissing(name:values:)")));
- (id<SharedStringValues>)build __attribute__((swift_name("build()")));
- (void)clear __attribute__((swift_name("clear()")));
- (BOOL)containsName:(NSString *)name __attribute__((swift_name("contains(name:)")));
- (BOOL)containsName:(NSString *)name value:(NSString *)value __attribute__((swift_name("contains(name:value:)")));
- (NSSet<id<SharedKotlinMapEntry>> *)entries __attribute__((swift_name("entries()")));
- (NSString * _Nullable)getName:(NSString *)name __attribute__((swift_name("get(name:)")));
- (NSArray<NSString *> * _Nullable)getAllName:(NSString *)name __attribute__((swift_name("getAll(name:)")));
- (BOOL)isEmpty __attribute__((swift_name("isEmpty()")));
- (NSSet<NSString *> *)names __attribute__((swift_name("names()")));
- (void)removeName:(NSString *)name __attribute__((swift_name("remove(name:)")));
- (BOOL)removeName:(NSString *)name value:(NSString *)value __attribute__((swift_name("remove(name:value:)")));
- (void)removeKeysWithNoEntries __attribute__((swift_name("removeKeysWithNoEntries()")));
- (void)setName:(NSString *)name value:(NSString *)value __attribute__((swift_name("set(name:value:)")));
- (void)validateNameName:(NSString *)name __attribute__((swift_name("validateName(name:)")));
- (void)validateValueValue:(NSString *)value __attribute__((swift_name("validateValue(value:)")));
@property BOOL built __attribute__((swift_name("built")));
@property (readonly) BOOL caseInsensitiveName __attribute__((swift_name("caseInsensitiveName")));
@property (readonly) SharedMutableDictionary<NSString *, NSMutableArray<NSString *> *> *values __attribute__((swift_name("values")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HeadersBuilder")))
@interface SharedHeadersBuilder : SharedStringValuesBuilder
- (instancetype)initWithSize:(int32_t)size __attribute__((swift_name("init(size:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithCaseInsensitiveName:(BOOL)caseInsensitiveName size:(int32_t)size __attribute__((swift_name("init(caseInsensitiveName:size:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (id<SharedHeaders>)build __attribute__((swift_name("build()")));
- (void)validateNameName:(NSString *)name __attribute__((swift_name("validateName(name:)")));
- (void)validateValueValue:(NSString *)value __attribute__((swift_name("validateValue(value:)")));
@end;

__attribute__((swift_name("StringValuesImpl")))
@interface SharedStringValuesImpl : SharedBase <SharedStringValues>
- (instancetype)initWithCaseInsensitiveName:(BOOL)caseInsensitiveName values:(NSDictionary<NSString *, NSArray<NSString *> *> *)values __attribute__((swift_name("init(caseInsensitiveName:values:)"))) __attribute__((objc_designated_initializer));
- (BOOL)containsName:(NSString *)name __attribute__((swift_name("contains(name:)")));
- (BOOL)containsName:(NSString *)name value:(NSString *)value __attribute__((swift_name("contains(name:value:)")));
- (NSSet<id<SharedKotlinMapEntry>> *)entries __attribute__((swift_name("entries()")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (void)forEachBody:(void (^)(NSString *, NSArray<NSString *> *))body __attribute__((swift_name("forEach(body:)")));
- (NSString * _Nullable)getName:(NSString *)name __attribute__((swift_name("get(name:)")));
- (NSArray<NSString *> * _Nullable)getAllName:(NSString *)name __attribute__((swift_name("getAll(name:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (BOOL)isEmpty_ __attribute__((swift_name("isEmpty()")));
- (NSSet<NSString *> *)names __attribute__((swift_name("names()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) BOOL caseInsensitiveName __attribute__((swift_name("caseInsensitiveName")));
@property (readonly) NSDictionary<NSString *, NSArray<NSString *> *> *values __attribute__((swift_name("values")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HeadersImpl")))
@interface SharedHeadersImpl : SharedStringValuesImpl <SharedHeaders>
- (instancetype)initWithValues:(NSDictionary<NSString *, NSArray<NSString *> *> *)values __attribute__((swift_name("init(values:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithCaseInsensitiveName:(BOOL)caseInsensitiveName values:(NSDictionary<NSString *, NSArray<NSString *> *> *)values __attribute__((swift_name("init(caseInsensitiveName:values:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (NSString *)description __attribute__((swift_name("description()")));
@end;

__attribute__((swift_name("StringValuesSingleImpl")))
@interface SharedStringValuesSingleImpl : SharedBase <SharedStringValues>
- (instancetype)initWithCaseInsensitiveName:(BOOL)caseInsensitiveName name:(NSString *)name values:(NSArray<NSString *> *)values __attribute__((swift_name("init(caseInsensitiveName:name:values:)"))) __attribute__((objc_designated_initializer));
- (BOOL)containsName:(NSString *)name __attribute__((swift_name("contains(name:)")));
- (BOOL)containsName:(NSString *)name value:(NSString *)value __attribute__((swift_name("contains(name:value:)")));
- (NSSet<id<SharedKotlinMapEntry>> *)entries __attribute__((swift_name("entries()")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (void)forEachBody:(void (^)(NSString *, NSArray<NSString *> *))body __attribute__((swift_name("forEach(body:)")));
- (NSString * _Nullable)getName:(NSString *)name __attribute__((swift_name("get(name:)")));
- (NSArray<NSString *> * _Nullable)getAllName:(NSString *)name __attribute__((swift_name("getAll(name:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (BOOL)isEmpty_ __attribute__((swift_name("isEmpty()")));
- (NSSet<NSString *> *)names __attribute__((swift_name("names()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) BOOL caseInsensitiveName __attribute__((swift_name("caseInsensitiveName")));
@property (readonly) NSString *name __attribute__((swift_name("name")));
@property (readonly) NSArray<NSString *> *values __attribute__((swift_name("values")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HeadersSingleImpl")))
@interface SharedHeadersSingleImpl : SharedStringValuesSingleImpl <SharedHeaders>
- (instancetype)initWithName:(NSString *)name values:(NSArray<NSString *> *)values __attribute__((swift_name("init(name:values:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithCaseInsensitiveName:(BOOL)caseInsensitiveName name:(NSString *)name values:(NSArray<NSString *> *)values __attribute__((swift_name("init(caseInsensitiveName:name:values:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (NSString *)description __attribute__((swift_name("description()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpHeaders")))
@interface SharedHttpHeaders : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)httpHeaders __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedHttpHeaders *shared __attribute__((swift_name("shared")));
- (void)checkHeaderNameName:(NSString *)name __attribute__((swift_name("checkHeaderName(name:)")));
- (void)checkHeaderValueValue:(NSString *)value __attribute__((swift_name("checkHeaderValue(value:)")));
- (BOOL)isUnsafeHeader:(NSString *)header __attribute__((swift_name("isUnsafe(header:)")));
@property (readonly) NSString *ALPN __attribute__((swift_name("ALPN")));
@property (readonly) NSString *Accept __attribute__((swift_name("Accept")));
@property (readonly) NSString *AcceptCharset __attribute__((swift_name("AcceptCharset")));
@property (readonly) NSString *AcceptEncoding __attribute__((swift_name("AcceptEncoding")));
@property (readonly) NSString *AcceptLanguage __attribute__((swift_name("AcceptLanguage")));
@property (readonly) NSString *AcceptRanges __attribute__((swift_name("AcceptRanges")));
@property (readonly) NSString *AccessControlAllowCredentials __attribute__((swift_name("AccessControlAllowCredentials")));
@property (readonly) NSString *AccessControlAllowHeaders __attribute__((swift_name("AccessControlAllowHeaders")));
@property (readonly) NSString *AccessControlAllowMethods __attribute__((swift_name("AccessControlAllowMethods")));
@property (readonly) NSString *AccessControlAllowOrigin __attribute__((swift_name("AccessControlAllowOrigin")));
@property (readonly) NSString *AccessControlExposeHeaders __attribute__((swift_name("AccessControlExposeHeaders")));
@property (readonly) NSString *AccessControlMaxAge __attribute__((swift_name("AccessControlMaxAge")));
@property (readonly) NSString *AccessControlRequestHeaders __attribute__((swift_name("AccessControlRequestHeaders")));
@property (readonly) NSString *AccessControlRequestMethod __attribute__((swift_name("AccessControlRequestMethod")));
@property (readonly) NSString *Age __attribute__((swift_name("Age")));
@property (readonly) NSString *Allow __attribute__((swift_name("Allow")));
@property (readonly) NSString *AuthenticationInfo __attribute__((swift_name("AuthenticationInfo")));
@property (readonly) NSString *Authorization __attribute__((swift_name("Authorization")));
@property (readonly) NSString *CacheControl __attribute__((swift_name("CacheControl")));
@property (readonly) NSString *Connection __attribute__((swift_name("Connection")));
@property (readonly) NSString *ContentDisposition __attribute__((swift_name("ContentDisposition")));
@property (readonly) NSString *ContentEncoding __attribute__((swift_name("ContentEncoding")));
@property (readonly) NSString *ContentLanguage __attribute__((swift_name("ContentLanguage")));
@property (readonly) NSString *ContentLength __attribute__((swift_name("ContentLength")));
@property (readonly) NSString *ContentLocation __attribute__((swift_name("ContentLocation")));
@property (readonly) NSString *ContentRange __attribute__((swift_name("ContentRange")));
@property (readonly) NSString *ContentType __attribute__((swift_name("ContentType")));
@property (readonly) NSString *Cookie __attribute__((swift_name("Cookie")));
@property (readonly) NSString *DASL __attribute__((swift_name("DASL")));
@property (readonly) NSString *DAV __attribute__((swift_name("DAV")));
@property (readonly) NSString *Date __attribute__((swift_name("Date")));
@property (readonly) NSString *Depth __attribute__((swift_name("Depth")));
@property (readonly) NSString *Destination __attribute__((swift_name("Destination")));
@property (readonly) NSString *ETag __attribute__((swift_name("ETag")));
@property (readonly) NSString *Expect __attribute__((swift_name("Expect")));
@property (readonly) NSString *Expires __attribute__((swift_name("Expires")));
@property (readonly) NSString *Forwarded __attribute__((swift_name("Forwarded")));
@property (readonly) NSString *From __attribute__((swift_name("From")));
@property (readonly) NSString *HTTP2Settings __attribute__((swift_name("HTTP2Settings")));
@property (readonly) NSString *Host __attribute__((swift_name("Host")));
@property (readonly) NSString *If __attribute__((swift_name("If")));
@property (readonly) NSString *IfMatch __attribute__((swift_name("IfMatch")));
@property (readonly) NSString *IfModifiedSince __attribute__((swift_name("IfModifiedSince")));
@property (readonly) NSString *IfNoneMatch __attribute__((swift_name("IfNoneMatch")));
@property (readonly) NSString *IfRange __attribute__((swift_name("IfRange")));
@property (readonly) NSString *IfScheduleTagMatch __attribute__((swift_name("IfScheduleTagMatch")));
@property (readonly) NSString *IfUnmodifiedSince __attribute__((swift_name("IfUnmodifiedSince")));
@property (readonly) NSString *LastModified __attribute__((swift_name("LastModified")));
@property (readonly) NSString *Link __attribute__((swift_name("Link")));
@property (readonly) NSString *Location __attribute__((swift_name("Location")));
@property (readonly) NSString *LockToken __attribute__((swift_name("LockToken")));
@property (readonly) NSString *MIMEVersion __attribute__((swift_name("MIMEVersion")));
@property (readonly) NSString *MaxForwards __attribute__((swift_name("MaxForwards")));
@property (readonly) NSString *OrderingType __attribute__((swift_name("OrderingType")));
@property (readonly) NSString *Origin __attribute__((swift_name("Origin")));
@property (readonly) NSString *Overwrite __attribute__((swift_name("Overwrite")));
@property (readonly) NSString *Position __attribute__((swift_name("Position")));
@property (readonly) NSString *Pragma __attribute__((swift_name("Pragma")));
@property (readonly) NSString *Prefer __attribute__((swift_name("Prefer")));
@property (readonly) NSString *PreferenceApplied __attribute__((swift_name("PreferenceApplied")));
@property (readonly) NSString *ProxyAuthenticate __attribute__((swift_name("ProxyAuthenticate")));
@property (readonly) NSString *ProxyAuthenticationInfo __attribute__((swift_name("ProxyAuthenticationInfo")));
@property (readonly) NSString *ProxyAuthorization __attribute__((swift_name("ProxyAuthorization")));
@property (readonly) NSString *PublicKeyPins __attribute__((swift_name("PublicKeyPins")));
@property (readonly) NSString *PublicKeyPinsReportOnly __attribute__((swift_name("PublicKeyPinsReportOnly")));
@property (readonly) NSString *Range __attribute__((swift_name("Range")));
@property (readonly) NSString *Referrer __attribute__((swift_name("Referrer")));
@property (readonly) NSString *RetryAfter __attribute__((swift_name("RetryAfter")));
@property (readonly) NSString *SLUG __attribute__((swift_name("SLUG")));
@property (readonly) NSString *ScheduleReply __attribute__((swift_name("ScheduleReply")));
@property (readonly) NSString *ScheduleTag __attribute__((swift_name("ScheduleTag")));
@property (readonly) NSString *SecWebSocketAccept __attribute__((swift_name("SecWebSocketAccept")));
@property (readonly) NSString *SecWebSocketExtensions __attribute__((swift_name("SecWebSocketExtensions")));
@property (readonly) NSString *SecWebSocketKey __attribute__((swift_name("SecWebSocketKey")));
@property (readonly) NSString *SecWebSocketProtocol __attribute__((swift_name("SecWebSocketProtocol")));
@property (readonly) NSString *SecWebSocketVersion __attribute__((swift_name("SecWebSocketVersion")));
@property (readonly) NSString *Server __attribute__((swift_name("Server")));
@property (readonly) NSString *SetCookie __attribute__((swift_name("SetCookie")));
@property (readonly) NSString *StrictTransportSecurity __attribute__((swift_name("StrictTransportSecurity")));
@property (readonly) NSString *TE __attribute__((swift_name("TE")));
@property (readonly) NSString *Timeout __attribute__((swift_name("Timeout")));
@property (readonly) NSString *Trailer __attribute__((swift_name("Trailer")));
@property (readonly) NSString *TransferEncoding __attribute__((swift_name("TransferEncoding")));
@property (readonly) SharedKotlinArray<NSString *> *UnsafeHeaders __attribute__((swift_name("UnsafeHeaders"))) __attribute__((deprecated("Use UnsafeHeadersList instead.")));
@property (readonly) NSArray<NSString *> *UnsafeHeadersList __attribute__((swift_name("UnsafeHeadersList")));
@property (readonly) NSString *Upgrade __attribute__((swift_name("Upgrade")));
@property (readonly) NSString *UserAgent __attribute__((swift_name("UserAgent")));
@property (readonly) NSString *Vary __attribute__((swift_name("Vary")));
@property (readonly) NSString *Via __attribute__((swift_name("Via")));
@property (readonly) NSString *WWWAuthenticate __attribute__((swift_name("WWWAuthenticate")));
@property (readonly) NSString *Warning __attribute__((swift_name("Warning")));
@property (readonly) NSString *XCorrelationId __attribute__((swift_name("XCorrelationId")));
@property (readonly) NSString *XForwardedFor __attribute__((swift_name("XForwardedFor")));
@property (readonly) NSString *XForwardedHost __attribute__((swift_name("XForwardedHost")));
@property (readonly) NSString *XForwardedProto __attribute__((swift_name("XForwardedProto")));
@property (readonly) NSString *XForwardedServer __attribute__((swift_name("XForwardedServer")));
@property (readonly) NSString *XHttpMethodOverride __attribute__((swift_name("XHttpMethodOverride")));
@property (readonly) NSString *XRequestId __attribute__((swift_name("XRequestId")));
@property (readonly) NSString *XTotalCount __attribute__((swift_name("XTotalCount")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpMethod")))
@interface SharedHttpMethod : SharedBase
- (instancetype)initWithValue:(NSString *)value __attribute__((swift_name("init(value:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedHttpMethodCompanion *companion __attribute__((swift_name("companion")));
- (NSString *)component1 __attribute__((swift_name("component1()")));
- (SharedHttpMethod *)doCopyValue:(NSString *)value __attribute__((swift_name("doCopy(value:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpMethod.Companion")))
@interface SharedHttpMethodCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedHttpMethodCompanion *shared __attribute__((swift_name("shared")));
- (SharedHttpMethod *)parseMethod:(NSString *)method __attribute__((swift_name("parse(method:)")));
@property (readonly) NSArray<SharedHttpMethod *> *DefaultMethods __attribute__((swift_name("DefaultMethods")));
@property (readonly) SharedHttpMethod *Delete __attribute__((swift_name("Delete")));
@property (readonly) SharedHttpMethod *Get __attribute__((swift_name("Get")));
@property (readonly) SharedHttpMethod *Head __attribute__((swift_name("Head")));
@property (readonly) SharedHttpMethod *Options __attribute__((swift_name("Options")));
@property (readonly) SharedHttpMethod *Patch __attribute__((swift_name("Patch")));
@property (readonly) SharedHttpMethod *Post __attribute__((swift_name("Post")));
@property (readonly) SharedHttpMethod *Put __attribute__((swift_name("Put")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpProtocolVersion")))
@interface SharedHttpProtocolVersion : SharedBase
- (instancetype)initWithName:(NSString *)name major:(int32_t)major minor:(int32_t)minor __attribute__((swift_name("init(name:major:minor:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedHttpProtocolVersionCompanion *companion __attribute__((swift_name("companion")));
- (NSString *)component1 __attribute__((swift_name("component1()")));
- (int32_t)component2 __attribute__((swift_name("component2()")));
- (int32_t)component3 __attribute__((swift_name("component3()")));
- (SharedHttpProtocolVersion *)doCopyName:(NSString *)name major:(int32_t)major minor:(int32_t)minor __attribute__((swift_name("doCopy(name:major:minor:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t major __attribute__((swift_name("major")));
@property (readonly) int32_t minor __attribute__((swift_name("minor")));
@property (readonly) NSString *name __attribute__((swift_name("name")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpProtocolVersion.Companion")))
@interface SharedHttpProtocolVersionCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedHttpProtocolVersionCompanion *shared __attribute__((swift_name("shared")));
- (SharedHttpProtocolVersion *)fromValueName:(NSString *)name major:(int32_t)major minor:(int32_t)minor __attribute__((swift_name("fromValue(name:major:minor:)")));
- (SharedHttpProtocolVersion *)parseValue:(id)value __attribute__((swift_name("parse(value:)")));
@property (readonly) SharedHttpProtocolVersion *HTTP_1_0 __attribute__((swift_name("HTTP_1_0")));
@property (readonly) SharedHttpProtocolVersion *HTTP_1_1 __attribute__((swift_name("HTTP_1_1")));
@property (readonly) SharedHttpProtocolVersion *HTTP_2_0 __attribute__((swift_name("HTTP_2_0")));
@property (readonly) SharedHttpProtocolVersion *QUIC __attribute__((swift_name("QUIC")));
@property (readonly) SharedHttpProtocolVersion *SPDY_3 __attribute__((swift_name("SPDY_3")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpStatusCode")))
@interface SharedHttpStatusCode : SharedBase
- (instancetype)initWithValue:(int32_t)value description:(NSString *)description __attribute__((swift_name("init(value:description:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedHttpStatusCodeCompanion *companion __attribute__((swift_name("companion")));
- (int32_t)component1 __attribute__((swift_name("component1()")));
- (NSString *)component2 __attribute__((swift_name("component2()")));
- (SharedHttpStatusCode *)doCopyValue:(int32_t)value description:(NSString *)description __attribute__((swift_name("doCopy(value:description:)")));
- (SharedHttpStatusCode *)descriptionValue:(NSString *)value __attribute__((swift_name("description(value:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *description_ __attribute__((swift_name("description_")));
@property (readonly) int32_t value __attribute__((swift_name("value")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpStatusCode.Companion")))
@interface SharedHttpStatusCodeCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedHttpStatusCodeCompanion *shared __attribute__((swift_name("shared")));
- (SharedHttpStatusCode *)fromValueValue:(int32_t)value __attribute__((swift_name("fromValue(value:)")));
@property (readonly) SharedHttpStatusCode *Accepted __attribute__((swift_name("Accepted")));
@property (readonly) SharedHttpStatusCode *BadGateway __attribute__((swift_name("BadGateway")));
@property (readonly) SharedHttpStatusCode *BadRequest __attribute__((swift_name("BadRequest")));
@property (readonly) SharedHttpStatusCode *Conflict __attribute__((swift_name("Conflict")));
@property (readonly) SharedHttpStatusCode *Continue __attribute__((swift_name("Continue")));
@property (readonly) SharedHttpStatusCode *Created __attribute__((swift_name("Created")));
@property (readonly) SharedHttpStatusCode *ExpectationFailed __attribute__((swift_name("ExpectationFailed")));
@property (readonly) SharedHttpStatusCode *FailedDependency __attribute__((swift_name("FailedDependency")));
@property (readonly) SharedHttpStatusCode *Forbidden __attribute__((swift_name("Forbidden")));
@property (readonly) SharedHttpStatusCode *Found __attribute__((swift_name("Found")));
@property (readonly) SharedHttpStatusCode *GatewayTimeout __attribute__((swift_name("GatewayTimeout")));
@property (readonly) SharedHttpStatusCode *Gone __attribute__((swift_name("Gone")));
@property (readonly) SharedHttpStatusCode *InsufficientStorage __attribute__((swift_name("InsufficientStorage")));
@property (readonly) SharedHttpStatusCode *InternalServerError __attribute__((swift_name("InternalServerError")));
@property (readonly) SharedHttpStatusCode *LengthRequired __attribute__((swift_name("LengthRequired")));
@property (readonly) SharedHttpStatusCode *Locked __attribute__((swift_name("Locked")));
@property (readonly) SharedHttpStatusCode *MethodNotAllowed __attribute__((swift_name("MethodNotAllowed")));
@property (readonly) SharedHttpStatusCode *MovedPermanently __attribute__((swift_name("MovedPermanently")));
@property (readonly) SharedHttpStatusCode *MultiStatus __attribute__((swift_name("MultiStatus")));
@property (readonly) SharedHttpStatusCode *MultipleChoices __attribute__((swift_name("MultipleChoices")));
@property (readonly) SharedHttpStatusCode *NoContent __attribute__((swift_name("NoContent")));
@property (readonly) SharedHttpStatusCode *NonAuthoritativeInformation __attribute__((swift_name("NonAuthoritativeInformation")));
@property (readonly) SharedHttpStatusCode *NotAcceptable __attribute__((swift_name("NotAcceptable")));
@property (readonly) SharedHttpStatusCode *NotFound __attribute__((swift_name("NotFound")));
@property (readonly) SharedHttpStatusCode *NotImplemented __attribute__((swift_name("NotImplemented")));
@property (readonly) SharedHttpStatusCode *NotModified __attribute__((swift_name("NotModified")));
@property (readonly) SharedHttpStatusCode *OK __attribute__((swift_name("OK")));
@property (readonly) SharedHttpStatusCode *PartialContent __attribute__((swift_name("PartialContent")));
@property (readonly) SharedHttpStatusCode *PayloadTooLarge __attribute__((swift_name("PayloadTooLarge")));
@property (readonly) SharedHttpStatusCode *PaymentRequired __attribute__((swift_name("PaymentRequired")));
@property (readonly) SharedHttpStatusCode *PermanentRedirect __attribute__((swift_name("PermanentRedirect")));
@property (readonly) SharedHttpStatusCode *PreconditionFailed __attribute__((swift_name("PreconditionFailed")));
@property (readonly) SharedHttpStatusCode *Processing __attribute__((swift_name("Processing")));
@property (readonly) SharedHttpStatusCode *ProxyAuthenticationRequired __attribute__((swift_name("ProxyAuthenticationRequired")));
@property (readonly) SharedHttpStatusCode *RequestHeaderFieldTooLarge __attribute__((swift_name("RequestHeaderFieldTooLarge")));
@property (readonly) SharedHttpStatusCode *RequestTimeout __attribute__((swift_name("RequestTimeout")));
@property (readonly) SharedHttpStatusCode *RequestURITooLong __attribute__((swift_name("RequestURITooLong")));
@property (readonly) SharedHttpStatusCode *RequestedRangeNotSatisfiable __attribute__((swift_name("RequestedRangeNotSatisfiable")));
@property (readonly) SharedHttpStatusCode *ResetContent __attribute__((swift_name("ResetContent")));
@property (readonly) SharedHttpStatusCode *SeeOther __attribute__((swift_name("SeeOther")));
@property (readonly) SharedHttpStatusCode *ServiceUnavailable __attribute__((swift_name("ServiceUnavailable")));
@property (readonly) SharedHttpStatusCode *SwitchProxy __attribute__((swift_name("SwitchProxy")));
@property (readonly) SharedHttpStatusCode *SwitchingProtocols __attribute__((swift_name("SwitchingProtocols")));
@property (readonly) SharedHttpStatusCode *TemporaryRedirect __attribute__((swift_name("TemporaryRedirect")));
@property (readonly) SharedHttpStatusCode *TooManyRequests __attribute__((swift_name("TooManyRequests")));
@property (readonly) SharedHttpStatusCode *Unauthorized __attribute__((swift_name("Unauthorized")));
@property (readonly) SharedHttpStatusCode *UnprocessableEntity __attribute__((swift_name("UnprocessableEntity")));
@property (readonly) SharedHttpStatusCode *UnsupportedMediaType __attribute__((swift_name("UnsupportedMediaType")));
@property (readonly) SharedHttpStatusCode *UpgradeRequired __attribute__((swift_name("UpgradeRequired")));
@property (readonly) SharedHttpStatusCode *UseProxy __attribute__((swift_name("UseProxy")));
@property (readonly) SharedHttpStatusCode *VariantAlsoNegotiates __attribute__((swift_name("VariantAlsoNegotiates")));
@property (readonly) SharedHttpStatusCode *VersionNotSupported __attribute__((swift_name("VersionNotSupported")));
@property (readonly) NSArray<SharedHttpStatusCode *> *allStatusCodes __attribute__((swift_name("allStatusCodes")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IllegalHeaderNameException")))
@interface SharedIllegalHeaderNameException : SharedKotlinIllegalArgumentException
- (instancetype)initWithHeaderName:(NSString *)headerName position:(int32_t)position __attribute__((swift_name("init(headerName:position:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithCause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (readonly) NSString *headerName __attribute__((swift_name("headerName")));
@property (readonly) int32_t position __attribute__((swift_name("position")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IllegalHeaderValueException")))
@interface SharedIllegalHeaderValueException : SharedKotlinIllegalArgumentException
- (instancetype)initWithHeaderValue:(NSString *)headerValue position:(int32_t)position __attribute__((swift_name("init(headerValue:position:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithCause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (readonly) NSString *headerValue __attribute__((swift_name("headerValue")));
@property (readonly) int32_t position __attribute__((swift_name("position")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LinkHeader")))
@interface SharedLinkHeader : SharedHeaderValueWithParameters
- (instancetype)initWithUri:(NSString *)uri rel:(NSString *)rel __attribute__((swift_name("init(uri:rel:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithUri:(NSString *)uri rel_:(SharedKotlinArray<NSString *> *)rel __attribute__((swift_name("init(uri:rel_:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithUri:(NSString *)uri rel:(NSArray<NSString *> *)rel type:(SharedContentType *)type __attribute__((swift_name("init(uri:rel:type:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithUri:(NSString *)uri params:(NSArray<SharedHeaderValueParam *> *)params __attribute__((swift_name("init(uri:params:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithContent:(NSString *)content parameters:(NSArray<SharedHeaderValueParam *> *)parameters __attribute__((swift_name("init(content:parameters:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (readonly) NSString *uri __attribute__((swift_name("uri")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LinkHeader.Parameters")))
@interface SharedLinkHeaderParameters : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)parameters __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedLinkHeaderParameters *shared __attribute__((swift_name("shared")));
@property (readonly) NSString *Anchor __attribute__((swift_name("Anchor")));
@property (readonly) NSString *HrefLang __attribute__((swift_name("HrefLang")));
@property (readonly) NSString *Media __attribute__((swift_name("Media")));
@property (readonly) NSString *Rel __attribute__((swift_name("Rel")));
@property (readonly) NSString *Rev __attribute__((swift_name("Rev")));
@property (readonly) NSString *Title __attribute__((swift_name("Title")));
@property (readonly) NSString *Type __attribute__((swift_name("Type")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LinkHeader.Rel")))
@interface SharedLinkHeaderRel : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)rel __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedLinkHeaderRel *shared __attribute__((swift_name("shared")));
@property (readonly) NSString *DnsPrefetch __attribute__((swift_name("DnsPrefetch")));
@property (readonly) NSString *Next __attribute__((swift_name("Next")));
@property (readonly) NSString *PreConnect __attribute__((swift_name("PreConnect")));
@property (readonly) NSString *PreLoad __attribute__((swift_name("PreLoad")));
@property (readonly) NSString *PreRender __attribute__((swift_name("PreRender")));
@property (readonly) NSString *Prefetch __attribute__((swift_name("Prefetch")));
@property (readonly) NSString *Stylesheet __attribute__((swift_name("Stylesheet")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ParametersCompanion")))
@interface SharedParametersCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedParametersCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedParameters>)buildBuilder:(void (^)(SharedParametersBuilder *))builder __attribute__((swift_name("build(builder:)")));
@property (readonly) id<SharedParameters> Empty __attribute__((swift_name("Empty")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ParametersBuilder")))
@interface SharedParametersBuilder : SharedStringValuesBuilder
- (instancetype)initWithSize:(int32_t)size urlEncodingOption:(SharedUrlEncodingOption *)urlEncodingOption __attribute__((swift_name("init(size:urlEncodingOption:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithCaseInsensitiveName:(BOOL)caseInsensitiveName size:(int32_t)size __attribute__((swift_name("init(caseInsensitiveName:size:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (id<SharedParameters>)build __attribute__((swift_name("build()")));
@property SharedUrlEncodingOption *urlEncodingOption __attribute__((swift_name("urlEncodingOption")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ParametersImpl")))
@interface SharedParametersImpl : SharedStringValuesImpl <SharedParameters>
- (instancetype)initWithValues:(NSDictionary<NSString *, NSArray<NSString *> *> *)values urlEncodingOption:(SharedUrlEncodingOption *)urlEncodingOption __attribute__((swift_name("init(values:urlEncodingOption:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithCaseInsensitiveName:(BOOL)caseInsensitiveName values:(NSDictionary<NSString *, NSArray<NSString *> *> *)values __attribute__((swift_name("init(caseInsensitiveName:values:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedUrlEncodingOption *urlEncodingOption __attribute__((swift_name("urlEncodingOption")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ParametersSingleImpl")))
@interface SharedParametersSingleImpl : SharedStringValuesSingleImpl <SharedParameters>
- (instancetype)initWithName:(NSString *)name values:(NSArray<NSString *> *)values __attribute__((swift_name("init(name:values:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithCaseInsensitiveName:(BOOL)caseInsensitiveName name:(NSString *)name values:(NSArray<NSString *> *)values __attribute__((swift_name("init(caseInsensitiveName:name:values:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (NSString *)description __attribute__((swift_name("description()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("RangeUnits")))
@interface SharedRangeUnits : SharedKotlinEnum<SharedRangeUnits *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedRangeUnits *bytes __attribute__((swift_name("bytes")));
@property (class, readonly) SharedRangeUnits *none __attribute__((swift_name("none")));
+ (SharedKotlinArray<SharedRangeUnits *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *unitToken __attribute__((swift_name("unitToken")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("RangesSpecifier")))
@interface SharedRangesSpecifier : SharedBase
- (instancetype)initWithUnit:(SharedRangeUnits *)unit ranges:(NSArray<SharedContentRange *> *)ranges __attribute__((swift_name("init(unit:ranges:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithUnit:(NSString *)unit ranges_:(NSArray<SharedContentRange *> *)ranges __attribute__((swift_name("init(unit:ranges_:)"))) __attribute__((objc_designated_initializer));
- (NSString *)component1 __attribute__((swift_name("component1()")));
- (NSArray<SharedContentRange *> *)component2 __attribute__((swift_name("component2()")));
- (SharedRangesSpecifier *)doCopyUnit:(NSString *)unit ranges:(NSArray<SharedContentRange *> *)ranges __attribute__((swift_name("doCopy(unit:ranges:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (BOOL)isValidRangeUnitPredicate:(SharedBoolean *(^)(NSString *))rangeUnitPredicate __attribute__((swift_name("isValid(rangeUnitPredicate:)")));
- (NSArray<SharedKotlinLongRange *> *)mergeLength:(int64_t)length __attribute__((swift_name("merge(length:)")));
- (NSArray<SharedKotlinLongRange *> *)mergeLength:(int64_t)length maxRangeCount:(int32_t)maxRangeCount __attribute__((swift_name("merge(length:maxRangeCount:)")));
- (SharedKotlinLongRange * _Nullable)mergeToSingleLength:(int64_t)length __attribute__((swift_name("mergeToSingle(length:)")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSArray<SharedContentRange *> *ranges __attribute__((swift_name("ranges")));
@property (readonly) NSString *unit __attribute__((swift_name("unit")));
@end;

__attribute__((swift_name("RequestConnectionPoint")))
@protocol SharedRequestConnectionPoint
@required
@property (readonly) NSString *host __attribute__((swift_name("host")));
@property (readonly) SharedHttpMethod *method __attribute__((swift_name("method")));
@property (readonly) int32_t port __attribute__((swift_name("port")));
@property (readonly) NSString *remoteHost __attribute__((swift_name("remoteHost")));
@property (readonly) NSString *scheme __attribute__((swift_name("scheme")));
@property (readonly) NSString *uri __attribute__((swift_name("uri")));
@property (readonly) NSString *version __attribute__((swift_name("version")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("URLBuilder")))
@interface SharedURLBuilder : SharedBase
- (instancetype)initWithProtocol:(SharedURLProtocol *)protocol host:(NSString *)host port:(int32_t)port user:(NSString * _Nullable)user password:(NSString * _Nullable)password encodedPath:(NSString *)encodedPath parameters:(SharedParametersBuilder *)parameters fragment:(NSString *)fragment trailingQuery:(BOOL)trailingQuery __attribute__((swift_name("init(protocol:host:port:user:password:encodedPath:parameters:fragment:trailingQuery:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedURLBuilderCompanion *companion __attribute__((swift_name("companion")));
- (SharedUrl *)build __attribute__((swift_name("build()")));
- (NSString *)buildString __attribute__((swift_name("buildString()")));
- (SharedURLBuilder *)pathComponents:(SharedKotlinArray<NSString *> *)components __attribute__((swift_name("path(components:)")));
- (SharedURLBuilder *)pathComponents_:(NSArray<NSString *> *)components __attribute__((swift_name("path(components_:)")));
@property NSString *encodedPath __attribute__((swift_name("encodedPath")));
@property NSString *fragment __attribute__((swift_name("fragment")));
@property NSString *host __attribute__((swift_name("host")));
@property (readonly) SharedParametersBuilder *parameters __attribute__((swift_name("parameters")));
@property NSString * _Nullable password __attribute__((swift_name("password")));
@property int32_t port __attribute__((swift_name("port")));
@property SharedURLProtocol *protocol __attribute__((swift_name("protocol")));
@property BOOL trailingQuery __attribute__((swift_name("trailingQuery")));
@property NSString * _Nullable user __attribute__((swift_name("user")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("URLBuilder.Companion")))
@interface SharedURLBuilderCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedURLBuilderCompanion *shared __attribute__((swift_name("shared")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("URLDecodeException")))
@interface SharedURLDecodeException : SharedKotlinException
- (instancetype)initWithMessage:(NSString *)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithCause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("URLParserException")))
@interface SharedURLParserException : SharedKotlinIllegalStateException
- (instancetype)initWithUrlString:(NSString *)urlString cause:(SharedKotlinThrowable *)cause __attribute__((swift_name("init(urlString:cause:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithCause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("URLProtocol")))
@interface SharedURLProtocol : SharedBase
- (instancetype)initWithName:(NSString *)name defaultPort:(int32_t)defaultPort __attribute__((swift_name("init(name:defaultPort:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedURLProtocolCompanion *companion __attribute__((swift_name("companion")));
- (NSString *)component1 __attribute__((swift_name("component1()")));
- (int32_t)component2 __attribute__((swift_name("component2()")));
- (SharedURLProtocol *)doCopyName:(NSString *)name defaultPort:(int32_t)defaultPort __attribute__((swift_name("doCopy(name:defaultPort:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t defaultPort __attribute__((swift_name("defaultPort")));
@property (readonly) NSString *name __attribute__((swift_name("name")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("URLProtocol.Companion")))
@interface SharedURLProtocolCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedURLProtocolCompanion *shared __attribute__((swift_name("shared")));
- (SharedURLProtocol *)createOrDefaultName:(NSString *)name __attribute__((swift_name("createOrDefault(name:)")));
@property (readonly) SharedURLProtocol *HTTP __attribute__((swift_name("HTTP")));
@property (readonly) SharedURLProtocol *HTTPS __attribute__((swift_name("HTTPS")));
@property (readonly) SharedURLProtocol *SOCKS __attribute__((swift_name("SOCKS")));
@property (readonly) SharedURLProtocol *WS __attribute__((swift_name("WS")));
@property (readonly) SharedURLProtocol *WSS __attribute__((swift_name("WSS")));
@property (readonly) NSDictionary<NSString *, SharedURLProtocol *> *byName __attribute__((swift_name("byName")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("UnsafeHeaderException")))
@interface SharedUnsafeHeaderException : SharedKotlinIllegalArgumentException
- (instancetype)initWithHeader:(NSString *)header __attribute__((swift_name("init(header:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithCause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Url")))
@interface SharedUrl : SharedBase
- (instancetype)initWithProtocol:(SharedURLProtocol *)protocol host:(NSString *)host specifiedPort:(int32_t)specifiedPort encodedPath:(NSString *)encodedPath parameters:(id<SharedParameters>)parameters fragment:(NSString *)fragment user:(NSString * _Nullable)user password:(NSString * _Nullable)password trailingQuery:(BOOL)trailingQuery __attribute__((swift_name("init(protocol:host:specifiedPort:encodedPath:parameters:fragment:user:password:trailingQuery:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedUrlCompanion *companion __attribute__((swift_name("companion")));
- (SharedURLProtocol *)component1 __attribute__((swift_name("component1()")));
- (NSString *)component2 __attribute__((swift_name("component2()")));
- (int32_t)component3 __attribute__((swift_name("component3()")));
- (NSString *)component4 __attribute__((swift_name("component4()")));
- (id<SharedParameters>)component5 __attribute__((swift_name("component5()")));
- (NSString *)component6 __attribute__((swift_name("component6()")));
- (NSString * _Nullable)component7 __attribute__((swift_name("component7()")));
- (NSString * _Nullable)component8 __attribute__((swift_name("component8()")));
- (BOOL)component9 __attribute__((swift_name("component9()")));
- (SharedUrl *)doCopyProtocol:(SharedURLProtocol *)protocol host:(NSString *)host specifiedPort:(int32_t)specifiedPort encodedPath:(NSString *)encodedPath parameters:(id<SharedParameters>)parameters fragment:(NSString *)fragment user:(NSString * _Nullable)user password:(NSString * _Nullable)password trailingQuery:(BOOL)trailingQuery __attribute__((swift_name("doCopy(protocol:host:specifiedPort:encodedPath:parameters:fragment:user:password:trailingQuery:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *encodedPath __attribute__((swift_name("encodedPath")));
@property (readonly) NSString *fragment __attribute__((swift_name("fragment")));
@property (readonly) NSString *host __attribute__((swift_name("host")));
@property (readonly) id<SharedParameters> parameters __attribute__((swift_name("parameters")));
@property (readonly) NSString * _Nullable password __attribute__((swift_name("password")));
@property (readonly) int32_t port __attribute__((swift_name("port")));
@property (readonly) SharedURLProtocol *protocol __attribute__((swift_name("protocol")));
@property (readonly) int32_t specifiedPort __attribute__((swift_name("specifiedPort")));
@property (readonly) BOOL trailingQuery __attribute__((swift_name("trailingQuery")));
@property (readonly) NSString * _Nullable user __attribute__((swift_name("user")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Url.Companion")))
@interface SharedUrlCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedUrlCompanion *shared __attribute__((swift_name("shared")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("UrlEncodingOption")))
@interface SharedUrlEncodingOption : SharedKotlinEnum<SharedUrlEncodingOption *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedUrlEncodingOption *default_ __attribute__((swift_name("default_")));
@property (class, readonly) SharedUrlEncodingOption *keyOnly __attribute__((swift_name("keyOnly")));
@property (class, readonly) SharedUrlEncodingOption *valueOnly __attribute__((swift_name("valueOnly")));
@property (class, readonly) SharedUrlEncodingOption *noEncoding __attribute__((swift_name("noEncoding")));
+ (SharedKotlinArray<SharedUrlEncodingOption *> *)values __attribute__((swift_name("values()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AuthScheme")))
@interface SharedAuthScheme : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)authScheme __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedAuthScheme *shared __attribute__((swift_name("shared")));
@property (readonly) NSString *Basic __attribute__((swift_name("Basic")));
@property (readonly) NSString *Bearer __attribute__((swift_name("Bearer")));
@property (readonly) NSString *Digest __attribute__((swift_name("Digest")));
@property (readonly) NSString *Negotiate __attribute__((swift_name("Negotiate")));
@property (readonly) NSString *OAuth __attribute__((swift_name("OAuth")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HeaderValueEncoding")))
@interface SharedHeaderValueEncoding : SharedKotlinEnum<SharedHeaderValueEncoding *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedHeaderValueEncoding *quotedWhenRequired __attribute__((swift_name("quotedWhenRequired")));
@property (class, readonly) SharedHeaderValueEncoding *quotedAlways __attribute__((swift_name("quotedAlways")));
@property (class, readonly) SharedHeaderValueEncoding *uriEncode __attribute__((swift_name("uriEncode")));
+ (SharedKotlinArray<SharedHeaderValueEncoding *> *)values __attribute__((swift_name("values()")));
@end;

__attribute__((swift_name("HttpAuthHeader")))
@interface SharedHttpAuthHeader : SharedBase
- (instancetype)initWithAuthScheme:(NSString *)authScheme __attribute__((swift_name("init(authScheme:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedHttpAuthHeaderCompanion *companion __attribute__((swift_name("companion")));
- (NSString *)render __attribute__((swift_name("render()")));
- (NSString *)renderEncoding:(SharedHeaderValueEncoding *)encoding __attribute__((swift_name("render(encoding:)")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *authScheme __attribute__((swift_name("authScheme")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpAuthHeader.Companion")))
@interface SharedHttpAuthHeaderCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedHttpAuthHeaderCompanion *shared __attribute__((swift_name("shared")));
- (SharedHttpAuthHeaderParameterized *)basicAuthChallengeRealm:(NSString *)realm charset:(SharedCharset * _Nullable)charset __attribute__((swift_name("basicAuthChallenge(realm:charset:)")));
- (SharedHttpAuthHeaderParameterized *)digestAuthChallengeRealm:(NSString *)realm nonce:(NSString *)nonce domain:(NSArray<NSString *> *)domain opaque:(NSString * _Nullable)opaque stale:(SharedBoolean * _Nullable)stale algorithm:(NSString *)algorithm __attribute__((swift_name("digestAuthChallenge(realm:nonce:domain:opaque:stale:algorithm:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpAuthHeader.Parameterized")))
@interface SharedHttpAuthHeaderParameterized : SharedHttpAuthHeader
- (instancetype)initWithAuthScheme:(NSString *)authScheme parameters:(NSDictionary<NSString *, NSString *> *)parameters encoding:(SharedHeaderValueEncoding *)encoding __attribute__((swift_name("init(authScheme:parameters:encoding:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithAuthScheme:(NSString *)authScheme parameters:(NSArray<SharedHeaderValueParam *> *)parameters encoding_:(SharedHeaderValueEncoding *)encoding __attribute__((swift_name("init(authScheme:parameters:encoding_:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithAuthScheme:(NSString *)authScheme __attribute__((swift_name("init(authScheme:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString * _Nullable)parameterName:(NSString *)name __attribute__((swift_name("parameter(name:)")));
- (NSString *)render __attribute__((swift_name("render()")));
- (NSString *)renderEncoding:(SharedHeaderValueEncoding *)encoding __attribute__((swift_name("render(encoding:)")));
- (SharedHttpAuthHeaderParameterized *)withParameterName:(NSString *)name value:(NSString *)value __attribute__((swift_name("withParameter(name:value:)")));
- (SharedHttpAuthHeaderParameterized *)withReplacedParameterName:(NSString *)name value:(NSString *)value __attribute__((swift_name("withReplacedParameter(name:value:)")));
@property (readonly) SharedHeaderValueEncoding *encoding __attribute__((swift_name("encoding")));
@property (readonly) NSArray<SharedHeaderValueParam *> *parameters __attribute__((swift_name("parameters")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpAuthHeader.Parameters")))
@interface SharedHttpAuthHeaderParameters : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)parameters __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedHttpAuthHeaderParameters *shared __attribute__((swift_name("shared")));
@property (readonly) NSString *Charset __attribute__((swift_name("Charset")));
@property (readonly) NSString *OAuthCallback __attribute__((swift_name("OAuthCallback")));
@property (readonly) NSString *OAuthCallbackConfirmed __attribute__((swift_name("OAuthCallbackConfirmed")));
@property (readonly) NSString *OAuthConsumerKey __attribute__((swift_name("OAuthConsumerKey")));
@property (readonly) NSString *OAuthNonce __attribute__((swift_name("OAuthNonce")));
@property (readonly) NSString *OAuthSignature __attribute__((swift_name("OAuthSignature")));
@property (readonly) NSString *OAuthSignatureMethod __attribute__((swift_name("OAuthSignatureMethod")));
@property (readonly) NSString *OAuthTimestamp __attribute__((swift_name("OAuthTimestamp")));
@property (readonly) NSString *OAuthToken __attribute__((swift_name("OAuthToken")));
@property (readonly) NSString *OAuthTokenSecret __attribute__((swift_name("OAuthTokenSecret")));
@property (readonly) NSString *OAuthVerifier __attribute__((swift_name("OAuthVerifier")));
@property (readonly) NSString *OAuthVersion __attribute__((swift_name("OAuthVersion")));
@property (readonly) NSString *Realm __attribute__((swift_name("Realm")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpAuthHeader.Single")))
@interface SharedHttpAuthHeaderSingle : SharedHttpAuthHeader
- (instancetype)initWithAuthScheme:(NSString *)authScheme blob:(NSString *)blob __attribute__((swift_name("init(authScheme:blob:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithAuthScheme:(NSString *)authScheme __attribute__((swift_name("init(authScheme:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)render __attribute__((swift_name("render()")));
- (NSString *)renderEncoding:(SharedHeaderValueEncoding *)encoding __attribute__((swift_name("render(encoding:)")));
@property (readonly) NSString *blob __attribute__((swift_name("blob")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ParseException")))
@interface SharedParseException : SharedKotlinIllegalArgumentException
- (instancetype)initWithMessage:(NSString *)message cause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithCause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (readonly) SharedKotlinThrowable * _Nullable cause __attribute__((swift_name("cause")));
@property (readonly) NSString *message __attribute__((swift_name("message")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ByteArrayContent")))
@interface SharedByteArrayContent : SharedOutgoingContentByteArrayContent
- (instancetype)initWithBytes:(SharedKotlinByteArray *)bytes contentType:(SharedContentType * _Nullable)contentType status:(SharedHttpStatusCode * _Nullable)status __attribute__((swift_name("init(bytes:contentType:status:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (SharedKotlinByteArray *)bytes __attribute__((swift_name("bytes()")));
@property (readonly) SharedLong *contentLength __attribute__((swift_name("contentLength")));
@property (readonly) SharedContentType * _Nullable contentType __attribute__((swift_name("contentType")));
@property (readonly) SharedHttpStatusCode * _Nullable status __attribute__((swift_name("status")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CachingOptions")))
@interface SharedCachingOptions : SharedBase
- (instancetype)initWithCacheControl:(SharedCacheControl_ * _Nullable)cacheControl expires:(SharedGMTDate * _Nullable)expires __attribute__((swift_name("init(cacheControl:expires:)"))) __attribute__((objc_designated_initializer));
- (SharedCacheControl_ * _Nullable)component1 __attribute__((swift_name("component1()")));
- (SharedGMTDate * _Nullable)component2 __attribute__((swift_name("component2()")));
- (SharedCachingOptions *)doCopyCacheControl:(SharedCacheControl_ * _Nullable)cacheControl expires:(SharedGMTDate * _Nullable)expires __attribute__((swift_name("doCopy(cacheControl:expires:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedCacheControl_ * _Nullable cacheControl __attribute__((swift_name("cacheControl")));
@property (readonly) SharedGMTDate * _Nullable expires __attribute__((swift_name("expires")));
@end;

__attribute__((swift_name("MultiPartData")))
@protocol SharedMultiPartData
@required

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)readPartWithCompletionHandler:(void (^)(SharedPartData * _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("readPart(completionHandler:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MultiPartDataEmpty")))
@interface SharedMultiPartDataEmpty : SharedBase <SharedMultiPartData>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)empty __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedMultiPartDataEmpty *shared __attribute__((swift_name("shared")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)readPartWithCompletionHandler:(void (^)(SharedPartData * _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("readPart(completionHandler:)")));
@end;

__attribute__((swift_name("OutgoingContent.ProtocolUpgrade")))
@interface SharedOutgoingContentProtocolUpgrade : SharedOutgoingContent
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)upgradeInput:(id<SharedByteReadChannel>)input output:(id<SharedByteWriteChannel>)output engineContext:(id<SharedKotlinCoroutineContext>)engineContext userContext:(id<SharedKotlinCoroutineContext>)userContext completionHandler:(void (^)(id<SharedJob> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("upgrade(input:output:engineContext:userContext:completionHandler:)")));
@property (readonly) SharedHttpStatusCode * _Nullable status __attribute__((swift_name("status")));
@end;

__attribute__((swift_name("OutgoingContent.ReadChannelContent")))
@interface SharedOutgoingContentReadChannelContent : SharedOutgoingContent
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (id<SharedByteReadChannel>)readFrom __attribute__((swift_name("readFrom()")));
- (id<SharedByteReadChannel>)readFromRange:(SharedKotlinLongRange *)range __attribute__((swift_name("readFrom(range:)")));
@end;

__attribute__((swift_name("PartData")))
@interface SharedPartData : SharedBase
- (instancetype)initWithDispose:(void (^)(void))dispose headers:(id<SharedHeaders>)headers __attribute__((swift_name("init(dispose:headers:)"))) __attribute__((objc_designated_initializer));
@property (readonly) SharedContentDisposition * _Nullable contentDisposition __attribute__((swift_name("contentDisposition")));
@property (readonly) SharedContentType * _Nullable contentType __attribute__((swift_name("contentType")));
@property (readonly) void (^dispose)(void) __attribute__((swift_name("dispose")));
@property (readonly) id<SharedHeaders> headers __attribute__((swift_name("headers")));
@property (readonly) NSString * _Nullable name __attribute__((swift_name("name")));
@property (readonly) id<SharedHeaders> partHeaders __attribute__((swift_name("partHeaders"))) __attribute__((unavailable("Use headers property instead")));
@property (readonly) NSString * _Nullable partName __attribute__((swift_name("partName"))) __attribute__((unavailable("Use name property instead")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PartData.BinaryItem")))
@interface SharedPartDataBinaryItem : SharedPartData
- (instancetype)initWithProvider:(id<SharedInput> (^)(void))provider dispose:(void (^)(void))dispose partHeaders:(id<SharedHeaders>)partHeaders __attribute__((swift_name("init(provider:dispose:partHeaders:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithDispose:(void (^)(void))dispose headers:(id<SharedHeaders>)headers __attribute__((swift_name("init(dispose:headers:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (readonly) id<SharedInput> (^provider)(void) __attribute__((swift_name("provider")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PartData.FileItem")))
@interface SharedPartDataFileItem : SharedPartData
- (instancetype)initWithProvider:(id<SharedInput> (^)(void))provider dispose:(void (^)(void))dispose partHeaders:(id<SharedHeaders>)partHeaders __attribute__((swift_name("init(provider:dispose:partHeaders:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithDispose:(void (^)(void))dispose headers:(id<SharedHeaders>)headers __attribute__((swift_name("init(dispose:headers:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (readonly) NSString * _Nullable originalFileName __attribute__((swift_name("originalFileName")));
@property (readonly) id<SharedInput> (^provider)(void) __attribute__((swift_name("provider")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PartData.FormItem")))
@interface SharedPartDataFormItem : SharedPartData
- (instancetype)initWithValue:(NSString *)value dispose:(void (^)(void))dispose partHeaders:(id<SharedHeaders>)partHeaders __attribute__((swift_name("init(value:dispose:partHeaders:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithDispose:(void (^)(void))dispose headers:(id<SharedHeaders>)headers __attribute__((swift_name("init(dispose:headers:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TextContent")))
@interface SharedTextContent : SharedOutgoingContentByteArrayContent
- (instancetype)initWithText:(NSString *)text contentType:(SharedContentType *)contentType status:(SharedHttpStatusCode * _Nullable)status __attribute__((swift_name("init(text:contentType:status:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (SharedKotlinByteArray *)bytes __attribute__((swift_name("bytes()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedLong *contentLength __attribute__((swift_name("contentLength")));
@property (readonly) SharedContentType *contentType __attribute__((swift_name("contentType")));
@property (readonly) SharedHttpStatusCode * _Nullable status __attribute__((swift_name("status")));
@property (readonly) NSString *text __attribute__((swift_name("text")));
@end;

__attribute__((swift_name("NonceManager")))
@protocol SharedNonceManager
@required

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)doNewNonceWithCompletionHandler:(void (^)(NSString * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("doNewNonce(completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)verifyNonceNonce:(NSString *)nonce completionHandler:(void (^)(SharedBoolean * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("verifyNonce(nonce:completionHandler:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AlwaysFailNonceManager")))
@interface SharedAlwaysFailNonceManager : SharedBase <SharedNonceManager>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)alwaysFailNonceManager __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedAlwaysFailNonceManager *shared __attribute__((swift_name("shared")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)doNewNonceWithCompletionHandler:(void (^)(NSString * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("doNewNonce(completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)verifyNonceNonce:(NSString *)nonce completionHandler:(void (^)(SharedBoolean * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("verifyNonce(nonce:completionHandler:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AttributeKey")))
@interface SharedAttributeKey<T> : SharedBase
- (instancetype)initWithName:(NSString *)name __attribute__((swift_name("init(name:)"))) __attribute__((objc_designated_initializer));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *name __attribute__((swift_name("name")));
@end;

__attribute__((swift_name("Attributes")))
@protocol SharedAttributes
@required
- (id)computeIfAbsentKey:(SharedAttributeKey<id> *)key block:(id (^)(void))block __attribute__((swift_name("computeIfAbsent(key:block:)")));
- (BOOL)containsKey:(SharedAttributeKey<id> *)key __attribute__((swift_name("contains(key:)")));
- (id)getKey_:(SharedAttributeKey<id> *)key __attribute__((swift_name("get(key_:)")));
- (id _Nullable)getOrNullKey:(SharedAttributeKey<id> *)key __attribute__((swift_name("getOrNull(key:)")));
- (void)putKey:(SharedAttributeKey<id> *)key value:(id)value __attribute__((swift_name("put(key:value:)")));
- (void)removeKey:(SharedAttributeKey<id> *)key __attribute__((swift_name("remove(key:)")));
- (id)takeKey:(SharedAttributeKey<id> *)key __attribute__((swift_name("take(key:)")));
- (id _Nullable)takeOrNullKey:(SharedAttributeKey<id> *)key __attribute__((swift_name("takeOrNull(key:)")));
@property (readonly) NSArray<SharedAttributeKey<id> *> *allKeys __attribute__((swift_name("allKeys")));
@end;

__attribute__((unavailable("can't be imported")))
__attribute__((swift_name("CaseInsensitiveMap")))
@interface SharedCaseInsensitiveMap : NSObject
@end;

__attribute__((unavailable("can't be imported")))
__attribute__((swift_name("CaseInsensitiveSet")))
@interface SharedCaseInsensitiveSet : NSObject
@end;

__attribute__((swift_name("Digest")))
@protocol SharedDigest
@required

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)buildWithCompletionHandler:(void (^)(SharedKotlinByteArray * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("build(completionHandler:)")));
- (void)plusAssignBytes:(SharedKotlinByteArray *)bytes __attribute__((swift_name("plusAssign(bytes:)")));
- (void)reset __attribute__((swift_name("reset()")));
@end;

__attribute__((swift_name("Encoder")))
@protocol SharedEncoder
@required
- (id<SharedByteReadChannel>)decode:(id<SharedCoroutineScope>)receiver source:(id<SharedByteReadChannel>)source __attribute__((swift_name("decode(_:source:)")));
- (id<SharedByteReadChannel>)encode:(id<SharedCoroutineScope>)receiver source:(id<SharedByteReadChannel>)source __attribute__((swift_name("encode(_:source:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GenerateOnlyNonceManager")))
@interface SharedGenerateOnlyNonceManager : SharedBase <SharedNonceManager>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)generateOnlyNonceManager __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedGenerateOnlyNonceManager *shared __attribute__((swift_name("shared")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)doNewNonceWithCompletionHandler:(void (^)(NSString * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("doNewNonce(completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)verifyNonceNonce:(NSString *)nonce completionHandler:(void (^)(SharedBoolean * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("verifyNonce(nonce:completionHandler:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Hash")))
@interface SharedHash : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)hash_ __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedHash *shared __attribute__((swift_name("shared")));
- (int32_t)combineObjects:(SharedKotlinArray<id> *)objects __attribute__((swift_name("combine(objects:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Identity")))
@interface SharedIdentity : SharedBase <SharedEncoder>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)identity __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedIdentity *shared __attribute__((swift_name("shared")));
- (id<SharedByteReadChannel>)decode:(id<SharedCoroutineScope>)receiver source:(id<SharedByteReadChannel>)source __attribute__((swift_name("decode(_:source:)")));
- (id<SharedByteReadChannel>)encode:(id<SharedCoroutineScope>)receiver source:(id<SharedByteReadChannel>)source __attribute__((swift_name("encode(_:source:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Lock")))
@interface SharedLock : SharedBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (void)close __attribute__((swift_name("close()")));
- (void)lock __attribute__((swift_name("lock()")));
- (void)unlock __attribute__((swift_name("unlock()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PlatformUtils")))
@interface SharedPlatformUtils : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)platformUtils __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedPlatformUtils *shared __attribute__((swift_name("shared")));
@property (readonly) BOOL IS_BROWSER __attribute__((swift_name("IS_BROWSER")));
@property (readonly) BOOL IS_DEVELOPMENT_MODE __attribute__((swift_name("IS_DEVELOPMENT_MODE")));
@property (readonly) BOOL IS_JVM __attribute__((swift_name("IS_JVM")));
@property (readonly) BOOL IS_NATIVE __attribute__((swift_name("IS_NATIVE")));
@property (readonly) BOOL IS_NODE __attribute__((swift_name("IS_NODE")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StringValuesCompanion")))
@interface SharedStringValuesCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedStringValuesCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedStringValues>)buildCaseInsensitiveName:(BOOL)caseInsensitiveName builder:(void (^)(SharedStringValuesBuilder *))builder __attribute__((swift_name("build(caseInsensitiveName:builder:)")));
@property (readonly) id<SharedStringValues> Empty __attribute__((swift_name("Empty")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("NetworkAddress")))
@interface SharedNetworkAddress : SharedBase
- (instancetype)initWithHostname:(NSString *)hostname port:(int32_t)port explicitAddress:(id _Nullable)explicitAddress __attribute__((swift_name("init(hostname:port:explicitAddress:)"))) __attribute__((objc_designated_initializer));
- (NSString *)description __attribute__((swift_name("description()")));
@property id explicitAddress __attribute__((swift_name("explicitAddress")));
@property (readonly) NSString *hostname __attribute__((swift_name("hostname")));
@property (readonly) int32_t port __attribute__((swift_name("port")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("UnresolvedAddressException")))
@interface SharedUnresolvedAddressException : SharedKotlinIllegalArgumentException
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (instancetype)initWithMessage:(NSString * _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithCause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end;

__attribute__((swift_name("ChannelIOException")))
@interface SharedChannelIOException : SharedIOException
- (instancetype)initWithMessage:(NSString *)message exception:(SharedKotlinThrowable *)exception __attribute__((swift_name("init(message:exception:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithMessage:(NSString *)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString *)message cause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ChannelReadException")))
@interface SharedChannelReadException : SharedChannelIOException
- (instancetype)initWithMessage:(NSString *)message exception:(SharedKotlinThrowable *)exception __attribute__((swift_name("init(message:exception:)"))) __attribute__((objc_designated_initializer));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ChannelWriteException")))
@interface SharedChannelWriteException : SharedChannelIOException
- (instancetype)initWithMessage:(NSString *)message exception:(SharedKotlinThrowable *)exception __attribute__((swift_name("init(message:exception:)"))) __attribute__((objc_designated_initializer));
@end;

__attribute__((swift_name("ConversionService")))
@protocol SharedConversionService
@required
- (id _Nullable)fromValuesValues:(NSArray<NSString *> *)values type:(id<SharedTypeInfo>)type __attribute__((swift_name("fromValues(values:type:)")));
- (NSArray<NSString *> *)toValuesValue:(id _Nullable)value __attribute__((swift_name("toValues(value:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DataConversion_")))
@interface SharedDataConversion_ : SharedBase <SharedConversionService>
- (instancetype)initWithConfiguration:(SharedDataConversion_Configuration *)configuration __attribute__((swift_name("init(configuration:)"))) __attribute__((objc_designated_initializer));
- (id _Nullable)fromValuesValues:(NSArray<NSString *> *)values type:(id<SharedTypeInfo>)type __attribute__((swift_name("fromValues(values:type:)")));
- (NSArray<NSString *> *)toValuesValue:(id _Nullable)value __attribute__((swift_name("toValues(value:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DataConversion_.Configuration")))
@interface SharedDataConversion_Configuration : SharedBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (void)convertConfigure:(void (^)(SharedDelegatingConversionServiceConfiguration<id> *))configure __attribute__((swift_name("convert(configure:)")));
- (void)convertType:(id<SharedKotlinKClass>)type convertor:(id<SharedConversionService>)convertor __attribute__((swift_name("convert(type:convertor:)")));
- (void)convertType:(id<SharedKotlinKType>)type configure:(void (^)(SharedDelegatingConversionServiceConfiguration<id> *))configure __attribute__((swift_name("convert(type:configure:)")));
@end;

__attribute__((swift_name("DataConversionException")))
@interface SharedDataConversionException : SharedKotlinException
- (instancetype)initWithMessage:(NSString *)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithCause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DefaultConversionService")))
@interface SharedDefaultConversionService : SharedBase <SharedConversionService>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)defaultConversionService __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedDefaultConversionService *shared __attribute__((swift_name("shared")));
- (id)fromValueValue:(NSString *)value klass:(id<SharedKotlinKClass>)klass __attribute__((swift_name("fromValue(value:klass:)")));
- (id _Nullable)fromValuesValues:(NSArray<NSString *> *)values type:(id<SharedTypeInfo>)type __attribute__((swift_name("fromValues(values:type:)")));
- (NSArray<NSString *> *)toValuesValue:(id _Nullable)value __attribute__((swift_name("toValues(value:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DelegatingConversionService")))
@interface SharedDelegatingConversionService : SharedBase <SharedConversionService>
- (instancetype)initWithKlass:(id<SharedKotlinKClass>)klass decoder:(id _Nullable (^ _Nullable)(NSArray<NSString *> *))decoder encoder:(NSArray<NSString *> *(^ _Nullable)(id _Nullable))encoder __attribute__((swift_name("init(klass:decoder:encoder:)"))) __attribute__((objc_designated_initializer));
- (id _Nullable)fromValuesValues:(NSArray<NSString *> *)values type:(id<SharedTypeInfo>)type __attribute__((swift_name("fromValues(values:type:)")));
- (NSArray<NSString *> *)toValuesValue:(id _Nullable)value __attribute__((swift_name("toValues(value:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DelegatingConversionServiceConfiguration")))
@interface SharedDelegatingConversionServiceConfiguration<T> : SharedBase
- (void)decodeConverter:(T (^)(NSArray<NSString *> *))converter __attribute__((swift_name("decode(converter:)")));
- (void)encodeConverter:(NSArray<NSString *> *(^)(T))converter __attribute__((swift_name("encode(converter:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GMTDate")))
@interface SharedGMTDate : SharedBase <SharedKotlinComparable>
@property (class, readonly, getter=companion) SharedGMTDateCompanion *companion __attribute__((swift_name("companion")));
- (int32_t)compareToOther:(SharedGMTDate *)other __attribute__((swift_name("compareTo(other:)")));
- (int32_t)component1 __attribute__((swift_name("component1()")));
- (int32_t)component2 __attribute__((swift_name("component2()")));
- (int32_t)component3 __attribute__((swift_name("component3()")));
- (SharedWeekDay *)component4 __attribute__((swift_name("component4()")));
- (int32_t)component5 __attribute__((swift_name("component5()")));
- (int32_t)component6 __attribute__((swift_name("component6()")));
- (SharedMonth *)component7 __attribute__((swift_name("component7()")));
- (int32_t)component8 __attribute__((swift_name("component8()")));
- (int64_t)component9 __attribute__((swift_name("component9()")));
- (SharedGMTDate *)doCopySeconds:(int32_t)seconds minutes:(int32_t)minutes hours:(int32_t)hours dayOfWeek:(SharedWeekDay *)dayOfWeek dayOfMonth:(int32_t)dayOfMonth dayOfYear:(int32_t)dayOfYear month:(SharedMonth *)month year:(int32_t)year timestamp:(int64_t)timestamp __attribute__((swift_name("doCopy(seconds:minutes:hours:dayOfWeek:dayOfMonth:dayOfYear:month:year:timestamp:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t dayOfMonth __attribute__((swift_name("dayOfMonth")));
@property (readonly) SharedWeekDay *dayOfWeek __attribute__((swift_name("dayOfWeek")));
@property (readonly) int32_t dayOfYear __attribute__((swift_name("dayOfYear")));
@property (readonly) int32_t hours __attribute__((swift_name("hours")));
@property (readonly) int32_t minutes __attribute__((swift_name("minutes")));
@property (readonly) SharedMonth *month __attribute__((swift_name("month")));
@property (readonly) int32_t seconds __attribute__((swift_name("seconds")));
@property (readonly) int64_t timestamp __attribute__((swift_name("timestamp")));
@property (readonly) int32_t year __attribute__((swift_name("year")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GMTDate.Companion")))
@interface SharedGMTDateCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedGMTDateCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) SharedGMTDate *START __attribute__((swift_name("START")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GMTDateParser")))
@interface SharedGMTDateParser : SharedBase
- (instancetype)initWithPattern:(NSString *)pattern __attribute__((swift_name("init(pattern:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedGMTDateParserCompanion *companion __attribute__((swift_name("companion")));
- (SharedGMTDate *)parseDateString:(NSString *)dateString __attribute__((swift_name("parse(dateString:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GMTDateParser.Companion")))
@interface SharedGMTDateParserCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedGMTDateParserCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) unichar ANY __attribute__((swift_name("ANY")));
@property (readonly) unichar DAY_OF_MONTH __attribute__((swift_name("DAY_OF_MONTH")));
@property (readonly) unichar HOURS __attribute__((swift_name("HOURS")));
@property (readonly) unichar MINUTES __attribute__((swift_name("MINUTES")));
@property (readonly) unichar MONTH __attribute__((swift_name("MONTH")));
@property (readonly) unichar SECONDS __attribute__((swift_name("SECONDS")));
@property (readonly) unichar YEAR __attribute__((swift_name("YEAR")));
@property (readonly) unichar ZONE __attribute__((swift_name("ZONE")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("InvalidDateStringException")))
@interface SharedInvalidDateStringException : SharedKotlinIllegalStateException
- (instancetype)initWithData:(NSString *)data at:(int32_t)at pattern:(NSString *)pattern __attribute__((swift_name("init(data:at:pattern:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithCause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Month")))
@interface SharedMonth : SharedKotlinEnum<SharedMonth *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedMonthCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) SharedMonth *january __attribute__((swift_name("january")));
@property (class, readonly) SharedMonth *february __attribute__((swift_name("february")));
@property (class, readonly) SharedMonth *march __attribute__((swift_name("march")));
@property (class, readonly) SharedMonth *april __attribute__((swift_name("april")));
@property (class, readonly) SharedMonth *may __attribute__((swift_name("may")));
@property (class, readonly) SharedMonth *june __attribute__((swift_name("june")));
@property (class, readonly) SharedMonth *july __attribute__((swift_name("july")));
@property (class, readonly) SharedMonth *august __attribute__((swift_name("august")));
@property (class, readonly) SharedMonth *september __attribute__((swift_name("september")));
@property (class, readonly) SharedMonth *october __attribute__((swift_name("october")));
@property (class, readonly) SharedMonth *november __attribute__((swift_name("november")));
@property (class, readonly) SharedMonth *december __attribute__((swift_name("december")));
+ (SharedKotlinArray<SharedMonth *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Month.Companion")))
@interface SharedMonthCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedMonthCompanion *shared __attribute__((swift_name("shared")));
- (SharedMonth *)fromOrdinal:(int32_t)ordinal __attribute__((swift_name("from(ordinal:)")));
- (SharedMonth *)fromValue:(NSString *)value __attribute__((swift_name("from(value:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WeekDay")))
@interface SharedWeekDay : SharedKotlinEnum<SharedWeekDay *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedWeekDayCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) SharedWeekDay *monday __attribute__((swift_name("monday")));
@property (class, readonly) SharedWeekDay *tuesday __attribute__((swift_name("tuesday")));
@property (class, readonly) SharedWeekDay *wednesday __attribute__((swift_name("wednesday")));
@property (class, readonly) SharedWeekDay *thursday __attribute__((swift_name("thursday")));
@property (class, readonly) SharedWeekDay *friday __attribute__((swift_name("friday")));
@property (class, readonly) SharedWeekDay *saturday __attribute__((swift_name("saturday")));
@property (class, readonly) SharedWeekDay *sunday __attribute__((swift_name("sunday")));
+ (SharedKotlinArray<SharedWeekDay *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WeekDay.Companion")))
@interface SharedWeekDayCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedWeekDayCompanion *shared __attribute__((swift_name("shared")));
- (SharedWeekDay *)fromOrdinal:(int32_t)ordinal __attribute__((swift_name("from(ordinal:)")));
- (SharedWeekDay *)fromValue:(NSString *)value __attribute__((swift_name("from(value:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("InvalidPhaseException")))
@interface SharedInvalidPhaseException : SharedKotlinThrowable
- (instancetype)initWithMessage:(NSString *)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithCause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end;

__attribute__((swift_name("PipelineContext")))
@protocol SharedPipelineContext <SharedCoroutineScope>
@required
- (void)finish __attribute__((swift_name("finish()")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)proceedWithCompletionHandler:(void (^)(id _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("proceed(completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)proceedWithSubject:(id)subject completionHandler:(void (^)(id _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("proceedWith(subject:completionHandler:)")));
@property (readonly) id context __attribute__((swift_name("context")));
@property (readonly) id subject __attribute__((swift_name("subject")));
@end;

__attribute__((swift_name("PipelineExecutor")))
@protocol SharedPipelineExecutor
@required

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)executeInitial:(id _Nullable)initial completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("execute(initial:completionHandler:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PipelinePhase")))
@interface SharedPipelinePhase : SharedBase
- (instancetype)initWithName:(NSString *)name __attribute__((swift_name("init(name:)"))) __attribute__((objc_designated_initializer));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *name __attribute__((swift_name("name")));
@end;

__attribute__((swift_name("KotlinCollection")))
@protocol SharedKotlinCollection <SharedKotlinIterable>
@required
- (BOOL)containsElement:(id _Nullable)element __attribute__((swift_name("contains(element:)")));
- (BOOL)containsAllElements:(id)elements __attribute__((swift_name("containsAll(elements:)")));
- (BOOL)isEmpty_ __attribute__((swift_name("isEmpty()")));
@property (readonly) int32_t size __attribute__((swift_name("size")));
@end;

__attribute__((swift_name("KotlinMutableIterable")))
@protocol SharedKotlinMutableIterable <SharedKotlinIterable>
@required
@end;

__attribute__((swift_name("KotlinMutableCollection")))
@protocol SharedKotlinMutableCollection <SharedKotlinCollection, SharedKotlinMutableIterable>
@required
- (BOOL)addElement:(id _Nullable)element __attribute__((swift_name("add(element:)")));
- (BOOL)addAllElements:(id)elements __attribute__((swift_name("addAll(elements:)")));
- (void)clear __attribute__((swift_name("clear()")));
- (BOOL)removeElement:(id _Nullable)element __attribute__((swift_name("remove(element:)")));
- (BOOL)removeAllElements:(id)elements __attribute__((swift_name("removeAll(elements:)")));
- (BOOL)retainAllElements:(id)elements __attribute__((swift_name("retainAll(elements:)")));
@end;

__attribute__((swift_name("ConcurrentCollection")))
@interface SharedConcurrentCollection<E> : SharedBase <SharedKotlinMutableCollection>
- (instancetype)initWithDelegate:(id)delegate lock:(SharedLock *)lock __attribute__((swift_name("init(delegate:lock:)"))) __attribute__((objc_designated_initializer));
- (BOOL)addElement:(E _Nullable)element __attribute__((swift_name("add(element:)")));
- (BOOL)addAllElements:(id)elements __attribute__((swift_name("addAll(elements:)")));
- (void)clear __attribute__((swift_name("clear()")));
- (BOOL)containsElement:(E _Nullable)element __attribute__((swift_name("contains(element:)")));
- (BOOL)containsAllElements:(id)elements __attribute__((swift_name("containsAll(elements:)")));
- (BOOL)isEmpty_ __attribute__((swift_name("isEmpty()")));
- (id<SharedKotlinMutableIterator>)iterator __attribute__((swift_name("iterator()")));
- (BOOL)removeElement:(E _Nullable)element __attribute__((swift_name("remove(element:)")));
- (BOOL)removeAllElements:(id)elements __attribute__((swift_name("removeAll(elements:)")));
- (BOOL)retainAllElements:(id)elements __attribute__((swift_name("retainAll(elements:)")));
@property (readonly) int32_t size __attribute__((swift_name("size")));
@end;

__attribute__((unavailable("can't be imported")))
__attribute__((swift_name("ConcurrentList")))
@interface SharedConcurrentList : NSObject
@end;

__attribute__((unavailable("can't be imported")))
__attribute__((swift_name("ConcurrentMap")))
@interface SharedConcurrentMap : NSObject
@end;

__attribute__((unavailable("can't be imported")))
__attribute__((swift_name("ConcurrentSet")))
@interface SharedConcurrentSet : NSObject
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LockFreeMPSCQueue")))
@interface SharedLockFreeMPSCQueue<E> : SharedBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (BOOL)addLastElement:(E)element __attribute__((swift_name("addLast(element:)")));
- (void)close __attribute__((swift_name("close()")));
- (E _Nullable)removeFirstOrNull __attribute__((swift_name("removeFirstOrNull()")));
@property (readonly) BOOL isClosed __attribute__((swift_name("isClosed")));
@property (readonly) BOOL isEmpty __attribute__((swift_name("isEmpty")));
@end;

__attribute__((swift_name("ByteReadChannel")))
@protocol SharedByteReadChannel
@required
- (BOOL)cancelCause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("cancel(cause:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)discardMax:(int64_t)max completionHandler:(void (^)(SharedLong * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("discard(max:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)peekToDestination:(SharedMemory *)destination destinationOffset:(int64_t)destinationOffset offset:(int64_t)offset min:(int64_t)min max:(int64_t)max completionHandler:(void (^)(SharedLong * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("peekTo(destination:destinationOffset:offset:min:max:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)readAvailableDst:(SharedIoBuffer *)dst completionHandler:(void (^)(SharedInt * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readAvailable(dst:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)readAvailableDst:(SharedKotlinByteArray *)dst offset:(int32_t)offset length:(int32_t)length completionHandler:(void (^)(SharedInt * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readAvailable(dst:offset:length:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)readAvailableDst:(void *)dst offset:(int32_t)offset length:(int32_t)length completionHandler_:(void (^)(SharedInt * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readAvailable(dst:offset:length:completionHandler_:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)readAvailableDst:(void *)dst offset:(int64_t)offset length:(int64_t)length completionHandler__:(void (^)(SharedInt * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readAvailable(dst:offset:length:completionHandler__:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)readBooleanWithCompletionHandler:(void (^)(SharedBoolean * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readBoolean(completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)readByteWithCompletionHandler:(void (^)(SharedByte * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readByte(completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)readDoubleWithCompletionHandler:(void (^)(SharedDouble * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readDouble(completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)readFloatWithCompletionHandler:(void (^)(SharedFloat * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readFloat(completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)readFullyDst:(SharedIoBuffer *)dst n:(int32_t)n completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readFully(dst:n:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)readFullyDst:(SharedKotlinByteArray *)dst offset:(int32_t)offset length:(int32_t)length completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readFully(dst:offset:length:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)readFullyDst:(void *)dst offset:(int32_t)offset length:(int32_t)length completionHandler_:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readFully(dst:offset:length:completionHandler_:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)readFullyDst:(void *)dst offset:(int64_t)offset length:(int64_t)length completionHandler__:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readFully(dst:offset:length:completionHandler__:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)readIntWithCompletionHandler:(void (^)(SharedInt * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readInt(completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)readLongWithCompletionHandler:(void (^)(SharedLong * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readLong(completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)readPacketSize:(int32_t)size headerSizeHint:(int32_t)headerSizeHint completionHandler:(void (^)(SharedByteReadPacket * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readPacket(size:headerSizeHint:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)readRemainingLimit:(int64_t)limit headerSizeHint:(int32_t)headerSizeHint completionHandler:(void (^)(SharedByteReadPacket * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readRemaining(limit:headerSizeHint:completionHandler:)")));
- (void)readSessionConsumer:(void (^)(id<SharedReadSession>))consumer __attribute__((swift_name("readSession(consumer:)"))) __attribute__((deprecated("Use read { } instead.")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)readShortWithCompletionHandler:(void (^)(SharedShort * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readShort(completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)readSuspendableSessionConsumer:(id<SharedKotlinSuspendFunction1>)consumer completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readSuspendableSession(consumer:completionHandler:)"))) __attribute__((deprecated("Use read { } instead.")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)readUTF8LineLimit:(int32_t)limit completionHandler:(void (^)(NSString * _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("readUTF8Line(limit:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)readUTF8LineToOut:(id<SharedKotlinAppendable>)out limit:(int32_t)limit completionHandler:(void (^)(SharedBoolean * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readUTF8LineTo(out:limit:completionHandler:)")));
@property (readonly) int32_t availableForRead __attribute__((swift_name("availableForRead")));
@property (readonly) SharedKotlinThrowable * _Nullable closedCause __attribute__((swift_name("closedCause")));
@property (readonly) BOOL isClosedForRead __attribute__((swift_name("isClosedForRead")));
@property (readonly) BOOL isClosedForWrite __attribute__((swift_name("isClosedForWrite")));
@property SharedByteOrder *readByteOrder __attribute__((swift_name("readByteOrder"))) __attribute__((unavailable("Setting byte order is no longer supported. Read/write in big endian and use reverseByteOrder() extensions.")));
@property (readonly) int64_t totalBytesRead __attribute__((swift_name("totalBytesRead")));
@end;

__attribute__((swift_name("ByteWriteChannel")))
@protocol SharedByteWriteChannel
@required

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)awaitFreeSpaceWithCompletionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("awaitFreeSpace(completionHandler:)")));
- (BOOL)closeCause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("close(cause:)")));
- (void)flush __attribute__((swift_name("flush()")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)writeAvailableSrc:(SharedIoBuffer *)src completionHandler:(void (^)(SharedInt * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("writeAvailable(src:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)writeAvailableSrc:(SharedKotlinByteArray *)src offset:(int32_t)offset length:(int32_t)length completionHandler:(void (^)(SharedInt * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("writeAvailable(src:offset:length:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)writeAvailableSrc:(void *)src offset:(int32_t)offset length:(int32_t)length completionHandler_:(void (^)(SharedInt * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("writeAvailable(src:offset:length:completionHandler_:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)writeAvailableSrc:(void *)src offset:(int64_t)offset length:(int64_t)length completionHandler__:(void (^)(SharedInt * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("writeAvailable(src:offset:length:completionHandler__:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)writeByteB:(int8_t)b completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("writeByte(b:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)writeDoubleD:(double)d completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("writeDouble(d:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)writeFloatF:(float)f completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("writeFloat(f:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)writeFullyMemory:(SharedMemory *)memory startIndex:(int32_t)startIndex endIndex:(int32_t)endIndex completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("writeFully(memory:startIndex:endIndex:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)writeFullySrc:(SharedBuffer *)src completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("writeFully(src:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)writeFullySrc:(SharedIoBuffer *)src completionHandler_:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("writeFully(src:completionHandler_:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)writeFullySrc:(SharedKotlinByteArray *)src offset:(int32_t)offset length:(int32_t)length completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("writeFully(src:offset:length:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)writeFullySrc:(void *)src offset:(int32_t)offset length:(int32_t)length completionHandler_:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("writeFully(src:offset:length:completionHandler_:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)writeFullySrc:(void *)src offset:(int64_t)offset length:(int64_t)length completionHandler__:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("writeFully(src:offset:length:completionHandler__:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)writeIntI:(int32_t)i completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("writeInt(i:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)writeLongL:(int64_t)l completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("writeLong(l:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)writePacketPacket:(SharedByteReadPacket *)packet completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("writePacket(packet:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)writeShortS:(int16_t)s completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("writeShort(s:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)writeSuspendSessionVisitor:(id<SharedKotlinSuspendFunction1>)visitor completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("writeSuspendSession(visitor:completionHandler:)"))) __attribute__((deprecated("Use write { } instead.")));
@property (readonly) BOOL autoFlush __attribute__((swift_name("autoFlush")));
@property (readonly) int32_t availableForWrite __attribute__((swift_name("availableForWrite")));
@property (readonly) SharedKotlinThrowable * _Nullable closedCause __attribute__((swift_name("closedCause")));
@property (readonly) BOOL isClosedForWrite __attribute__((swift_name("isClosedForWrite")));
@property (readonly) int64_t totalBytesWritten __attribute__((swift_name("totalBytesWritten"))) __attribute__((deprecated("Counter is no longer supported")));
@property SharedByteOrder *writeByteOrder __attribute__((swift_name("writeByteOrder"))) __attribute__((unavailable("Setting byte order is no longer supported. Read/write in big endian and use reverseByteOrder() extensions.")));
@end;

__attribute__((swift_name("ByteChannel")))
@protocol SharedByteChannel <SharedByteReadChannel, SharedByteWriteChannel>
@required
- (void)attachJobJob:(id<SharedJob>)job __attribute__((swift_name("attachJob(job:)")));
@end;

__attribute__((swift_name("ReadSession")))
@protocol SharedReadSession
@required
- (int32_t)discardN:(int32_t)n __attribute__((swift_name("discard(n:)")));
- (SharedIoBuffer * _Nullable)requestAtLeast:(int32_t)atLeast __attribute__((swift_name("request(atLeast:)")));
@property (readonly) int32_t availableForRead __attribute__((swift_name("availableForRead")));
@end;

__attribute__((swift_name("SuspendableReadSession")))
@protocol SharedSuspendableReadSession <SharedReadSession>
@required

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)awaitAtLeast:(int32_t)atLeast completionHandler:(void (^)(SharedBoolean * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("await(atLeast:completionHandler:)")));
@end;

__attribute__((swift_name("ByteChannelSequentialBase")))
@interface SharedByteChannelSequentialBase : SharedBase <SharedByteChannel, SharedByteReadChannel, SharedByteWriteChannel, SharedSuspendableReadSession>
- (instancetype)initWithInitial:(SharedIoBuffer *)initial autoFlush:(BOOL)autoFlush pool:(id<SharedObjectPool>)pool __attribute__((swift_name("init(initial:autoFlush:pool:)"))) __attribute__((objc_designated_initializer));
- (void)afterRead __attribute__((swift_name("afterRead()"))) __attribute__((unavailable("Consider providing consumed count of bytes")));
- (void)afterReadCount:(int32_t)count __attribute__((swift_name("afterRead(count:)")));
- (void)afterWrite __attribute__((swift_name("afterWrite()"))) __attribute__((unavailable("Consider providing written count of bytes")));
- (void)afterWriteCount:(int32_t)count __attribute__((swift_name("afterWrite(count:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)awaitAtLeast:(int32_t)atLeast completionHandler:(void (^)(SharedBoolean * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("await(atLeast:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)awaitFreeSpaceWithCompletionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("awaitFreeSpace(completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)awaitSuspendAtLeast:(int32_t)atLeast completionHandler:(void (^)(SharedBoolean * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("awaitSuspend(atLeast:completionHandler:)")));
- (id<SharedWriterSuspendSession>)beginWriteSession __attribute__((swift_name("beginWriteSession()")));
- (BOOL)cancelCause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("cancel(cause:)")));
- (BOOL)closeCause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("close(cause:)")));
- (int32_t)discardN:(int32_t)n __attribute__((swift_name("discard(n:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)discardMax:(int64_t)max completionHandler:(void (^)(SharedLong * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("discard(max:completionHandler:)")));
- (void)endReadSession __attribute__((swift_name("endReadSession()")));
- (void)endWriteSessionWritten:(int32_t)written __attribute__((swift_name("endWriteSession(written:)")));
- (void)flush __attribute__((swift_name("flush()")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)peekToDestination:(SharedMemory *)destination destinationOffset:(int64_t)destinationOffset offset:(int64_t)offset min:(int64_t)min max:(int64_t)max completionHandler:(void (^)(SharedLong * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("peekTo(destination:destinationOffset:offset:min:max:completionHandler:)")));
- (void)prepareFlushedBytes __attribute__((swift_name("prepareFlushedBytes()")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)readAvailableDst:(SharedIoBuffer *)dst completionHandler:(void (^)(SharedInt * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readAvailable(dst:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)readAvailableDst:(SharedKotlinByteArray *)dst offset:(int32_t)offset length:(int32_t)length completionHandler:(void (^)(SharedInt * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readAvailable(dst:offset:length:completionHandler:)")));
- (int32_t)readAvailableClosed __attribute__((swift_name("readAvailableClosed()")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)readBooleanWithCompletionHandler:(void (^)(SharedBoolean * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readBoolean(completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)readByteWithCompletionHandler:(void (^)(SharedByte * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readByte(completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)readDoubleWithCompletionHandler:(void (^)(SharedDouble * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readDouble(completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)readFloatWithCompletionHandler:(void (^)(SharedFloat * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readFloat(completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)readFullyDst:(SharedIoBuffer *)dst n:(int32_t)n completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readFully(dst:n:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)readFullyDst:(SharedKotlinByteArray *)dst offset:(int32_t)offset length:(int32_t)length completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readFully(dst:offset:length:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)readIntWithCompletionHandler:(void (^)(SharedInt * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readInt(completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)readLongWithCompletionHandler:(void (^)(SharedLong * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readLong(completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)readPacketSize:(int32_t)size headerSizeHint:(int32_t)headerSizeHint completionHandler:(void (^)(SharedByteReadPacket * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readPacket(size:headerSizeHint:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)readRemainingLimit:(int64_t)limit headerSizeHint:(int32_t)headerSizeHint completionHandler:(void (^)(SharedByteReadPacket * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readRemaining(limit:headerSizeHint:completionHandler:)")));
- (void)readSessionConsumer:(void (^)(id<SharedReadSession>))consumer __attribute__((swift_name("readSession(consumer:)"))) __attribute__((deprecated("Use read instead.")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)readShortWithCompletionHandler:(void (^)(SharedShort * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readShort(completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)readSuspendableSessionConsumer:(id<SharedKotlinSuspendFunction1>)consumer completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readSuspendableSession(consumer:completionHandler:)"))) __attribute__((deprecated("Use read instead.")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)readUTF8LineLimit:(int32_t)limit completionHandler:(void (^)(NSString * _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("readUTF8Line(limit:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)readUTF8LineToOut:(id<SharedKotlinAppendable>)out limit:(int32_t)limit completionHandler:(void (^)(SharedBoolean * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readUTF8LineTo(out:limit:completionHandler:)")));
- (SharedIoBuffer * _Nullable)requestAtLeast:(int32_t)atLeast __attribute__((swift_name("request(atLeast:)")));
- (id<SharedSuspendableReadSession>)startReadSession __attribute__((swift_name("startReadSession()")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)writeAvailableSrc:(SharedIoBuffer *)src completionHandler:(void (^)(SharedInt * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("writeAvailable(src:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)writeAvailableSrc:(SharedKotlinByteArray *)src offset:(int32_t)offset length:(int32_t)length completionHandler:(void (^)(SharedInt * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("writeAvailable(src:offset:length:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)writeByteB:(int8_t)b completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("writeByte(b:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)writeDoubleD:(double)d completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("writeDouble(d:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)writeFloatF:(float)f completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("writeFloat(f:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)writeFullyMemory:(SharedMemory *)memory startIndex:(int32_t)startIndex endIndex:(int32_t)endIndex completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("writeFully(memory:startIndex:endIndex:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)writeFullySrc:(SharedBuffer *)src completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("writeFully(src:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)writeFullySrc:(SharedIoBuffer *)src completionHandler_:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("writeFully(src:completionHandler_:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)writeFullySrc:(SharedKotlinByteArray *)src offset:(int32_t)offset length:(int32_t)length completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("writeFully(src:offset:length:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)writeIntI:(int32_t)i completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("writeInt(i:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)writeLongL:(int64_t)l completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("writeLong(l:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)writePacketPacket:(SharedByteReadPacket *)packet completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("writePacket(packet:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)writeShortS:(int16_t)s completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("writeShort(s:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)writeSuspendSessionVisitor:(id<SharedKotlinSuspendFunction1>)visitor completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("writeSuspendSession(visitor:completionHandler:)"))) __attribute__((deprecated("Overrides deprecated member in 'io.ktor.utils.io.ByteChannel'. Use write { } instead.")));
@property (readonly) BOOL autoFlush __attribute__((swift_name("autoFlush")));
@property (readonly) int32_t availableForRead __attribute__((swift_name("availableForRead")));
@property (readonly) int32_t availableForWrite __attribute__((swift_name("availableForWrite")));
@property BOOL closed __attribute__((swift_name("closed")));
@property (readonly) SharedKotlinThrowable * _Nullable closedCause __attribute__((swift_name("closedCause")));
@property (readonly) BOOL isClosedForRead __attribute__((swift_name("isClosedForRead")));
@property (readonly) BOOL isClosedForWrite __attribute__((swift_name("isClosedForWrite")));
@property SharedByteOrder *readByteOrder __attribute__((swift_name("readByteOrder"))) __attribute__((unavailable("Setting byte order is no longer supported. Read/write in big endian and use reverseByteOrder() extensions.")));
@property (readonly) SharedByteReadPacket *readable __attribute__((swift_name("readable")));
@property (readonly) int64_t totalBytesRead __attribute__((swift_name("totalBytesRead")));
@property (readonly) int64_t totalBytesWritten __attribute__((swift_name("totalBytesWritten"))) __attribute__((deprecated("Overrides deprecated member in 'io.ktor.utils.io.ByteChannel'. Counter is no longer supported")));
@property (readonly) SharedBytePacketBuilder *writable __attribute__((swift_name("writable")));
@property SharedByteOrder *writeByteOrder __attribute__((swift_name("writeByteOrder"))) __attribute__((unavailable("Setting byte order is no longer supported. Read/write in big endian and use reverseByteOrder() extensions.")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ByteReadChannelCompanion")))
@interface SharedByteReadChannelCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedByteReadChannelCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) id<SharedByteReadChannel> Empty __attribute__((swift_name("Empty")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ClosedWriteChannelException")))
@interface SharedClosedWriteChannelException : SharedKotlinCancellationException
- (instancetype)initWithMessage:(NSString * _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithCause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end;

__attribute__((swift_name("Job")))
@protocol SharedJob <SharedKotlinCoroutineContextElement>
@required
- (id<SharedChildHandle>)attachChildChild:(id<SharedChildJob>)child __attribute__((swift_name("attachChild(child:)")));
- (void)cancelCause_:(SharedKotlinCancellationException * _Nullable)cause __attribute__((swift_name("cancel(cause_:)")));
- (SharedKotlinCancellationException *)getCancellationException __attribute__((swift_name("getCancellationException()")));
- (id<SharedDisposableHandle>)invokeOnCompletionOnCancelling:(BOOL)onCancelling invokeImmediately:(BOOL)invokeImmediately handler:(void (^)(SharedKotlinThrowable * _Nullable))handler __attribute__((swift_name("invokeOnCompletion(onCancelling:invokeImmediately:handler:)")));
- (id<SharedDisposableHandle>)invokeOnCompletionHandler:(void (^)(SharedKotlinThrowable * _Nullable))handler __attribute__((swift_name("invokeOnCompletion(handler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)joinWithCompletionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("join(completionHandler:)")));
- (id<SharedJob>)plusOther:(id<SharedJob>)other __attribute__((swift_name("plus(other:)"))) __attribute__((unavailable("Operator '+' on two Job objects is meaningless. Job is a coroutine context element and `+` is a set-sum operator for coroutine contexts. The job to the right of `+` just replaces the job the left of `+`.")));
- (BOOL)start __attribute__((swift_name("start()")));
@property (readonly) id<SharedKotlinSequence> children __attribute__((swift_name("children")));
@property (readonly) BOOL isActive __attribute__((swift_name("isActive")));
@property (readonly) BOOL isCancelled __attribute__((swift_name("isCancelled")));
@property (readonly) BOOL isCompleted __attribute__((swift_name("isCompleted")));
@property (readonly) id<SharedSelectClause0> onJoin __attribute__((swift_name("onJoin")));
@end;

__attribute__((swift_name("ReaderJob")))
@protocol SharedReaderJob <SharedJob>
@required
@property (readonly) id<SharedByteWriteChannel> channel __attribute__((swift_name("channel")));
@end;

__attribute__((swift_name("ReaderScope")))
@protocol SharedReaderScope <SharedCoroutineScope>
@required
@property (readonly) id<SharedByteReadChannel> channel __attribute__((swift_name("channel")));
@end;

__attribute__((swift_name("WriterJob")))
@protocol SharedWriterJob <SharedJob>
@required
@property (readonly) id<SharedByteReadChannel> channel __attribute__((swift_name("channel")));
@end;

__attribute__((swift_name("WriterScope")))
@protocol SharedWriterScope <SharedCoroutineScope>
@required
@property (readonly) id<SharedByteWriteChannel> channel __attribute__((swift_name("channel")));
@end;

__attribute__((swift_name("WriterSession")))
@protocol SharedWriterSession
@required
- (void)flush __attribute__((swift_name("flush()")));
- (SharedIoBuffer * _Nullable)requestMin:(int32_t)min __attribute__((swift_name("request(min:)")));
- (void)writtenN:(int32_t)n __attribute__((swift_name("written(n:)")));
@end;

__attribute__((swift_name("WriterSuspendSession")))
@protocol SharedWriterSuspendSession <SharedWriterSession>
@required

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)tryAwaitN:(int32_t)n completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("tryAwait(n:completionHandler:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Memory")))
@interface SharedMemory : SharedBase
- (instancetype)initWithPointer:(void *)pointer size:(int64_t)size __attribute__((swift_name("init(pointer:size:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedMemoryCompanion *companion __attribute__((swift_name("companion")));
- (void)doCopyToDestination:(SharedMemory *)destination offset:(int32_t)offset length:(int32_t)length destinationOffset:(int32_t)destinationOffset __attribute__((swift_name("doCopyTo(destination:offset:length:destinationOffset:)")));
- (void)doCopyToDestination:(SharedMemory *)destination offset:(int64_t)offset length:(int64_t)length destinationOffset_:(int64_t)destinationOffset __attribute__((swift_name("doCopyTo(destination:offset:length:destinationOffset_:)")));
- (int8_t)loadAtIndex:(int32_t)index __attribute__((swift_name("loadAt(index:)")));
- (int8_t)loadAtIndex_:(int64_t)index __attribute__((swift_name("loadAt(index_:)")));
- (SharedMemory *)sliceOffset:(int32_t)offset length:(int32_t)length __attribute__((swift_name("slice(offset:length:)")));
- (SharedMemory *)sliceOffset:(int64_t)offset length_:(int64_t)length __attribute__((swift_name("slice(offset:length_:)")));
- (void)storeAtIndex:(int32_t)index value:(int8_t)value __attribute__((swift_name("storeAt(index:value:)")));
- (void)storeAtIndex:(int64_t)index value_:(int8_t)value __attribute__((swift_name("storeAt(index:value_:)")));
@property (readonly) void *pointer __attribute__((swift_name("pointer")));
@property (readonly) int64_t size __attribute__((swift_name("size")));
@property (readonly) int32_t size32 __attribute__((swift_name("size32")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Memory.Companion")))
@interface SharedMemoryCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedMemoryCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) SharedMemory *Empty __attribute__((swift_name("Empty")));
@end;

__attribute__((swift_name("Input")))
@protocol SharedInput <SharedCloseable_>
@required
- (int64_t)discardN_:(int64_t)n __attribute__((swift_name("discard(n_:)")));
- (int64_t)peekToDestination:(SharedMemory *)destination destinationOffset:(int64_t)destinationOffset offset:(int64_t)offset min:(int64_t)min max:(int64_t)max __attribute__((swift_name("peekTo(destination:destinationOffset:offset:min:max:)")));
- (int8_t)readByte __attribute__((swift_name("readByte()")));
- (int32_t)tryPeek __attribute__((swift_name("tryPeek()")));
@property SharedByteOrder *byteOrder __attribute__((swift_name("byteOrder"))) __attribute__((unavailable("Not supported anymore. All operations are big endian by default. Use readXXXLittleEndian or readXXX then X.reverseByteOrder() instead.")));
@property (readonly) BOOL endOfInput __attribute__((swift_name("endOfInput")));
@end;

__attribute__((swift_name("AbstractInput")))
@interface SharedAbstractInput : SharedBase <SharedInput>
- (instancetype)initWithHead:(SharedChunkBuffer *)head remaining:(int64_t)remaining pool:(id<SharedObjectPool>)pool __attribute__((swift_name("init(head:remaining:pool:)"))) __attribute__((objc_designated_initializer)) __attribute__((deprecated("AbstractInput is deprecated and will be merged with Input in 2.0.0")));
@property (class, readonly, getter=companion) SharedAbstractInputCompanion *companion __attribute__((swift_name("companion")));
- (BOOL)canRead __attribute__((swift_name("canRead()")));
- (void)close __attribute__((swift_name("close()")));
- (void)closeSource __attribute__((swift_name("closeSource()")));
- (int32_t)discardN:(int32_t)n __attribute__((swift_name("discard(n:)")));
- (int64_t)discardN_:(int64_t)n __attribute__((swift_name("discard(n_:)")));
- (void)discardExactN:(int32_t)n __attribute__((swift_name("discardExact(n:)")));
- (SharedChunkBuffer * _Nullable)ensureNextHeadCurrent:(SharedChunkBuffer *)current __attribute__((swift_name("ensureNextHead(current:)")));
- (SharedChunkBuffer * _Nullable)fill __attribute__((swift_name("fill()")));
- (int32_t)fillDestination:(SharedMemory *)destination offset:(int32_t)offset length:(int32_t)length __attribute__((swift_name("fill(destination:offset:length:)")));
- (void)fixGapAfterReadCurrent:(SharedChunkBuffer *)current __attribute__((swift_name("fixGapAfterRead(current:)")));
- (BOOL)hasBytesN:(int32_t)n __attribute__((swift_name("hasBytes(n:)")));
- (void)markNoMoreChunksAvailable __attribute__((swift_name("markNoMoreChunksAvailable()")));
- (int64_t)peekToDestination:(SharedMemory *)destination destinationOffset:(int64_t)destinationOffset offset:(int64_t)offset min:(int64_t)min max:(int64_t)max __attribute__((swift_name("peekTo(destination:destinationOffset:offset:min:max:)")));
- (SharedChunkBuffer * _Nullable)prepareReadHeadMinSize:(int32_t)minSize __attribute__((swift_name("prepareReadHead(minSize:)")));
- (int8_t)readByte __attribute__((swift_name("readByte()")));
- (NSString *)readTextMin:(int32_t)min max:(int32_t)max __attribute__((swift_name("readText(min:max:)")));
- (int32_t)readTextOut:(id<SharedKotlinAppendable>)out min:(int32_t)min max:(int32_t)max __attribute__((swift_name("readText(out:min:max:)")));
- (NSString *)readTextExactExactCharacters:(int32_t)exactCharacters __attribute__((swift_name("readTextExact(exactCharacters:)")));
- (void)readTextExactOut:(id<SharedKotlinAppendable>)out exactCharacters:(int32_t)exactCharacters __attribute__((swift_name("readTextExact(out:exactCharacters:)")));
- (void)release_ __attribute__((swift_name("release()")));
- (int32_t)tryPeek __attribute__((swift_name("tryPeek()")));
- (void)updateHeadRemainingRemaining:(int32_t)remaining __attribute__((swift_name("updateHeadRemaining(remaining:)"))) __attribute__((unavailable("Not supported anymore.")));
@property SharedByteOrder *byteOrder __attribute__((swift_name("byteOrder"))) __attribute__((unavailable("Not supported anymore. All operations are big endian by default.")));
@property (readonly) BOOL endOfInput __attribute__((swift_name("endOfInput")));
@property (readonly) id<SharedObjectPool> pool __attribute__((swift_name("pool")));
@property (readonly) int64_t remaining __attribute__((swift_name("remaining")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AbstractInput.Companion")))
@interface SharedAbstractInputCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedAbstractInputCompanion *shared __attribute__((swift_name("shared")));
@end;

__attribute__((swift_name("KotlinAppendable")))
@protocol SharedKotlinAppendable
@required
- (id<SharedKotlinAppendable>)appendValue:(unichar)value __attribute__((swift_name("append(value:)")));
- (id<SharedKotlinAppendable>)appendValue_:(id _Nullable)value __attribute__((swift_name("append(value_:)")));
- (id<SharedKotlinAppendable>)appendValue:(id _Nullable)value startIndex:(int32_t)startIndex endIndex:(int32_t)endIndex __attribute__((swift_name("append(value:startIndex:endIndex:)")));
@end;

__attribute__((swift_name("Output")))
@protocol SharedOutput <SharedKotlinAppendable, SharedCloseable_>
@required
- (id<SharedKotlinAppendable>)appendCsq:(SharedKotlinCharArray *)csq start:(int32_t)start end:(int32_t)end __attribute__((swift_name("append(csq:start:end:)")));
- (void)flush __attribute__((swift_name("flush()")));
- (void)writeByteV:(int8_t)v __attribute__((swift_name("writeByte(v:)")));
@property SharedByteOrder *byteOrder __attribute__((swift_name("byteOrder"))) __attribute__((deprecated("Write with writeXXXLittleEndian or do X.reverseByteOrder() and then writeXXX instead.")));
@end;

__attribute__((swift_name("AbstractOutput")))
@interface SharedAbstractOutput : SharedBase <SharedKotlinAppendable, SharedOutput>
- (instancetype)initWithPool:(id<SharedObjectPool>)pool __attribute__((swift_name("init(pool:)"))) __attribute__((objc_designated_initializer)) __attribute__((deprecated("AbstractOutput is deprecated and will be merged with Input in 2.0.0")));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((deprecated("AbstractOutput is deprecated and will be merged with Input in 2.0.0")));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (void)afterHeadWrite __attribute__((swift_name("afterHeadWrite()")));
- (SharedAbstractOutput *)appendValue:(unichar)c __attribute__((swift_name("append(value:)")));
- (id<SharedKotlinAppendable>)appendCsq:(SharedKotlinCharArray *)csq start:(int32_t)start end:(int32_t)end __attribute__((swift_name("append(csq:start:end:)")));
- (SharedAbstractOutput *)appendValue_:(id _Nullable)csq __attribute__((swift_name("append(value_:)")));
- (SharedAbstractOutput *)appendValue:(id _Nullable)csq startIndex:(int32_t)start endIndex:(int32_t)end __attribute__((swift_name("append(value:startIndex:endIndex:)")));
- (void)close __attribute__((swift_name("close()")));
- (void)closeDestination __attribute__((swift_name("closeDestination()")));
- (void)flush __attribute__((swift_name("flush()")));
- (void)flushSource:(SharedMemory *)source offset:(int32_t)offset length:(int32_t)length __attribute__((swift_name("flush(source:offset:length:)")));
- (SharedChunkBuffer *)prepareWriteHeadN:(int32_t)n __attribute__((swift_name("prepareWriteHead(n:)")));
- (void)release_ __attribute__((swift_name("release()")));
- (void)writeByteV:(int8_t)v __attribute__((swift_name("writeByte(v:)")));
- (void)writePacketP:(SharedByteReadPacket *)p __attribute__((swift_name("writePacket(p:)")));
- (void)writePacketP:(SharedByteReadPacket *)p n:(int32_t)n __attribute__((swift_name("writePacket(p:n:)")));
- (void)writePacketP:(SharedByteReadPacket *)p n_:(int64_t)n __attribute__((swift_name("writePacket(p:n_:)")));
- (void)writeStringUtf8Cs:(id)cs __attribute__((swift_name("writeStringUtf8(cs:)"))) __attribute__((deprecated("Use writeText instead")));
- (void)writeStringUtf8S:(NSString *)s __attribute__((swift_name("writeStringUtf8(s:)"))) __attribute__((deprecated("Use writeText instead")));
@property int32_t _size __attribute__((swift_name("_size")));
@property SharedByteOrder *byteOrder __attribute__((swift_name("byteOrder"))) __attribute__((unavailable("This is no longer supported. All operations are big endian by default. Use readXXXLittleEndian to read primitives in little endian")));
@property SharedChunkBuffer *currentTail __attribute__((swift_name("currentTail"))) __attribute__((unavailable("Will be removed. Override flush(buffer) properly.")));
@property (readonly) id<SharedObjectPool> pool __attribute__((swift_name("pool")));
@end;

__attribute__((swift_name("Buffer")))
@interface SharedBuffer : SharedBase
- (instancetype)initWithMemory:(SharedMemory *)memory __attribute__((swift_name("init(memory:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedBufferCompanion *companion __attribute__((swift_name("companion")));
- (void)commitWrittenCount:(int32_t)count __attribute__((swift_name("commitWritten(count:)")));
- (int32_t)discardCount:(int32_t)count __attribute__((swift_name("discard(count:)"))) __attribute__((unavailable("Use discardExact instead.")));
- (int64_t)discardCount_:(int64_t)count __attribute__((swift_name("discard(count_:)"))) __attribute__((unavailable("Use discardExact instead.")));
- (void)discardExactCount:(int32_t)count __attribute__((swift_name("discardExact(count:)")));
- (SharedBuffer *)duplicate __attribute__((swift_name("duplicate()")));
- (void)duplicateToCopy:(SharedBuffer *)copy __attribute__((swift_name("duplicateTo(copy:)")));
- (int8_t)readByte __attribute__((swift_name("readByte()")));
- (void)reserveEndGapEndGap:(int32_t)endGap __attribute__((swift_name("reserveEndGap(endGap:)")));
- (void)reserveStartGapStartGap:(int32_t)startGap __attribute__((swift_name("reserveStartGap(startGap:)")));
- (void)reset __attribute__((swift_name("reset()")));
- (void)resetForRead __attribute__((swift_name("resetForRead()")));
- (void)resetForWrite __attribute__((swift_name("resetForWrite()")));
- (void)resetForWriteLimit:(int32_t)limit __attribute__((swift_name("resetForWrite(limit:)")));
- (void)rewindCount:(int32_t)count __attribute__((swift_name("rewind(count:)")));
- (NSString *)description __attribute__((swift_name("description()")));
- (int32_t)tryPeekByte __attribute__((swift_name("tryPeekByte()")));
- (int32_t)tryReadByte __attribute__((swift_name("tryReadByte()")));
- (void)writeByteValue:(int8_t)value __attribute__((swift_name("writeByte(value:)")));
@property id _Nullable attachment __attribute__((swift_name("attachment"))) __attribute__((deprecated("Will be removed. Inherit Buffer and add required fields instead.")));
@property (readonly) int32_t capacity __attribute__((swift_name("capacity")));
@property (readonly) int32_t endGap __attribute__((swift_name("endGap")));
@property (readonly) int32_t limit __attribute__((swift_name("limit")));
@property (readonly) SharedMemory *memory __attribute__((swift_name("memory")));
@property (readonly) int32_t readPosition __attribute__((swift_name("readPosition")));
@property (readonly) int32_t readRemaining __attribute__((swift_name("readRemaining")));
@property (readonly) int32_t startGap __attribute__((swift_name("startGap")));
@property (readonly) int32_t writePosition __attribute__((swift_name("writePosition")));
@property (readonly) int32_t writeRemaining __attribute__((swift_name("writeRemaining")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Buffer.Companion")))
@interface SharedBufferCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedBufferCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) SharedBuffer *Empty __attribute__((swift_name("Empty")));
@property (readonly) int32_t ReservedSize __attribute__((swift_name("ReservedSize")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("BufferLimitExceededException")))
@interface SharedBufferLimitExceededException : SharedKotlinException
- (instancetype)initWithMessage:(NSString *)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithCause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ByteOrder")))
@interface SharedByteOrder : SharedKotlinEnum<SharedByteOrder *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedByteOrderCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) SharedByteOrder *bigEndian __attribute__((swift_name("bigEndian")));
@property (class, readonly) SharedByteOrder *littleEndian __attribute__((swift_name("littleEndian")));
+ (SharedKotlinArray<SharedByteOrder *> *)values __attribute__((swift_name("values()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ByteOrder.Companion")))
@interface SharedByteOrderCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedByteOrderCompanion *shared __attribute__((swift_name("shared")));
- (SharedByteOrder *)nativeOrder __attribute__((swift_name("nativeOrder()")));
@end;

__attribute__((swift_name("BytePacketBuilderBase")))
@interface SharedBytePacketBuilderBase : SharedAbstractOutput
- (instancetype)initWithPool:(id<SharedObjectPool>)pool __attribute__((swift_name("init(pool:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
@end;

__attribute__((swift_name("BytePacketBuilderPlatformBase")))
@interface SharedBytePacketBuilderPlatformBase : SharedBytePacketBuilderBase
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("BytePacketBuilder")))
@interface SharedBytePacketBuilder : SharedBytePacketBuilderPlatformBase
- (instancetype)initWithHeaderSizeHint:(int32_t)headerSizeHint pool:(id<SharedObjectPool>)pool __attribute__((swift_name("init(headerSizeHint:pool:)"))) __attribute__((objc_designated_initializer));
- (SharedBytePacketBuilder *)appendValue:(unichar)c __attribute__((swift_name("append(value:)")));
- (SharedBytePacketBuilder *)appendValue_:(id _Nullable)csq __attribute__((swift_name("append(value_:)")));
- (SharedBytePacketBuilder *)appendValue:(id _Nullable)csq startIndex:(int32_t)start endIndex:(int32_t)end __attribute__((swift_name("append(value:startIndex:endIndex:)")));
- (SharedByteReadPacket *)build __attribute__((swift_name("build()")));
- (void)closeDestination __attribute__((swift_name("closeDestination()")));
- (void)flushSource:(SharedMemory *)source offset:(int32_t)offset length:(int32_t)length __attribute__((swift_name("flush(source:offset:length:)")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) BOOL isEmpty __attribute__((swift_name("isEmpty")));
@property (readonly) BOOL isNotEmpty __attribute__((swift_name("isNotEmpty")));
@property (readonly) int32_t size __attribute__((swift_name("size")));
@end;

__attribute__((swift_name("ByteReadPacketBase")))
@interface SharedByteReadPacketBase : SharedAbstractInput
- (instancetype)initWithHead:(SharedChunkBuffer *)head remaining:(int64_t)remaining pool:(id<SharedObjectPool>)pool __attribute__((swift_name("init(head:remaining:pool:)"))) __attribute__((objc_designated_initializer)) __attribute__((deprecated("Will be removed in the future releases. Use Input or AbstractInput instead.")));
@property (class, readonly, getter=companion) SharedByteReadPacketBaseCompanion *companion __attribute__((swift_name("companion")));
@end;

__attribute__((swift_name("ByteReadPacketPlatformBase")))
@interface SharedByteReadPacketPlatformBase : SharedByteReadPacketBase
- (instancetype)initWithHead:(SharedChunkBuffer *)head remaining:(int64_t)remaining pool:(id<SharedObjectPool>)pool __attribute__((swift_name("init(head:remaining:pool:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable("Will be removed in future releases.")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ByteReadPacket")))
@interface SharedByteReadPacket : SharedByteReadPacketPlatformBase <SharedInput>
- (instancetype)initWithHead:(SharedChunkBuffer *)head pool:(id<SharedObjectPool>)pool __attribute__((swift_name("init(head:pool:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithHead:(SharedChunkBuffer *)head remaining:(int64_t)remaining pool:(id<SharedObjectPool>)pool __attribute__((swift_name("init(head:remaining:pool:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedByteReadPacketCompanion *companion __attribute__((swift_name("companion")));
- (void)closeSource __attribute__((swift_name("closeSource()")));
- (SharedByteReadPacket *)doCopy __attribute__((swift_name("doCopy()")));
- (SharedChunkBuffer * _Nullable)fill __attribute__((swift_name("fill()")));
- (int32_t)fillDestination:(SharedMemory *)destination offset:(int32_t)offset length:(int32_t)length __attribute__((swift_name("fill(destination:offset:length:)")));
- (NSString *)description __attribute__((swift_name("description()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ByteReadPacket.Companion")))
@interface SharedByteReadPacketCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedByteReadPacketCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) SharedByteReadPacket *Empty __attribute__((swift_name("Empty")));
@property (readonly) int32_t ReservedSize __attribute__((swift_name("ReservedSize")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ByteReadPacketBase.Companion")))
@interface SharedByteReadPacketBaseCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedByteReadPacketBaseCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) SharedByteReadPacket *Empty __attribute__((swift_name("Empty"))) __attribute__((unavailable("Use ByteReadPacket.Empty instead")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("InsufficientSpaceException")))
@interface SharedInsufficientSpaceException : SharedKotlinException
- (instancetype)initWithSize:(int32_t)size availableSpace:(int32_t)availableSpace __attribute__((swift_name("init(size:availableSpace:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithName:(NSString *)name size:(int32_t)size availableSpace:(int32_t)availableSpace __attribute__((swift_name("init(name:size:availableSpace:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithSize:(int64_t)size availableSpace_:(int64_t)availableSpace __attribute__((swift_name("init(size:availableSpace_:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithMessage:(NSString *)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithCause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end;

__attribute__((swift_name("ChunkBuffer")))
@interface SharedChunkBuffer : SharedBuffer
- (instancetype)initWithMemory:(SharedMemory *)memory origin:(SharedChunkBuffer * _Nullable)origin parentPool:(id<SharedObjectPool> _Nullable)parentPool __attribute__((swift_name("init(memory:origin:parentPool:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithMemory:(SharedMemory *)memory __attribute__((swift_name("init(memory:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedChunkBufferCompanion *companion __attribute__((swift_name("companion")));
- (SharedChunkBuffer * _Nullable)cleanNext __attribute__((swift_name("cleanNext()")));
- (SharedChunkBuffer *)duplicate __attribute__((swift_name("duplicate()")));
- (void)releasePool:(id<SharedObjectPool>)pool __attribute__((swift_name("release(pool:)")));
- (void)reset __attribute__((swift_name("reset()")));
@property SharedChunkBuffer * _Nullable next __attribute__((swift_name("next")));
@property (readonly) SharedChunkBuffer * _Nullable origin __attribute__((swift_name("origin")));
@property (readonly) int32_t referenceCount __attribute__((swift_name("referenceCount")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IoBuffer")))
@interface SharedIoBuffer : SharedChunkBuffer <SharedInput, SharedOutput>
- (instancetype)initWithMemory:(SharedMemory *)memory origin:(SharedChunkBuffer * _Nullable)origin __attribute__((swift_name("init(memory:origin:)"))) __attribute__((objc_designated_initializer)) __attribute__((deprecated("Use Buffer instead.")));
- (instancetype)initWithContent:(void *)content contentCapacity:(int32_t)contentCapacity __attribute__((swift_name("init(content:contentCapacity:)"))) __attribute__((objc_designated_initializer)) __attribute__((deprecated("Use Buffer instead.")));
- (instancetype)initWithMemory:(SharedMemory *)memory origin:(SharedChunkBuffer * _Nullable)origin parentPool:(id<SharedObjectPool> _Nullable)parentPool __attribute__((swift_name("init(memory:origin:parentPool:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedIoBufferCompanion *companion __attribute__((swift_name("companion")));
- (id<SharedKotlinAppendable>)appendValue:(unichar)c __attribute__((swift_name("append(value:)")));
- (id<SharedKotlinAppendable>)appendCsq:(SharedKotlinCharArray *)csq start:(int32_t)start end:(int32_t)end __attribute__((swift_name("append(csq:start:end:)")));
- (id<SharedKotlinAppendable>)appendValue_:(id _Nullable)csq __attribute__((swift_name("append(value_:)")));
- (id<SharedKotlinAppendable>)appendValue:(id _Nullable)csq startIndex:(int32_t)start endIndex:(int32_t)end __attribute__((swift_name("append(value:startIndex:endIndex:)")));
- (int32_t)appendCharsCsq:(SharedKotlinCharArray *)csq start:(int32_t)start end:(int32_t)end __attribute__((swift_name("appendChars(csq:start:end:)")));
- (int32_t)appendCharsCsq:(id)csq start:(int32_t)start end_:(int32_t)end __attribute__((swift_name("appendChars(csq:start:end_:)")));
- (void)close __attribute__((swift_name("close()")));
- (SharedIoBuffer *)duplicate __attribute__((swift_name("duplicate()")));
- (void)flush __attribute__((swift_name("flush()")));
- (SharedIoBuffer *)makeView __attribute__((swift_name("makeView()")));
- (int64_t)peekToDestination:(SharedMemory *)destination destinationOffset:(int64_t)destinationOffset offset:(int64_t)offset min:(int64_t)min max:(int64_t)max __attribute__((swift_name("peekTo(destination:destinationOffset:offset:min:max:)")));
- (int32_t)readDirectBlock:(SharedInt *(^)(id))block __attribute__((swift_name("readDirect(block:)")));
- (void)releasePool_:(id<SharedObjectPool>)pool __attribute__((swift_name("release(pool_:)")));
- (NSString *)description __attribute__((swift_name("description()")));
- (int32_t)tryPeek __attribute__((swift_name("tryPeek()")));
- (int32_t)writeDirectBlock:(SharedInt *(^)(id))block __attribute__((swift_name("writeDirect(block:)")));
@property SharedByteOrder *byteOrder __attribute__((swift_name("byteOrder"))) __attribute__((unavailable("Not supported anymore. All operations are big endian by default.")));
@property (readonly) BOOL endOfInput __attribute__((swift_name("endOfInput")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IoBuffer.Companion")))
@interface SharedIoBufferCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedIoBufferCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) SharedIoBuffer *Empty __attribute__((swift_name("Empty")));
@property (readonly) id<SharedObjectPool> EmptyPool __attribute__((swift_name("EmptyPool")));
@property (readonly) id<SharedObjectPool> NoPool __attribute__((swift_name("NoPool")));
@property (readonly) id<SharedObjectPool> Pool __attribute__((swift_name("Pool")));
@property (readonly) int32_t ReservedSize __attribute__((swift_name("ReservedSize")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ChunkBuffer.Companion")))
@interface SharedChunkBufferCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedChunkBufferCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) SharedChunkBuffer *Empty __attribute__((swift_name("Empty")));
@property (readonly) id<SharedObjectPool> EmptyPool __attribute__((swift_name("EmptyPool")));
@property (readonly) id<SharedObjectPool> Pool __attribute__((swift_name("Pool")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MalformedUTF8InputException")))
@interface SharedMalformedUTF8InputException : SharedKotlinException
- (instancetype)initWithMessage:(NSString *)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithCause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end;

__attribute__((swift_name("ObjectPool")))
@protocol SharedObjectPool <SharedCloseable_>
@required
- (id)borrow __attribute__((swift_name("borrow()")));
- (void)dispose_ __attribute__((swift_name("dispose()")));
- (void)recycleInstance:(id)instance __attribute__((swift_name("recycle(instance:)")));
@property (readonly) int32_t capacity __attribute__((swift_name("capacity")));
@end;

__attribute__((swift_name("DefaultPool")))
@interface SharedDefaultPool<T> : SharedBase <SharedObjectPool>
- (instancetype)initWithCapacity:(int32_t)capacity __attribute__((swift_name("init(capacity:)"))) __attribute__((objc_designated_initializer));
- (T)borrow __attribute__((swift_name("borrow()")));
- (T)clearInstanceInstance:(T)instance __attribute__((swift_name("clearInstance(instance:)")));
- (void)dispose_ __attribute__((swift_name("dispose()")));
- (void)disposeInstanceInstance:(T)instance __attribute__((swift_name("disposeInstance(instance:)")));
- (T)produceInstance __attribute__((swift_name("produceInstance()")));
- (void)recycleInstance:(T)instance __attribute__((swift_name("recycle(instance:)")));
- (void)validateInstanceInstance:(T)instance __attribute__((swift_name("validateInstance(instance:)")));
@property (readonly) int32_t capacity __attribute__((swift_name("capacity")));
@property (readonly) SharedSynchronizedObject *lock __attribute__((swift_name("lock")));
@end;

__attribute__((swift_name("NoPoolImpl")))
@interface SharedNoPoolImpl<T> : SharedBase <SharedObjectPool>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (void)dispose_ __attribute__((swift_name("dispose()")));
- (void)recycleInstance:(T)instance __attribute__((swift_name("recycle(instance:)")));
@property (readonly) int32_t capacity __attribute__((swift_name("capacity")));
@end;

__attribute__((swift_name("SingleInstancePool")))
@interface SharedSingleInstancePool<T> : SharedBase <SharedObjectPool>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (T)borrow __attribute__((swift_name("borrow()")));
- (void)dispose_ __attribute__((swift_name("dispose()")));
- (void)disposeInstanceInstance:(T)instance __attribute__((swift_name("disposeInstance(instance:)")));
- (T)produceInstance __attribute__((swift_name("produceInstance()")));
- (void)recycleInstance:(T)instance __attribute__((swift_name("recycle(instance:)")));
@property (readonly) int32_t capacity __attribute__((swift_name("capacity")));
@end;

__attribute__((swift_name("Charset")))
@interface SharedCharset : SharedBase
- (instancetype)initWith_name:(NSString *)_name __attribute__((swift_name("init(_name:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedCharsetCompanion *companion __attribute__((swift_name("companion")));
- (SharedCharsetDecoder *)doNewDecoder __attribute__((swift_name("doNewDecoder()")));
- (SharedCharsetEncoder *)doNewEncoder __attribute__((swift_name("doNewEncoder()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Charset.Companion")))
@interface SharedCharsetCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedCharsetCompanion *shared __attribute__((swift_name("shared")));
- (SharedCharset *)forNameName:(NSString *)name __attribute__((swift_name("forName(name:)")));
@end;

__attribute__((swift_name("CharsetDecoder")))
@interface SharedCharsetDecoder : SharedBase
- (instancetype)initWith_charset:(SharedCharset *)_charset __attribute__((swift_name("init(_charset:)"))) __attribute__((objc_designated_initializer));
@end;

__attribute__((swift_name("CharsetEncoder")))
@interface SharedCharsetEncoder : SharedBase
- (instancetype)initWith_charset:(SharedCharset *)_charset __attribute__((swift_name("init(_charset:)"))) __attribute__((objc_designated_initializer));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Charsets")))
@interface SharedCharsets : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)charsets __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedCharsets *shared __attribute__((swift_name("shared")));
@property (readonly) SharedCharset *ISO_8859_1 __attribute__((swift_name("ISO_8859_1")));
@property (readonly) SharedCharset *UTF_8 __attribute__((swift_name("UTF_8")));
@end;

__attribute__((swift_name("MalformedInputException")))
@interface SharedMalformedInputException : SharedKotlinThrowable
- (instancetype)initWithMessage:(NSString *)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithCause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TooLongLineException")))
@interface SharedTooLongLineException : SharedMalformedInputException
- (instancetype)initWithMessage:(NSString *)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
@end;

__attribute__((swift_name("EOFException")))
@interface SharedEOFException : SharedIOException
- (instancetype)initWithMessage:(NSString *)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithMessage:(NSString *)message cause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end;

__attribute__((swift_name("PosixException")))
@interface SharedPosixException : SharedKotlinException
- (instancetype)initWithErrno:(int32_t)errno message:(NSString *)message __attribute__((swift_name("init(errno:message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithCause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedPosixExceptionCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) int32_t errno __attribute__((swift_name("errno")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PosixException.AddressAlreadyInUseException")))
@interface SharedPosixExceptionAddressAlreadyInUseException : SharedPosixException
- (instancetype)initWithMessage:(NSString *)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithErrno:(int32_t)errno message:(NSString *)message __attribute__((swift_name("init(errno:message:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PosixException.BadFileDescriptorException")))
@interface SharedPosixExceptionBadFileDescriptorException : SharedPosixException
- (instancetype)initWithMessage:(NSString *)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithErrno:(int32_t)errno message:(NSString *)message __attribute__((swift_name("init(errno:message:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PosixException.BadMessageException")))
@interface SharedPosixExceptionBadMessageException : SharedPosixException
- (instancetype)initWithMessage:(NSString *)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithErrno:(int32_t)errno message:(NSString *)message __attribute__((swift_name("init(errno:message:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PosixException.Companion")))
@interface SharedPosixExceptionCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedPosixExceptionCompanion *shared __attribute__((swift_name("shared")));
- (SharedPosixException *)forErrnoErrno:(int32_t)errno posixFunctionName:(NSString * _Nullable)posixFunctionName __attribute__((swift_name("forErrno(errno:posixFunctionName:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PosixException.ConnectionAbortedException")))
@interface SharedPosixExceptionConnectionAbortedException : SharedPosixException
- (instancetype)initWithMessage:(NSString *)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithErrno:(int32_t)errno message:(NSString *)message __attribute__((swift_name("init(errno:message:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PosixException.ConnectionRefusedException")))
@interface SharedPosixExceptionConnectionRefusedException : SharedPosixException
- (instancetype)initWithMessage:(NSString *)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithErrno:(int32_t)errno message:(NSString *)message __attribute__((swift_name("init(errno:message:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PosixException.ConnectionResetException")))
@interface SharedPosixExceptionConnectionResetException : SharedPosixException
- (instancetype)initWithMessage:(NSString *)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithErrno:(int32_t)errno message:(NSString *)message __attribute__((swift_name("init(errno:message:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PosixException.InterruptedException")))
@interface SharedPosixExceptionInterruptedException : SharedPosixException
- (instancetype)initWithMessage:(NSString *)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithErrno:(int32_t)errno message:(NSString *)message __attribute__((swift_name("init(errno:message:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PosixException.InvalidArgumentException")))
@interface SharedPosixExceptionInvalidArgumentException : SharedPosixException
- (instancetype)initWithMessage:(NSString *)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithErrno:(int32_t)errno message:(NSString *)message __attribute__((swift_name("init(errno:message:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PosixException.NoMemoryException")))
@interface SharedPosixExceptionNoMemoryException : SharedPosixException
- (instancetype)initWithMessage:(NSString *)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithErrno:(int32_t)errno message:(NSString *)message __attribute__((swift_name("init(errno:message:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PosixException.NoSuchFileException")))
@interface SharedPosixExceptionNoSuchFileException : SharedPosixException
- (instancetype)initWithMessage:(NSString *)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithErrno:(int32_t)errno message:(NSString *)message __attribute__((swift_name("init(errno:message:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PosixException.NotConnectedException")))
@interface SharedPosixExceptionNotConnectedException : SharedPosixException
- (instancetype)initWithMessage:(NSString *)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithErrno:(int32_t)errno message:(NSString *)message __attribute__((swift_name("init(errno:message:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PosixException.NotSocketException")))
@interface SharedPosixExceptionNotSocketException : SharedPosixException
- (instancetype)initWithMessage:(NSString *)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithErrno:(int32_t)errno message:(NSString *)message __attribute__((swift_name("init(errno:message:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PosixException.OverflowException")))
@interface SharedPosixExceptionOverflowException : SharedPosixException
- (instancetype)initWithMessage:(NSString *)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithErrno:(int32_t)errno message:(NSString *)message __attribute__((swift_name("init(errno:message:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PosixException.PosixErrnoException")))
@interface SharedPosixExceptionPosixErrnoException : SharedPosixException
- (instancetype)initWithErrno:(int32_t)errno message:(NSString *)message __attribute__((swift_name("init(errno:message:)"))) __attribute__((objc_designated_initializer));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PosixException.TimeoutIOException")))
@interface SharedPosixExceptionTimeoutIOException : SharedPosixException
- (instancetype)initWithMessage:(NSString *)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithErrno:(int32_t)errno message:(NSString *)message __attribute__((swift_name("init(errno:message:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PosixException.TryAgainException")))
@interface SharedPosixExceptionTryAgainException : SharedPosixException
- (instancetype)initWithErrno:(int32_t)errno message:(NSString *)message __attribute__((swift_name("init(errno:message:)"))) __attribute__((objc_designated_initializer));
@end;

__attribute__((swift_name("Closeable__")))
@protocol SharedCloseable__
@required
- (void)close __attribute__((swift_name("close()")));
@end;

__attribute__((swift_name("SqlDriver")))
@protocol SharedSqlDriver <SharedCloseable__>
@required
- (SharedTransacterTransaction * _Nullable)currentTransaction __attribute__((swift_name("currentTransaction()")));
- (void)executeIdentifier:(SharedInt * _Nullable)identifier sql:(NSString *)sql parameters:(int32_t)parameters binders:(void (^ _Nullable)(id<SharedSqlPreparedStatement>))binders __attribute__((swift_name("execute(identifier:sql:parameters:binders:)")));
- (id<SharedSqlCursor>)executeQueryIdentifier:(SharedInt * _Nullable)identifier sql:(NSString *)sql parameters:(int32_t)parameters binders:(void (^ _Nullable)(id<SharedSqlPreparedStatement>))binders __attribute__((swift_name("executeQuery(identifier:sql:parameters:binders:)")));
- (SharedTransacterTransaction *)doNewTransaction __attribute__((swift_name("doNewTransaction()")));
@end;

__attribute__((swift_name("ConnectionWrapper")))
@interface SharedConnectionWrapper : SharedBase <SharedSqlDriver>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (void)executeIdentifier:(SharedInt * _Nullable)identifier sql:(NSString *)sql parameters:(int32_t)parameters binders:(void (^ _Nullable)(id<SharedSqlPreparedStatement>))binders __attribute__((swift_name("execute(identifier:sql:parameters:binders:)")));
- (id<SharedSqlCursor>)executeQueryIdentifier:(SharedInt * _Nullable)identifier sql:(NSString *)sql parameters:(int32_t)parameters binders:(void (^ _Nullable)(id<SharedSqlPreparedStatement>))binders __attribute__((swift_name("executeQuery(identifier:sql:parameters:binders:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("NativeSqliteDriver")))
@interface SharedNativeSqliteDriver : SharedConnectionWrapper <SharedSqlDriver>
- (instancetype)initWithConfiguration:(SharedDatabaseConfiguration *)configuration maxReaderConnections:(int32_t)maxReaderConnections __attribute__((swift_name("init(configuration:maxReaderConnections:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithSchema:(id<SharedSqlDriverSchema>)schema name:(NSString *)name maxReaderConnections:(int32_t)maxReaderConnections __attribute__((swift_name("init(schema:name:maxReaderConnections:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithDatabaseManager:(id<SharedDatabaseManager>)databaseManager maxReaderConnections:(int32_t)maxReaderConnections __attribute__((swift_name("init(databaseManager:maxReaderConnections:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (void)close __attribute__((swift_name("close()")));
- (SharedTransacterTransaction * _Nullable)currentTransaction __attribute__((swift_name("currentTransaction()")));
- (SharedTransacterTransaction *)doNewTransaction __attribute__((swift_name("doNewTransaction()")));
@end;

__attribute__((swift_name("ChildJob")))
@protocol SharedChildJob <SharedJob>
@required
- (void)parentCancelledParentJob:(id<SharedParentJob>)parentJob __attribute__((swift_name("parentCancelled(parentJob:)")));
@end;

__attribute__((swift_name("ParentJob")))
@protocol SharedParentJob <SharedJob>
@required
- (SharedKotlinCancellationException *)getChildJobCancellationCause __attribute__((swift_name("getChildJobCancellationCause()")));
@end;

__attribute__((swift_name("SelectClause0")))
@protocol SharedSelectClause0
@required
- (void)registerSelectClause0Select:(id<SharedSelectInstance>)select block:(id<SharedKotlinSuspendFunction0>)block __attribute__((swift_name("registerSelectClause0(select:block:)")));
@end;

__attribute__((swift_name("JobSupport")))
@interface SharedJobSupport : SharedBase <SharedJob, SharedChildJob, SharedParentJob, SharedSelectClause0>
- (instancetype)initWithActive:(BOOL)active __attribute__((swift_name("init(active:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable("This is internal API and may be removed in the future releases")));
- (void)afterCompletionState:(id _Nullable)state __attribute__((swift_name("afterCompletion(state:)")));
- (id<SharedChildHandle>)attachChildChild:(id<SharedChildJob>)child __attribute__((swift_name("attachChild(child:)")));
- (void)cancelCause_:(SharedKotlinCancellationException * _Nullable)cause __attribute__((swift_name("cancel(cause_:)")));
- (BOOL)cancelCoroutineCause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("cancelCoroutine(cause:)")));
- (void)cancelInternalCause:(SharedKotlinThrowable *)cause __attribute__((swift_name("cancelInternal(cause:)")));
- (NSString *)cancellationExceptionMessage __attribute__((swift_name("cancellationExceptionMessage()")));
- (BOOL)childCancelledCause:(SharedKotlinThrowable *)cause __attribute__((swift_name("childCancelled(cause:)")));
- (SharedKotlinCancellationException *)getCancellationException __attribute__((swift_name("getCancellationException()")));
- (SharedKotlinCancellationException *)getChildJobCancellationCause __attribute__((swift_name("getChildJobCancellationCause()")));
- (SharedKotlinThrowable * _Nullable)getCompletionExceptionOrNull __attribute__((swift_name("getCompletionExceptionOrNull()")));
- (BOOL)handleJobExceptionException:(SharedKotlinThrowable *)exception __attribute__((swift_name("handleJobException(exception:)")));
- (id<SharedDisposableHandle>)invokeOnCompletionOnCancelling:(BOOL)onCancelling invokeImmediately:(BOOL)invokeImmediately handler:(void (^)(SharedKotlinThrowable * _Nullable))handler __attribute__((swift_name("invokeOnCompletion(onCancelling:invokeImmediately:handler:)")));
- (id<SharedDisposableHandle>)invokeOnCompletionHandler:(void (^)(SharedKotlinThrowable * _Nullable))handler __attribute__((swift_name("invokeOnCompletion(handler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)joinWithCompletionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("join(completionHandler:)")));
- (void)onCancellingCause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("onCancelling(cause:)")));
- (void)onCompletionInternalState:(id _Nullable)state __attribute__((swift_name("onCompletionInternal(state:)")));
- (void)onStart __attribute__((swift_name("onStart()")));
- (void)parentCancelledParentJob:(id<SharedParentJob>)parentJob __attribute__((swift_name("parentCancelled(parentJob:)")));
- (void)registerSelectClause0Select:(id<SharedSelectInstance>)select block:(id<SharedKotlinSuspendFunction0>)block __attribute__((swift_name("registerSelectClause0(select:block:)")));
- (BOOL)start __attribute__((swift_name("start()")));
- (NSString *)toDebugString __attribute__((swift_name("toDebugString()")));
- (NSString *)description __attribute__((swift_name("description()")));
- (SharedKotlinCancellationException *)toCancellationException:(SharedKotlinThrowable *)receiver message:(NSString * _Nullable)message __attribute__((swift_name("toCancellationException(_:message:)")));
@property (readonly) id<SharedKotlinSequence> children __attribute__((swift_name("children")));
@property (readonly) SharedKotlinThrowable * _Nullable completionCause __attribute__((swift_name("completionCause")));
@property (readonly) BOOL completionCauseHandled __attribute__((swift_name("completionCauseHandled")));
@property (readonly) BOOL isActive __attribute__((swift_name("isActive")));
@property (readonly) BOOL isCancelled __attribute__((swift_name("isCancelled")));
@property (readonly) BOOL isCompleted __attribute__((swift_name("isCompleted")));
@property (readonly) BOOL isCompletedExceptionally __attribute__((swift_name("isCompletedExceptionally")));
@property (readonly) BOOL isScopedCoroutine __attribute__((swift_name("isScopedCoroutine")));
@property (readonly) id<SharedKotlinCoroutineContextKey> key __attribute__((swift_name("key")));
@property (readonly) id<SharedSelectClause0> onJoin __attribute__((swift_name("onJoin")));
@end;

__attribute__((swift_name("AbstractCoroutine")))
@interface SharedAbstractCoroutine<__contravariant T> : SharedJobSupport <SharedJob, SharedKotlinContinuation, SharedCoroutineScope>
- (instancetype)initWithParentContext:(id<SharedKotlinCoroutineContext>)parentContext initParentJob:(BOOL)initParentJob active:(BOOL)active __attribute__((swift_name("init(parentContext:initParentJob:active:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithActive:(BOOL)active __attribute__((swift_name("init(active:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (void)afterResumeState:(id _Nullable)state __attribute__((swift_name("afterResume(state:)")));
- (NSString *)cancellationExceptionMessage __attribute__((swift_name("cancellationExceptionMessage()")));
- (void)onCancelledCause:(SharedKotlinThrowable *)cause handled:(BOOL)handled __attribute__((swift_name("onCancelled(cause:handled:)")));
- (void)onCompletedValue:(T _Nullable)value __attribute__((swift_name("onCompleted(value:)")));
- (void)onCompletionInternalState:(id _Nullable)state __attribute__((swift_name("onCompletionInternal(state:)")));
- (void)resumeWithResult:(id _Nullable)result __attribute__((swift_name("resumeWith(result:)")));
- (void)startStart:(SharedCoroutineStart *)start receiver:(id _Nullable)receiver block:(id<SharedKotlinSuspendFunction1>)block __attribute__((swift_name("start(start:receiver:block:)")));
@property (readonly) id<SharedKotlinCoroutineContext> context __attribute__((swift_name("context")));
@property (readonly) id<SharedKotlinCoroutineContext> coroutineContext __attribute__((swift_name("coroutineContext")));
@property (readonly) BOOL isActive __attribute__((swift_name("isActive")));
@end;

__attribute__((swift_name("CancellableContinuation")))
@protocol SharedCancellableContinuation <SharedKotlinContinuation>
@required
- (BOOL)cancelCause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("cancel(cause:)")));
- (void)completeResumeToken:(id)token __attribute__((swift_name("completeResume(token:)")));
- (void)doInitCancellability __attribute__((swift_name("doInitCancellability()")));
- (void)invokeOnCancellationHandler:(void (^)(SharedKotlinThrowable * _Nullable))handler __attribute__((swift_name("invokeOnCancellation(handler:)")));
- (void)resumeValue:(id _Nullable)value onCancellation:(void (^ _Nullable)(SharedKotlinThrowable *))onCancellation __attribute__((swift_name("resume(value:onCancellation:)")));
- (id _Nullable)tryResumeValue:(id _Nullable)value idempotent:(id _Nullable)idempotent __attribute__((swift_name("tryResume(value:idempotent:)")));
- (id _Nullable)tryResumeValue:(id _Nullable)value idempotent:(id _Nullable)idempotent onCancellation:(void (^ _Nullable)(SharedKotlinThrowable *))onCancellation __attribute__((swift_name("tryResume(value:idempotent:onCancellation:)")));
- (id _Nullable)tryResumeWithExceptionException:(SharedKotlinThrowable *)exception __attribute__((swift_name("tryResumeWithException(exception:)")));
- (void)resumeUndispatched:(SharedCoroutineDispatcher *)receiver value:(id _Nullable)value __attribute__((swift_name("resumeUndispatched(_:value:)")));
- (void)resumeUndispatchedWithException:(SharedCoroutineDispatcher *)receiver exception:(SharedKotlinThrowable *)exception __attribute__((swift_name("resumeUndispatchedWithException(_:exception:)")));
@property (readonly) BOOL isActive __attribute__((swift_name("isActive")));
@property (readonly) BOOL isCancelled __attribute__((swift_name("isCancelled")));
@property (readonly) BOOL isCompleted __attribute__((swift_name("isCompleted")));
@end;

__attribute__((swift_name("DisposableHandle")))
@protocol SharedDisposableHandle
@required
- (void)dispose_ __attribute__((swift_name("dispose()")));
@end;

__attribute__((swift_name("ChildHandle")))
@protocol SharedChildHandle <SharedDisposableHandle>
@required
- (BOOL)childCancelledCause:(SharedKotlinThrowable *)cause __attribute__((swift_name("childCancelled(cause:)")));
@property (readonly) id<SharedJob> _Nullable parent __attribute__((swift_name("parent")));
@end;

__attribute__((swift_name("KotlinContinuationInterceptor")))
@protocol SharedKotlinContinuationInterceptor <SharedKotlinCoroutineContextElement>
@required
- (id<SharedKotlinContinuation>)interceptContinuationContinuation:(id<SharedKotlinContinuation>)continuation __attribute__((swift_name("interceptContinuation(continuation:)")));
- (void)releaseInterceptedContinuationContinuation:(id<SharedKotlinContinuation>)continuation __attribute__((swift_name("releaseInterceptedContinuation(continuation:)")));
@end;

__attribute__((swift_name("CoroutineDispatcher")))
@interface SharedCoroutineDispatcher : SharedKotlinAbstractCoroutineContextElement <SharedKotlinContinuationInterceptor>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (instancetype)initWithKey:(id<SharedKotlinCoroutineContextKey>)key __attribute__((swift_name("init(key:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedCoroutineDispatcherKey *companion __attribute__((swift_name("companion")));
- (void)dispatchContext:(id<SharedKotlinCoroutineContext>)context block:(id<SharedRunnable>)block __attribute__((swift_name("dispatch(context:block:)")));
- (void)dispatchYieldContext:(id<SharedKotlinCoroutineContext>)context block:(id<SharedRunnable>)block __attribute__((swift_name("dispatchYield(context:block:)")));
- (id<SharedKotlinContinuation>)interceptContinuationContinuation:(id<SharedKotlinContinuation>)continuation __attribute__((swift_name("interceptContinuation(continuation:)")));
- (BOOL)isDispatchNeededContext:(id<SharedKotlinCoroutineContext>)context __attribute__((swift_name("isDispatchNeeded(context:)")));
- (SharedCoroutineDispatcher *)limitedParallelismParallelism:(int32_t)parallelism __attribute__((swift_name("limitedParallelism(parallelism:)")));
- (SharedCoroutineDispatcher *)plusOther_:(SharedCoroutineDispatcher *)other __attribute__((swift_name("plus(other_:)"))) __attribute__((unavailable("Operator '+' on two CoroutineDispatcher objects is meaningless. CoroutineDispatcher is a coroutine context element and `+` is a set-sum operator for coroutine contexts. The dispatcher to the right of `+` just replaces the dispatcher to the left.")));
- (void)releaseInterceptedContinuationContinuation:(id<SharedKotlinContinuation>)continuation __attribute__((swift_name("releaseInterceptedContinuation(continuation:)")));
- (NSString *)description __attribute__((swift_name("description()")));
@end;

__attribute__((swift_name("CloseableCoroutineDispatcher")))
@interface SharedCloseableCoroutineDispatcher : SharedCoroutineDispatcher
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (void)close __attribute__((swift_name("close()")));
@property (readonly) int32_t worker __attribute__((swift_name("worker")));
@end;

__attribute__((swift_name("Deferred")))
@protocol SharedDeferred <SharedJob>
@required

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)awaitWithCompletionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("await(completionHandler:)")));
- (id _Nullable)getCompleted __attribute__((swift_name("getCompleted()")));
- (SharedKotlinThrowable * _Nullable)getCompletionExceptionOrNull __attribute__((swift_name("getCompletionExceptionOrNull()")));
@property (readonly) id<SharedSelectClause1> onAwait __attribute__((swift_name("onAwait")));
@end;

__attribute__((swift_name("CompletableDeferred")))
@protocol SharedCompletableDeferred <SharedDeferred>
@required
- (BOOL)completeValue:(id _Nullable)value __attribute__((swift_name("complete(value:)")));
- (BOOL)completeExceptionallyException:(SharedKotlinThrowable *)exception __attribute__((swift_name("completeExceptionally(exception:)")));
@end;

__attribute__((swift_name("CompletableJob")))
@protocol SharedCompletableJob <SharedJob>
@required
- (BOOL)complete __attribute__((swift_name("complete()")));
- (BOOL)completeExceptionallyException:(SharedKotlinThrowable *)exception __attribute__((swift_name("completeExceptionally(exception:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CompletionHandlerException")))
@interface SharedCompletionHandlerException : SharedKotlinRuntimeException
- (instancetype)initWithMessage:(NSString *)message cause:(SharedKotlinThrowable *)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithCause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end;

__attribute__((swift_name("CopyableThrowable")))
@protocol SharedCopyableThrowable
@required
- (SharedKotlinThrowable * _Nullable)createCopy __attribute__((swift_name("createCopy()")));
@end;

__attribute__((swift_name("KotlinAbstractCoroutineContextKey")))
@interface SharedKotlinAbstractCoroutineContextKey<B, E> : SharedBase <SharedKotlinCoroutineContextKey>
- (instancetype)initWithBaseKey:(id<SharedKotlinCoroutineContextKey>)baseKey safeCast:(E _Nullable (^)(id<SharedKotlinCoroutineContextElement>))safeCast __attribute__((swift_name("init(baseKey:safeCast:)"))) __attribute__((objc_designated_initializer));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CoroutineDispatcher.Key")))
@interface SharedCoroutineDispatcherKey : SharedKotlinAbstractCoroutineContextKey<id<SharedKotlinContinuationInterceptor>, SharedCoroutineDispatcher *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithBaseKey:(id<SharedKotlinCoroutineContextKey>)baseKey safeCast:(id<SharedKotlinCoroutineContextElement> _Nullable (^)(id<SharedKotlinCoroutineContextElement>))safeCast __attribute__((swift_name("init(baseKey:safeCast:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)key __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedCoroutineDispatcherKey *shared __attribute__((swift_name("shared")));
@end;

__attribute__((swift_name("CoroutineExceptionHandler")))
@protocol SharedCoroutineExceptionHandler <SharedKotlinCoroutineContextElement>
@required
- (void)handleExceptionContext:(id<SharedKotlinCoroutineContext>)context exception:(SharedKotlinThrowable *)exception __attribute__((swift_name("handleException(context:exception:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CoroutineExceptionHandlerKey")))
@interface SharedCoroutineExceptionHandlerKey : SharedBase <SharedKotlinCoroutineContextKey>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)key __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedCoroutineExceptionHandlerKey *shared __attribute__((swift_name("shared")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CoroutineName")))
@interface SharedCoroutineName : SharedKotlinAbstractCoroutineContextElement
- (instancetype)initWithName:(NSString *)name __attribute__((swift_name("init(name:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithKey:(id<SharedKotlinCoroutineContextKey>)key __attribute__((swift_name("init(key:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedCoroutineNameKey *companion __attribute__((swift_name("companion")));
- (NSString *)component1 __attribute__((swift_name("component1()")));
- (SharedCoroutineName *)doCopyName:(NSString *)name __attribute__((swift_name("doCopy(name:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *name __attribute__((swift_name("name")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CoroutineName.Key")))
@interface SharedCoroutineNameKey : SharedBase <SharedKotlinCoroutineContextKey>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)key __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedCoroutineNameKey *shared __attribute__((swift_name("shared")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CoroutineStart")))
@interface SharedCoroutineStart : SharedKotlinEnum<SharedCoroutineStart *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedCoroutineStart *default_ __attribute__((swift_name("default_")));
@property (class, readonly) SharedCoroutineStart *lazy __attribute__((swift_name("lazy")));
@property (class, readonly) SharedCoroutineStart *atomic __attribute__((swift_name("atomic")));
@property (class, readonly) SharedCoroutineStart *undispatched __attribute__((swift_name("undispatched")));
+ (SharedKotlinArray<SharedCoroutineStart *> *)values __attribute__((swift_name("values()")));
@property (readonly) BOOL isLazy __attribute__((swift_name("isLazy")));
@end;

__attribute__((swift_name("Delay")))
@protocol SharedDelay
@required

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)delayTime:(int64_t)time completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("delay(time:completionHandler:)"))) __attribute__((unavailable("Deprecated without replacement as an internal method never intended for public use")));
- (id<SharedDisposableHandle>)invokeOnTimeoutTimeMillis:(int64_t)timeMillis block:(id<SharedRunnable>)block context:(id<SharedKotlinCoroutineContext>)context __attribute__((swift_name("invokeOnTimeout(timeMillis:block:context:)")));
- (void)scheduleResumeAfterDelayTimeMillis:(int64_t)timeMillis continuation:(id<SharedCancellableContinuation>)continuation __attribute__((swift_name("scheduleResumeAfterDelay(timeMillis:continuation:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Dispatchers")))
@interface SharedDispatchers : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)dispatchers __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedDispatchers *shared __attribute__((swift_name("shared")));
@property (readonly) SharedCoroutineDispatcher *Default __attribute__((swift_name("Default")));
@property (readonly) SharedMainCoroutineDispatcher *Main __attribute__((swift_name("Main")));
@property (readonly) SharedCoroutineDispatcher *Unconfined __attribute__((swift_name("Unconfined")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GlobalScope")))
@interface SharedGlobalScope : SharedBase <SharedCoroutineScope>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)globalScope __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedGlobalScope *shared __attribute__((swift_name("shared")));
@property (readonly) id<SharedKotlinCoroutineContext> coroutineContext __attribute__((swift_name("coroutineContext")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("JobKey")))
@interface SharedJobKey : SharedBase <SharedKotlinCoroutineContextKey>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)key __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedJobKey *shared __attribute__((swift_name("shared")));
@end;

__attribute__((swift_name("MainCoroutineDispatcher")))
@interface SharedMainCoroutineDispatcher : SharedCoroutineDispatcher
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (SharedCoroutineDispatcher *)limitedParallelismParallelism:(int32_t)parallelism __attribute__((swift_name("limitedParallelism(parallelism:)")));
- (NSString *)description __attribute__((swift_name("description()")));
- (NSString * _Nullable)toStringInternalImpl __attribute__((swift_name("toStringInternalImpl()")));
@property (readonly) SharedMainCoroutineDispatcher *immediate __attribute__((swift_name("immediate")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("NonCancellable")))
@interface SharedNonCancellable : SharedKotlinAbstractCoroutineContextElement <SharedJob>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithKey:(id<SharedKotlinCoroutineContextKey>)key __attribute__((swift_name("init(key:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)nonCancellable __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedNonCancellable *shared __attribute__((swift_name("shared")));
- (id<SharedChildHandle>)attachChildChild:(id<SharedChildJob>)child __attribute__((swift_name("attachChild(child:)"))) __attribute__((deprecated("NonCancellable can be used only as an argument for 'withContext', direct usages of its API are prohibited")));
- (void)cancelCause_:(SharedKotlinCancellationException * _Nullable)cause __attribute__((swift_name("cancel(cause_:)"))) __attribute__((deprecated("NonCancellable can be used only as an argument for 'withContext', direct usages of its API are prohibited")));
- (SharedKotlinCancellationException *)getCancellationException __attribute__((swift_name("getCancellationException()"))) __attribute__((deprecated("NonCancellable can be used only as an argument for 'withContext', direct usages of its API are prohibited")));
- (id<SharedDisposableHandle>)invokeOnCompletionOnCancelling:(BOOL)onCancelling invokeImmediately:(BOOL)invokeImmediately handler:(void (^)(SharedKotlinThrowable * _Nullable))handler __attribute__((swift_name("invokeOnCompletion(onCancelling:invokeImmediately:handler:)"))) __attribute__((deprecated("NonCancellable can be used only as an argument for 'withContext', direct usages of its API are prohibited")));
- (id<SharedDisposableHandle>)invokeOnCompletionHandler:(void (^)(SharedKotlinThrowable * _Nullable))handler __attribute__((swift_name("invokeOnCompletion(handler:)"))) __attribute__((deprecated("NonCancellable can be used only as an argument for 'withContext', direct usages of its API are prohibited")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)joinWithCompletionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("join(completionHandler:)"))) __attribute__((deprecated("NonCancellable can be used only as an argument for 'withContext', direct usages of its API are prohibited")));
- (BOOL)start __attribute__((swift_name("start()"))) __attribute__((deprecated("NonCancellable can be used only as an argument for 'withContext', direct usages of its API are prohibited")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) id<SharedKotlinSequence> children __attribute__((swift_name("children"))) __attribute__((deprecated("NonCancellable can be used only as an argument for 'withContext', direct usages of its API are prohibited")));
@property (readonly) BOOL isActive __attribute__((swift_name("isActive"))) __attribute__((deprecated("NonCancellable can be used only as an argument for 'withContext', direct usages of its API are prohibited")));
@property (readonly) BOOL isCancelled __attribute__((swift_name("isCancelled"))) __attribute__((deprecated("NonCancellable can be used only as an argument for 'withContext', direct usages of its API are prohibited")));
@property (readonly) BOOL isCompleted __attribute__((swift_name("isCompleted"))) __attribute__((deprecated("NonCancellable can be used only as an argument for 'withContext', direct usages of its API are prohibited")));
@property (readonly) id<SharedSelectClause0> onJoin __attribute__((swift_name("onJoin"))) __attribute__((deprecated("NonCancellable can be used only as an argument for 'withContext', direct usages of its API are prohibited")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("NonDisposableHandle")))
@interface SharedNonDisposableHandle : SharedBase <SharedDisposableHandle, SharedChildHandle>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)nonDisposableHandle __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedNonDisposableHandle *shared __attribute__((swift_name("shared")));
- (BOOL)childCancelledCause:(SharedKotlinThrowable *)cause __attribute__((swift_name("childCancelled(cause:)")));
- (void)dispose_ __attribute__((swift_name("dispose()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) id<SharedJob> _Nullable parent __attribute__((swift_name("parent")));
@end;

__attribute__((swift_name("Runnable")))
@protocol SharedRunnable
@required
- (void)run __attribute__((swift_name("run()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TimeoutCancellationException")))
@interface SharedTimeoutCancellationException : SharedKotlinCancellationException <SharedCopyableThrowable>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithCause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (SharedTimeoutCancellationException * _Nullable)createCopy __attribute__((swift_name("createCopy()")));
@end;

__attribute__((swift_name("SendChannel")))
@protocol SharedSendChannel
@required
- (BOOL)closeCause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("close(cause:)")));
- (void)invokeOnCloseHandler:(void (^)(SharedKotlinThrowable * _Nullable))handler __attribute__((swift_name("invokeOnClose(handler:)")));
- (BOOL)offerElement:(id _Nullable)element __attribute__((swift_name("offer(element:)"))) __attribute__((unavailable("Deprecated in the favour of 'trySend' method")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)sendElement:(id _Nullable)element completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("send(element:completionHandler:)")));
- (id _Nullable)trySendElement:(id _Nullable)element __attribute__((swift_name("trySend(element:)")));
@property (readonly) BOOL isClosedForSend __attribute__((swift_name("isClosedForSend")));
@property (readonly) id<SharedSelectClause2> onSend __attribute__((swift_name("onSend")));
@end;

__attribute__((swift_name("BroadcastChannel")))
@protocol SharedBroadcastChannel <SharedSendChannel>
@required
- (void)cancelCause_:(SharedKotlinCancellationException * _Nullable)cause __attribute__((swift_name("cancel(cause_:)")));
- (id<SharedReceiveChannel>)openSubscription __attribute__((swift_name("openSubscription()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("BufferOverflow")))
@interface SharedBufferOverflow : SharedKotlinEnum<SharedBufferOverflow *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedBufferOverflow *suspend __attribute__((swift_name("suspend")));
@property (class, readonly) SharedBufferOverflow *dropOldest __attribute__((swift_name("dropOldest")));
@property (class, readonly) SharedBufferOverflow *dropLatest __attribute__((swift_name("dropLatest")));
+ (SharedKotlinArray<SharedBufferOverflow *> *)values __attribute__((swift_name("values()")));
@end;

__attribute__((swift_name("ReceiveChannel")))
@protocol SharedReceiveChannel
@required
- (void)cancelCause_:(SharedKotlinCancellationException * _Nullable)cause __attribute__((swift_name("cancel(cause_:)")));
- (id<SharedChannelIterator>)iterator __attribute__((swift_name("iterator()")));
- (id _Nullable)poll __attribute__((swift_name("poll()"))) __attribute__((unavailable("Deprecated in the favour of 'tryReceive'. Please note that the provided replacement does not rethrow channel's close cause as 'poll' did, for the precise replacement please refer to the 'poll' documentation")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)receiveWithCompletionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("receive(completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)receiveCatchingWithCompletionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("receiveCatching(completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)receiveOrNullWithCompletionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("receiveOrNull(completionHandler:)"))) __attribute__((unavailable("Deprecated in favor of 'receiveCatching'. Please note that the provided replacement does not rethrow channel's close cause as 'receiveOrNull' did, for the detailed replacement please refer to the 'receiveOrNull' documentation")));
- (id _Nullable)tryReceive __attribute__((swift_name("tryReceive()")));
@property (readonly) BOOL isClosedForReceive __attribute__((swift_name("isClosedForReceive")));
@property (readonly, getter=isEmpty__) BOOL isEmpty __attribute__((swift_name("isEmpty")));
@property (readonly) id<SharedSelectClause1> onReceive __attribute__((swift_name("onReceive")));
@property (readonly) id<SharedSelectClause1> onReceiveCatching __attribute__((swift_name("onReceiveCatching")));
@property (readonly) id<SharedSelectClause1> onReceiveOrNull __attribute__((swift_name("onReceiveOrNull"))) __attribute__((unavailable("Deprecated in favor of onReceiveCatching extension")));
@end;

__attribute__((swift_name("Channel")))
@protocol SharedChannel <SharedSendChannel, SharedReceiveChannel>
@required
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ChannelFactory")))
@interface SharedChannelFactory : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)factory __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedChannelFactory *shared __attribute__((swift_name("shared")));
@property (readonly) int32_t BUFFERED __attribute__((swift_name("BUFFERED")));
@property (readonly) int32_t CONFLATED __attribute__((swift_name("CONFLATED")));
@property (readonly) NSString *DEFAULT_BUFFER_PROPERTY_NAME __attribute__((swift_name("DEFAULT_BUFFER_PROPERTY_NAME")));
@property (readonly) int32_t RENDEZVOUS __attribute__((swift_name("RENDEZVOUS")));
@property (readonly) int32_t UNLIMITED __attribute__((swift_name("UNLIMITED")));
@end;

__attribute__((swift_name("ChannelIterator")))
@protocol SharedChannelIterator
@required

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)hasNextWithCompletionHandler:(void (^)(SharedBoolean * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("hasNext(completionHandler:)")));
- (id _Nullable)next_ __attribute__((swift_name("next()")));
@end;

__attribute__((swift_name("KotlinNoSuchElementException")))
@interface SharedKotlinNoSuchElementException : SharedKotlinRuntimeException
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (instancetype)initWithMessage:(NSString * _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithCause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ClosedReceiveChannelException")))
@interface SharedClosedReceiveChannelException : SharedKotlinNoSuchElementException
- (instancetype)initWithMessage:(NSString * _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ClosedSendChannelException")))
@interface SharedClosedSendChannelException : SharedKotlinIllegalStateException
- (instancetype)initWithMessage:(NSString * _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithCause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ConflatedBroadcastChannel")))
@interface SharedConflatedBroadcastChannel<E> : SharedBase <SharedBroadcastChannel>
- (instancetype)initWithValue:(E _Nullable)value __attribute__((swift_name("init(value:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (void)cancelCause_:(SharedKotlinCancellationException * _Nullable)cause __attribute__((swift_name("cancel(cause_:)")));
- (BOOL)closeCause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("close(cause:)")));
- (void)invokeOnCloseHandler:(void (^)(SharedKotlinThrowable * _Nullable))handler __attribute__((swift_name("invokeOnClose(handler:)")));
- (id<SharedReceiveChannel>)openSubscription __attribute__((swift_name("openSubscription()")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)sendElement:(E _Nullable)element completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("send(element:completionHandler:)")));
- (id _Nullable)trySendElement:(E _Nullable)element __attribute__((swift_name("trySend(element:)")));
@property (readonly) BOOL isClosedForSend __attribute__((swift_name("isClosedForSend")));
@property (readonly) id<SharedSelectClause2> onSend __attribute__((swift_name("onSend")));
@property (readonly) E _Nullable value __attribute__((swift_name("value")));
@property (readonly) E _Nullable valueOrNull __attribute__((swift_name("valueOrNull")));
@end;

__attribute__((swift_name("ProducerScope")))
@protocol SharedProducerScope <SharedCoroutineScope, SharedSendChannel>
@required
@property (readonly) id<SharedSendChannel> channel __attribute__((swift_name("channel")));
@end;

__attribute__((swift_name("AbstractFlow")))
@interface SharedAbstractFlow<T> : SharedBase <SharedFlow>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)collectCollector:(id<SharedFlowCollector>)collector completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("collect(collector:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)collectSafelyCollector:(id<SharedFlowCollector>)collector completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("collectSafely(collector:completionHandler:)")));
@end;

__attribute__((swift_name("FlowCollector")))
@protocol SharedFlowCollector
@required

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)emitValue:(id _Nullable)value completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("emit(value:completionHandler:)")));
@end;

__attribute__((swift_name("SharedFlow")))
@protocol SharedSharedFlow <SharedFlow>
@required
@property (readonly) NSArray<id> *replayCache __attribute__((swift_name("replayCache")));
@end;

__attribute__((swift_name("MutableSharedFlow")))
@protocol SharedMutableSharedFlow <SharedSharedFlow, SharedFlowCollector>
@required
- (void)resetReplayCache __attribute__((swift_name("resetReplayCache()")));
- (BOOL)tryEmitValue:(id _Nullable)value __attribute__((swift_name("tryEmit(value:)")));
@property (readonly) id<SharedStateFlow> subscriptionCount __attribute__((swift_name("subscriptionCount")));
@end;

__attribute__((swift_name("StateFlow")))
@protocol SharedStateFlow <SharedSharedFlow>
@required
@property (readonly, getter=value_) id _Nullable value __attribute__((swift_name("value")));
@end;

__attribute__((swift_name("MutableStateFlow")))
@protocol SharedMutableStateFlow <SharedStateFlow, SharedMutableSharedFlow>
@required
- (BOOL)compareAndSetExpect:(id _Nullable)expect update:(id _Nullable)update __attribute__((swift_name("compareAndSet(expect:update:)")));
- (void)setValue:(id _Nullable)value __attribute__((swift_name("setValue(_:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SharingCommand")))
@interface SharedSharingCommand : SharedKotlinEnum<SharedSharingCommand *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedSharingCommand *start __attribute__((swift_name("start")));
@property (class, readonly) SharedSharingCommand *stop __attribute__((swift_name("stop")));
@property (class, readonly) SharedSharingCommand *stopAndResetReplayCache __attribute__((swift_name("stopAndResetReplayCache")));
+ (SharedKotlinArray<SharedSharingCommand *> *)values __attribute__((swift_name("values()")));
@end;

__attribute__((swift_name("SharingStarted")))
@protocol SharedSharingStarted
@required
- (id<SharedFlow>)commandSubscriptionCount:(id<SharedStateFlow>)subscriptionCount __attribute__((swift_name("command(subscriptionCount:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SharingStartedCompanion")))
@interface SharedSharingStartedCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedSharingStartedCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedSharingStarted>)WhileSubscribedStopTimeoutMillis:(int64_t)stopTimeoutMillis replayExpirationMillis:(int64_t)replayExpirationMillis __attribute__((swift_name("WhileSubscribed(stopTimeoutMillis:replayExpirationMillis:)")));
@property (readonly) id<SharedSharingStarted> Eagerly __attribute__((swift_name("Eagerly")));
@property (readonly) id<SharedSharingStarted> Lazily __attribute__((swift_name("Lazily")));
@end;

__attribute__((swift_name("FusibleFlow")))
@protocol SharedFusibleFlow <SharedFlow>
@required
- (id<SharedFlow>)fuseContext:(id<SharedKotlinCoroutineContext>)context capacity:(int32_t)capacity onBufferOverflow:(SharedBufferOverflow *)onBufferOverflow __attribute__((swift_name("fuse(context:capacity:onBufferOverflow:)")));
@end;

__attribute__((swift_name("ChannelFlow")))
@interface SharedChannelFlow<T> : SharedBase <SharedFusibleFlow>
- (instancetype)initWithContext:(id<SharedKotlinCoroutineContext>)context capacity:(int32_t)capacity onBufferOverflow:(SharedBufferOverflow *)onBufferOverflow __attribute__((swift_name("init(context:capacity:onBufferOverflow:)"))) __attribute__((objc_designated_initializer));
- (NSString * _Nullable)additionalToStringProps __attribute__((swift_name("additionalToStringProps()")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)collectCollector:(id<SharedFlowCollector>)collector completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("collect(collector:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)collectToScope:(id<SharedProducerScope>)scope completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("collectTo(scope:completionHandler:)")));
- (SharedChannelFlow<T> *)createContext:(id<SharedKotlinCoroutineContext>)context capacity:(int32_t)capacity onBufferOverflow:(SharedBufferOverflow *)onBufferOverflow __attribute__((swift_name("create(context:capacity:onBufferOverflow:)")));
- (id<SharedFlow> _Nullable)dropChannelOperators __attribute__((swift_name("dropChannelOperators()")));
- (id<SharedFlow>)fuseContext:(id<SharedKotlinCoroutineContext>)context capacity:(int32_t)capacity onBufferOverflow:(SharedBufferOverflow *)onBufferOverflow __attribute__((swift_name("fuse(context:capacity:onBufferOverflow:)")));
- (id<SharedReceiveChannel>)produceImplScope:(id<SharedCoroutineScope>)scope __attribute__((swift_name("produceImpl(scope:)")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t capacity __attribute__((swift_name("capacity")));
@property (readonly) id<SharedKotlinCoroutineContext> context __attribute__((swift_name("context")));
@property (readonly) SharedBufferOverflow *onBufferOverflow __attribute__((swift_name("onBufferOverflow")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SendingCollector")))
@interface SharedSendingCollector<T> : SharedBase <SharedFlowCollector>
- (instancetype)initWithChannel:(id<SharedSendChannel>)channel __attribute__((swift_name("init(channel:)"))) __attribute__((objc_designated_initializer));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)emitValue:(T _Nullable)value completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("emit(value:completionHandler:)")));
@end;

__attribute__((swift_name("SelectBuilder")))
@protocol SharedSelectBuilder
@required
- (void)onTimeoutTimeMillis:(int64_t)timeMillis block:(id<SharedKotlinSuspendFunction0>)block __attribute__((swift_name("onTimeout(timeMillis:block:)")));
- (void)invoke:(id<SharedSelectClause0>)receiver block:(id<SharedKotlinSuspendFunction0>)block __attribute__((swift_name("invoke(_:block:)")));
- (void)invoke:(id<SharedSelectClause1>)receiver block_:(id<SharedKotlinSuspendFunction1>)block __attribute__((swift_name("invoke(_:block_:)")));
- (void)invoke:(id<SharedSelectClause2>)receiver param:(id _Nullable)param block:(id<SharedKotlinSuspendFunction1>)block __attribute__((swift_name("invoke(_:param:block:)")));
- (void)invoke:(id<SharedSelectClause2>)receiver block__:(id<SharedKotlinSuspendFunction1>)block __attribute__((swift_name("invoke(_:block__:)")));
@end;

__attribute__((swift_name("SelectClause1")))
@protocol SharedSelectClause1
@required
- (void)registerSelectClause1Select:(id<SharedSelectInstance>)select block:(id<SharedKotlinSuspendFunction1>)block __attribute__((swift_name("registerSelectClause1(select:block:)")));
@end;

__attribute__((swift_name("SelectClause2")))
@protocol SharedSelectClause2
@required
- (void)registerSelectClause2Select:(id<SharedSelectInstance>)select param:(id _Nullable)param block:(id<SharedKotlinSuspendFunction1>)block __attribute__((swift_name("registerSelectClause2(select:param:block:)")));
@end;

__attribute__((swift_name("SelectInstance")))
@protocol SharedSelectInstance
@required
- (void)disposeOnSelectHandle:(id<SharedDisposableHandle>)handle __attribute__((swift_name("disposeOnSelect(handle:)")));
- (id _Nullable)performAtomicTrySelectDesc:(SharedAtomicDesc *)desc __attribute__((swift_name("performAtomicTrySelect(desc:)")));
- (void)resumeSelectWithExceptionException:(SharedKotlinThrowable *)exception __attribute__((swift_name("resumeSelectWithException(exception:)")));
- (BOOL)trySelect __attribute__((swift_name("trySelect()")));
- (id _Nullable)trySelectOtherOtherOp:(SharedLockFreeLinkedListNodePrepareOp * _Nullable)otherOp __attribute__((swift_name("trySelectOther(otherOp:)")));
@property (readonly) id<SharedKotlinContinuation> completion __attribute__((swift_name("completion")));
@property (readonly) BOOL isSelected __attribute__((swift_name("isSelected")));
@end;

__attribute__((swift_name("AtomicDesc")))
@interface SharedAtomicDesc : SharedBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (void)completeOp:(SharedAtomicOp<id> *)op failure:(id _Nullable)failure __attribute__((swift_name("complete(op:failure:)")));
- (id _Nullable)prepareOp:(SharedAtomicOp<id> *)op __attribute__((swift_name("prepare(op:)")));
@property SharedAtomicOp<id> *atomicOp __attribute__((swift_name("atomicOp")));
@end;

__attribute__((swift_name("OpDescriptor")))
@interface SharedOpDescriptor : SharedBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (BOOL)isEarlierThanThat:(SharedOpDescriptor *)that __attribute__((swift_name("isEarlierThan(that:)")));
- (id _Nullable)performAffected:(id _Nullable)affected __attribute__((swift_name("perform(affected:)")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedAtomicOp<id> * _Nullable atomicOp __attribute__((swift_name("atomicOp")));
@end;

__attribute__((swift_name("AtomicOp")))
@interface SharedAtomicOp<__contravariant T> : SharedOpDescriptor
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (void)completeAffected:(T _Nullable)affected failure:(id _Nullable)failure __attribute__((swift_name("complete(affected:failure:)")));
- (id _Nullable)decideDecision:(id _Nullable)decision __attribute__((swift_name("decide(decision:)")));
- (id _Nullable)performAffected:(id _Nullable)affected __attribute__((swift_name("perform(affected:)")));
- (id _Nullable)prepareAffected:(T _Nullable)affected __attribute__((swift_name("prepare(affected:)")));
@property (readonly) SharedAtomicOp<id> *atomicOp __attribute__((swift_name("atomicOp")));
@property (readonly) id _Nullable consensus __attribute__((swift_name("consensus")));
@property (readonly) BOOL isDecided __attribute__((swift_name("isDecided")));
@property (readonly) int64_t opSequence __attribute__((swift_name("opSequence")));
@end;

__attribute__((swift_name("LockFreeLinkedListNode")))
@interface SharedLockFreeLinkedListNode : SharedBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (void)addLastNode:(SharedLockFreeLinkedListNode *)node __attribute__((swift_name("addLast(node:)")));
- (BOOL)addLastIfNode:(SharedLockFreeLinkedListNode *)node condition:(SharedBoolean *(^)(void))condition __attribute__((swift_name("addLastIf(node:condition:)")));
- (BOOL)addLastIfPrevNode:(SharedLockFreeLinkedListNode *)node predicate:(SharedBoolean *(^)(SharedLockFreeLinkedListNode *))predicate __attribute__((swift_name("addLastIfPrev(node:predicate:)")));
- (BOOL)addLastIfPrevAndIfNode:(SharedLockFreeLinkedListNode *)node predicate:(SharedBoolean *(^)(SharedLockFreeLinkedListNode *))predicate condition:(SharedBoolean *(^)(void))condition __attribute__((swift_name("addLastIfPrevAndIf(node:predicate:condition:)")));
- (BOOL)addOneIfEmptyNode:(SharedLockFreeLinkedListNode *)node __attribute__((swift_name("addOneIfEmpty(node:)")));
- (SharedLockFreeLinkedListNodeAddLastDesc<SharedLockFreeLinkedListNode *> *)describeAddLastNode:(SharedLockFreeLinkedListNode *)node __attribute__((swift_name("describeAddLast(node:)")));
- (SharedLockFreeLinkedListNodeRemoveFirstDesc<SharedLockFreeLinkedListNode *> *)describeRemoveFirst __attribute__((swift_name("describeRemoveFirst()")));
- (void)helpRemove __attribute__((swift_name("helpRemove()")));
- (SharedLockFreeLinkedListNode * _Nullable)nextIfRemoved __attribute__((swift_name("nextIfRemoved()")));
- (BOOL)remove __attribute__((swift_name("remove()")));
- (id _Nullable)removeFirstIfIsInstanceOfOrPeekIfPredicate:(SharedBoolean *(^)(id _Nullable))predicate __attribute__((swift_name("removeFirstIfIsInstanceOfOrPeekIf(predicate:)")));
- (SharedLockFreeLinkedListNode * _Nullable)removeFirstOrNull __attribute__((swift_name("removeFirstOrNull()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) BOOL isRemoved __attribute__((swift_name("isRemoved")));
@property (readonly) id _Nullable next __attribute__((swift_name("next")));
@property (readonly) SharedLockFreeLinkedListNode *nextNode __attribute__((swift_name("nextNode")));
@property (readonly) SharedLockFreeLinkedListNode *prevNode __attribute__((swift_name("prevNode")));
@end;

__attribute__((swift_name("LockFreeLinkedListHead")))
@interface SharedLockFreeLinkedListHead : SharedLockFreeLinkedListNode
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (void)forEachBlock:(void (^)(SharedLockFreeLinkedListNode *))block __attribute__((swift_name("forEach(block:)")));
- (SharedLockFreeLinkedListNode * _Nullable)nextIfRemoved __attribute__((swift_name("nextIfRemoved()")));
- (BOOL)remove __attribute__((swift_name("remove()")));
@property (readonly) BOOL isEmpty __attribute__((swift_name("isEmpty")));
@property (readonly) BOOL isRemoved __attribute__((swift_name("isRemoved")));
@end;

__attribute__((swift_name("LockFreeLinkedListNode.AbstractAtomicDesc")))
@interface SharedLockFreeLinkedListNodeAbstractAtomicDesc : SharedAtomicDesc
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (void)completeOp:(SharedAtomicOp<id> *)op failure:(id _Nullable)failure __attribute__((swift_name("complete(op:failure:)")));
- (id _Nullable)failureAffected:(SharedLockFreeLinkedListNode * _Nullable)affected __attribute__((swift_name("failure(affected:)")));
- (void)finishOnSuccessAffected:(SharedLockFreeLinkedListNode *)affected next:(SharedLockFreeLinkedListNode *)next __attribute__((swift_name("finishOnSuccess(affected:next:)")));
- (void)finishPreparePrepareOp:(SharedLockFreeLinkedListNodePrepareOp *)prepareOp __attribute__((swift_name("finishPrepare(prepareOp:)")));
- (id _Nullable)onPreparePrepareOp:(SharedLockFreeLinkedListNodePrepareOp *)prepareOp __attribute__((swift_name("onPrepare(prepareOp:)")));
- (void)onRemovedAffected:(SharedLockFreeLinkedListNode *)affected __attribute__((swift_name("onRemoved(affected:)")));
- (id _Nullable)prepareOp:(SharedAtomicOp<id> *)op __attribute__((swift_name("prepare(op:)")));
- (BOOL)retryAffected:(SharedLockFreeLinkedListNode *)affected next:(id)next __attribute__((swift_name("retry(affected:next:)")));
- (SharedLockFreeLinkedListNode * _Nullable)takeAffectedNodeOp:(SharedOpDescriptor *)op __attribute__((swift_name("takeAffectedNode(op:)")));
- (id)updatedNextAffected:(SharedLockFreeLinkedListNode *)affected next:(SharedLockFreeLinkedListNode *)next __attribute__((swift_name("updatedNext(affected:next:)")));
@property (readonly) SharedLockFreeLinkedListNode * _Nullable affectedNode __attribute__((swift_name("affectedNode")));
@property (readonly) SharedLockFreeLinkedListNode * _Nullable originalNext __attribute__((swift_name("originalNext")));
@end;

__attribute__((swift_name("LockFreeLinkedListNodeAddLastDesc")))
@interface SharedLockFreeLinkedListNodeAddLastDesc<T> : SharedLockFreeLinkedListNodeAbstractAtomicDesc
- (instancetype)initWithQueue:(SharedLockFreeLinkedListNode *)queue node:(T)node __attribute__((swift_name("init(queue:node:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (void)finishOnSuccessAffected:(SharedLockFreeLinkedListNode *)affected next:(SharedLockFreeLinkedListNode *)next __attribute__((swift_name("finishOnSuccess(affected:next:)")));
- (void)finishPreparePrepareOp:(SharedLockFreeLinkedListNodePrepareOp *)prepareOp __attribute__((swift_name("finishPrepare(prepareOp:)")));
- (BOOL)retryAffected:(SharedLockFreeLinkedListNode *)affected next:(id)next __attribute__((swift_name("retry(affected:next:)")));
- (SharedLockFreeLinkedListNode * _Nullable)takeAffectedNodeOp:(SharedOpDescriptor *)op __attribute__((swift_name("takeAffectedNode(op:)")));
- (id)updatedNextAffected:(SharedLockFreeLinkedListNode *)affected next:(SharedLockFreeLinkedListNode *)next __attribute__((swift_name("updatedNext(affected:next:)")));
@property (readonly) SharedLockFreeLinkedListNode * _Nullable affectedNode __attribute__((swift_name("affectedNode")));
@property (readonly) T node __attribute__((swift_name("node")));
@property (readonly) SharedLockFreeLinkedListNode *originalNext __attribute__((swift_name("originalNext")));
@property (readonly) SharedLockFreeLinkedListNode *queue __attribute__((swift_name("queue")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LockFreeLinkedListNode.PrepareOp")))
@interface SharedLockFreeLinkedListNodePrepareOp : SharedOpDescriptor
- (instancetype)initWithAffected:(SharedLockFreeLinkedListNode *)affected next:(SharedLockFreeLinkedListNode *)next desc:(SharedLockFreeLinkedListNodeAbstractAtomicDesc *)desc __attribute__((swift_name("init(affected:next:desc:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (void)finishPrepare __attribute__((swift_name("finishPrepare()")));
- (id _Nullable)performAffected:(id _Nullable)affected __attribute__((swift_name("perform(affected:)")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedLockFreeLinkedListNode *affected __attribute__((swift_name("affected")));
@property (readonly) SharedAtomicOp<id> *atomicOp __attribute__((swift_name("atomicOp")));
@property (readonly) SharedLockFreeLinkedListNodeAbstractAtomicDesc *desc __attribute__((swift_name("desc")));
@property (readonly) SharedLockFreeLinkedListNode *next __attribute__((swift_name("next")));
@end;

__attribute__((swift_name("LockFreeLinkedListNodeRemoveFirstDesc")))
@interface SharedLockFreeLinkedListNodeRemoveFirstDesc<T> : SharedLockFreeLinkedListNodeAbstractAtomicDesc
- (instancetype)initWithQueue:(SharedLockFreeLinkedListNode *)queue __attribute__((swift_name("init(queue:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (id _Nullable)failureAffected:(SharedLockFreeLinkedListNode * _Nullable)affected __attribute__((swift_name("failure(affected:)")));
- (void)finishOnSuccessAffected:(SharedLockFreeLinkedListNode *)affected next:(SharedLockFreeLinkedListNode *)next __attribute__((swift_name("finishOnSuccess(affected:next:)")));
- (void)finishPreparePrepareOp:(SharedLockFreeLinkedListNodePrepareOp *)prepareOp __attribute__((swift_name("finishPrepare(prepareOp:)")));
- (BOOL)retryAffected:(SharedLockFreeLinkedListNode *)affected next:(id)next __attribute__((swift_name("retry(affected:next:)")));
- (SharedLockFreeLinkedListNode * _Nullable)takeAffectedNodeOp:(SharedOpDescriptor *)op __attribute__((swift_name("takeAffectedNode(op:)")));
- (id)updatedNextAffected:(SharedLockFreeLinkedListNode *)affected next:(SharedLockFreeLinkedListNode *)next __attribute__((swift_name("updatedNext(affected:next:)")));
@property (readonly) SharedLockFreeLinkedListNode * _Nullable affectedNode __attribute__((swift_name("affectedNode")));
@property (readonly) SharedLockFreeLinkedListNode * _Nullable originalNext __attribute__((swift_name("originalNext")));
@property (readonly) SharedLockFreeLinkedListNode *queue __attribute__((swift_name("queue")));
@property (readonly) T _Nullable result __attribute__((swift_name("result")));
@end;

__attribute__((swift_name("MainDispatcherFactory")))
@protocol SharedMainDispatcherFactory
@required
- (SharedMainCoroutineDispatcher *)createDispatcherAllFactories:(NSArray<id<SharedMainDispatcherFactory>> *)allFactories __attribute__((swift_name("createDispatcher(allFactories:)")));
- (NSString * _Nullable)hintOnError __attribute__((swift_name("hintOnError()")));
@property (readonly) int32_t loadPriority __attribute__((swift_name("loadPriority")));
@end;

__attribute__((swift_name("SynchronizedObject")))
@interface SharedSynchronizedObject : SharedBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (void)lock __attribute__((swift_name("lock()")));
- (BOOL)tryLock __attribute__((swift_name("tryLock()")));
- (void)unlock __attribute__((swift_name("unlock()")));
@property (readonly, getter=lock_) SharedKotlinAtomicReference<SharedSynchronizedObjectLockState *> *lock __attribute__((swift_name("lock")));
@end;

__attribute__((swift_name("ThreadSafeHeap")))
@interface SharedThreadSafeHeap<T> : SharedSynchronizedObject
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (void)addLastNode:(T)node __attribute__((swift_name("addLast(node:)")));
- (BOOL)addLastIfNode:(T)node cond:(SharedBoolean *(^)(T _Nullable))cond __attribute__((swift_name("addLastIf(node:cond:)")));
- (void)clear __attribute__((swift_name("clear()")));
- (T _Nullable)peek __attribute__((swift_name("peek()")));
- (BOOL)removeNode:(T)node __attribute__((swift_name("remove(node:)")));
- (T _Nullable)removeFirstIfPredicate:(SharedBoolean *(^)(T))predicate __attribute__((swift_name("removeFirstIf(predicate:)")));
- (T _Nullable)removeFirstOrNull __attribute__((swift_name("removeFirstOrNull()")));
@property (readonly) BOOL isEmpty __attribute__((swift_name("isEmpty")));
@property (readonly) int32_t size __attribute__((swift_name("size")));
@end;

__attribute__((swift_name("ThreadSafeHeapNode")))
@protocol SharedThreadSafeHeapNode
@required
@property SharedThreadSafeHeap<id> * _Nullable heap __attribute__((swift_name("heap")));
@property int32_t index __attribute__((swift_name("index")));
@end;

__attribute__((swift_name("Mutex")))
@protocol SharedMutex
@required
- (BOOL)holdsLockOwner:(id)owner __attribute__((swift_name("holdsLock(owner:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)lockOwner:(id _Nullable)owner completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("lock(owner:completionHandler:)")));
- (BOOL)tryLockOwner:(id _Nullable)owner __attribute__((swift_name("tryLock(owner:)")));
- (void)unlockOwner:(id _Nullable)owner __attribute__((swift_name("unlock(owner:)")));
@property (readonly) BOOL isLocked __attribute__((swift_name("isLocked")));
@property (readonly) id<SharedSelectClause2> onLock __attribute__((swift_name("onLock"))) __attribute__((deprecated("Mutex.onLock deprecated without replacement. For additional details please refer to #2794")));
@end;

__attribute__((swift_name("Semaphore")))
@protocol SharedSemaphore
@required

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)acquireWithCompletionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("acquire(completionHandler:)")));
- (void)release_ __attribute__((swift_name("release()")));
- (BOOL)tryAcquire __attribute__((swift_name("tryAcquire()")));
@property (readonly) int32_t availablePermits __attribute__((swift_name("availablePermits")));
@end;

__attribute__((swift_name("ColumnAdapter")))
@protocol SharedColumnAdapter
@required
- (id)decodeDatabaseValue:(id _Nullable)databaseValue __attribute__((swift_name("decode(databaseValue:)")));
- (id _Nullable)encodeValue:(id)value __attribute__((swift_name("encode(value:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("EnumColumnAdapter")))
@interface SharedEnumColumnAdapter<T> : SharedBase <SharedColumnAdapter>
- (T)decodeDatabaseValue:(NSString *)databaseValue __attribute__((swift_name("decode(databaseValue:)")));
- (NSString *)encodeValue:(T)value __attribute__((swift_name("encode(value:)")));
@end;

__attribute__((swift_name("Query")))
@interface SharedQuery<__covariant RowType> : SharedBase
- (instancetype)initWithQueries:(NSMutableArray<SharedQuery<id> *> *)queries mapper:(RowType (^)(id<SharedSqlCursor>))mapper __attribute__((swift_name("init(queries:mapper:)"))) __attribute__((objc_designated_initializer));
- (void)addListenerListener:(id<SharedQueryListener>)listener __attribute__((swift_name("addListener(listener:)")));
- (id<SharedSqlCursor>)execute __attribute__((swift_name("execute()")));
- (NSArray<RowType> *)executeAsList __attribute__((swift_name("executeAsList()")));
- (RowType)executeAsOne __attribute__((swift_name("executeAsOne()")));
- (RowType _Nullable)executeAsOneOrNull __attribute__((swift_name("executeAsOneOrNull()")));
- (void)notifyDataChanged __attribute__((swift_name("notifyDataChanged()")));
- (void)removeListenerListener:(id<SharedQueryListener>)listener __attribute__((swift_name("removeListener(listener:)")));
@property (readonly) RowType (^mapper)(id<SharedSqlCursor>) __attribute__((swift_name("mapper")));
@end;

__attribute__((swift_name("QueryListener")))
@protocol SharedQueryListener
@required
- (void)queryResultsChanged __attribute__((swift_name("queryResultsChanged()")));
@end;

__attribute__((swift_name("TransactionCallbacks")))
@protocol SharedTransactionCallbacks
@required
- (void)afterCommitFunction:(void (^)(void))function __attribute__((swift_name("afterCommit(function:)")));
- (void)afterRollbackFunction:(void (^)(void))function __attribute__((swift_name("afterRollback(function:)")));
@end;

__attribute__((swift_name("TransacterTransaction")))
@interface SharedTransacterTransaction : SharedBase <SharedTransactionCallbacks>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (void)afterCommitFunction:(void (^)(void))function __attribute__((swift_name("afterCommit(function:)")));
- (void)afterRollbackFunction:(void (^)(void))function __attribute__((swift_name("afterRollback(function:)")));
- (void)endTransactionSuccessful:(BOOL)successful __attribute__((swift_name("endTransaction(successful:)")));
@property (readonly) SharedTransacterTransaction * _Nullable enclosingTransaction __attribute__((swift_name("enclosingTransaction")));
@end;

__attribute__((swift_name("TransacterImpl")))
@interface SharedTransacterImpl : SharedBase <SharedTransacter>
- (instancetype)initWithDriver:(id<SharedSqlDriver>)driver __attribute__((swift_name("init(driver:)"))) __attribute__((objc_designated_initializer));
- (NSString *)createArgumentsCount:(int32_t)count __attribute__((swift_name("createArguments(count:)")));
- (void)notifyQueriesIdentifier:(int32_t)identifier queryList:(NSArray<SharedQuery<id> *> *(^)(void))queryList __attribute__((swift_name("notifyQueries(identifier:queryList:)")));
- (void)transactionNoEnclosing:(BOOL)noEnclosing body:(void (^)(id<SharedTransactionWithoutReturn>))body __attribute__((swift_name("transaction(noEnclosing:body:)")));
- (id _Nullable)transactionWithResultNoEnclosing:(BOOL)noEnclosing bodyWithReturn:(id _Nullable (^)(id<SharedTransactionWithReturn>))bodyWithReturn __attribute__((swift_name("transactionWithResult(noEnclosing:bodyWithReturn:)")));
@end;

__attribute__((swift_name("TransactionWithReturn")))
@protocol SharedTransactionWithReturn <SharedTransactionCallbacks>
@required
- (void)rollbackReturnValue:(id _Nullable)returnValue __attribute__((swift_name("rollback(returnValue:)")));
- (id _Nullable)transactionBody:(id _Nullable (^)(id<SharedTransactionWithReturn>))body __attribute__((swift_name("transaction(body:)")));
@end;

__attribute__((swift_name("TransactionWithoutReturn")))
@protocol SharedTransactionWithoutReturn <SharedTransactionCallbacks>
@required
- (void)rollback __attribute__((swift_name("rollback()")));
- (void)transactionBody_:(void (^)(id<SharedTransactionWithoutReturn>))body __attribute__((swift_name("transaction(body_:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AfterVersion")))
@interface SharedAfterVersion : SharedBase
- (instancetype)initWithAfterVersion:(int32_t)afterVersion block:(void (^)(void))block __attribute__((swift_name("init(afterVersion:block:)"))) __attribute__((objc_designated_initializer));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AfterVersionWithDriver")))
@interface SharedAfterVersionWithDriver : SharedBase
- (instancetype)initWithAfterVersion:(int32_t)afterVersion block:(void (^)(id<SharedSqlDriver>))block __attribute__((swift_name("init(afterVersion:block:)"))) __attribute__((objc_designated_initializer));
@end;

__attribute__((swift_name("SqlCursor")))
@protocol SharedSqlCursor <SharedCloseable__>
@required
- (SharedKotlinByteArray * _Nullable)getBytesIndex:(int32_t)index __attribute__((swift_name("getBytes(index:)")));
- (SharedDouble * _Nullable)getDoubleIndex:(int32_t)index __attribute__((swift_name("getDouble(index:)")));
- (SharedLong * _Nullable)getLongIndex:(int32_t)index __attribute__((swift_name("getLong(index:)")));
- (NSString * _Nullable)getStringIndex:(int32_t)index __attribute__((swift_name("getString(index:)")));
- (BOOL)next__ __attribute__((swift_name("next_()")));
@end;

__attribute__((swift_name("SqlDriverSchema")))
@protocol SharedSqlDriverSchema
@required
- (void)createDriver:(id<SharedSqlDriver>)driver __attribute__((swift_name("create(driver:)")));
- (void)migrateDriver:(id<SharedSqlDriver>)driver oldVersion:(int32_t)oldVersion newVersion:(int32_t)newVersion __attribute__((swift_name("migrate(driver:oldVersion:newVersion:)")));
@property (readonly) int32_t version_ __attribute__((swift_name("version_")));
@end;

__attribute__((swift_name("SqlPreparedStatement")))
@protocol SharedSqlPreparedStatement
@required
- (void)bindBytesIndex:(int32_t)index bytes:(SharedKotlinByteArray * _Nullable)bytes __attribute__((swift_name("bindBytes(index:bytes:)")));
- (void)bindDoubleIndex:(int32_t)index double:(SharedDouble * _Nullable)double_ __attribute__((swift_name("bindDouble(index:double:)")));
- (void)bindLongIndex:(int32_t)index long:(SharedLong * _Nullable)long_ __attribute__((swift_name("bindLong(index:long:)")));
- (void)bindStringIndex:(int32_t)index string:(NSString * _Nullable)string __attribute__((swift_name("bindString(index:string:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Atomic")))
@interface SharedAtomic<V> : SharedBase
- (instancetype)initWithValue:(V _Nullable)value __attribute__((swift_name("init(value:)"))) __attribute__((objc_designated_initializer));
- (V _Nullable)get __attribute__((swift_name("get()")));
- (void)setValue:(V _Nullable)value __attribute__((swift_name("set(value:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AtomicBoolean")))
@interface SharedAtomicBoolean : SharedBase
- (instancetype)initWithValue:(BOOL)value __attribute__((swift_name("init(value:)"))) __attribute__((objc_designated_initializer));
- (BOOL)get __attribute__((swift_name("get()")));
- (void)setValue:(BOOL)value __attribute__((swift_name("set(value:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LogSqliteDriver")))
@interface SharedLogSqliteDriver : SharedBase <SharedSqlDriver>
- (instancetype)initWithSqlDriver:(id<SharedSqlDriver>)sqlDriver logger:(void (^)(NSString *))logger __attribute__((swift_name("init(sqlDriver:logger:)"))) __attribute__((objc_designated_initializer));
- (void)close __attribute__((swift_name("close()")));
- (SharedTransacterTransaction * _Nullable)currentTransaction __attribute__((swift_name("currentTransaction()")));
- (void)executeIdentifier:(SharedInt * _Nullable)identifier sql:(NSString *)sql parameters:(int32_t)parameters binders:(void (^ _Nullable)(id<SharedSqlPreparedStatement>))binders __attribute__((swift_name("execute(identifier:sql:parameters:binders:)")));
- (id<SharedSqlCursor>)executeQueryIdentifier:(SharedInt * _Nullable)identifier sql:(NSString *)sql parameters:(int32_t)parameters binders:(void (^ _Nullable)(id<SharedSqlPreparedStatement>))binders __attribute__((swift_name("executeQuery(identifier:sql:parameters:binders:)")));
- (SharedTransacterTransaction *)doNewTransaction __attribute__((swift_name("doNewTransaction()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StatementParameterInterceptor")))
@interface SharedStatementParameterInterceptor : SharedBase <SharedSqlPreparedStatement>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (void)bindBytesIndex:(int32_t)index bytes:(SharedKotlinByteArray * _Nullable)bytes __attribute__((swift_name("bindBytes(index:bytes:)")));
- (void)bindDoubleIndex:(int32_t)index double:(SharedDouble * _Nullable)double_ __attribute__((swift_name("bindDouble(index:double:)")));
- (void)bindLongIndex:(int32_t)index long:(SharedLong * _Nullable)long_ __attribute__((swift_name("bindLong(index:long:)")));
- (void)bindStringIndex:(int32_t)index string:(NSString * _Nullable)string __attribute__((swift_name("bindString(index:string:)")));
- (NSArray<id> *)getAndClearParameters __attribute__((swift_name("getAndClearParameters()")));
@end;

__attribute__((unavailable("can't be imported")))
__attribute__((swift_name("AbstractSharedLinkedList")))
@interface SharedAbstractSharedLinkedList : NSObject
@end;

__attribute__((unavailable("can't be imported")))
__attribute__((swift_name("CopyOnIterateLinkedList")))
@interface SharedCopyOnIterateLinkedList : NSObject
@end;

__attribute__((unavailable("can't be imported")))
__attribute__((swift_name("CopyOnWriteList")))
@interface SharedCopyOnWriteList : NSObject
@end;

__attribute__((swift_name("LruCache")))
@protocol SharedLruCache
@required
- (BOOL)existsKey:(id _Nullable)key __attribute__((swift_name("exists(key:)")));
- (id _Nullable)getKey__:(id _Nullable)key __attribute__((swift_name("get(key__:)")));
- (id _Nullable)putKey:(id _Nullable)key value_:(id _Nullable)value __attribute__((swift_name("put(key:value_:)")));
- (id _Nullable)removeKey:(id _Nullable)key skipCallback:(BOOL)skipCallback __attribute__((swift_name("remove(key:skipCallback:)")));
- (void)removeAllSkipCallback:(BOOL)skipCallback __attribute__((swift_name("removeAll(skipCallback:)")));
@property (readonly, getter=entries_) SharedMutableSet<id<SharedKotlinMutableMapMutableEntry>> *entries __attribute__((swift_name("entries")));
@property (readonly) int32_t size __attribute__((swift_name("size")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ObjectPool_")))
@interface SharedObjectPool<T> : SharedBase
- (instancetype)initWithMaxSize:(int32_t)maxSize createBlock:(T _Nullable (^)(void))createBlock cleanupBlock:(void (^ _Nullable)(T _Nullable))cleanupBlock __attribute__((swift_name("init(maxSize:createBlock:cleanupBlock:)"))) __attribute__((objc_designated_initializer));
- (void)clear __attribute__((swift_name("clear()")));
- (T _Nullable)pop __attribute__((swift_name("pop()")));
- (BOOL)pushT:(T _Nullable)t __attribute__((swift_name("push(t:)")));
@end;

__attribute__((unavailable("can't be imported")))
__attribute__((swift_name("SharedHashMap")))
@interface SharedSharedHashMap : NSObject
@end;

__attribute__((unavailable("can't be imported")))
__attribute__((swift_name("SharedLinkedList")))
@interface SharedSharedLinkedList : NSObject
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SharedLruCache")))
@interface SharedSharedLruCache<K, V> : SharedBase <SharedLruCache>
- (instancetype)initWithMaxCacheSize:(int32_t)maxCacheSize onRemove:(void (^)(id<SharedKotlinMutableMapMutableEntry>))onRemove __attribute__((swift_name("init(maxCacheSize:onRemove:)"))) __attribute__((objc_designated_initializer));
- (BOOL)existsKey:(K _Nullable)key __attribute__((swift_name("exists(key:)")));
- (V _Nullable)getKey__:(K _Nullable)key __attribute__((swift_name("get(key__:)")));
- (V _Nullable)putKey:(K _Nullable)key value_:(V _Nullable)value __attribute__((swift_name("put(key:value_:)")));
- (V _Nullable)removeKey:(K _Nullable)key skipCallback:(BOOL)skipCallback __attribute__((swift_name("remove(key:skipCallback:)")));
- (void)removeAllSkipCallback:(BOOL)skipCallback __attribute__((swift_name("removeAll(skipCallback:)")));
@property (readonly, getter=entries_) SharedMutableSet<id<SharedKotlinMutableMapMutableEntry>> *entries __attribute__((swift_name("entries")));
@property (readonly) int32_t size __attribute__((swift_name("size")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SharedLruCacheCacheEntry")))
@interface SharedSharedLruCacheCacheEntry<K, V> : SharedBase
- (instancetype)initWithV:(V _Nullable)v node:(SharedAbstractSharedLinkedListNode<K> *)node __attribute__((swift_name("init(v:node:)"))) __attribute__((objc_designated_initializer));
- (V _Nullable)component1 __attribute__((swift_name("component1()")));
- (SharedAbstractSharedLinkedListNode<K> *)component2 __attribute__((swift_name("component2()")));
- (SharedSharedLruCacheCacheEntry<K, V> *)doCopyV:(V _Nullable)v node:(SharedAbstractSharedLinkedListNode<K> *)node __attribute__((swift_name("doCopy(v:node:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedAbstractSharedLinkedListNode<K> *node __attribute__((swift_name("node")));
@property (readonly) V _Nullable v __attribute__((swift_name("v")));
@end;

__attribute__((swift_name("KotlinMapEntry")))
@protocol SharedKotlinMapEntry
@required
@property (readonly) id _Nullable key __attribute__((swift_name("key")));
@property (readonly, getter=value_) id _Nullable value __attribute__((swift_name("value")));
@end;

__attribute__((swift_name("KotlinMutableDictionaryMutableEntry")))
@protocol SharedKotlinMutableMapMutableEntry <SharedKotlinMapEntry>
@required
- (id _Nullable)setValueNewValue:(id _Nullable)newValue __attribute__((swift_name("setValue(newValue:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SharedLruCacheLruEntry")))
@interface SharedSharedLruCacheLruEntry<K, V> : SharedBase <SharedKotlinMutableMapMutableEntry>
- (instancetype)initWithKey:(K _Nullable)key value:(V _Nullable)value __attribute__((swift_name("init(key:value:)"))) __attribute__((objc_designated_initializer));
- (V _Nullable)setValueNewValue:(V _Nullable)newValue __attribute__((swift_name("setValue(newValue:)")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) K _Nullable key __attribute__((swift_name("key")));
@property (readonly, getter=value_) V _Nullable value __attribute__((swift_name("value")));
@end;

__attribute__((unavailable("can't be imported")))
__attribute__((swift_name("SharedSet")))
@interface SharedSharedSet : NSObject
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AtomicBoolean_")))
@interface SharedAtomicBoolean_ : SharedBase
- (instancetype)initWithValue_:(BOOL)value_ __attribute__((swift_name("init(value_:)"))) __attribute__((objc_designated_initializer));
- (BOOL)compareAndSetExpected:(BOOL)expected new:(BOOL)new_ __attribute__((swift_name("compareAndSet(expected:new:)")));
@property BOOL value __attribute__((swift_name("value")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AtomicInt")))
@interface SharedAtomicInt : SharedBase
- (instancetype)initWithInitialValue:(int32_t)initialValue __attribute__((swift_name("init(initialValue:)"))) __attribute__((objc_designated_initializer));
- (int32_t)addAndGetDelta:(int32_t)delta __attribute__((swift_name("addAndGet(delta:)")));
- (BOOL)compareAndSetExpected:(int32_t)expected new:(int32_t)new_ __attribute__((swift_name("compareAndSet(expected:new:)")));
- (int32_t)decrementAndGet __attribute__((swift_name("decrementAndGet()")));
- (int32_t)get __attribute__((swift_name("get()")));
- (int32_t)incrementAndGet __attribute__((swift_name("incrementAndGet()")));
- (void)setNewValue:(int32_t)newValue __attribute__((swift_name("set(newValue:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AtomicLong")))
@interface SharedAtomicLong : SharedBase
- (instancetype)initWithInitialValue:(int64_t)initialValue __attribute__((swift_name("init(initialValue:)"))) __attribute__((objc_designated_initializer));
- (int64_t)addAndGetDelta:(int64_t)delta __attribute__((swift_name("addAndGet(delta:)")));
- (BOOL)compareAndSetExpected:(int64_t)expected new:(int64_t)new_ __attribute__((swift_name("compareAndSet(expected:new:)")));
- (int64_t)decrementAndGet __attribute__((swift_name("decrementAndGet()")));
- (int64_t)get __attribute__((swift_name("get()")));
- (int64_t)incrementAndGet __attribute__((swift_name("incrementAndGet()")));
- (void)setNewValue:(int64_t)newValue __attribute__((swift_name("set(newValue:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AtomicReference_")))
@interface SharedAtomicReference_<V> : SharedBase
- (instancetype)initWithInitialValue:(V _Nullable)initialValue __attribute__((swift_name("init(initialValue:)"))) __attribute__((objc_designated_initializer));
- (BOOL)compareAndSetExpected:(V _Nullable)expected new:(V _Nullable)new_ __attribute__((swift_name("compareAndSet(expected:new:)")));
- (V _Nullable)get __attribute__((swift_name("get()")));
- (void)setValue_:(V _Nullable)value_ __attribute__((swift_name("set(value_:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GuardedStableRef")))
@interface SharedGuardedStableRef<T> : SharedBase
- (instancetype)initWithT:(T)t __attribute__((swift_name("init(t:)"))) __attribute__((objc_designated_initializer));
- (void)dispose __attribute__((swift_name("dispose()")));
@property (readonly) BOOL isDisposed __attribute__((swift_name("isDisposed")));
@property (readonly) T state __attribute__((swift_name("state")));
@end;

__attribute__((swift_name("ThreadLocalRef")))
@interface SharedThreadLocalRef<T> : SharedBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (T _Nullable)get_ __attribute__((swift_name("get_()")));
- (void)remove __attribute__((swift_name("remove()")));
- (void)setValue_:(T _Nullable)value __attribute__((swift_name("set(value:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ThreadRef")))
@interface SharedThreadRef : SharedBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (BOOL)same __attribute__((swift_name("same()")));
@end;

__attribute__((swift_name("MatcherResult")))
@protocol SharedMatcherResult
@required
- (NSString *)failureMessage __attribute__((swift_name("failureMessage()")));
- (NSString *)negatedFailureMessage __attribute__((swift_name("negatedFailureMessage()")));
- (BOOL)passed __attribute__((swift_name("passed()")));
@end;

__attribute__((swift_name("ComparableMatcherResult")))
@protocol SharedComparableMatcherResult <SharedMatcherResult>
@required
- (NSString *)actual __attribute__((swift_name("actual()")));
- (NSString *)expected __attribute__((swift_name("expected()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ComparableMatcherResultCompanion")))
@interface SharedComparableMatcherResultCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedComparableMatcherResultCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedComparableMatcherResult>)invokePassed:(BOOL)passed failureMessageFn:(NSString *(^)(void))failureMessageFn negatedFailureMessageFn:(NSString *(^)(void))negatedFailureMessageFn actual:(NSString *)actual expected:(NSString *)expected __attribute__((swift_name("invoke(passed:failureMessageFn:negatedFailureMessageFn:actual:expected:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MatcherCompanion")))
@interface SharedMatcherCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedMatcherCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedMatcher>)failureError:(NSString *)error __attribute__((swift_name("failure(error:)")));
- (id<SharedMatcher>)invokeTester:(id<SharedMatcherResult> (^)(id _Nullable))tester __attribute__((swift_name("invoke(tester:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MatcherResultCompanion")))
@interface SharedMatcherResultCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedMatcherResultCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedMatcherResult>)invokePassed:(BOOL)passed failureMessageFn:(NSString *(^)(void))failureMessageFn negatedFailureMessageFn:(NSString *(^)(void))negatedFailureMessageFn __attribute__((swift_name("invoke(passed:failureMessageFn:negatedFailureMessageFn:)")));
- (id<SharedMatcherResult>)invokePassed:(BOOL)passed failureMessage:(NSString *)failureMessage negatedFailureMessage:(NSString *)negatedFailureMessage __attribute__((swift_name("invoke(passed:failureMessage:negatedFailureMessage:)"))) __attribute__((deprecated("Prefer the version that accepts functions - this avoids eager creation of messages. This was deprecated in 5.0.")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AtomicArray")))
@interface SharedAtomicArray<T> : SharedBase
- (id)getIndex:(int32_t)index __attribute__((swift_name("get(index:)")));
@property (readonly) int32_t size __attribute__((swift_name("size")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AtomicBooleanArray")))
@interface SharedAtomicBooleanArray : SharedBase
- (instancetype)initWithSize:(int32_t)size __attribute__((swift_name("init(size:)"))) __attribute__((objc_designated_initializer));
- (id)getIndex:(int32_t)index __attribute__((swift_name("get(index:)")));
@property (readonly) int32_t size __attribute__((swift_name("size")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AtomicIntArray")))
@interface SharedAtomicIntArray : SharedBase
- (instancetype)initWithSize:(int32_t)size __attribute__((swift_name("init(size:)"))) __attribute__((objc_designated_initializer));
- (id)getIndex:(int32_t)index __attribute__((swift_name("get(index:)")));
@property (readonly) int32_t size __attribute__((swift_name("size")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AtomicLongArray")))
@interface SharedAtomicLongArray : SharedBase
- (instancetype)initWithSize:(int32_t)size __attribute__((swift_name("init(size:)"))) __attribute__((objc_designated_initializer));
- (id)getIndex:(int32_t)index __attribute__((swift_name("get(index:)")));
@property (readonly) int32_t size __attribute__((swift_name("size")));
@end;

__attribute__((swift_name("TraceBase")))
@interface SharedTraceBase : SharedBase
- (void)appendEvent:(id)event __attribute__((swift_name("append(event:)")));
- (void)appendEvent1:(id)event1 event2:(id)event2 __attribute__((swift_name("append(event1:event2:)")));
- (void)appendEvent1:(id)event1 event2:(id)event2 event3:(id)event3 __attribute__((swift_name("append(event1:event2:event3:)")));
- (void)appendEvent1:(id)event1 event2:(id)event2 event3:(id)event3 event4:(id)event4 __attribute__((swift_name("append(event1:event2:event3:event4:)")));
- (void)invokeEvent:(id (^)(void))event __attribute__((swift_name("invoke(event:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TraceBase.None")))
@interface SharedTraceBaseNone : SharedTraceBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)none __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedTraceBaseNone *shared __attribute__((swift_name("shared")));
@end;

__attribute__((swift_name("TraceFormat")))
@interface SharedTraceFormat : SharedBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (NSString *)formatIndex:(int32_t)index event:(id)event __attribute__((swift_name("format(index:event:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MutexPool")))
@interface SharedMutexPool : SharedBase
- (instancetype)initWithCapacity:(int32_t)capacity __attribute__((swift_name("init(capacity:)"))) __attribute__((objc_designated_initializer));
- (void *)allocate __attribute__((swift_name("allocate()")));
- (void)releaseMutexNode:(void *)mutexNode __attribute__((swift_name("release(mutexNode:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SynchronizedObject.LockState")))
@interface SharedSynchronizedObjectLockState : SharedBase
- (instancetype)initWithStatus:(SharedSynchronizedObjectStatus *)status nestedLocks:(int32_t)nestedLocks waiters:(int32_t)waiters ownerThreadId:(void * _Nullable)ownerThreadId mutex:(void * _Nullable)mutex __attribute__((swift_name("init(status:nestedLocks:waiters:ownerThreadId:mutex:)"))) __attribute__((objc_designated_initializer));
@property (readonly) void * _Nullable mutex __attribute__((swift_name("mutex")));
@property (readonly) int32_t nestedLocks __attribute__((swift_name("nestedLocks")));
@property (readonly) void * _Nullable ownerThreadId __attribute__((swift_name("ownerThreadId")));
@property (readonly) SharedSynchronizedObjectStatus *status __attribute__((swift_name("status")));
@property (readonly) int32_t waiters __attribute__((swift_name("waiters")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SynchronizedObject.Status")))
@interface SharedSynchronizedObjectStatus : SharedKotlinEnum<SharedSynchronizedObjectStatus *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedSynchronizedObjectStatus *unlocked __attribute__((swift_name("unlocked")));
@property (class, readonly) SharedSynchronizedObjectStatus *thin __attribute__((swift_name("thin")));
@property (class, readonly) SharedSynchronizedObjectStatus *fat __attribute__((swift_name("fat")));
+ (SharedKotlinArray<SharedSynchronizedObjectStatus *> *)values __attribute__((swift_name("values()")));
@end;

__attribute__((swift_name("SerialFormat")))
@protocol SharedSerialFormat
@required
@property (readonly) SharedSerializersModule *serializersModule __attribute__((swift_name("serializersModule")));
@end;

__attribute__((swift_name("StringFormat")))
@protocol SharedStringFormat <SharedSerialFormat>
@required
- (id _Nullable)decodeFromStringDeserializer:(id<SharedDeserializationStrategy>)deserializer string:(NSString *)string __attribute__((swift_name("decodeFromString(deserializer:string:)")));
- (NSString *)encodeToStringSerializer:(id<SharedSerializationStrategy>)serializer value:(id _Nullable)value __attribute__((swift_name("encodeToString(serializer:value:)")));
@end;

__attribute__((swift_name("Json")))
@interface SharedJson : SharedBase <SharedStringFormat>
- (instancetype)initWithConfiguration:(SharedJsonConfiguration *)configuration serializersModule:(SharedSerializersModule *)serializersModule __attribute__((swift_name("init(configuration:serializersModule:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedJsonDefault *companion __attribute__((swift_name("companion")));
- (id _Nullable)decodeFromJsonElementDeserializer:(id<SharedDeserializationStrategy>)deserializer element:(SharedJsonElement *)element __attribute__((swift_name("decodeFromJsonElement(deserializer:element:)")));
- (id _Nullable)decodeFromStringDeserializer:(id<SharedDeserializationStrategy>)deserializer string:(NSString *)string __attribute__((swift_name("decodeFromString(deserializer:string:)")));
- (SharedJsonElement *)encodeToJsonElementSerializer:(id<SharedSerializationStrategy>)serializer value:(id _Nullable)value __attribute__((swift_name("encodeToJsonElement(serializer:value:)")));
- (NSString *)encodeToStringSerializer:(id<SharedSerializationStrategy>)serializer value:(id _Nullable)value __attribute__((swift_name("encodeToString(serializer:value:)")));
- (SharedJsonElement *)parseToJsonElementString:(NSString *)string __attribute__((swift_name("parseToJsonElement(string:)")));
@property (readonly) SharedJsonConfiguration *configuration __attribute__((swift_name("configuration")));
@property (readonly) SharedSerializersModule *serializersModule __attribute__((swift_name("serializersModule")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Json.Default")))
@interface SharedJsonDefault : SharedJson
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithConfiguration:(SharedJsonConfiguration *)configuration serializersModule:(SharedSerializersModule *)serializersModule __attribute__((swift_name("init(configuration:serializersModule:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)default_ __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedJsonDefault *shared __attribute__((swift_name("shared")));
@end;

__attribute__((unavailable("can't be imported")))
__attribute__((swift_name("JsonArray")))
@interface SharedJsonArray : NSObject
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("JsonArrayBuilder")))
@interface SharedJsonArrayBuilder : SharedBase
- (BOOL)addElement:(SharedJsonElement *)element __attribute__((swift_name("add(element:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("JsonBuilder")))
@interface SharedJsonBuilder : SharedBase
@property BOOL allowSpecialFloatingPointValues __attribute__((swift_name("allowSpecialFloatingPointValues")));
@property BOOL allowStructuredMapKeys __attribute__((swift_name("allowStructuredMapKeys")));
@property NSString *classDiscriminator __attribute__((swift_name("classDiscriminator")));
@property BOOL coerceInputValues __attribute__((swift_name("coerceInputValues")));
@property BOOL encodeDefaults __attribute__((swift_name("encodeDefaults")));
@property BOOL explicitNulls __attribute__((swift_name("explicitNulls")));
@property BOOL ignoreUnknownKeys __attribute__((swift_name("ignoreUnknownKeys")));
@property BOOL isLenient __attribute__((swift_name("isLenient")));
@property BOOL prettyPrint __attribute__((swift_name("prettyPrint")));
@property NSString *prettyPrintIndent __attribute__((swift_name("prettyPrintIndent")));
@property SharedSerializersModule *serializersModule __attribute__((swift_name("serializersModule")));
@property BOOL useAlternativeNames __attribute__((swift_name("useAlternativeNames")));
@property BOOL useArrayPolymorphism __attribute__((swift_name("useArrayPolymorphism")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("JsonConfiguration")))
@interface SharedJsonConfiguration : SharedBase
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) BOOL allowSpecialFloatingPointValues __attribute__((swift_name("allowSpecialFloatingPointValues")));
@property (readonly) BOOL allowStructuredMapKeys __attribute__((swift_name("allowStructuredMapKeys")));
@property (readonly) NSString *classDiscriminator __attribute__((swift_name("classDiscriminator")));
@property (readonly) BOOL coerceInputValues __attribute__((swift_name("coerceInputValues")));
@property (readonly) BOOL encodeDefaults __attribute__((swift_name("encodeDefaults")));
@property (readonly) BOOL explicitNulls __attribute__((swift_name("explicitNulls")));
@property (readonly) BOOL ignoreUnknownKeys __attribute__((swift_name("ignoreUnknownKeys")));
@property (readonly) BOOL isLenient __attribute__((swift_name("isLenient")));
@property (readonly) BOOL prettyPrint __attribute__((swift_name("prettyPrint")));
@property (readonly) NSString *prettyPrintIndent __attribute__((swift_name("prettyPrintIndent")));
@property (readonly) BOOL useAlternativeNames __attribute__((swift_name("useAlternativeNames")));
@property (readonly) BOOL useArrayPolymorphism __attribute__((swift_name("useArrayPolymorphism")));
@end;

__attribute__((swift_name("SerializationStrategy")))
@protocol SharedSerializationStrategy
@required
- (void)serializeEncoder:(id<SharedEncoder_>)encoder value:(id _Nullable)value __attribute__((swift_name("serialize(encoder:value:)")));
@property (readonly) id<SharedSerialDescriptor> descriptor __attribute__((swift_name("descriptor")));
@end;

__attribute__((swift_name("DeserializationStrategy")))
@protocol SharedDeserializationStrategy
@required
- (id _Nullable)deserializeDecoder:(id<SharedDecoder>)decoder __attribute__((swift_name("deserialize(decoder:)")));
@property (readonly) id<SharedSerialDescriptor> descriptor __attribute__((swift_name("descriptor")));
@end;

__attribute__((swift_name("KSerializer")))
@protocol SharedKSerializer <SharedSerializationStrategy, SharedDeserializationStrategy>
@required
@end;

__attribute__((swift_name("JsonContentPolymorphicSerializer")))
@interface SharedJsonContentPolymorphicSerializer<T> : SharedBase <SharedKSerializer>
- (instancetype)initWithBaseClass:(id<SharedKotlinKClass>)baseClass __attribute__((swift_name("init(baseClass:)"))) __attribute__((objc_designated_initializer));
- (T)deserializeDecoder:(id<SharedDecoder>)decoder __attribute__((swift_name("deserialize(decoder:)")));
- (id<SharedDeserializationStrategy>)selectDeserializerElement:(SharedJsonElement *)element __attribute__((swift_name("selectDeserializer(element:)")));
- (void)serializeEncoder:(id<SharedEncoder_>)encoder value:(T)value __attribute__((swift_name("serialize(encoder:value:)")));
@property (readonly) id<SharedSerialDescriptor> descriptor __attribute__((swift_name("descriptor")));
@end;

__attribute__((swift_name("Decoder")))
@protocol SharedDecoder
@required
- (id<SharedCompositeDecoder>)beginStructureDescriptor:(id<SharedSerialDescriptor>)descriptor __attribute__((swift_name("beginStructure(descriptor:)")));
- (BOOL)decodeBoolean __attribute__((swift_name("decodeBoolean()")));
- (int8_t)decodeByte __attribute__((swift_name("decodeByte()")));
- (unichar)decodeChar __attribute__((swift_name("decodeChar()")));
- (double)decodeDouble __attribute__((swift_name("decodeDouble()")));
- (int32_t)decodeEnumEnumDescriptor:(id<SharedSerialDescriptor>)enumDescriptor __attribute__((swift_name("decodeEnum(enumDescriptor:)")));
- (float)decodeFloat __attribute__((swift_name("decodeFloat()")));
- (id<SharedDecoder>)decodeInlineInlineDescriptor:(id<SharedSerialDescriptor>)inlineDescriptor __attribute__((swift_name("decodeInline(inlineDescriptor:)")));
- (int32_t)decodeInt __attribute__((swift_name("decodeInt()")));
- (int64_t)decodeLong __attribute__((swift_name("decodeLong()")));
- (BOOL)decodeNotNullMark __attribute__((swift_name("decodeNotNullMark()")));
- (SharedKotlinNothing * _Nullable)decodeNull __attribute__((swift_name("decodeNull()")));
- (id _Nullable)decodeNullableSerializableValueDeserializer:(id<SharedDeserializationStrategy>)deserializer __attribute__((swift_name("decodeNullableSerializableValue(deserializer:)")));
- (id _Nullable)decodeSerializableValueDeserializer:(id<SharedDeserializationStrategy>)deserializer __attribute__((swift_name("decodeSerializableValue(deserializer:)")));
- (int16_t)decodeShort __attribute__((swift_name("decodeShort()")));
- (NSString *)decodeString __attribute__((swift_name("decodeString()")));
@property (readonly) SharedSerializersModule *serializersModule __attribute__((swift_name("serializersModule")));
@end;

__attribute__((swift_name("CompositeDecoder")))
@protocol SharedCompositeDecoder
@required
- (BOOL)decodeBooleanElementDescriptor:(id<SharedSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeBooleanElement(descriptor:index:)")));
- (int8_t)decodeByteElementDescriptor:(id<SharedSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeByteElement(descriptor:index:)")));
- (unichar)decodeCharElementDescriptor:(id<SharedSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeCharElement(descriptor:index:)")));
- (int32_t)decodeCollectionSizeDescriptor:(id<SharedSerialDescriptor>)descriptor __attribute__((swift_name("decodeCollectionSize(descriptor:)")));
- (double)decodeDoubleElementDescriptor:(id<SharedSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeDoubleElement(descriptor:index:)")));
- (int32_t)decodeElementIndexDescriptor:(id<SharedSerialDescriptor>)descriptor __attribute__((swift_name("decodeElementIndex(descriptor:)")));
- (float)decodeFloatElementDescriptor:(id<SharedSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeFloatElement(descriptor:index:)")));
- (id<SharedDecoder>)decodeInlineElementDescriptor:(id<SharedSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeInlineElement(descriptor:index:)")));
- (int32_t)decodeIntElementDescriptor:(id<SharedSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeIntElement(descriptor:index:)")));
- (int64_t)decodeLongElementDescriptor:(id<SharedSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeLongElement(descriptor:index:)")));
- (id _Nullable)decodeNullableSerializableElementDescriptor:(id<SharedSerialDescriptor>)descriptor index:(int32_t)index deserializer:(id<SharedDeserializationStrategy>)deserializer previousValue:(id _Nullable)previousValue __attribute__((swift_name("decodeNullableSerializableElement(descriptor:index:deserializer:previousValue:)")));
- (BOOL)decodeSequentially __attribute__((swift_name("decodeSequentially()")));
- (id _Nullable)decodeSerializableElementDescriptor:(id<SharedSerialDescriptor>)descriptor index:(int32_t)index deserializer:(id<SharedDeserializationStrategy>)deserializer previousValue:(id _Nullable)previousValue __attribute__((swift_name("decodeSerializableElement(descriptor:index:deserializer:previousValue:)")));
- (int16_t)decodeShortElementDescriptor:(id<SharedSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeShortElement(descriptor:index:)")));
- (NSString *)decodeStringElementDescriptor:(id<SharedSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeStringElement(descriptor:index:)")));
- (void)endStructureDescriptor:(id<SharedSerialDescriptor>)descriptor __attribute__((swift_name("endStructure(descriptor:)")));
@property (readonly) SharedSerializersModule *serializersModule __attribute__((swift_name("serializersModule")));
@end;

__attribute__((swift_name("JsonDecoder")))
@protocol SharedJsonDecoder <SharedDecoder, SharedCompositeDecoder>
@required
- (SharedJsonElement *)decodeJsonElement __attribute__((swift_name("decodeJsonElement()")));
@property (readonly) SharedJson *json __attribute__((swift_name("json")));
@end;

__attribute__((swift_name("JsonElement")))
@interface SharedJsonElement : SharedBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
@property (class, readonly, getter=companion) SharedJsonElementCompanion *companion __attribute__((swift_name("companion")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("JsonElement.Companion")))
@interface SharedJsonElementCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedJsonElementCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end;

__attribute__((swift_name("Encoder_")))
@protocol SharedEncoder_
@required
- (id<SharedCompositeEncoder>)beginCollectionDescriptor:(id<SharedSerialDescriptor>)descriptor collectionSize:(int32_t)collectionSize __attribute__((swift_name("beginCollection(descriptor:collectionSize:)")));
- (id<SharedCompositeEncoder>)beginStructureDescriptor:(id<SharedSerialDescriptor>)descriptor __attribute__((swift_name("beginStructure(descriptor:)")));
- (void)encodeBooleanValue:(BOOL)value __attribute__((swift_name("encodeBoolean(value:)")));
- (void)encodeByteValue:(int8_t)value __attribute__((swift_name("encodeByte(value:)")));
- (void)encodeCharValue:(unichar)value __attribute__((swift_name("encodeChar(value:)")));
- (void)encodeDoubleValue:(double)value __attribute__((swift_name("encodeDouble(value:)")));
- (void)encodeEnumEnumDescriptor:(id<SharedSerialDescriptor>)enumDescriptor index:(int32_t)index __attribute__((swift_name("encodeEnum(enumDescriptor:index:)")));
- (void)encodeFloatValue:(float)value __attribute__((swift_name("encodeFloat(value:)")));
- (id<SharedEncoder_>)encodeInlineInlineDescriptor:(id<SharedSerialDescriptor>)inlineDescriptor __attribute__((swift_name("encodeInline(inlineDescriptor:)")));
- (void)encodeIntValue:(int32_t)value __attribute__((swift_name("encodeInt(value:)")));
- (void)encodeLongValue:(int64_t)value __attribute__((swift_name("encodeLong(value:)")));
- (void)encodeNotNullMark __attribute__((swift_name("encodeNotNullMark()")));
- (void)encodeNull __attribute__((swift_name("encodeNull()")));
- (void)encodeNullableSerializableValueSerializer:(id<SharedSerializationStrategy>)serializer value:(id _Nullable)value __attribute__((swift_name("encodeNullableSerializableValue(serializer:value:)")));
- (void)encodeSerializableValueSerializer:(id<SharedSerializationStrategy>)serializer value:(id _Nullable)value __attribute__((swift_name("encodeSerializableValue(serializer:value:)")));
- (void)encodeShortValue:(int16_t)value __attribute__((swift_name("encodeShort(value:)")));
- (void)encodeStringValue:(NSString *)value __attribute__((swift_name("encodeString(value:)")));
@property (readonly) SharedSerializersModule *serializersModule __attribute__((swift_name("serializersModule")));
@end;

__attribute__((swift_name("CompositeEncoder")))
@protocol SharedCompositeEncoder
@required
- (void)encodeBooleanElementDescriptor:(id<SharedSerialDescriptor>)descriptor index:(int32_t)index value:(BOOL)value __attribute__((swift_name("encodeBooleanElement(descriptor:index:value:)")));
- (void)encodeByteElementDescriptor:(id<SharedSerialDescriptor>)descriptor index:(int32_t)index value:(int8_t)value __attribute__((swift_name("encodeByteElement(descriptor:index:value:)")));
- (void)encodeCharElementDescriptor:(id<SharedSerialDescriptor>)descriptor index:(int32_t)index value:(unichar)value __attribute__((swift_name("encodeCharElement(descriptor:index:value:)")));
- (void)encodeDoubleElementDescriptor:(id<SharedSerialDescriptor>)descriptor index:(int32_t)index value:(double)value __attribute__((swift_name("encodeDoubleElement(descriptor:index:value:)")));
- (void)encodeFloatElementDescriptor:(id<SharedSerialDescriptor>)descriptor index:(int32_t)index value:(float)value __attribute__((swift_name("encodeFloatElement(descriptor:index:value:)")));
- (id<SharedEncoder_>)encodeInlineElementDescriptor:(id<SharedSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("encodeInlineElement(descriptor:index:)")));
- (void)encodeIntElementDescriptor:(id<SharedSerialDescriptor>)descriptor index:(int32_t)index value:(int32_t)value __attribute__((swift_name("encodeIntElement(descriptor:index:value:)")));
- (void)encodeLongElementDescriptor:(id<SharedSerialDescriptor>)descriptor index:(int32_t)index value:(int64_t)value __attribute__((swift_name("encodeLongElement(descriptor:index:value:)")));
- (void)encodeNullableSerializableElementDescriptor:(id<SharedSerialDescriptor>)descriptor index:(int32_t)index serializer:(id<SharedSerializationStrategy>)serializer value:(id _Nullable)value __attribute__((swift_name("encodeNullableSerializableElement(descriptor:index:serializer:value:)")));
- (void)encodeSerializableElementDescriptor:(id<SharedSerialDescriptor>)descriptor index:(int32_t)index serializer:(id<SharedSerializationStrategy>)serializer value:(id _Nullable)value __attribute__((swift_name("encodeSerializableElement(descriptor:index:serializer:value:)")));
- (void)encodeShortElementDescriptor:(id<SharedSerialDescriptor>)descriptor index:(int32_t)index value:(int16_t)value __attribute__((swift_name("encodeShortElement(descriptor:index:value:)")));
- (void)encodeStringElementDescriptor:(id<SharedSerialDescriptor>)descriptor index:(int32_t)index value:(NSString *)value __attribute__((swift_name("encodeStringElement(descriptor:index:value:)")));
- (void)endStructureDescriptor:(id<SharedSerialDescriptor>)descriptor __attribute__((swift_name("endStructure(descriptor:)")));
- (BOOL)shouldEncodeElementDefaultDescriptor:(id<SharedSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("shouldEncodeElementDefault(descriptor:index:)")));
@property (readonly) SharedSerializersModule *serializersModule __attribute__((swift_name("serializersModule")));
@end;

__attribute__((swift_name("JsonEncoder")))
@protocol SharedJsonEncoder <SharedEncoder_, SharedCompositeEncoder>
@required
- (void)encodeJsonElementElement:(SharedJsonElement *)element __attribute__((swift_name("encodeJsonElement(element:)")));
@property (readonly) SharedJson *json __attribute__((swift_name("json")));
@end;

__attribute__((swift_name("JsonPrimitive")))
@interface SharedJsonPrimitive : SharedJsonElement
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
@property (class, readonly, getter=companion) SharedJsonPrimitiveCompanion *companion __attribute__((swift_name("companion")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *content __attribute__((swift_name("content")));
@property (readonly) BOOL isString __attribute__((swift_name("isString")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("JsonNull")))
@interface SharedJsonNull : SharedJsonPrimitive
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
+ (instancetype)jsonNull __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedJsonNull *shared __attribute__((swift_name("shared")));
- (id<SharedKSerializer>)serializer __attribute__((swift_name("serializer()")));
- (id<SharedKSerializer>)serializerTypeParamsSerializers:(SharedKotlinArray<id<SharedKSerializer>> *)typeParamsSerializers __attribute__((swift_name("serializer(typeParamsSerializers:)")));
@property (readonly) NSString *content __attribute__((swift_name("content")));
@property (readonly) BOOL isString __attribute__((swift_name("isString")));
@end;

__attribute__((unavailable("can't be imported")))
__attribute__((swift_name("JsonObject")))
@interface SharedJsonObject : NSObject
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("JsonObjectBuilder")))
@interface SharedJsonObjectBuilder : SharedBase
- (SharedJsonElement * _Nullable)putKey:(NSString *)key element:(SharedJsonElement *)element __attribute__((swift_name("put(key:element:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("JsonPrimitive.Companion")))
@interface SharedJsonPrimitiveCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedJsonPrimitiveCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end;

__attribute__((swift_name("JsonTransformingSerializer")))
@interface SharedJsonTransformingSerializer<T> : SharedBase <SharedKSerializer>
- (instancetype)initWithTSerializer:(id<SharedKSerializer>)tSerializer __attribute__((swift_name("init(tSerializer:)"))) __attribute__((objc_designated_initializer));
- (T)deserializeDecoder:(id<SharedDecoder>)decoder __attribute__((swift_name("deserialize(decoder:)")));
- (void)serializeEncoder:(id<SharedEncoder_>)encoder value:(T)value __attribute__((swift_name("serialize(encoder:value:)")));
- (SharedJsonElement *)transformDeserializeElement:(SharedJsonElement *)element __attribute__((swift_name("transformDeserialize(element:)")));
- (SharedJsonElement *)transformSerializeElement:(SharedJsonElement *)element __attribute__((swift_name("transformSerialize(element:)")));
@property (readonly) id<SharedSerialDescriptor> descriptor __attribute__((swift_name("descriptor")));
@end;

__attribute__((swift_name("Cursor")))
@protocol SharedCursor
@required
- (NSString *)columnNameIndex:(int32_t)index __attribute__((swift_name("columnName(index:)")));
- (SharedKotlinByteArray *)getBytesIndex:(int32_t)index __attribute__((swift_name("getBytes(index:)")));
- (double)getDoubleIndex_:(int32_t)index __attribute__((swift_name("getDouble(index_:)")));
- (int64_t)getLongIndex_:(int32_t)index __attribute__((swift_name("getLong(index_:)")));
- (NSString *)getStringIndex:(int32_t)index __attribute__((swift_name("getString(index:)")));
- (SharedFieldType *)getTypeIndex:(int32_t)index __attribute__((swift_name("getType(index:)")));
- (BOOL)isNullIndex:(int32_t)index __attribute__((swift_name("isNull(index:)")));
- (BOOL)next__ __attribute__((swift_name("next_()")));
@property (readonly) int32_t columnCount __attribute__((swift_name("columnCount")));
@property (readonly) NSDictionary<NSString *, SharedInt *> *columnNames __attribute__((swift_name("columnNames")));
@property (readonly) id<SharedStatement> statement __attribute__((swift_name("statement")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DatabaseConfiguration")))
@interface SharedDatabaseConfiguration : SharedBase
- (instancetype)initWithName:(NSString * _Nullable)name version:(int32_t)version create:(void (^)(id<SharedDatabaseConnection>))create upgrade:(void (^)(id<SharedDatabaseConnection>, SharedInt *, SharedInt *))upgrade inMemory:(BOOL)inMemory journalMode:(SharedJournalMode *)journalMode extendedConfig:(SharedDatabaseConfigurationExtended *)extendedConfig loggingConfig:(SharedDatabaseConfigurationLogging *)loggingConfig lifecycleConfig:(SharedDatabaseConfigurationLifecycle *)lifecycleConfig encryptionConfig:(SharedDatabaseConfigurationEncryption *)encryptionConfig __attribute__((swift_name("init(name:version:create:upgrade:inMemory:journalMode:extendedConfig:loggingConfig:lifecycleConfig:encryptionConfig:)"))) __attribute__((objc_designated_initializer));
- (NSString * _Nullable)component1 __attribute__((swift_name("component1()")));
- (SharedDatabaseConfigurationEncryption *)component10 __attribute__((swift_name("component10()")));
- (int32_t)component2 __attribute__((swift_name("component2()")));
- (void (^)(id<SharedDatabaseConnection>))component3 __attribute__((swift_name("component3()")));
- (void (^)(id<SharedDatabaseConnection>, SharedInt *, SharedInt *))component4 __attribute__((swift_name("component4()")));
- (BOOL)component5 __attribute__((swift_name("component5()")));
- (SharedJournalMode *)component6 __attribute__((swift_name("component6()")));
- (SharedDatabaseConfigurationExtended *)component7 __attribute__((swift_name("component7()")));
- (SharedDatabaseConfigurationLogging *)component8 __attribute__((swift_name("component8()")));
- (SharedDatabaseConfigurationLifecycle *)component9 __attribute__((swift_name("component9()")));
- (SharedDatabaseConfiguration *)doCopyName:(NSString * _Nullable)name version:(int32_t)version create:(void (^)(id<SharedDatabaseConnection>))create upgrade:(void (^)(id<SharedDatabaseConnection>, SharedInt *, SharedInt *))upgrade inMemory:(BOOL)inMemory journalMode:(SharedJournalMode *)journalMode extendedConfig:(SharedDatabaseConfigurationExtended *)extendedConfig loggingConfig:(SharedDatabaseConfigurationLogging *)loggingConfig lifecycleConfig:(SharedDatabaseConfigurationLifecycle *)lifecycleConfig encryptionConfig:(SharedDatabaseConfigurationEncryption *)encryptionConfig __attribute__((swift_name("doCopy(name:version:create:upgrade:inMemory:journalMode:extendedConfig:loggingConfig:lifecycleConfig:encryptionConfig:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) void (^create)(id<SharedDatabaseConnection>) __attribute__((swift_name("create")));
@property (readonly) SharedDatabaseConfigurationEncryption *encryptionConfig __attribute__((swift_name("encryptionConfig")));
@property (readonly) SharedDatabaseConfigurationExtended *extendedConfig __attribute__((swift_name("extendedConfig")));
@property (readonly) BOOL inMemory __attribute__((swift_name("inMemory")));
@property (readonly) SharedJournalMode *journalMode __attribute__((swift_name("journalMode")));
@property (readonly) SharedDatabaseConfigurationLifecycle *lifecycleConfig __attribute__((swift_name("lifecycleConfig")));
@property (readonly) SharedDatabaseConfigurationLogging *loggingConfig __attribute__((swift_name("loggingConfig")));
@property (readonly) NSString * _Nullable name __attribute__((swift_name("name")));
@property (readonly) void (^upgrade)(id<SharedDatabaseConnection>, SharedInt *, SharedInt *) __attribute__((swift_name("upgrade")));
@property (readonly) int32_t version __attribute__((swift_name("version")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DatabaseConfiguration.Encryption")))
@interface SharedDatabaseConfigurationEncryption : SharedBase
- (instancetype)initWithKey:(NSString * _Nullable)key rekey:(NSString * _Nullable)rekey __attribute__((swift_name("init(key:rekey:)"))) __attribute__((objc_designated_initializer));
- (NSString * _Nullable)component1 __attribute__((swift_name("component1()")));
- (NSString * _Nullable)component2 __attribute__((swift_name("component2()")));
- (SharedDatabaseConfigurationEncryption *)doCopyKey:(NSString * _Nullable)key rekey:(NSString * _Nullable)rekey __attribute__((swift_name("doCopy(key:rekey:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable key __attribute__((swift_name("key")));
@property (readonly) NSString * _Nullable rekey __attribute__((swift_name("rekey")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DatabaseConfiguration.Extended")))
@interface SharedDatabaseConfigurationExtended : SharedBase
- (instancetype)initWithForeignKeyConstraints:(BOOL)foreignKeyConstraints busyTimeout:(int32_t)busyTimeout pageSize:(SharedInt * _Nullable)pageSize basePath:(NSString * _Nullable)basePath synchronousFlag:(SharedSynchronousFlag * _Nullable)synchronousFlag recursiveTriggers:(BOOL)recursiveTriggers __attribute__((swift_name("init(foreignKeyConstraints:busyTimeout:pageSize:basePath:synchronousFlag:recursiveTriggers:)"))) __attribute__((objc_designated_initializer));
- (BOOL)component1 __attribute__((swift_name("component1()")));
- (int32_t)component2 __attribute__((swift_name("component2()")));
- (SharedInt * _Nullable)component3 __attribute__((swift_name("component3()")));
- (NSString * _Nullable)component4 __attribute__((swift_name("component4()")));
- (SharedSynchronousFlag * _Nullable)component5 __attribute__((swift_name("component5()")));
- (BOOL)component6 __attribute__((swift_name("component6()")));
- (SharedDatabaseConfigurationExtended *)doCopyForeignKeyConstraints:(BOOL)foreignKeyConstraints busyTimeout:(int32_t)busyTimeout pageSize:(SharedInt * _Nullable)pageSize basePath:(NSString * _Nullable)basePath synchronousFlag:(SharedSynchronousFlag * _Nullable)synchronousFlag recursiveTriggers:(BOOL)recursiveTriggers __attribute__((swift_name("doCopy(foreignKeyConstraints:busyTimeout:pageSize:basePath:synchronousFlag:recursiveTriggers:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable basePath __attribute__((swift_name("basePath")));
@property (readonly) int32_t busyTimeout __attribute__((swift_name("busyTimeout")));
@property (readonly) BOOL foreignKeyConstraints __attribute__((swift_name("foreignKeyConstraints")));
@property (readonly) SharedInt * _Nullable pageSize __attribute__((swift_name("pageSize")));
@property (readonly) BOOL recursiveTriggers __attribute__((swift_name("recursiveTriggers")));
@property (readonly) SharedSynchronousFlag * _Nullable synchronousFlag __attribute__((swift_name("synchronousFlag")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DatabaseConfiguration.Lifecycle")))
@interface SharedDatabaseConfigurationLifecycle : SharedBase
- (instancetype)initWithOnCreateConnection:(void (^)(id<SharedDatabaseConnection>))onCreateConnection onCloseConnection:(void (^)(id<SharedDatabaseConnection>))onCloseConnection __attribute__((swift_name("init(onCreateConnection:onCloseConnection:)"))) __attribute__((objc_designated_initializer));
- (void (^)(id<SharedDatabaseConnection>))component1 __attribute__((swift_name("component1()")));
- (void (^)(id<SharedDatabaseConnection>))component2 __attribute__((swift_name("component2()")));
- (SharedDatabaseConfigurationLifecycle *)doCopyOnCreateConnection:(void (^)(id<SharedDatabaseConnection>))onCreateConnection onCloseConnection:(void (^)(id<SharedDatabaseConnection>))onCloseConnection __attribute__((swift_name("doCopy(onCreateConnection:onCloseConnection:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) void (^onCloseConnection)(id<SharedDatabaseConnection>) __attribute__((swift_name("onCloseConnection")));
@property (readonly) void (^onCreateConnection)(id<SharedDatabaseConnection>) __attribute__((swift_name("onCreateConnection")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DatabaseConfiguration.Logging")))
@interface SharedDatabaseConfigurationLogging : SharedBase
- (instancetype)initWithLogger:(id<SharedLogger_>)logger verboseDataCalls:(BOOL)verboseDataCalls __attribute__((swift_name("init(logger:verboseDataCalls:)"))) __attribute__((objc_designated_initializer));
- (id<SharedLogger_>)component1 __attribute__((swift_name("component1()")));
- (BOOL)component2 __attribute__((swift_name("component2()")));
- (SharedDatabaseConfigurationLogging *)doCopyLogger:(id<SharedLogger_>)logger verboseDataCalls:(BOOL)verboseDataCalls __attribute__((swift_name("doCopy(logger:verboseDataCalls:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) id<SharedLogger_> logger __attribute__((swift_name("logger")));
@property (readonly) BOOL verboseDataCalls __attribute__((swift_name("verboseDataCalls")));
@end;

__attribute__((swift_name("DatabaseConnection")))
@protocol SharedDatabaseConnection
@required
- (void)beginTransaction __attribute__((swift_name("beginTransaction()")));
- (void)close __attribute__((swift_name("close()")));
- (id<SharedStatement>)createStatementSql:(NSString *)sql __attribute__((swift_name("createStatement(sql:)")));
- (void)endTransaction __attribute__((swift_name("endTransaction()")));
- (void)setTransactionSuccessful __attribute__((swift_name("setTransactionSuccessful()")));
@property (readonly) BOOL closed __attribute__((swift_name("closed")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DatabaseFileContext")))
@interface SharedDatabaseFileContext : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)databaseFileContext __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedDatabaseFileContext *shared __attribute__((swift_name("shared")));
- (NSString *)databasePathDatabaseName:(NSString *)databaseName datapathPath:(NSString * _Nullable)datapathPath __attribute__((swift_name("databasePath(databaseName:datapathPath:)")));
- (void)deleteDatabaseName:(NSString *)name basePath:(NSString * _Nullable)basePath __attribute__((swift_name("deleteDatabase(name:basePath:)")));
@end;

__attribute__((swift_name("DatabaseManager")))
@protocol SharedDatabaseManager
@required
- (id<SharedDatabaseConnection>)createMultiThreadedConnection __attribute__((swift_name("createMultiThreadedConnection()")));
- (id<SharedDatabaseConnection>)createSingleThreadedConnection __attribute__((swift_name("createSingleThreadedConnection()")));
@property (readonly) SharedDatabaseConfiguration *configuration __attribute__((swift_name("configuration")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FieldType")))
@interface SharedFieldType : SharedKotlinEnum<SharedFieldType *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedFieldTypeCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) SharedFieldType *typeInteger __attribute__((swift_name("typeInteger")));
@property (class, readonly) SharedFieldType *typeFloat __attribute__((swift_name("typeFloat")));
@property (class, readonly) SharedFieldType *typeBlob __attribute__((swift_name("typeBlob")));
@property (class, readonly) SharedFieldType *typeNull __attribute__((swift_name("typeNull")));
@property (class, readonly) SharedFieldType *typeText __attribute__((swift_name("typeText")));
+ (SharedKotlinArray<SharedFieldType *> *)values __attribute__((swift_name("values()")));
@property (readonly) int32_t nativeCode __attribute__((swift_name("nativeCode")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FieldType.Companion")))
@interface SharedFieldTypeCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedFieldTypeCompanion *shared __attribute__((swift_name("shared")));
- (SharedFieldType *)forCodeNativeCode:(int32_t)nativeCode __attribute__((swift_name("forCode(nativeCode:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("JournalMode")))
@interface SharedJournalMode : SharedKotlinEnum<SharedJournalMode *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedJournalModeCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) SharedJournalMode *delete_ __attribute__((swift_name("delete_")));
@property (class, readonly) SharedJournalMode *wal __attribute__((swift_name("wal")));
+ (SharedKotlinArray<SharedJournalMode *> *)values __attribute__((swift_name("values()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("JournalMode.Companion")))
@interface SharedJournalModeCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedJournalModeCompanion *shared __attribute__((swift_name("shared")));
- (SharedJournalMode *)forStringS:(NSString *)s __attribute__((swift_name("forString(s:)")));
@end;

__attribute__((swift_name("Statement")))
@protocol SharedStatement
@required
- (void)bindBlobIndex:(int32_t)index value:(SharedKotlinByteArray *)value __attribute__((swift_name("bindBlob(index:value:)")));
- (void)bindDoubleIndex:(int32_t)index value:(double)value __attribute__((swift_name("bindDouble(index:value:)")));
- (void)bindLongIndex:(int32_t)index value:(int64_t)value __attribute__((swift_name("bindLong(index:value:)")));
- (void)bindNullIndex:(int32_t)index __attribute__((swift_name("bindNull(index:)")));
- (int32_t)bindParameterIndexParamName:(NSString *)paramName __attribute__((swift_name("bindParameterIndex(paramName:)")));
- (void)bindStringIndex:(int32_t)index value:(NSString *)value __attribute__((swift_name("bindString(index:value:)")));
- (void)clearBindings __attribute__((swift_name("clearBindings()")));
- (void)execute_ __attribute__((swift_name("execute_()")));
- (int64_t)executeInsert __attribute__((swift_name("executeInsert()")));
- (int32_t)executeUpdateDelete __attribute__((swift_name("executeUpdateDelete()")));
- (void)finalizeStatement __attribute__((swift_name("finalizeStatement()")));
- (id<SharedCursor>)query __attribute__((swift_name("query()")));
- (void)resetStatement __attribute__((swift_name("resetStatement()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SynchronousFlag")))
@interface SharedSynchronousFlag : SharedKotlinEnum<SharedSynchronousFlag *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedSynchronousFlag *off __attribute__((swift_name("off")));
@property (class, readonly) SharedSynchronousFlag *normal __attribute__((swift_name("normal")));
@property (class, readonly) SharedSynchronousFlag *full __attribute__((swift_name("full")));
@property (class, readonly) SharedSynchronousFlag *extra __attribute__((swift_name("extra")));
+ (SharedKotlinArray<SharedSynchronousFlag *> *)values __attribute__((swift_name("values()")));
@property (readonly, getter=value) int32_t value_ __attribute__((swift_name("value_")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ConcurrentDatabaseConnection")))
@interface SharedConcurrentDatabaseConnection : SharedBase <SharedDatabaseConnection>
- (instancetype)initWithDelegateConnection:(id<SharedDatabaseConnection>)delegateConnection __attribute__((swift_name("init(delegateConnection:)"))) __attribute__((objc_designated_initializer));
- (void)beginTransaction __attribute__((swift_name("beginTransaction()")));
- (void)close __attribute__((swift_name("close()")));
- (id<SharedStatement>)createStatementSql:(NSString *)sql __attribute__((swift_name("createStatement(sql:)")));
- (void)endTransaction __attribute__((swift_name("endTransaction()")));
- (void)setTransactionSuccessful __attribute__((swift_name("setTransactionSuccessful()")));
@property (readonly) BOOL closed __attribute__((swift_name("closed")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ConcurrentDatabaseConnection.ConcurrentCursor")))
@interface SharedConcurrentDatabaseConnectionConcurrentCursor : SharedBase <SharedCursor>
- (instancetype)initWith:(SharedConcurrentDatabaseConnection *)receiver delegateCursor:(id<SharedCursor>)delegateCursor __attribute__((swift_name("init(_:delegateCursor:)"))) __attribute__((objc_designated_initializer));
- (NSString *)columnNameIndex:(int32_t)index __attribute__((swift_name("columnName(index:)")));
- (SharedKotlinByteArray *)getBytesIndex:(int32_t)index __attribute__((swift_name("getBytes(index:)")));
- (double)getDoubleIndex_:(int32_t)index __attribute__((swift_name("getDouble(index_:)")));
- (int64_t)getLongIndex_:(int32_t)index __attribute__((swift_name("getLong(index_:)")));
- (NSString *)getStringIndex:(int32_t)index __attribute__((swift_name("getString(index:)")));
- (SharedFieldType *)getTypeIndex:(int32_t)index __attribute__((swift_name("getType(index:)")));
- (BOOL)isNullIndex:(int32_t)index __attribute__((swift_name("isNull(index:)")));
- (BOOL)next__ __attribute__((swift_name("next_()")));
@property (readonly) int32_t columnCount __attribute__((swift_name("columnCount")));
@property (readonly) NSDictionary<NSString *, SharedInt *> *columnNames __attribute__((swift_name("columnNames")));
@property (readonly) id<SharedStatement> statement __attribute__((swift_name("statement")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ConcurrentDatabaseConnection.ConcurrentStatement")))
@interface SharedConcurrentDatabaseConnectionConcurrentStatement : SharedBase <SharedStatement>
- (instancetype)initWith:(SharedConcurrentDatabaseConnection *)receiver delegateStatement:(id<SharedStatement>)delegateStatement __attribute__((swift_name("init(_:delegateStatement:)"))) __attribute__((objc_designated_initializer));
- (void)bindBlobIndex:(int32_t)index value:(SharedKotlinByteArray *)value __attribute__((swift_name("bindBlob(index:value:)")));
- (void)bindDoubleIndex:(int32_t)index value:(double)value __attribute__((swift_name("bindDouble(index:value:)")));
- (void)bindLongIndex:(int32_t)index value:(int64_t)value __attribute__((swift_name("bindLong(index:value:)")));
- (void)bindNullIndex:(int32_t)index __attribute__((swift_name("bindNull(index:)")));
- (int32_t)bindParameterIndexParamName:(NSString *)paramName __attribute__((swift_name("bindParameterIndex(paramName:)")));
- (void)bindStringIndex:(int32_t)index value:(NSString *)value __attribute__((swift_name("bindString(index:value:)")));
- (void)clearBindings __attribute__((swift_name("clearBindings()")));
- (void)execute_ __attribute__((swift_name("execute_()")));
- (int64_t)executeInsert __attribute__((swift_name("executeInsert()")));
- (int32_t)executeUpdateDelete __attribute__((swift_name("executeUpdateDelete()")));
- (void)finalizeStatement __attribute__((swift_name("finalizeStatement()")));
- (id<SharedCursor>)query __attribute__((swift_name("query()")));
- (void)resetStatement __attribute__((swift_name("resetStatement()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SingleThreadDatabaseConnection")))
@interface SharedSingleThreadDatabaseConnection : SharedBase <SharedDatabaseConnection>
- (instancetype)initWithDelegateConnection:(id<SharedDatabaseConnection>)delegateConnection __attribute__((swift_name("init(delegateConnection:)"))) __attribute__((objc_designated_initializer));
- (void)beginTransaction __attribute__((swift_name("beginTransaction()")));
- (void)close __attribute__((swift_name("close()")));
- (id<SharedStatement>)createStatementSql:(NSString *)sql __attribute__((swift_name("createStatement(sql:)")));
- (void)endTransaction __attribute__((swift_name("endTransaction()")));
- (void)setTransactionSuccessful __attribute__((swift_name("setTransactionSuccessful()")));
@property (readonly) BOOL closed __attribute__((swift_name("closed")));
@end;

__attribute__((swift_name("SqliteStatement")))
@protocol SharedSqliteStatement
@required
- (void)bindBlobIndex:(int32_t)index value:(SharedKotlinByteArray *)value __attribute__((swift_name("bindBlob(index:value:)")));
- (void)bindDoubleIndex:(int32_t)index value:(double)value __attribute__((swift_name("bindDouble(index:value:)")));
- (void)bindLongIndex:(int32_t)index value:(int64_t)value __attribute__((swift_name("bindLong(index:value:)")));
- (void)bindNullIndex:(int32_t)index __attribute__((swift_name("bindNull(index:)")));
- (int32_t)bindParameterIndexParamName:(NSString *)paramName __attribute__((swift_name("bindParameterIndex(paramName:)")));
- (void)bindStringIndex:(int32_t)index value:(NSString *)value __attribute__((swift_name("bindString(index:value:)")));
- (void)clearBindings __attribute__((swift_name("clearBindings()")));
- (int32_t)columnCount_ __attribute__((swift_name("columnCount()")));
- (SharedKotlinByteArray *)columnGetBlobColumnIndex:(int32_t)columnIndex __attribute__((swift_name("columnGetBlob(columnIndex:)")));
- (double)columnGetDoubleColumnIndex:(int32_t)columnIndex __attribute__((swift_name("columnGetDouble(columnIndex:)")));
- (int64_t)columnGetLongColumnIndex:(int32_t)columnIndex __attribute__((swift_name("columnGetLong(columnIndex:)")));
- (NSString *)columnGetStringColumnIndex:(int32_t)columnIndex __attribute__((swift_name("columnGetString(columnIndex:)")));
- (NSString *)columnNameColumnIndex:(int32_t)columnIndex __attribute__((swift_name("columnName(columnIndex:)")));
- (int32_t)columnTypeColumnIndex:(int32_t)columnIndex __attribute__((swift_name("columnType(columnIndex:)")));
- (void)execute_ __attribute__((swift_name("execute_()")));
- (int32_t)executeForChangedRowCount __attribute__((swift_name("executeForChangedRowCount()")));
- (int64_t)executeForLastInsertedRowId __attribute__((swift_name("executeForLastInsertedRowId()")));
- (int32_t)executeNonQuery __attribute__((swift_name("executeNonQuery()")));
- (void)finalizeStatement __attribute__((swift_name("finalizeStatement()")));
- (BOOL)isNullIndex:(int32_t)index __attribute__((swift_name("isNull(index:)")));
- (void)resetStatement __attribute__((swift_name("resetStatement()")));
- (BOOL)step __attribute__((swift_name("step()")));
- (void)traceLogCallbackMessage:(NSString *)message __attribute__((swift_name("traceLogCallback(message:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ActualSqliteStatement")))
@interface SharedActualSqliteStatement : SharedBase <SharedSqliteStatement>
- (instancetype)initWithDb:(SharedSqliteDatabase *)db stmtPointer:(void *)stmtPointer __attribute__((swift_name("init(db:stmtPointer:)"))) __attribute__((objc_designated_initializer));
- (void)bindBlobIndex:(int32_t)index value:(SharedKotlinByteArray *)value __attribute__((swift_name("bindBlob(index:value:)")));
- (void)bindDoubleIndex:(int32_t)index value:(double)value __attribute__((swift_name("bindDouble(index:value:)")));
- (void)bindLongIndex:(int32_t)index value:(int64_t)value __attribute__((swift_name("bindLong(index:value:)")));
- (void)bindNullIndex:(int32_t)index __attribute__((swift_name("bindNull(index:)")));
- (int32_t)bindParameterIndexParamName:(NSString *)paramName __attribute__((swift_name("bindParameterIndex(paramName:)")));
- (void)bindStringIndex:(int32_t)index value:(NSString *)value __attribute__((swift_name("bindString(index:value:)")));
- (void)clearBindings __attribute__((swift_name("clearBindings()")));
- (int32_t)columnCount_ __attribute__((swift_name("columnCount()")));
- (SharedKotlinByteArray *)columnGetBlobColumnIndex:(int32_t)columnIndex __attribute__((swift_name("columnGetBlob(columnIndex:)")));
- (double)columnGetDoubleColumnIndex:(int32_t)columnIndex __attribute__((swift_name("columnGetDouble(columnIndex:)")));
- (int64_t)columnGetLongColumnIndex:(int32_t)columnIndex __attribute__((swift_name("columnGetLong(columnIndex:)")));
- (NSString *)columnGetStringColumnIndex:(int32_t)columnIndex __attribute__((swift_name("columnGetString(columnIndex:)")));
- (NSString *)columnNameColumnIndex:(int32_t)columnIndex __attribute__((swift_name("columnName(columnIndex:)")));
- (int32_t)columnTypeColumnIndex:(int32_t)columnIndex __attribute__((swift_name("columnType(columnIndex:)")));
- (void)execute_ __attribute__((swift_name("execute_()")));
- (int32_t)executeForChangedRowCount __attribute__((swift_name("executeForChangedRowCount()")));
- (int64_t)executeForLastInsertedRowId __attribute__((swift_name("executeForLastInsertedRowId()")));
- (int32_t)executeNonQuery __attribute__((swift_name("executeNonQuery()")));
- (void)finalizeStatement __attribute__((swift_name("finalizeStatement()")));
- (BOOL)isNullIndex:(int32_t)index __attribute__((swift_name("isNull(index:)")));
- (void)resetStatement __attribute__((swift_name("resetStatement()")));
- (BOOL)step __attribute__((swift_name("step()")));
- (void)traceLogCallbackMessage:(NSString *)message __attribute__((swift_name("traceLogCallback(message:)")));
@end;

__attribute__((swift_name("Logger__")))
@protocol SharedLogger_
@required
- (void)eWriteMessage:(NSString *)message exception:(SharedKotlinThrowable * _Nullable)exception __attribute__((swift_name("eWrite(message:exception:)")));
- (void)traceMessage:(NSString *)message __attribute__((swift_name("trace(message:)")));
- (void)vWriteMessage:(NSString *)message __attribute__((swift_name("vWrite(message:)")));
@property (readonly) BOOL eActive __attribute__((swift_name("eActive")));
@property (readonly) BOOL vActive __attribute__((swift_name("vActive")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("OpenFlags")))
@interface SharedOpenFlags : SharedKotlinEnum<SharedOpenFlags *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedOpenFlags *createIfNecessary __attribute__((swift_name("createIfNecessary")));
@property (class, readonly) SharedOpenFlags *openReadonly __attribute__((swift_name("openReadonly")));
+ (SharedKotlinArray<SharedOpenFlags *> *)values __attribute__((swift_name("values()")));
@end;

__attribute__((swift_name("SQLiteException")))
@interface SharedSQLiteException : SharedKotlinException
- (instancetype)initWithMessage:(NSString *)message config:(SharedSqliteDatabaseConfig *)config __attribute__((swift_name("init(message:config:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithCause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SQLiteExceptionErrorCode")))
@interface SharedSQLiteExceptionErrorCode : SharedSQLiteException
- (instancetype)initWithMessage:(NSString *)message config:(SharedSqliteDatabaseConfig *)config errorCode:(int32_t)errorCode __attribute__((swift_name("init(message:config:errorCode:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithMessage:(NSString *)message config:(SharedSqliteDatabaseConfig *)config __attribute__((swift_name("init(message:config:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (readonly) SharedSqliteErrorType *errorType __attribute__((swift_name("errorType")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SqliteDatabase")))
@interface SharedSqliteDatabase : SharedBase
- (instancetype)initWithPath:(NSString *)path label:(NSString *)label logger:(id<SharedLogger_>)logger verboseDataCalls:(BOOL)verboseDataCalls dbPointer:(void *)dbPointer __attribute__((swift_name("init(path:label:logger:verboseDataCalls:dbPointer:)"))) __attribute__((objc_designated_initializer));
- (void)close __attribute__((swift_name("close()")));
- (id<SharedSqliteStatement>)prepareStatementSqlString:(NSString *)sqlString __attribute__((swift_name("prepareStatement(sqlString:)")));
@property (readonly) SharedSqliteDatabaseConfig *config __attribute__((swift_name("config")));
@property (readonly) void *dbPointer __attribute__((swift_name("dbPointer")));
@property (readonly) id<SharedLogger_> logger __attribute__((swift_name("logger")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SqliteDatabaseConfig")))
@interface SharedSqliteDatabaseConfig : SharedBase
- (instancetype)initWithPath:(NSString *)path label:(NSString *)label __attribute__((swift_name("init(path:label:)"))) __attribute__((objc_designated_initializer));
- (NSString *)component1 __attribute__((swift_name("component1()")));
- (NSString *)component2 __attribute__((swift_name("component2()")));
- (SharedSqliteDatabaseConfig *)doCopyPath:(NSString *)path label:(NSString *)label __attribute__((swift_name("doCopy(path:label:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *label __attribute__((swift_name("label")));
@property (readonly) NSString *path __attribute__((swift_name("path")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SqliteErrorType")))
@interface SharedSqliteErrorType : SharedKotlinEnum<SharedSqliteErrorType *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedSqliteErrorType *sqliteOk __attribute__((swift_name("sqliteOk")));
@property (class, readonly) SharedSqliteErrorType *sqliteError __attribute__((swift_name("sqliteError")));
@property (class, readonly) SharedSqliteErrorType *sqliteInternal __attribute__((swift_name("sqliteInternal")));
@property (class, readonly) SharedSqliteErrorType *sqlitePerm __attribute__((swift_name("sqlitePerm")));
@property (class, readonly) SharedSqliteErrorType *sqliteAbort __attribute__((swift_name("sqliteAbort")));
@property (class, readonly) SharedSqliteErrorType *sqliteBusy __attribute__((swift_name("sqliteBusy")));
@property (class, readonly) SharedSqliteErrorType *sqliteLocked __attribute__((swift_name("sqliteLocked")));
@property (class, readonly) SharedSqliteErrorType *sqliteNomem __attribute__((swift_name("sqliteNomem")));
@property (class, readonly) SharedSqliteErrorType *sqliteReadonly __attribute__((swift_name("sqliteReadonly")));
@property (class, readonly) SharedSqliteErrorType *sqliteInterrupt __attribute__((swift_name("sqliteInterrupt")));
@property (class, readonly) SharedSqliteErrorType *sqliteIoerr __attribute__((swift_name("sqliteIoerr")));
@property (class, readonly) SharedSqliteErrorType *sqliteCorrupt __attribute__((swift_name("sqliteCorrupt")));
@property (class, readonly) SharedSqliteErrorType *sqliteNotfound __attribute__((swift_name("sqliteNotfound")));
@property (class, readonly) SharedSqliteErrorType *sqliteFull __attribute__((swift_name("sqliteFull")));
@property (class, readonly) SharedSqliteErrorType *sqliteCantopen __attribute__((swift_name("sqliteCantopen")));
@property (class, readonly) SharedSqliteErrorType *sqliteProtocol __attribute__((swift_name("sqliteProtocol")));
@property (class, readonly) SharedSqliteErrorType *sqliteEmpty __attribute__((swift_name("sqliteEmpty")));
@property (class, readonly) SharedSqliteErrorType *sqliteSchema __attribute__((swift_name("sqliteSchema")));
@property (class, readonly) SharedSqliteErrorType *sqliteToobig __attribute__((swift_name("sqliteToobig")));
@property (class, readonly) SharedSqliteErrorType *sqliteConstraint __attribute__((swift_name("sqliteConstraint")));
@property (class, readonly) SharedSqliteErrorType *sqliteMismatch __attribute__((swift_name("sqliteMismatch")));
@property (class, readonly) SharedSqliteErrorType *sqliteMisuse __attribute__((swift_name("sqliteMisuse")));
@property (class, readonly) SharedSqliteErrorType *sqliteNolfs __attribute__((swift_name("sqliteNolfs")));
@property (class, readonly) SharedSqliteErrorType *sqliteAuth __attribute__((swift_name("sqliteAuth")));
@property (class, readonly) SharedSqliteErrorType *sqliteFormat __attribute__((swift_name("sqliteFormat")));
@property (class, readonly) SharedSqliteErrorType *sqliteRange __attribute__((swift_name("sqliteRange")));
@property (class, readonly) SharedSqliteErrorType *sqliteNotadb __attribute__((swift_name("sqliteNotadb")));
@property (class, readonly) SharedSqliteErrorType *sqliteNotice __attribute__((swift_name("sqliteNotice")));
@property (class, readonly) SharedSqliteErrorType *sqliteWarning __attribute__((swift_name("sqliteWarning")));
@property (class, readonly) SharedSqliteErrorType *sqliteRow __attribute__((swift_name("sqliteRow")));
@property (class, readonly) SharedSqliteErrorType *sqliteDone __attribute__((swift_name("sqliteDone")));
+ (SharedKotlinArray<SharedSqliteErrorType *> *)values __attribute__((swift_name("values()")));
@property (readonly) int32_t code __attribute__((swift_name("code")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TracingSqliteStatement")))
@interface SharedTracingSqliteStatement : SharedBase <SharedSqliteStatement>
- (instancetype)initWithLogger:(id<SharedLogger_>)logger delegate:(id<SharedSqliteStatement>)delegate __attribute__((swift_name("init(logger:delegate:)"))) __attribute__((objc_designated_initializer));
- (void)bindBlobIndex:(int32_t)index value:(SharedKotlinByteArray *)value __attribute__((swift_name("bindBlob(index:value:)")));
- (void)bindDoubleIndex:(int32_t)index value:(double)value __attribute__((swift_name("bindDouble(index:value:)")));
- (void)bindLongIndex:(int32_t)index value:(int64_t)value __attribute__((swift_name("bindLong(index:value:)")));
- (void)bindNullIndex:(int32_t)index __attribute__((swift_name("bindNull(index:)")));
- (int32_t)bindParameterIndexParamName:(NSString *)paramName __attribute__((swift_name("bindParameterIndex(paramName:)")));
- (void)bindStringIndex:(int32_t)index value:(NSString *)value __attribute__((swift_name("bindString(index:value:)")));
- (void)clearBindings __attribute__((swift_name("clearBindings()")));
- (int32_t)columnCount_ __attribute__((swift_name("columnCount()")));
- (SharedKotlinByteArray *)columnGetBlobColumnIndex:(int32_t)columnIndex __attribute__((swift_name("columnGetBlob(columnIndex:)")));
- (double)columnGetDoubleColumnIndex:(int32_t)columnIndex __attribute__((swift_name("columnGetDouble(columnIndex:)")));
- (int64_t)columnGetLongColumnIndex:(int32_t)columnIndex __attribute__((swift_name("columnGetLong(columnIndex:)")));
- (NSString *)columnGetStringColumnIndex:(int32_t)columnIndex __attribute__((swift_name("columnGetString(columnIndex:)")));
- (NSString *)columnNameColumnIndex:(int32_t)columnIndex __attribute__((swift_name("columnName(columnIndex:)")));
- (int32_t)columnTypeColumnIndex:(int32_t)columnIndex __attribute__((swift_name("columnType(columnIndex:)")));
- (void)execute_ __attribute__((swift_name("execute_()")));
- (int32_t)executeForChangedRowCount __attribute__((swift_name("executeForChangedRowCount()")));
- (int64_t)executeForLastInsertedRowId __attribute__((swift_name("executeForLastInsertedRowId()")));
- (int32_t)executeNonQuery __attribute__((swift_name("executeNonQuery()")));
- (void)finalizeStatement __attribute__((swift_name("finalizeStatement()")));
- (BOOL)isNullIndex:(int32_t)index __attribute__((swift_name("isNull(index:)")));
- (void)resetStatement __attribute__((swift_name("resetStatement()")));
- (BOOL)step __attribute__((swift_name("step()")));
- (void)traceLogCallbackMessage:(NSString *)message __attribute__((swift_name("traceLogCallback(message:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("NativeCursor")))
@interface SharedNativeCursor : SharedBase <SharedCursor>
- (instancetype)initWithStatement:(SharedNativeStatement *)statement __attribute__((swift_name("init(statement:)"))) __attribute__((objc_designated_initializer));
- (NSString *)columnNameIndex:(int32_t)index __attribute__((swift_name("columnName(index:)")));
- (SharedKotlinByteArray *)getBytesIndex:(int32_t)index __attribute__((swift_name("getBytes(index:)")));
- (double)getDoubleIndex_:(int32_t)index __attribute__((swift_name("getDouble(index_:)")));
- (int64_t)getLongIndex_:(int32_t)index __attribute__((swift_name("getLong(index_:)")));
- (NSString *)getStringIndex:(int32_t)index __attribute__((swift_name("getString(index:)")));
- (SharedFieldType *)getTypeIndex:(int32_t)index __attribute__((swift_name("getType(index:)")));
- (BOOL)isNullIndex:(int32_t)index __attribute__((swift_name("isNull(index:)")));
- (BOOL)next__ __attribute__((swift_name("next_()")));
@property (readonly) int32_t columnCount __attribute__((swift_name("columnCount")));
@property (readonly) NSDictionary<NSString *, SharedInt *> *columnNames __attribute__((swift_name("columnNames")));
@property (readonly) SharedNativeStatement *statement __attribute__((swift_name("statement")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("NativeDatabaseConnection")))
@interface SharedNativeDatabaseConnection : SharedBase <SharedDatabaseConnection>
- (instancetype)initWithDbManager:(SharedNativeDatabaseManager *)dbManager sqliteDatabase:(SharedSqliteDatabase *)sqliteDatabase __attribute__((swift_name("init(dbManager:sqliteDatabase:)"))) __attribute__((objc_designated_initializer));
- (void)beginTransaction __attribute__((swift_name("beginTransaction()")));
- (void)close __attribute__((swift_name("close()")));
- (id<SharedStatement>)createStatementSql:(NSString *)sql __attribute__((swift_name("createStatement(sql:)")));
- (void)endTransaction __attribute__((swift_name("endTransaction()")));
- (void)migrateIfNeededCreate:(void (^)(id<SharedDatabaseConnection>))create upgrade:(void (^)(id<SharedDatabaseConnection>, SharedInt *, SharedInt *))upgrade version:(int32_t)version __attribute__((swift_name("migrateIfNeeded(create:upgrade:version:)")));
- (void)setTransactionSuccessful __attribute__((swift_name("setTransactionSuccessful()")));
@property (readonly) BOOL closed __attribute__((swift_name("closed")));
@property (readonly) SharedNativeDatabaseManager *dbManager __attribute__((swift_name("dbManager")));
@property (readonly) SharedSqliteDatabase *sqliteDatabase __attribute__((swift_name("sqliteDatabase")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("NativeDatabaseConnection.Transaction")))
@interface SharedNativeDatabaseConnectionTransaction : SharedBase
- (instancetype)initWithSuccessful:(BOOL)successful __attribute__((swift_name("init(successful:)"))) __attribute__((objc_designated_initializer));
- (BOOL)component1 __attribute__((swift_name("component1()")));
- (SharedNativeDatabaseConnectionTransaction *)doCopySuccessful:(BOOL)successful __attribute__((swift_name("doCopy(successful:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) BOOL successful __attribute__((swift_name("successful")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("NativeDatabaseManager")))
@interface SharedNativeDatabaseManager : SharedBase <SharedDatabaseManager>
- (instancetype)initWithPath:(NSString *)path configuration:(SharedDatabaseConfiguration *)configuration __attribute__((swift_name("init(path:configuration:)"))) __attribute__((objc_designated_initializer));
- (id<SharedDatabaseConnection>)createMultiThreadedConnection __attribute__((swift_name("createMultiThreadedConnection()")));
- (id<SharedDatabaseConnection>)createSingleThreadedConnection __attribute__((swift_name("createSingleThreadedConnection()")));
@property (readonly) SharedDatabaseConfiguration *configuration __attribute__((swift_name("configuration")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("NativeStatement")))
@interface SharedNativeStatement : SharedBase <SharedStatement>
- (instancetype)initWithConnection:(SharedNativeDatabaseConnection *)connection sqliteStatement:(id<SharedSqliteStatement>)sqliteStatement sql:(NSString *)sql __attribute__((swift_name("init(connection:sqliteStatement:sql:)"))) __attribute__((objc_designated_initializer));
- (void)bindBlobIndex:(int32_t)index value:(SharedKotlinByteArray *)value __attribute__((swift_name("bindBlob(index:value:)")));
- (void)bindDoubleIndex:(int32_t)index value:(double)value __attribute__((swift_name("bindDouble(index:value:)")));
- (void)bindLongIndex:(int32_t)index value:(int64_t)value __attribute__((swift_name("bindLong(index:value:)")));
- (void)bindNullIndex:(int32_t)index __attribute__((swift_name("bindNull(index:)")));
- (int32_t)bindParameterIndexParamName:(NSString *)paramName __attribute__((swift_name("bindParameterIndex(paramName:)")));
- (void)bindStringIndex:(int32_t)index value:(NSString *)value __attribute__((swift_name("bindString(index:value:)")));
- (void)clearBindings __attribute__((swift_name("clearBindings()")));
- (void)execute_ __attribute__((swift_name("execute_()")));
- (int64_t)executeInsert __attribute__((swift_name("executeInsert()")));
- (int32_t)executeUpdateDelete __attribute__((swift_name("executeUpdateDelete()")));
- (void)finalizeStatement __attribute__((swift_name("finalizeStatement()")));
- (id<SharedCursor>)query __attribute__((swift_name("query()")));
- (void)resetStatement __attribute__((swift_name("resetStatement()")));
@end;

__attribute__((swift_name("BinaryFormat")))
@protocol SharedBinaryFormat <SharedSerialFormat>
@required
- (id _Nullable)decodeFromByteArrayDeserializer:(id<SharedDeserializationStrategy>)deserializer bytes:(SharedKotlinByteArray *)bytes __attribute__((swift_name("decodeFromByteArray(deserializer:bytes:)")));
- (SharedKotlinByteArray *)encodeToByteArraySerializer:(id<SharedSerializationStrategy>)serializer value:(id _Nullable)value __attribute__((swift_name("encodeToByteArray(serializer:value:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContextualSerializer")))
@interface SharedContextualSerializer<T> : SharedBase <SharedKSerializer>
- (instancetype)initWithSerializableClass:(id<SharedKotlinKClass>)serializableClass __attribute__((swift_name("init(serializableClass:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithSerializableClass:(id<SharedKotlinKClass>)serializableClass fallbackSerializer:(id<SharedKSerializer> _Nullable)fallbackSerializer typeArgumentsSerializers:(SharedKotlinArray<id<SharedKSerializer>> *)typeArgumentsSerializers __attribute__((swift_name("init(serializableClass:fallbackSerializer:typeArgumentsSerializers:)"))) __attribute__((objc_designated_initializer));
- (T)deserializeDecoder:(id<SharedDecoder>)decoder __attribute__((swift_name("deserialize(decoder:)")));
- (void)serializeEncoder:(id<SharedEncoder_>)encoder value:(T)value __attribute__((swift_name("serialize(encoder:value:)")));
@property (readonly) id<SharedSerialDescriptor> descriptor __attribute__((swift_name("descriptor")));
@end;

__attribute__((swift_name("AbstractPolymorphicSerializer")))
@interface SharedAbstractPolymorphicSerializer<T> : SharedBase <SharedKSerializer>
- (T)deserializeDecoder:(id<SharedDecoder>)decoder __attribute__((swift_name("deserialize(decoder:)")));
- (id<SharedDeserializationStrategy> _Nullable)findPolymorphicSerializerOrNullDecoder:(id<SharedCompositeDecoder>)decoder klassName:(NSString * _Nullable)klassName __attribute__((swift_name("findPolymorphicSerializerOrNull(decoder:klassName:)")));
- (id<SharedSerializationStrategy> _Nullable)findPolymorphicSerializerOrNullEncoder:(id<SharedEncoder_>)encoder value:(T)value __attribute__((swift_name("findPolymorphicSerializerOrNull(encoder:value:)")));
- (void)serializeEncoder:(id<SharedEncoder_>)encoder value:(T)value __attribute__((swift_name("serialize(encoder:value:)")));
@property (readonly) id<SharedKotlinKClass> baseClass __attribute__((swift_name("baseClass")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PolymorphicSerializer")))
@interface SharedPolymorphicSerializer<T> : SharedAbstractPolymorphicSerializer<T>
- (instancetype)initWithBaseClass:(id<SharedKotlinKClass>)baseClass __attribute__((swift_name("init(baseClass:)"))) __attribute__((objc_designated_initializer));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) id<SharedKotlinKClass> baseClass __attribute__((swift_name("baseClass")));
@property (readonly) id<SharedSerialDescriptor> descriptor __attribute__((swift_name("descriptor")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SealedClassSerializer")))
@interface SharedSealedClassSerializer<T> : SharedAbstractPolymorphicSerializer<T>
- (instancetype)initWithSerialName:(NSString *)serialName baseClass:(id<SharedKotlinKClass>)baseClass subclasses:(SharedKotlinArray<id<SharedKotlinKClass>> *)subclasses subclassSerializers:(SharedKotlinArray<id<SharedKSerializer>> *)subclassSerializers __attribute__((swift_name("init(serialName:baseClass:subclasses:subclassSerializers:)"))) __attribute__((objc_designated_initializer));
- (id<SharedDeserializationStrategy> _Nullable)findPolymorphicSerializerOrNullDecoder:(id<SharedCompositeDecoder>)decoder klassName:(NSString * _Nullable)klassName __attribute__((swift_name("findPolymorphicSerializerOrNull(decoder:klassName:)")));
- (id<SharedSerializationStrategy> _Nullable)findPolymorphicSerializerOrNullEncoder:(id<SharedEncoder_>)encoder value:(T)value __attribute__((swift_name("findPolymorphicSerializerOrNull(encoder:value:)")));
@property (readonly) id<SharedKotlinKClass> baseClass __attribute__((swift_name("baseClass")));
@property (readonly) id<SharedSerialDescriptor> descriptor __attribute__((swift_name("descriptor")));
@end;

__attribute__((swift_name("SerializationException")))
@interface SharedSerializationException : SharedKotlinIllegalArgumentException
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (instancetype)initWithMessage:(NSString * _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithCause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer));
@end;

__attribute__((swift_name("AbstractCollectionSerializer")))
@interface SharedAbstractCollectionSerializer<Element, Collection, Builder> : SharedBase <SharedKSerializer>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (Builder _Nullable)builder __attribute__((swift_name("builder()")));
- (Collection _Nullable)deserializeDecoder:(id<SharedDecoder>)decoder __attribute__((swift_name("deserialize(decoder:)")));
- (Collection _Nullable)mergeDecoder:(id<SharedDecoder>)decoder previous:(Collection _Nullable)previous __attribute__((swift_name("merge(decoder:previous:)")));
- (void)readAllDecoder:(id<SharedCompositeDecoder>)decoder builder:(Builder _Nullable)builder startIndex:(int32_t)startIndex size:(int32_t)size __attribute__((swift_name("readAll(decoder:builder:startIndex:size:)")));
- (void)readElementDecoder:(id<SharedCompositeDecoder>)decoder index:(int32_t)index builder:(Builder _Nullable)builder checkIndex:(BOOL)checkIndex __attribute__((swift_name("readElement(decoder:index:builder:checkIndex:)")));
- (void)serializeEncoder:(id<SharedEncoder_>)encoder value:(Collection _Nullable)value __attribute__((swift_name("serialize(encoder:value:)")));
- (int32_t)builderSize:(Builder _Nullable)receiver __attribute__((swift_name("builderSize(_:)")));
- (void)checkCapacity:(Builder _Nullable)receiver size:(int32_t)size __attribute__((swift_name("checkCapacity(_:size:)")));
- (id<SharedKotlinIterator>)collectionIterator:(Collection _Nullable)receiver __attribute__((swift_name("collectionIterator(_:)")));
- (int32_t)collectionSize:(Collection _Nullable)receiver __attribute__((swift_name("collectionSize(_:)")));
- (Builder _Nullable)toBuilder:(Collection _Nullable)receiver __attribute__((swift_name("toBuilder(_:)")));
- (Collection _Nullable)toResult:(Builder _Nullable)receiver __attribute__((swift_name("toResult(_:)")));
@end;

__attribute__((swift_name("GeneratedSerializer")))
@protocol SharedGeneratedSerializer <SharedKSerializer>
@required
- (SharedKotlinArray<id<SharedKSerializer>> *)childSerializers __attribute__((swift_name("childSerializers()")));
- (SharedKotlinArray<id<SharedKSerializer>> *)typeParametersSerializers __attribute__((swift_name("typeParametersSerializers()")));
@end;

__attribute__((swift_name("MapLikeSerializer")))
@interface SharedMapLikeSerializer<Key, Value, Collection, Builder> : SharedAbstractCollectionSerializer<id<SharedKotlinMapEntry>, Collection, SharedMutableDictionary<id, id> *>
- (instancetype)initWithKeySerializer:(id<SharedKSerializer>)keySerializer valueSerializer:(id<SharedKSerializer>)valueSerializer __attribute__((swift_name("init(keySerializer:valueSerializer:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (void)readAllDecoder:(id<SharedCompositeDecoder>)decoder builder:(SharedMutableDictionary<id, id> *)builder startIndex:(int32_t)startIndex size:(int32_t)size __attribute__((swift_name("readAll(decoder:builder:startIndex:size:)")));
- (void)readElementDecoder:(id<SharedCompositeDecoder>)decoder index:(int32_t)index builder:(SharedMutableDictionary<id, id> *)builder checkIndex:(BOOL)checkIndex __attribute__((swift_name("readElement(decoder:index:builder:checkIndex:)")));
- (void)serializeEncoder:(id<SharedEncoder_>)encoder value:(Collection _Nullable)value __attribute__((swift_name("serialize(encoder:value:)")));
- (void)insertKeyValuePair:(SharedMutableDictionary<id, id> *)receiver index:(int32_t)index key:(Key _Nullable)key value:(Value _Nullable)value __attribute__((swift_name("insertKeyValuePair(_:index:key:value:)")));
@property (readonly) id<SharedSerialDescriptor> descriptor __attribute__((swift_name("descriptor")));
@property (readonly) id<SharedKSerializer> keySerializer __attribute__((swift_name("keySerializer")));
@property (readonly) id<SharedKSerializer> valueSerializer __attribute__((swift_name("valueSerializer")));
@end;

__attribute__((swift_name("TaggedDecoder")))
@interface SharedTaggedDecoder<Tag> : SharedBase <SharedDecoder, SharedCompositeDecoder>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (id<SharedCompositeDecoder>)beginStructureDescriptor:(id<SharedSerialDescriptor>)descriptor __attribute__((swift_name("beginStructure(descriptor:)")));
- (void)doCopyTagsToOther:(SharedTaggedDecoder<Tag> *)other __attribute__((swift_name("doCopyTagsTo(other:)")));
- (BOOL)decodeBoolean __attribute__((swift_name("decodeBoolean()")));
- (BOOL)decodeBooleanElementDescriptor:(id<SharedSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeBooleanElement(descriptor:index:)")));
- (int8_t)decodeByte __attribute__((swift_name("decodeByte()")));
- (int8_t)decodeByteElementDescriptor:(id<SharedSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeByteElement(descriptor:index:)")));
- (unichar)decodeChar __attribute__((swift_name("decodeChar()")));
- (unichar)decodeCharElementDescriptor:(id<SharedSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeCharElement(descriptor:index:)")));
- (double)decodeDouble __attribute__((swift_name("decodeDouble()")));
- (double)decodeDoubleElementDescriptor:(id<SharedSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeDoubleElement(descriptor:index:)")));
- (int32_t)decodeEnumEnumDescriptor:(id<SharedSerialDescriptor>)enumDescriptor __attribute__((swift_name("decodeEnum(enumDescriptor:)")));
- (float)decodeFloat __attribute__((swift_name("decodeFloat()")));
- (float)decodeFloatElementDescriptor:(id<SharedSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeFloatElement(descriptor:index:)")));
- (id<SharedDecoder>)decodeInlineInlineDescriptor:(id<SharedSerialDescriptor>)inlineDescriptor __attribute__((swift_name("decodeInline(inlineDescriptor:)")));
- (id<SharedDecoder>)decodeInlineElementDescriptor:(id<SharedSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeInlineElement(descriptor:index:)")));
- (int32_t)decodeInt __attribute__((swift_name("decodeInt()")));
- (int32_t)decodeIntElementDescriptor:(id<SharedSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeIntElement(descriptor:index:)")));
- (int64_t)decodeLong __attribute__((swift_name("decodeLong()")));
- (int64_t)decodeLongElementDescriptor:(id<SharedSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeLongElement(descriptor:index:)")));
- (BOOL)decodeNotNullMark __attribute__((swift_name("decodeNotNullMark()")));
- (SharedKotlinNothing * _Nullable)decodeNull __attribute__((swift_name("decodeNull()")));
- (id _Nullable)decodeNullableSerializableElementDescriptor:(id<SharedSerialDescriptor>)descriptor index:(int32_t)index deserializer:(id<SharedDeserializationStrategy>)deserializer previousValue:(id _Nullable)previousValue __attribute__((swift_name("decodeNullableSerializableElement(descriptor:index:deserializer:previousValue:)")));
- (id _Nullable)decodeSerializableElementDescriptor:(id<SharedSerialDescriptor>)descriptor index:(int32_t)index deserializer:(id<SharedDeserializationStrategy>)deserializer previousValue:(id _Nullable)previousValue __attribute__((swift_name("decodeSerializableElement(descriptor:index:deserializer:previousValue:)")));
- (id _Nullable)decodeSerializableValueDeserializer:(id<SharedDeserializationStrategy>)deserializer previousValue:(id _Nullable)previousValue __attribute__((swift_name("decodeSerializableValue(deserializer:previousValue:)")));
- (int16_t)decodeShort __attribute__((swift_name("decodeShort()")));
- (int16_t)decodeShortElementDescriptor:(id<SharedSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeShortElement(descriptor:index:)")));
- (NSString *)decodeString __attribute__((swift_name("decodeString()")));
- (NSString *)decodeStringElementDescriptor:(id<SharedSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeStringElement(descriptor:index:)")));
- (BOOL)decodeTaggedBooleanTag:(Tag _Nullable)tag __attribute__((swift_name("decodeTaggedBoolean(tag:)")));
- (int8_t)decodeTaggedByteTag:(Tag _Nullable)tag __attribute__((swift_name("decodeTaggedByte(tag:)")));
- (unichar)decodeTaggedCharTag:(Tag _Nullable)tag __attribute__((swift_name("decodeTaggedChar(tag:)")));
- (double)decodeTaggedDoubleTag:(Tag _Nullable)tag __attribute__((swift_name("decodeTaggedDouble(tag:)")));
- (int32_t)decodeTaggedEnumTag:(Tag _Nullable)tag enumDescriptor:(id<SharedSerialDescriptor>)enumDescriptor __attribute__((swift_name("decodeTaggedEnum(tag:enumDescriptor:)")));
- (float)decodeTaggedFloatTag:(Tag _Nullable)tag __attribute__((swift_name("decodeTaggedFloat(tag:)")));
- (id<SharedDecoder>)decodeTaggedInlineTag:(Tag _Nullable)tag inlineDescriptor:(id<SharedSerialDescriptor>)inlineDescriptor __attribute__((swift_name("decodeTaggedInline(tag:inlineDescriptor:)")));
- (int32_t)decodeTaggedIntTag:(Tag _Nullable)tag __attribute__((swift_name("decodeTaggedInt(tag:)")));
- (int64_t)decodeTaggedLongTag:(Tag _Nullable)tag __attribute__((swift_name("decodeTaggedLong(tag:)")));
- (BOOL)decodeTaggedNotNullMarkTag:(Tag _Nullable)tag __attribute__((swift_name("decodeTaggedNotNullMark(tag:)")));
- (SharedKotlinNothing * _Nullable)decodeTaggedNullTag:(Tag _Nullable)tag __attribute__((swift_name("decodeTaggedNull(tag:)")));
- (int16_t)decodeTaggedShortTag:(Tag _Nullable)tag __attribute__((swift_name("decodeTaggedShort(tag:)")));
- (NSString *)decodeTaggedStringTag:(Tag _Nullable)tag __attribute__((swift_name("decodeTaggedString(tag:)")));
- (id)decodeTaggedValueTag:(Tag _Nullable)tag __attribute__((swift_name("decodeTaggedValue(tag:)")));
- (void)endStructureDescriptor:(id<SharedSerialDescriptor>)descriptor __attribute__((swift_name("endStructure(descriptor:)")));
- (Tag _Nullable)popTag __attribute__((swift_name("popTag()")));
- (void)pushTagName:(Tag _Nullable)name __attribute__((swift_name("pushTag(name:)")));
- (Tag _Nullable)getTag:(id<SharedSerialDescriptor>)receiver index:(int32_t)index __attribute__((swift_name("getTag(_:index:)")));
@property (readonly) Tag _Nullable currentTag __attribute__((swift_name("currentTag")));
@property (readonly) Tag _Nullable currentTagOrNull __attribute__((swift_name("currentTagOrNull")));
@property (readonly) SharedSerializersModule *serializersModule __attribute__((swift_name("serializersModule")));
@end;

__attribute__((swift_name("NamedValueDecoder")))
@interface SharedNamedValueDecoder : SharedTaggedDecoder<NSString *>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (NSString *)composeNameParentName:(NSString *)parentName childName:(NSString *)childName __attribute__((swift_name("composeName(parentName:childName:)")));
- (NSString *)elementNameDesc:(id<SharedSerialDescriptor>)desc index:(int32_t)index __attribute__((swift_name("elementName(desc:index:)")));
- (NSString *)nestedNestedName:(NSString *)nestedName __attribute__((swift_name("nested(nestedName:)")));
- (NSString *)getTag:(id<SharedSerialDescriptor>)receiver index:(int32_t)index __attribute__((swift_name("getTag(_:index:)")));
@end;

__attribute__((swift_name("TaggedEncoder")))
@interface SharedTaggedEncoder<Tag> : SharedBase <SharedEncoder_, SharedCompositeEncoder>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (id<SharedCompositeEncoder>)beginStructureDescriptor:(id<SharedSerialDescriptor>)descriptor __attribute__((swift_name("beginStructure(descriptor:)")));
- (void)encodeBooleanValue:(BOOL)value __attribute__((swift_name("encodeBoolean(value:)")));
- (void)encodeBooleanElementDescriptor:(id<SharedSerialDescriptor>)descriptor index:(int32_t)index value:(BOOL)value __attribute__((swift_name("encodeBooleanElement(descriptor:index:value:)")));
- (void)encodeByteValue:(int8_t)value __attribute__((swift_name("encodeByte(value:)")));
- (void)encodeByteElementDescriptor:(id<SharedSerialDescriptor>)descriptor index:(int32_t)index value:(int8_t)value __attribute__((swift_name("encodeByteElement(descriptor:index:value:)")));
- (void)encodeCharValue:(unichar)value __attribute__((swift_name("encodeChar(value:)")));
- (void)encodeCharElementDescriptor:(id<SharedSerialDescriptor>)descriptor index:(int32_t)index value:(unichar)value __attribute__((swift_name("encodeCharElement(descriptor:index:value:)")));
- (void)encodeDoubleValue:(double)value __attribute__((swift_name("encodeDouble(value:)")));
- (void)encodeDoubleElementDescriptor:(id<SharedSerialDescriptor>)descriptor index:(int32_t)index value:(double)value __attribute__((swift_name("encodeDoubleElement(descriptor:index:value:)")));
- (void)encodeEnumEnumDescriptor:(id<SharedSerialDescriptor>)enumDescriptor index:(int32_t)index __attribute__((swift_name("encodeEnum(enumDescriptor:index:)")));
- (void)encodeFloatValue:(float)value __attribute__((swift_name("encodeFloat(value:)")));
- (void)encodeFloatElementDescriptor:(id<SharedSerialDescriptor>)descriptor index:(int32_t)index value:(float)value __attribute__((swift_name("encodeFloatElement(descriptor:index:value:)")));
- (id<SharedEncoder_>)encodeInlineInlineDescriptor:(id<SharedSerialDescriptor>)inlineDescriptor __attribute__((swift_name("encodeInline(inlineDescriptor:)")));
- (id<SharedEncoder_>)encodeInlineElementDescriptor:(id<SharedSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("encodeInlineElement(descriptor:index:)")));
- (void)encodeIntValue:(int32_t)value __attribute__((swift_name("encodeInt(value:)")));
- (void)encodeIntElementDescriptor:(id<SharedSerialDescriptor>)descriptor index:(int32_t)index value:(int32_t)value __attribute__((swift_name("encodeIntElement(descriptor:index:value:)")));
- (void)encodeLongValue:(int64_t)value __attribute__((swift_name("encodeLong(value:)")));
- (void)encodeLongElementDescriptor:(id<SharedSerialDescriptor>)descriptor index:(int32_t)index value:(int64_t)value __attribute__((swift_name("encodeLongElement(descriptor:index:value:)")));
- (void)encodeNotNullMark __attribute__((swift_name("encodeNotNullMark()")));
- (void)encodeNull __attribute__((swift_name("encodeNull()")));
- (void)encodeNullableSerializableElementDescriptor:(id<SharedSerialDescriptor>)descriptor index:(int32_t)index serializer:(id<SharedSerializationStrategy>)serializer value:(id _Nullable)value __attribute__((swift_name("encodeNullableSerializableElement(descriptor:index:serializer:value:)")));
- (void)encodeSerializableElementDescriptor:(id<SharedSerialDescriptor>)descriptor index:(int32_t)index serializer:(id<SharedSerializationStrategy>)serializer value:(id _Nullable)value __attribute__((swift_name("encodeSerializableElement(descriptor:index:serializer:value:)")));
- (void)encodeShortValue:(int16_t)value __attribute__((swift_name("encodeShort(value:)")));
- (void)encodeShortElementDescriptor:(id<SharedSerialDescriptor>)descriptor index:(int32_t)index value:(int16_t)value __attribute__((swift_name("encodeShortElement(descriptor:index:value:)")));
- (void)encodeStringValue:(NSString *)value __attribute__((swift_name("encodeString(value:)")));
- (void)encodeStringElementDescriptor:(id<SharedSerialDescriptor>)descriptor index:(int32_t)index value:(NSString *)value __attribute__((swift_name("encodeStringElement(descriptor:index:value:)")));
- (void)encodeTaggedBooleanTag:(Tag _Nullable)tag value:(BOOL)value __attribute__((swift_name("encodeTaggedBoolean(tag:value:)")));
- (void)encodeTaggedByteTag:(Tag _Nullable)tag value:(int8_t)value __attribute__((swift_name("encodeTaggedByte(tag:value:)")));
- (void)encodeTaggedCharTag:(Tag _Nullable)tag value:(unichar)value __attribute__((swift_name("encodeTaggedChar(tag:value:)")));
- (void)encodeTaggedDoubleTag:(Tag _Nullable)tag value:(double)value __attribute__((swift_name("encodeTaggedDouble(tag:value:)")));
- (void)encodeTaggedEnumTag:(Tag _Nullable)tag enumDescriptor:(id<SharedSerialDescriptor>)enumDescriptor ordinal:(int32_t)ordinal __attribute__((swift_name("encodeTaggedEnum(tag:enumDescriptor:ordinal:)")));
- (void)encodeTaggedFloatTag:(Tag _Nullable)tag value:(float)value __attribute__((swift_name("encodeTaggedFloat(tag:value:)")));
- (id<SharedEncoder_>)encodeTaggedInlineTag:(Tag _Nullable)tag inlineDescriptor:(id<SharedSerialDescriptor>)inlineDescriptor __attribute__((swift_name("encodeTaggedInline(tag:inlineDescriptor:)")));
- (void)encodeTaggedIntTag:(Tag _Nullable)tag value:(int32_t)value __attribute__((swift_name("encodeTaggedInt(tag:value:)")));
- (void)encodeTaggedLongTag:(Tag _Nullable)tag value:(int64_t)value __attribute__((swift_name("encodeTaggedLong(tag:value:)")));
- (void)encodeTaggedNullTag:(Tag _Nullable)tag __attribute__((swift_name("encodeTaggedNull(tag:)")));
- (void)encodeTaggedShortTag:(Tag _Nullable)tag value:(int16_t)value __attribute__((swift_name("encodeTaggedShort(tag:value:)")));
- (void)encodeTaggedStringTag:(Tag _Nullable)tag value:(NSString *)value __attribute__((swift_name("encodeTaggedString(tag:value:)")));
- (void)encodeTaggedValueTag:(Tag _Nullable)tag value:(id)value __attribute__((swift_name("encodeTaggedValue(tag:value:)")));
- (void)endEncodeDescriptor:(id<SharedSerialDescriptor>)descriptor __attribute__((swift_name("endEncode(descriptor:)")));
- (void)endStructureDescriptor:(id<SharedSerialDescriptor>)descriptor __attribute__((swift_name("endStructure(descriptor:)")));
- (Tag _Nullable)popTag __attribute__((swift_name("popTag()")));
- (void)pushTagName:(Tag _Nullable)name __attribute__((swift_name("pushTag(name:)")));
- (Tag _Nullable)getTag:(id<SharedSerialDescriptor>)receiver index:(int32_t)index __attribute__((swift_name("getTag(_:index:)")));
@property (readonly) Tag _Nullable currentTag __attribute__((swift_name("currentTag")));
@property (readonly) Tag _Nullable currentTagOrNull __attribute__((swift_name("currentTagOrNull")));
@property (readonly) SharedSerializersModule *serializersModule __attribute__((swift_name("serializersModule")));
@end;

__attribute__((swift_name("NamedValueEncoder")))
@interface SharedNamedValueEncoder : SharedTaggedEncoder<NSString *>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (NSString *)composeNameParentName:(NSString *)parentName childName:(NSString *)childName __attribute__((swift_name("composeName(parentName:childName:)")));
- (NSString *)elementNameDescriptor:(id<SharedSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("elementName(descriptor:index:)")));
- (NSString *)nestedNestedName:(NSString *)nestedName __attribute__((swift_name("nested(nestedName:)")));
- (NSString *)getTag:(id<SharedSerialDescriptor>)receiver index:(int32_t)index __attribute__((swift_name("getTag(_:index:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PolymorphicModuleBuilder")))
@interface SharedPolymorphicModuleBuilder<__contravariant Base> : SharedBase
- (void)defaultDefaultSerializerProvider:(id<SharedDeserializationStrategy> _Nullable (^)(NSString * _Nullable))defaultSerializerProvider __attribute__((swift_name("default(defaultSerializerProvider:)")));
- (void)subclassSubclass:(id<SharedKotlinKClass>)subclass serializer:(id<SharedKSerializer>)serializer __attribute__((swift_name("subclass(subclass:serializer:)")));
@end;

__attribute__((swift_name("SerializersModule")))
@interface SharedSerializersModule : SharedBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (void)dumpToCollector:(id<SharedSerializersModuleCollector>)collector __attribute__((swift_name("dumpTo(collector:)")));
- (id<SharedKSerializer> _Nullable)getContextualKClass:(id<SharedKotlinKClass>)kClass typeArgumentsSerializers:(NSArray<id<SharedKSerializer>> *)typeArgumentsSerializers __attribute__((swift_name("getContextual(kClass:typeArgumentsSerializers:)")));
- (id<SharedSerializationStrategy> _Nullable)getPolymorphicBaseClass:(id<SharedKotlinKClass>)baseClass value:(id)value __attribute__((swift_name("getPolymorphic(baseClass:value:)")));
- (id<SharedDeserializationStrategy> _Nullable)getPolymorphicBaseClass:(id<SharedKotlinKClass>)baseClass serializedClassName:(NSString * _Nullable)serializedClassName __attribute__((swift_name("getPolymorphic(baseClass:serializedClassName:)")));
@end;

__attribute__((swift_name("SerializersModuleCollector")))
@protocol SharedSerializersModuleCollector
@required
- (void)contextualKClass:(id<SharedKotlinKClass>)kClass provider:(id<SharedKSerializer> (^)(NSArray<id<SharedKSerializer>> *))provider __attribute__((swift_name("contextual(kClass:provider:)")));
- (void)contextualKClass:(id<SharedKotlinKClass>)kClass serializer:(id<SharedKSerializer>)serializer __attribute__((swift_name("contextual(kClass:serializer:)")));
- (void)polymorphicBaseClass:(id<SharedKotlinKClass>)baseClass actualClass:(id<SharedKotlinKClass>)actualClass actualSerializer:(id<SharedKSerializer>)actualSerializer __attribute__((swift_name("polymorphic(baseClass:actualClass:actualSerializer:)")));
- (void)polymorphicDefaultBaseClass:(id<SharedKotlinKClass>)baseClass defaultSerializerProvider:(id<SharedDeserializationStrategy> _Nullable (^)(NSString * _Nullable))defaultSerializerProvider __attribute__((swift_name("polymorphicDefault(baseClass:defaultSerializerProvider:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SerializersModuleBuilder")))
@interface SharedSerializersModuleBuilder : SharedBase <SharedSerializersModuleCollector>
- (void)contextualKClass:(id<SharedKotlinKClass>)kClass provider:(id<SharedKSerializer> (^)(NSArray<id<SharedKSerializer>> *))provider __attribute__((swift_name("contextual(kClass:provider:)")));
- (void)contextualKClass:(id<SharedKotlinKClass>)kClass serializer:(id<SharedKSerializer>)serializer __attribute__((swift_name("contextual(kClass:serializer:)")));
- (void)includeModule:(SharedSerializersModule *)module __attribute__((swift_name("include(module:)")));
- (void)polymorphicBaseClass:(id<SharedKotlinKClass>)baseClass actualClass:(id<SharedKotlinKClass>)actualClass actualSerializer:(id<SharedKSerializer>)actualSerializer __attribute__((swift_name("polymorphic(baseClass:actualClass:actualSerializer:)")));
- (void)polymorphicDefaultBaseClass:(id<SharedKotlinKClass>)baseClass defaultSerializerProvider:(id<SharedDeserializationStrategy> _Nullable (^)(NSString * _Nullable))defaultSerializerProvider __attribute__((swift_name("polymorphicDefault(baseClass:defaultSerializerProvider:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ClassSerialDescriptorBuilder")))
@interface SharedClassSerialDescriptorBuilder : SharedBase
- (void)elementElementName:(NSString *)elementName descriptor:(id<SharedSerialDescriptor>)descriptor annotations:(NSArray<id<SharedKotlinAnnotation>> *)annotations isOptional:(BOOL)isOptional __attribute__((swift_name("element(elementName:descriptor:annotations:isOptional:)")));
@property NSArray<id<SharedKotlinAnnotation>> *annotations __attribute__((swift_name("annotations")));
@property BOOL isNullable __attribute__((swift_name("isNullable")));
@property (readonly) NSString *serialName __attribute__((swift_name("serialName")));
@end;

__attribute__((swift_name("SerialKind")))
@interface SharedSerialKind : SharedBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@end;

__attribute__((swift_name("PolymorphicKind")))
@interface SharedPolymorphicKind : SharedSerialKind
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PolymorphicKind.OPEN")))
@interface SharedPolymorphicKindOPEN : SharedPolymorphicKind
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
+ (instancetype)oPEN __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedPolymorphicKindOPEN *shared __attribute__((swift_name("shared")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PolymorphicKind.SEALED")))
@interface SharedPolymorphicKindSEALED : SharedPolymorphicKind
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
+ (instancetype)sEALED __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedPolymorphicKindSEALED *shared __attribute__((swift_name("shared")));
@end;

__attribute__((swift_name("PrimitiveKind")))
@interface SharedPrimitiveKind : SharedSerialKind
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PrimitiveKind.BOOLEAN")))
@interface SharedPrimitiveKindBOOLEAN : SharedPrimitiveKind
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
+ (instancetype)bOOLEAN __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedPrimitiveKindBOOLEAN *shared __attribute__((swift_name("shared")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PrimitiveKind.BYTE")))
@interface SharedPrimitiveKindBYTE : SharedPrimitiveKind
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
+ (instancetype)bYTE __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedPrimitiveKindBYTE *shared __attribute__((swift_name("shared")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PrimitiveKind.CHAR")))
@interface SharedPrimitiveKindCHAR : SharedPrimitiveKind
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
+ (instancetype)cHAR __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedPrimitiveKindCHAR *shared __attribute__((swift_name("shared")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PrimitiveKind.DOUBLE")))
@interface SharedPrimitiveKindDOUBLE : SharedPrimitiveKind
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
+ (instancetype)dOUBLE __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedPrimitiveKindDOUBLE *shared __attribute__((swift_name("shared")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PrimitiveKind.FLOAT")))
@interface SharedPrimitiveKindFLOAT : SharedPrimitiveKind
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
+ (instancetype)fLOAT __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedPrimitiveKindFLOAT *shared __attribute__((swift_name("shared")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PrimitiveKind.INT")))
@interface SharedPrimitiveKindINT : SharedPrimitiveKind
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
+ (instancetype)iNT __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedPrimitiveKindINT *shared __attribute__((swift_name("shared")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PrimitiveKind.LONG")))
@interface SharedPrimitiveKindLONG : SharedPrimitiveKind
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
+ (instancetype)lONG __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedPrimitiveKindLONG *shared __attribute__((swift_name("shared")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PrimitiveKind.SHORT")))
@interface SharedPrimitiveKindSHORT : SharedPrimitiveKind
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
+ (instancetype)sHORT __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedPrimitiveKindSHORT *shared __attribute__((swift_name("shared")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PrimitiveKind.STRING")))
@interface SharedPrimitiveKindSTRING : SharedPrimitiveKind
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
+ (instancetype)sTRING __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedPrimitiveKindSTRING *shared __attribute__((swift_name("shared")));
@end;

__attribute__((swift_name("SerialDescriptor")))
@protocol SharedSerialDescriptor
@required
- (NSArray<id<SharedKotlinAnnotation>> *)getElementAnnotationsIndex:(int32_t)index __attribute__((swift_name("getElementAnnotations(index:)")));
- (id<SharedSerialDescriptor>)getElementDescriptorIndex:(int32_t)index __attribute__((swift_name("getElementDescriptor(index:)")));
- (int32_t)getElementIndexName:(NSString *)name __attribute__((swift_name("getElementIndex(name:)")));
- (NSString *)getElementNameIndex:(int32_t)index __attribute__((swift_name("getElementName(index:)")));
- (BOOL)isElementOptionalIndex:(int32_t)index __attribute__((swift_name("isElementOptional(index:)")));
@property (readonly) NSArray<id<SharedKotlinAnnotation>> *annotations __attribute__((swift_name("annotations")));
@property (readonly) int32_t elementsCount __attribute__((swift_name("elementsCount")));
@property (readonly) BOOL isInline __attribute__((swift_name("isInline")));
@property (readonly) BOOL isNullable __attribute__((swift_name("isNullable")));
@property (readonly) SharedSerialKind *kind __attribute__((swift_name("kind")));
@property (readonly) NSString *serialName __attribute__((swift_name("serialName")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SerialKind.CONTEXTUAL")))
@interface SharedSerialKindCONTEXTUAL : SharedSerialKind
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
+ (instancetype)cONTEXTUAL __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedSerialKindCONTEXTUAL *shared __attribute__((swift_name("shared")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SerialKind.ENUM")))
@interface SharedSerialKindENUM : SharedSerialKind
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
+ (instancetype)eNUM __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedSerialKindENUM *shared __attribute__((swift_name("shared")));
@end;

__attribute__((swift_name("StructureKind")))
@interface SharedStructureKind : SharedSerialKind
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StructureKind.CLASS")))
@interface SharedStructureKindCLASS : SharedStructureKind
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
+ (instancetype)cLASS __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedStructureKindCLASS *shared __attribute__((swift_name("shared")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StructureKind.LIST")))
@interface SharedStructureKindLIST : SharedStructureKind
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
+ (instancetype)lIST __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedStructureKindLIST *shared __attribute__((swift_name("shared")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StructureKind.MAP")))
@interface SharedStructureKindMAP : SharedStructureKind
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
+ (instancetype)mAP __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedStructureKindMAP *shared __attribute__((swift_name("shared")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StructureKind.OBJECT")))
@interface SharedStructureKindOBJECT : SharedStructureKind
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
+ (instancetype)oBJECT __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedStructureKindOBJECT *shared __attribute__((swift_name("shared")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LongAsStringSerializer")))
@interface SharedLongAsStringSerializer : SharedBase <SharedKSerializer>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)longAsStringSerializer __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedLongAsStringSerializer *shared __attribute__((swift_name("shared")));
- (SharedLong *)deserializeDecoder:(id<SharedDecoder>)decoder __attribute__((swift_name("deserialize(decoder:)")));
- (void)serializeEncoder:(id<SharedEncoder_>)encoder value:(SharedLong *)value __attribute__((swift_name("serialize(encoder:value:)")));
@property (readonly) id<SharedSerialDescriptor> descriptor __attribute__((swift_name("descriptor")));
@end;

__attribute__((swift_name("AbstractDecoder")))
@interface SharedAbstractDecoder : SharedBase <SharedDecoder, SharedCompositeDecoder>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (id<SharedCompositeDecoder>)beginStructureDescriptor:(id<SharedSerialDescriptor>)descriptor __attribute__((swift_name("beginStructure(descriptor:)")));
- (BOOL)decodeBoolean __attribute__((swift_name("decodeBoolean()")));
- (BOOL)decodeBooleanElementDescriptor:(id<SharedSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeBooleanElement(descriptor:index:)")));
- (int8_t)decodeByte __attribute__((swift_name("decodeByte()")));
- (int8_t)decodeByteElementDescriptor:(id<SharedSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeByteElement(descriptor:index:)")));
- (unichar)decodeChar __attribute__((swift_name("decodeChar()")));
- (unichar)decodeCharElementDescriptor:(id<SharedSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeCharElement(descriptor:index:)")));
- (double)decodeDouble __attribute__((swift_name("decodeDouble()")));
- (double)decodeDoubleElementDescriptor:(id<SharedSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeDoubleElement(descriptor:index:)")));
- (int32_t)decodeEnumEnumDescriptor:(id<SharedSerialDescriptor>)enumDescriptor __attribute__((swift_name("decodeEnum(enumDescriptor:)")));
- (float)decodeFloat __attribute__((swift_name("decodeFloat()")));
- (float)decodeFloatElementDescriptor:(id<SharedSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeFloatElement(descriptor:index:)")));
- (id<SharedDecoder>)decodeInlineInlineDescriptor:(id<SharedSerialDescriptor>)inlineDescriptor __attribute__((swift_name("decodeInline(inlineDescriptor:)")));
- (id<SharedDecoder>)decodeInlineElementDescriptor:(id<SharedSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeInlineElement(descriptor:index:)")));
- (int32_t)decodeInt __attribute__((swift_name("decodeInt()")));
- (int32_t)decodeIntElementDescriptor:(id<SharedSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeIntElement(descriptor:index:)")));
- (int64_t)decodeLong __attribute__((swift_name("decodeLong()")));
- (int64_t)decodeLongElementDescriptor:(id<SharedSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeLongElement(descriptor:index:)")));
- (BOOL)decodeNotNullMark __attribute__((swift_name("decodeNotNullMark()")));
- (SharedKotlinNothing * _Nullable)decodeNull __attribute__((swift_name("decodeNull()")));
- (id _Nullable)decodeNullableSerializableElementDescriptor:(id<SharedSerialDescriptor>)descriptor index:(int32_t)index deserializer:(id<SharedDeserializationStrategy>)deserializer previousValue:(id _Nullable)previousValue __attribute__((swift_name("decodeNullableSerializableElement(descriptor:index:deserializer:previousValue:)")));
- (id _Nullable)decodeSerializableElementDescriptor:(id<SharedSerialDescriptor>)descriptor index:(int32_t)index deserializer:(id<SharedDeserializationStrategy>)deserializer previousValue:(id _Nullable)previousValue __attribute__((swift_name("decodeSerializableElement(descriptor:index:deserializer:previousValue:)")));
- (id _Nullable)decodeSerializableValueDeserializer:(id<SharedDeserializationStrategy>)deserializer previousValue:(id _Nullable)previousValue __attribute__((swift_name("decodeSerializableValue(deserializer:previousValue:)")));
- (int16_t)decodeShort __attribute__((swift_name("decodeShort()")));
- (int16_t)decodeShortElementDescriptor:(id<SharedSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeShortElement(descriptor:index:)")));
- (NSString *)decodeString __attribute__((swift_name("decodeString()")));
- (NSString *)decodeStringElementDescriptor:(id<SharedSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeStringElement(descriptor:index:)")));
- (id)decodeValue __attribute__((swift_name("decodeValue()")));
- (void)endStructureDescriptor:(id<SharedSerialDescriptor>)descriptor __attribute__((swift_name("endStructure(descriptor:)")));
@end;

__attribute__((swift_name("AbstractEncoder")))
@interface SharedAbstractEncoder : SharedBase <SharedEncoder_, SharedCompositeEncoder>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (id<SharedCompositeEncoder>)beginStructureDescriptor:(id<SharedSerialDescriptor>)descriptor __attribute__((swift_name("beginStructure(descriptor:)")));
- (void)encodeBooleanValue:(BOOL)value __attribute__((swift_name("encodeBoolean(value:)")));
- (void)encodeBooleanElementDescriptor:(id<SharedSerialDescriptor>)descriptor index:(int32_t)index value:(BOOL)value __attribute__((swift_name("encodeBooleanElement(descriptor:index:value:)")));
- (void)encodeByteValue:(int8_t)value __attribute__((swift_name("encodeByte(value:)")));
- (void)encodeByteElementDescriptor:(id<SharedSerialDescriptor>)descriptor index:(int32_t)index value:(int8_t)value __attribute__((swift_name("encodeByteElement(descriptor:index:value:)")));
- (void)encodeCharValue:(unichar)value __attribute__((swift_name("encodeChar(value:)")));
- (void)encodeCharElementDescriptor:(id<SharedSerialDescriptor>)descriptor index:(int32_t)index value:(unichar)value __attribute__((swift_name("encodeCharElement(descriptor:index:value:)")));
- (void)encodeDoubleValue:(double)value __attribute__((swift_name("encodeDouble(value:)")));
- (void)encodeDoubleElementDescriptor:(id<SharedSerialDescriptor>)descriptor index:(int32_t)index value:(double)value __attribute__((swift_name("encodeDoubleElement(descriptor:index:value:)")));
- (BOOL)encodeElementDescriptor:(id<SharedSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("encodeElement(descriptor:index:)")));
- (void)encodeEnumEnumDescriptor:(id<SharedSerialDescriptor>)enumDescriptor index:(int32_t)index __attribute__((swift_name("encodeEnum(enumDescriptor:index:)")));
- (void)encodeFloatValue:(float)value __attribute__((swift_name("encodeFloat(value:)")));
- (void)encodeFloatElementDescriptor:(id<SharedSerialDescriptor>)descriptor index:(int32_t)index value:(float)value __attribute__((swift_name("encodeFloatElement(descriptor:index:value:)")));
- (id<SharedEncoder_>)encodeInlineInlineDescriptor:(id<SharedSerialDescriptor>)inlineDescriptor __attribute__((swift_name("encodeInline(inlineDescriptor:)")));
- (id<SharedEncoder_>)encodeInlineElementDescriptor:(id<SharedSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("encodeInlineElement(descriptor:index:)")));
- (void)encodeIntValue:(int32_t)value __attribute__((swift_name("encodeInt(value:)")));
- (void)encodeIntElementDescriptor:(id<SharedSerialDescriptor>)descriptor index:(int32_t)index value:(int32_t)value __attribute__((swift_name("encodeIntElement(descriptor:index:value:)")));
- (void)encodeLongValue:(int64_t)value __attribute__((swift_name("encodeLong(value:)")));
- (void)encodeLongElementDescriptor:(id<SharedSerialDescriptor>)descriptor index:(int32_t)index value:(int64_t)value __attribute__((swift_name("encodeLongElement(descriptor:index:value:)")));
- (void)encodeNull __attribute__((swift_name("encodeNull()")));
- (void)encodeNullableSerializableElementDescriptor:(id<SharedSerialDescriptor>)descriptor index:(int32_t)index serializer:(id<SharedSerializationStrategy>)serializer value:(id _Nullable)value __attribute__((swift_name("encodeNullableSerializableElement(descriptor:index:serializer:value:)")));
- (void)encodeSerializableElementDescriptor:(id<SharedSerialDescriptor>)descriptor index:(int32_t)index serializer:(id<SharedSerializationStrategy>)serializer value:(id _Nullable)value __attribute__((swift_name("encodeSerializableElement(descriptor:index:serializer:value:)")));
- (void)encodeShortValue:(int16_t)value __attribute__((swift_name("encodeShort(value:)")));
- (void)encodeShortElementDescriptor:(id<SharedSerialDescriptor>)descriptor index:(int32_t)index value:(int16_t)value __attribute__((swift_name("encodeShortElement(descriptor:index:value:)")));
- (void)encodeStringValue:(NSString *)value __attribute__((swift_name("encodeString(value:)")));
- (void)encodeStringElementDescriptor:(id<SharedSerialDescriptor>)descriptor index:(int32_t)index value:(NSString *)value __attribute__((swift_name("encodeStringElement(descriptor:index:value:)")));
- (void)encodeValueValue:(id)value __attribute__((swift_name("encodeValue(value:)")));
- (void)endStructureDescriptor:(id<SharedSerialDescriptor>)descriptor __attribute__((swift_name("endStructure(descriptor:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CompositeDecoderCompanion")))
@interface SharedCompositeDecoderCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedCompositeDecoderCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) int32_t DECODE_DONE __attribute__((swift_name("DECODE_DONE")));
@property (readonly) int32_t UNKNOWN_NAME __attribute__((swift_name("UNKNOWN_NAME")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Platform_")))
@interface SharedPlatform_ : SharedBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end;

@interface SharedCountry (Extensions)
- (SharedCountryDaoModel *)toCountryDaoModel __attribute__((swift_name("toCountryDaoModel()")));
@end;

@interface SharedCountryDaoModel (Extensions)
- (SharedCountry *)toCountryDomainModel __attribute__((swift_name("toCountryDomainModel()")));
@end;

@interface SharedMotherTongue (Extensions)
- (SharedMotherTongueDaoModel *)toMotherTongueDaoModel __attribute__((swift_name("toMotherTongueDaoModel()")));
@end;

@interface SharedMotherTongueDaoModel (Extensions)
- (SharedMotherTongue *)toMotherTongueDomainModel __attribute__((swift_name("toMotherTongueDomainModel()")));
@end;

@interface SharedPhotoPrivacyOption (Extensions)
- (SharedPhotoPrivacyOptionDaoModel *)toPhotoPrivacyOptionDaoModel __attribute__((swift_name("toPhotoPrivacyOptionDaoModel()")));
@end;

@interface SharedPhotoPrivacyOptionDaoModel (Extensions)
- (SharedPhotoPrivacyOption *)toPhotoPrivacyOptionDomainModel __attribute__((swift_name("toPhotoPrivacyOptionDomainModel()")));
@end;

@interface SharedReligion (Extensions)
- (SharedReligionDaoModel *)toReligionDaoModel __attribute__((swift_name("toReligionDaoModel()")));
@end;

@interface SharedReligionDaoModel (Extensions)
- (SharedReligion *)toReligionDomainModel __attribute__((swift_name("toReligionDomainModel()")));
@end;

@interface SharedCountryNetworkModel (Extensions)
- (SharedCountryDaoModel *)toCountryDaoModel __attribute__((swift_name("toCountryDaoModel()")));
@end;

@interface SharedMotherTongueNetworkModel (Extensions)
- (SharedMotherTongueDaoModel *)toMotherTongueDaoModel __attribute__((swift_name("toMotherTongueDaoModel()")));
@end;

@interface SharedGenericLookupItemNetworkModel (Extensions)
- (SharedPhotoPrivacyOptionDaoModel *)toPhotoPrivacyOptionDaoModel __attribute__((swift_name("toPhotoPrivacyOptionDaoModel()")));
@end;

@interface SharedReligionNetworkModel (Extensions)
- (SharedReligionDaoModel *)toReligionDaoModel __attribute__((swift_name("toReligionDaoModel()")));
@end;

@interface SharedCountryPhoneCode (Extensions)
- (SharedCountryPhoneCodeDaoModel *)toCountryPhoneCodeDaoModel __attribute__((swift_name("toCountryPhoneCodeDaoModel()")));
@end;

@interface SharedCountryPhoneCodeDaoModel (Extensions)
- (SharedCountryPhoneCode *)toCountryPhoneCodeDomainModel __attribute__((swift_name("toCountryPhoneCodeDomainModel()")));
@end;

@interface SharedCountryPhoneCodeNetworkModel (Extensions)
- (SharedCountryPhoneCodeDaoModel *)toCountryPhoneCodeDaoModel __attribute__((swift_name("toCountryPhoneCodeDaoModel()")));
@end;

@interface SharedLoggerCompanion (Extensions)
@property (readonly) id<SharedLogger> DEFAULT __attribute__((swift_name("DEFAULT")));
@property (readonly) id<SharedLogger> EMPTY __attribute__((swift_name("EMPTY")));
@property (readonly) id<SharedLogger> SIMPLE __attribute__((swift_name("SIMPLE")));
@end;

@interface SharedHttpClientConfig (Extensions)
- (void)LoggingBlock:(void (^)(SharedLoggingConfig *))block __attribute__((swift_name("Logging(block:)")));
- (void)JsonBlock:(void (^)(SharedJsonFeatureConfig *))block __attribute__((swift_name("Json(block:)")));
- (void)BrowserUserAgent __attribute__((swift_name("BrowserUserAgent()")));
- (void)CharsetsBlock:(void (^)(SharedHttpPlainTextConfig *))block __attribute__((swift_name("Charsets(block:)")));
- (void)CurlUserAgent __attribute__((swift_name("CurlUserAgent()")));
- (void)HttpResponseValidatorBlock:(void (^)(SharedHttpCallValidatorConfig *))block __attribute__((swift_name("HttpResponseValidator(block:)")));
- (void)addDefaultResponseValidation __attribute__((swift_name("addDefaultResponseValidation()")));
- (void)defaultRequestBlock:(void (^)(SharedHttpRequestBuilder *))block __attribute__((swift_name("defaultRequest(block:)")));
- (void)ResponseObserverBlock:(id<SharedKotlinSuspendFunction1>)block __attribute__((swift_name("ResponseObserver(block:)")));
- (void)WebSocketsConfig:(void (^)(SharedWebSocketsConfig *))config __attribute__((swift_name("WebSockets(config:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinPair")))
@interface SharedKotlinPair<__covariant A, __covariant B> : SharedBase
- (instancetype)initWithFirst:(A _Nullable)first second:(B _Nullable)second __attribute__((swift_name("init(first:second:)"))) __attribute__((objc_designated_initializer));
- (A _Nullable)component1 __attribute__((swift_name("component1()")));
- (B _Nullable)component2 __attribute__((swift_name("component2()")));
- (SharedKotlinPair<A, B> *)doCopyFirst:(A _Nullable)first second:(B _Nullable)second __attribute__((swift_name("doCopy(first:second:)")));
- (BOOL)equalsOther:(id _Nullable)other __attribute__((swift_name("equals(other:)")));
- (int32_t)hashCode __attribute__((swift_name("hashCode()")));
- (NSString *)toString __attribute__((swift_name("toString()")));
@property (readonly) A _Nullable first __attribute__((swift_name("first")));
@property (readonly) B _Nullable second __attribute__((swift_name("second")));
@end;

@interface SharedKotlinPair (Extensions)
- (SharedKotlinPair<id, id> *)shouldHaveFirstA:(id _Nullable)a __attribute__((swift_name("shouldHaveFirst(a:)")));
- (SharedKotlinPair<id, id> *)shouldHaveSecondB:(id _Nullable)b __attribute__((swift_name("shouldHaveSecond(b:)")));
- (SharedKotlinPair<id, id> *)shouldNotHaveFirstA:(id _Nullable)a __attribute__((swift_name("shouldNotHaveFirst(a:)")));
- (SharedKotlinPair<id, id> *)shouldNotHaveSecondB:(id _Nullable)b __attribute__((swift_name("shouldNotHaveSecond(b:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinTriple")))
@interface SharedKotlinTriple<__covariant A, __covariant B, __covariant C> : SharedBase
- (instancetype)initWithFirst:(A _Nullable)first second:(B _Nullable)second third:(C _Nullable)third __attribute__((swift_name("init(first:second:third:)"))) __attribute__((objc_designated_initializer));
- (A _Nullable)component1 __attribute__((swift_name("component1()")));
- (B _Nullable)component2 __attribute__((swift_name("component2()")));
- (C _Nullable)component3 __attribute__((swift_name("component3()")));
- (SharedKotlinTriple<A, B, C> *)doCopyFirst:(A _Nullable)first second:(B _Nullable)second third:(C _Nullable)third __attribute__((swift_name("doCopy(first:second:third:)")));
- (BOOL)equalsOther:(id _Nullable)other __attribute__((swift_name("equals(other:)")));
- (int32_t)hashCode __attribute__((swift_name("hashCode()")));
- (NSString *)toString __attribute__((swift_name("toString()")));
@property (readonly) A _Nullable first __attribute__((swift_name("first")));
@property (readonly) B _Nullable second __attribute__((swift_name("second")));
@property (readonly) C _Nullable third __attribute__((swift_name("third")));
@end;

@interface SharedKotlinTriple (Extensions)
- (SharedKotlinTriple<id, id, id> *)shouldHaveFirstA:(id _Nullable)a __attribute__((swift_name("shouldHaveFirst(a:)")));
- (SharedKotlinTriple<id, id, id> *)shouldHaveSecondB:(id _Nullable)b __attribute__((swift_name("shouldHaveSecond(b:)")));
- (SharedKotlinTriple<id, id, id> *)shouldHaveThirdC:(id _Nullable)c __attribute__((swift_name("shouldHaveThird(c:)")));
- (SharedKotlinTriple<id, id, id> *)shouldNotHaveFirstA:(id _Nullable)a __attribute__((swift_name("shouldNotHaveFirst(a:)")));
- (SharedKotlinTriple<id, id, id> *)shouldNotHaveSecondB:(id _Nullable)b __attribute__((swift_name("shouldNotHaveSecond(b:)")));
- (SharedKotlinTriple<id, id, id> *)shouldNotHaveThirdC:(id _Nullable)c __attribute__((swift_name("shouldNotHaveThird(c:)")));
@end;

__attribute__((swift_name("KotlinNumber")))
@interface SharedKotlinNumber : SharedBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (int8_t)toByte __attribute__((swift_name("toByte()")));
- (unichar)toChar __attribute__((swift_name("toChar()")));
- (double)toDouble __attribute__((swift_name("toDouble()")));
- (float)toFloat __attribute__((swift_name("toFloat()")));
- (int32_t)toInt __attribute__((swift_name("toInt()")));
- (int64_t)toLong __attribute__((swift_name("toLong()")));
- (int16_t)toShort __attribute__((swift_name("toShort()")));
@end;

@interface SharedKotlinNumber (Extensions)
@property (readonly) SharedPercentage *percent __attribute__((swift_name("percent")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinRegex")))
@interface SharedKotlinRegex : SharedBase
- (instancetype)initWithPattern:(NSString *)pattern __attribute__((swift_name("init(pattern:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithPattern:(NSString *)pattern option:(SharedKotlinRegexOption *)option __attribute__((swift_name("init(pattern:option:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithPattern:(NSString *)pattern options:(NSSet<SharedKotlinRegexOption *> *)options __attribute__((swift_name("init(pattern:options:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedKotlinRegexCompanion *companion __attribute__((swift_name("companion")));
- (BOOL)containsMatchInInput:(id)input __attribute__((swift_name("containsMatchIn(input:)")));
- (id<SharedKotlinMatchResult> _Nullable)findInput:(id)input startIndex:(int32_t)startIndex __attribute__((swift_name("find(input:startIndex:)")));
- (id<SharedKotlinSequence>)findAllInput:(id)input startIndex:(int32_t)startIndex __attribute__((swift_name("findAll(input:startIndex:)")));
- (id<SharedKotlinMatchResult> _Nullable)matchAtInput:(id)input index:(int32_t)index __attribute__((swift_name("matchAt(input:index:)")));
- (id<SharedKotlinMatchResult> _Nullable)matchEntireInput:(id)input __attribute__((swift_name("matchEntire(input:)")));
- (BOOL)matchesInput:(id)input __attribute__((swift_name("matches(input:)")));
- (BOOL)matchesAtInput:(id)input index:(int32_t)index __attribute__((swift_name("matchesAt(input:index:)")));
- (NSString *)replaceInput:(id)input transform:(id (^)(id<SharedKotlinMatchResult>))transform __attribute__((swift_name("replace(input:transform:)")));
- (NSString *)replaceInput:(id)input replacement:(NSString *)replacement __attribute__((swift_name("replace(input:replacement:)")));
- (NSString *)replaceFirstInput:(id)input replacement:(NSString *)replacement __attribute__((swift_name("replaceFirst(input:replacement:)")));
- (NSArray<NSString *> *)splitInput:(id)input limit:(int32_t)limit __attribute__((swift_name("split(input:limit:)")));
- (id<SharedKotlinSequence>)splitToSequenceInput:(id)input limit:(int32_t)limit __attribute__((swift_name("splitToSequence(input:limit:)")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSSet<SharedKotlinRegexOption *> *options __attribute__((swift_name("options")));
@property (readonly) NSString *pattern __attribute__((swift_name("pattern")));
@end;

@interface SharedKotlinRegex (Extensions)
- (void)shouldBeRegexAnotherRegex:(SharedKotlinRegex *)anotherRegex __attribute__((swift_name("shouldBeRegex(anotherRegex:)")));
- (void)shouldHaveExactRegexOptionsRegexOptions:(NSSet<SharedKotlinRegexOption *> *)regexOptions __attribute__((swift_name("shouldHaveExactRegexOptions(regexOptions:)")));
- (void)shouldHavePatternRegexPattern:(NSString *)regexPattern __attribute__((swift_name("shouldHavePattern(regexPattern:)")));
- (void)shouldIncludeRegexOptionRegexOption:(SharedKotlinRegexOption *)regexOption __attribute__((swift_name("shouldIncludeRegexOption(regexOption:)")));
- (void)shouldIncludeRegexOptionsRegexOptions:(NSSet<SharedKotlinRegexOption *> *)regexOptions __attribute__((swift_name("shouldIncludeRegexOptions(regexOptions:)")));
- (void)shouldNotBeRegexAnotherRegex:(SharedKotlinRegex *)anotherRegex __attribute__((swift_name("shouldNotBeRegex(anotherRegex:)")));
- (void)shouldNotHaveExactRegexOptionsRegexOptions:(NSSet<SharedKotlinRegexOption *> *)regexOptions __attribute__((swift_name("shouldNotHaveExactRegexOptions(regexOptions:)")));
- (void)shouldNotHavePatternRegexPattern:(NSString *)regexPattern __attribute__((swift_name("shouldNotHavePattern(regexPattern:)")));
- (void)shouldNotIncludeRegexOptionRegexOption:(SharedKotlinRegexOption *)regexOption __attribute__((swift_name("shouldNotIncludeRegexOption(regexOption:)")));
- (void)shouldNotIncludeRegexOptionsRegexOptions:(NSSet<SharedKotlinRegexOption *> *)regexOptions __attribute__((swift_name("shouldNotIncludeRegexOptions(regexOptions:)")));
@end;

@interface SharedKotlinThrowable (Extensions)
- (void)shouldHaveCauseBlock:(void (^)(SharedKotlinThrowable *))block __attribute__((swift_name("shouldHaveCause(block:)")));
- (void)shouldHaveCauseInstanceOf __attribute__((swift_name("shouldHaveCauseInstanceOf()")));
- (void)shouldHaveCauseOfType __attribute__((swift_name("shouldHaveCauseOfType()")));
- (void)shouldHaveMessageMessage:(NSString *)message __attribute__((swift_name("shouldHaveMessage(message:)")));
- (void)shouldHaveMessageMessage_:(SharedKotlinRegex *)message __attribute__((swift_name("shouldHaveMessage(message_:)")));
- (void)shouldNotHaveCause __attribute__((swift_name("shouldNotHaveCause()")));
- (void)shouldNotHaveCauseInstanceOf __attribute__((swift_name("shouldNotHaveCauseInstanceOf()")));
- (void)shouldNotHaveCauseOfType __attribute__((swift_name("shouldNotHaveCauseOfType()")));
- (void)shouldNotHaveMessageMessage:(NSString *)message __attribute__((swift_name("shouldNotHaveMessage(message:)")));
- (void)shouldNotHaveMessageMessage_:(SharedKotlinRegex *)message __attribute__((swift_name("shouldNotHaveMessage(message_:)")));
- (SharedKotlinThrowable *)unwrapCancellationException __attribute__((swift_name("unwrapCancellationException()")));
- (void)printStack __attribute__((swift_name("printStack()")));
@property (readonly) SharedKotlinThrowable * _Nullable rootCause __attribute__((swift_name("rootCause")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinArray")))
@interface SharedKotlinArray<T> : SharedBase
+ (instancetype)arrayWithSize:(int32_t)size init:(T _Nullable (^)(SharedInt *))init __attribute__((swift_name("init(size:init:)")));
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (T _Nullable)getIndex:(int32_t)index __attribute__((swift_name("get(index:)")));
- (id<SharedKotlinIterator>)iterator __attribute__((swift_name("iterator()")));
- (void)setIndex:(int32_t)index value:(T _Nullable)value __attribute__((swift_name("set(index:value:)")));
@property (readonly) int32_t size __attribute__((swift_name("size")));
@end;

@interface SharedKotlinArray (Extensions)
- (SharedKotlinArray<id> *)shouldBeEmpty __attribute__((swift_name("shouldBeEmpty()")));
- (SharedKotlinArray<id> *)shouldBeLargerThanOther:(SharedKotlinArray<id> *)other __attribute__((swift_name("shouldBeLargerThan(other:)")));
- (SharedKotlinArray<id> *)shouldBeLargerThanOther_:(id)other __attribute__((swift_name("shouldBeLargerThan(other_:)")));
- (SharedKotlinArray<id> *)shouldBeMonotonicallyDecreasing __attribute__((swift_name("shouldBeMonotonicallyDecreasing()")));
- (SharedKotlinArray<id> *)shouldBeMonotonicallyDecreasingWithComparator:(id<SharedKotlinComparator>)comparator __attribute__((swift_name("shouldBeMonotonicallyDecreasingWith(comparator:)")));
- (SharedKotlinArray<id> *)shouldBeMonotonicallyIncreasing __attribute__((swift_name("shouldBeMonotonicallyIncreasing()")));
- (SharedKotlinArray<id> *)shouldBeMonotonicallyIncreasingWithComparator:(id<SharedKotlinComparator>)comparator __attribute__((swift_name("shouldBeMonotonicallyIncreasingWith(comparator:)")));
- (SharedKotlinArray<id> *)shouldBeSameSizeAsOther:(SharedKotlinArray<id> *)other __attribute__((swift_name("shouldBeSameSizeAs(other:)")));
- (SharedKotlinArray<id> *)shouldBeSameSizeAsOther_:(id)other __attribute__((swift_name("shouldBeSameSizeAs(other_:)")));
- (SharedKotlinArray<id> *)shouldBeSingleton __attribute__((swift_name("shouldBeSingleton()")));
- (SharedKotlinArray<id> *)shouldBeSingletonFn:(void (^)(id _Nullable))fn __attribute__((swift_name("shouldBeSingleton(fn:)")));
- (SharedKotlinArray<id> *)shouldBeSmallerThanOther:(SharedKotlinArray<id> *)other __attribute__((swift_name("shouldBeSmallerThan(other:)")));
- (SharedKotlinArray<id> *)shouldBeSmallerThanOther_:(id)other __attribute__((swift_name("shouldBeSmallerThan(other_:)")));
- (SharedKotlinArray<id> *)shouldBeSorted __attribute__((swift_name("shouldBeSorted()")));
- (SharedKotlinArray<id> *)shouldBeSortedWithCmp:(SharedInt *(^)(id _Nullable, id _Nullable))cmp __attribute__((swift_name("shouldBeSortedWith(cmp:)")));
- (SharedKotlinArray<id> *)shouldBeSortedWithComparator:(id<SharedKotlinComparator>)comparator __attribute__((swift_name("shouldBeSortedWith(comparator:)")));
- (SharedKotlinArray<id> *)shouldBeStrictlyDecreasingWithComparator:(id<SharedKotlinComparator>)comparator __attribute__((swift_name("shouldBeStrictlyDecreasingWith(comparator:)")));
- (SharedKotlinArray<id> *)shouldBeStrictlyIncreasing __attribute__((swift_name("shouldBeStrictlyIncreasing()")));
- (void)shouldBeStrictlyIncreasingWithComparator:(id<SharedKotlinComparator>)comparator __attribute__((swift_name("shouldBeStrictlyIncreasingWith(comparator:)")));
- (SharedKotlinArray<id> *)shouldBeUnique __attribute__((swift_name("shouldBeUnique()")));
- (SharedKotlinArray<id> *)shouldContainT:(id _Nullable)t __attribute__((swift_name("shouldContain(t:)")));
- (void)shouldContainAllTs:(SharedKotlinArray<id> *)ts __attribute__((swift_name("shouldContainAll(ts:)")));
- (void)shouldContainAllTs_:(id)ts __attribute__((swift_name("shouldContainAll(ts_:)")));
- (void)shouldContainAnyOfTs:(SharedKotlinArray<id> *)ts __attribute__((swift_name("shouldContainAnyOf(ts:)")));
- (void)shouldContainAnyOfTs_:(id)ts __attribute__((swift_name("shouldContainAnyOf(ts_:)")));
- (void)shouldContainDuplicates __attribute__((swift_name("shouldContainDuplicates()")));
- (void)shouldContainExactlyExpected:(SharedKotlinArray<id> *)expected __attribute__((swift_name("shouldContainExactly(expected:)")));
- (void)shouldContainExactlyExpected_:(SharedKotlinArray<id> *)expected __attribute__((swift_name("shouldContainExactly(expected_:)")));
- (SharedKotlinArray<id> *)shouldContainExactlyInAnyOrderExpected:(SharedKotlinArray<id> *)expected __attribute__((swift_name("shouldContainExactlyInAnyOrder(expected:)")));
- (void)shouldContainInOrderTs:(SharedKotlinArray<id> *)ts __attribute__((swift_name("shouldContainInOrder(ts:)")));
- (void)shouldContainInOrderExpected:(NSArray<id> *)expected __attribute__((swift_name("shouldContainInOrder(expected:)")));
- (SharedKotlinArray<id> *)shouldContainNoNulls __attribute__((swift_name("shouldContainNoNulls()")));
- (SharedKotlinArray<id> *)shouldContainNull __attribute__((swift_name("shouldContainNull()")));
- (SharedKotlinArray<id> *)shouldContainOnlyNulls __attribute__((swift_name("shouldContainOnlyNulls()")));
- (void)shouldEndWithElement:(id _Nullable)element __attribute__((swift_name("shouldEndWith(element:)")));
- (void)shouldEndWithSlice:(SharedKotlinArray<id> *)slice __attribute__((swift_name("shouldEndWith(slice:)")));
- (void)shouldEndWithSlice_:(id)slice __attribute__((swift_name("shouldEndWith(slice_:)")));
- (void)shouldExistP:(SharedBoolean *(^)(id _Nullable))p __attribute__((swift_name("shouldExist(p:)")));
- (void)shouldExistInOrderPs:(SharedKotlinArray<SharedBoolean *(^)(id _Nullable)> *)ps __attribute__((swift_name("shouldExistInOrder(ps:)")));
- (void)shouldExistInOrderExpected:(NSArray<SharedBoolean *(^)(id _Nullable)> *)expected __attribute__((swift_name("shouldExistInOrder(expected:)")));
- (SharedKotlinArray<id> *)shouldHaveAtLeastSizeN:(int32_t)n __attribute__((swift_name("shouldHaveAtLeastSize(n:)")));
- (SharedKotlinArray<id> *)shouldHaveAtMostSizeN:(int32_t)n __attribute__((swift_name("shouldHaveAtMostSize(n:)")));
- (void)shouldHaveElementAtIndex:(int32_t)index element:(id _Nullable)element __attribute__((swift_name("shouldHaveElementAt(index:element:)")));
- (SharedKotlinArray<id> *)shouldHaveLowerBoundT:(id)t __attribute__((swift_name("shouldHaveLowerBound(t:)")));
- (void)shouldHaveSingleElementP:(SharedBoolean *(^)(id _Nullable))p __attribute__((swift_name("shouldHaveSingleElement(p:)")));
- (SharedKotlinArray<id> *)shouldHaveSingleElementT:(id _Nullable)t __attribute__((swift_name("shouldHaveSingleElement(t:)")));
- (SharedKotlinArray<id> *)shouldHaveSizeSize:(int32_t)size __attribute__((swift_name("shouldHaveSize(size:)")));
- (SharedKotlinArray<id> *)shouldHaveUpperBoundT:(id)t __attribute__((swift_name("shouldHaveUpperBound(t:)")));
- (SharedKotlinArray<id> *)shouldNotBeEmpty __attribute__((swift_name("shouldNotBeEmpty()")));
- (SharedKotlinArray<id> *)shouldNotBeMonotonicallyDecreasing __attribute__((swift_name("shouldNotBeMonotonicallyDecreasing()")));
- (SharedKotlinArray<id> *)shouldNotBeMonotonicallyDecreasingWithComparator:(id<SharedKotlinComparator>)comparator __attribute__((swift_name("shouldNotBeMonotonicallyDecreasingWith(comparator:)")));
- (SharedKotlinArray<id> *)shouldNotBeMonotonicallyIncreasing __attribute__((swift_name("shouldNotBeMonotonicallyIncreasing()")));
- (SharedKotlinArray<id> *)shouldNotBeMonotonicallyIncreasingWithComparator:(id<SharedKotlinComparator>)comparator __attribute__((swift_name("shouldNotBeMonotonicallyIncreasingWith(comparator:)")));
- (SharedKotlinArray<id> *)shouldNotBeSingleton __attribute__((swift_name("shouldNotBeSingleton()")));
- (SharedKotlinArray<id> *)shouldNotBeSorted __attribute__((swift_name("shouldNotBeSorted()")));
- (SharedKotlinArray<id> *)shouldNotBeSortedWithCmp:(SharedInt *(^)(id _Nullable, id _Nullable))cmp __attribute__((swift_name("shouldNotBeSortedWith(cmp:)")));
- (SharedKotlinArray<id> *)shouldNotBeSortedWithComparator:(id<SharedKotlinComparator>)comparator __attribute__((swift_name("shouldNotBeSortedWith(comparator:)")));
- (void)shouldNotBeStrictlyDecreasingWithComparator:(id<SharedKotlinComparator>)comparator __attribute__((swift_name("shouldNotBeStrictlyDecreasingWith(comparator:)")));
- (SharedKotlinArray<id> *)shouldNotBeStrictlyIncreasing __attribute__((swift_name("shouldNotBeStrictlyIncreasing()")));
- (void)shouldNotBeStrictlyIncreasingWithComparator:(id<SharedKotlinComparator>)comparator __attribute__((swift_name("shouldNotBeStrictlyIncreasingWith(comparator:)")));
- (SharedKotlinArray<id> *)shouldNotBeUnique __attribute__((swift_name("shouldNotBeUnique()")));
- (SharedKotlinArray<id> *)shouldNotContainT:(id _Nullable)t __attribute__((swift_name("shouldNotContain(t:)")));
- (void)shouldNotContainAllTs:(SharedKotlinArray<id> *)ts __attribute__((swift_name("shouldNotContainAll(ts:)")));
- (void)shouldNotContainAllTs_:(id)ts __attribute__((swift_name("shouldNotContainAll(ts_:)")));
- (void)shouldNotContainAnyOfTs:(SharedKotlinArray<id> *)ts __attribute__((swift_name("shouldNotContainAnyOf(ts:)")));
- (void)shouldNotContainAnyOfTs_:(id)ts __attribute__((swift_name("shouldNotContainAnyOf(ts_:)")));
- (SharedKotlinArray<id> *)shouldNotContainDuplicates __attribute__((swift_name("shouldNotContainDuplicates()")));
- (void)shouldNotContainExactlyExpected:(SharedKotlinArray<id> *)expected __attribute__((swift_name("shouldNotContainExactly(expected:)")));
- (void)shouldNotContainExactlyExpected_:(SharedKotlinArray<id> *)expected __attribute__((swift_name("shouldNotContainExactly(expected_:)")));
- (SharedKotlinArray<id> *)shouldNotContainExactlyInAnyOrderExpected:(SharedKotlinArray<id> *)expected __attribute__((swift_name("shouldNotContainExactlyInAnyOrder(expected:)")));
- (void)shouldNotContainInOrderExpected:(SharedKotlinArray<id> *)expected __attribute__((swift_name("shouldNotContainInOrder(expected:)")));
- (void)shouldNotContainInOrderExpected_:(NSArray<id> *)expected __attribute__((swift_name("shouldNotContainInOrder(expected_:)")));
- (SharedKotlinArray<id> *)shouldNotContainNoNulls __attribute__((swift_name("shouldNotContainNoNulls()")));
- (SharedKotlinArray<id> *)shouldNotContainNull __attribute__((swift_name("shouldNotContainNull()")));
- (SharedKotlinArray<id> *)shouldNotContainOnlyNulls __attribute__((swift_name("shouldNotContainOnlyNulls()")));
- (void)shouldNotEndWithElement:(id _Nullable)element __attribute__((swift_name("shouldNotEndWith(element:)")));
- (void)shouldNotEndWithSlice:(SharedKotlinArray<id> *)slice __attribute__((swift_name("shouldNotEndWith(slice:)")));
- (void)shouldNotEndWithSlice_:(id)slice __attribute__((swift_name("shouldNotEndWith(slice_:)")));
- (void)shouldNotExistInOrderExpected:(SharedKotlinArray<SharedBoolean *(^)(id _Nullable)> *)expected __attribute__((swift_name("shouldNotExistInOrder(expected:)")));
- (void)shouldNotExistInOrderExpected_:(NSArray<SharedBoolean *(^)(id _Nullable)> *)expected __attribute__((swift_name("shouldNotExistInOrder(expected_:)")));
- (void)shouldNotHaveElementAtIndex:(int32_t)index element:(id _Nullable)element __attribute__((swift_name("shouldNotHaveElementAt(index:element:)")));
- (void)shouldNotHaveSingleElementT:(id _Nullable)t __attribute__((swift_name("shouldNotHaveSingleElement(t:)")));
- (SharedKotlinArray<id> *)shouldNotHaveSizeSize:(int32_t)size __attribute__((swift_name("shouldNotHaveSize(size:)")));
- (void)shouldNotStartWithElement:(id _Nullable)element __attribute__((swift_name("shouldNotStartWith(element:)")));
- (void)shouldNotStartWithSlice:(SharedKotlinArray<id> *)slice __attribute__((swift_name("shouldNotStartWith(slice:)")));
- (void)shouldNotStartWithSlice_:(id)slice __attribute__((swift_name("shouldNotStartWith(slice_:)")));
- (void)shouldStartWithElement:(id _Nullable)element __attribute__((swift_name("shouldStartWith(element:)")));
- (void)shouldStartWithSlice:(SharedKotlinArray<id> *)slice __attribute__((swift_name("shouldStartWith(slice:)")));
- (void)shouldStartWithSlice_:(id)slice __attribute__((swift_name("shouldStartWith(slice_:)")));
- (SharedKotlinArray<id> *)forAllFn:(void (^)(id _Nullable))fn __attribute__((swift_name("forAll(fn:)")));
- (SharedKotlinArray<id> *)forAnyFn:(void (^)(id _Nullable))fn __attribute__((swift_name("forAny(fn:)")));
- (SharedKotlinArray<id> *)forAtLeastK:(int32_t)k fn:(void (^)(id _Nullable))fn __attribute__((swift_name("forAtLeast(k:fn:)")));
- (SharedKotlinArray<id> *)forAtLeastOneFn:(void (^)(id _Nullable))fn __attribute__((swift_name("forAtLeastOne(fn:)")));
- (SharedKotlinArray<id> *)forAtMostK:(int32_t)k fn:(void (^)(id _Nullable))fn __attribute__((swift_name("forAtMost(k:fn:)")));
- (SharedKotlinArray<id> *)forAtMostOneFn:(void (^)(id _Nullable))fn __attribute__((swift_name("forAtMostOne(fn:)")));
- (SharedKotlinArray<id> *)forExactlyK:(int32_t)k fn:(void (^)(id _Nullable))fn __attribute__((swift_name("forExactly(k:fn:)")));
- (SharedKotlinArray<id> *)forNoneFn:(void (^)(id _Nullable))fn __attribute__((swift_name("forNone(fn:)")));
- (SharedKotlinArray<id> *)forOneFn:(void (^)(id _Nullable))fn __attribute__((swift_name("forOne(fn:)")));
- (SharedKotlinArray<id> *)forSomeFn:(void (^)(id _Nullable))fn __attribute__((swift_name("forSome(fn:)")));
- (SharedKotlinArray<id> *)shouldForAllFn:(void (^)(id _Nullable))fn __attribute__((swift_name("shouldForAll(fn:)")));
- (SharedKotlinArray<id> *)shouldForAnyFn:(void (^)(id _Nullable))fn __attribute__((swift_name("shouldForAny(fn:)")));
- (SharedKotlinArray<id> *)shouldForAtLeastK:(int32_t)k fn:(void (^)(id _Nullable))fn __attribute__((swift_name("shouldForAtLeast(k:fn:)")));
- (SharedKotlinArray<id> *)shouldForAtLeastOneFn:(void (^)(id _Nullable))fn __attribute__((swift_name("shouldForAtLeastOne(fn:)")));
- (SharedKotlinArray<id> *)shouldForAtMostK:(int32_t)k fn:(void (^)(id _Nullable))fn __attribute__((swift_name("shouldForAtMost(k:fn:)")));
- (SharedKotlinArray<id> *)shouldForAtMostOneFn:(void (^)(id _Nullable))fn __attribute__((swift_name("shouldForAtMostOne(fn:)")));
- (SharedKotlinArray<id> *)shouldForExactlyK:(int32_t)k fn:(void (^)(id _Nullable))fn __attribute__((swift_name("shouldForExactly(k:fn:)")));
- (SharedKotlinArray<id> *)shouldForNoneFn:(void (^)(id _Nullable))fn __attribute__((swift_name("shouldForNone(fn:)")));
- (SharedKotlinArray<id> *)shouldForOneFn:(void (^)(id _Nullable))fn __attribute__((swift_name("shouldForOne(fn:)")));
- (SharedKotlinArray<id> *)shouldForSomeFn:(void (^)(id _Nullable))fn __attribute__((swift_name("shouldForSome(fn:)")));
- (id<SharedFlow>)asFlow __attribute__((swift_name("asFlow()")));
@end;

__attribute__((swift_name("KotlinRandom")))
@interface SharedKotlinRandom : SharedBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
@property (class, readonly, getter=companion) SharedKotlinRandomDefault *companion __attribute__((swift_name("companion")));
- (int32_t)nextBitsBitCount:(int32_t)bitCount __attribute__((swift_name("nextBits(bitCount:)")));
- (BOOL)nextBoolean __attribute__((swift_name("nextBoolean()")));
- (SharedKotlinByteArray *)nextBytesArray:(SharedKotlinByteArray *)array __attribute__((swift_name("nextBytes(array:)")));
- (SharedKotlinByteArray *)nextBytesArray:(SharedKotlinByteArray *)array fromIndex:(int32_t)fromIndex toIndex:(int32_t)toIndex __attribute__((swift_name("nextBytes(array:fromIndex:toIndex:)")));
- (SharedKotlinByteArray *)nextBytesSize:(int32_t)size __attribute__((swift_name("nextBytes(size:)")));
- (double)nextDouble __attribute__((swift_name("nextDouble()")));
- (double)nextDoubleUntil:(double)until __attribute__((swift_name("nextDouble(until:)")));
- (double)nextDoubleFrom:(double)from until:(double)until __attribute__((swift_name("nextDouble(from:until:)")));
- (float)nextFloat __attribute__((swift_name("nextFloat()")));
- (int32_t)nextInt __attribute__((swift_name("nextInt()")));
- (int32_t)nextIntUntil:(int32_t)until __attribute__((swift_name("nextInt(until:)")));
- (int32_t)nextIntFrom:(int32_t)from until:(int32_t)until __attribute__((swift_name("nextInt(from:until:)")));
- (int64_t)nextLong __attribute__((swift_name("nextLong()")));
- (int64_t)nextLongUntil:(int64_t)until __attribute__((swift_name("nextLong(until:)")));
- (int64_t)nextLongFrom:(int64_t)from until:(int64_t)until __attribute__((swift_name("nextLong(from:until:)")));
@end;

@interface SharedKotlinRandom (Extensions)
- (unichar)azchar __attribute__((swift_name("azchar()")));
- (NSString *)azstringSize:(int32_t)size __attribute__((swift_name("azstring(size:)")));
@end;

@interface SharedGen (Extensions)

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)checkAllConfig:(SharedPropTestConfig *)config property:(id<SharedKotlinSuspendFunction2>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(config:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)checkAllIterations:(int32_t)iterations config:(SharedPropTestConfig *)config property:(id<SharedKotlinSuspendFunction2>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(iterations:config:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)checkAllIterations:(int32_t)iterations property:(id<SharedKotlinSuspendFunction2>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(iterations:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)checkAllProperty:(id<SharedKotlinSuspendFunction2>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)forAllConfig:(SharedPropTestConfig *)config property:(id<SharedKotlinSuspendFunction2>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(config:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)forAllIterations:(int32_t)iterations config:(SharedPropTestConfig *)config property:(id<SharedKotlinSuspendFunction2>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(iterations:config:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)forAllIterations:(int32_t)iterations property:(id<SharedKotlinSuspendFunction2>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(iterations:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)forAllProperty:(id<SharedKotlinSuspendFunction2>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)forNoneConfig:(SharedPropTestConfig *)config property:(id<SharedKotlinSuspendFunction2>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(config:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)forNoneIterations:(int32_t)iterations config:(SharedPropTestConfig *)config property:(id<SharedKotlinSuspendFunction2>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(iterations:config:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)forNoneIterations:(int32_t)iterations property:(id<SharedKotlinSuspendFunction2>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(iterations:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)forNoneProperty:(id<SharedKotlinSuspendFunction2>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(property:completionHandler:)")));
@end;

@interface SharedPropTest (Extensions)

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)checkAllProperty:(id<SharedKotlinSuspendFunction3>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(property:completionHandler:)")));
- (SharedPropTestConfig *)toPropTestConfig __attribute__((swift_name("toPropTestConfig()")));
@end;

@interface SharedEdgeConfigCompanion (Extensions)
- (SharedEdgeConfig *)default __attribute__((swift_name("default()")));
@end;

@interface SharedRTree (Extensions)
- (SharedRTree<id> * _Nullable)filterPredicate:(SharedBoolean *(^)(id _Nullable))predicate __attribute__((swift_name("filter(predicate:)")));
- (BOOL)isEmpty __attribute__((swift_name("isEmpty()")));
- (SharedRTree<id> *)mapF:(id _Nullable (^)(id _Nullable))f __attribute__((swift_name("map(f:)")));
@end;

@interface SharedPropertyContext (Extensions)
- (void)outputClassificationsInputs:(int32_t)inputs config:(SharedPropTestConfig *)config seed:(int64_t)seed __attribute__((swift_name("outputClassifications(inputs:config:seed:)")));
- (void)checkMaxSuccessConfig:(SharedPropTestConfig *)config seed:(int64_t)seed __attribute__((swift_name("checkMaxSuccess(config:seed:)")));
@end;

@interface SharedExhaustive (Extensions)
- (SharedExhaustive<id> *)andNull __attribute__((swift_name("andNull()")));
- (SharedExhaustive<id> *)cartesianOther:(SharedExhaustive<id> *)other f:(id _Nullable (^)(id _Nullable, id _Nullable))f __attribute__((swift_name("cartesian(other:f:)")));
- (SharedExhaustive<SharedKotlinPair<id, id> *> *)cartesianPairs __attribute__((swift_name("cartesianPairs()")));
- (SharedExhaustive<SharedKotlinPair<id, id> *> *)cartesianPairsOther:(SharedExhaustive<id> *)other __attribute__((swift_name("cartesianPairs(other:)")));
- (SharedExhaustive<id> *)concatOther:(SharedExhaustive<id> *)other __attribute__((swift_name("concat(other:)")));
- (SharedExhaustive<id> *)filterPredicate:(SharedBoolean *(^)(id _Nullable))predicate __attribute__((swift_name("filter(predicate:)")));
- (SharedExhaustive<id> *)filterNotF:(SharedBoolean *(^)(id _Nullable))f __attribute__((swift_name("filterNot(f:)")));
- (SharedExhaustive<id> *)flatMapF:(SharedExhaustive<id> *(^)(id _Nullable))f __attribute__((swift_name("flatMap(f:)")));
- (SharedExhaustive<id> *)mapF:(id _Nullable (^)(id _Nullable))f __attribute__((swift_name("map(f:)")));
- (SharedExhaustive<id> *)mergeOther:(SharedExhaustive<id> *)other __attribute__((swift_name("merge(other:)")));
- (SharedExhaustive<id> *)plusOther_:(SharedExhaustive<id> *)other __attribute__((swift_name("plus(other_:)")));
- (SharedExhaustive<SharedKotlinPair<id, id> *> *)timesOther:(SharedExhaustive<id> *)other __attribute__((swift_name("times(other:)")));
- (SharedExhaustive<SharedKotlinPair<id, id> *> *)zipOther:(SharedExhaustive<id> *)other __attribute__((swift_name("zip(other:)")));
@end;

@interface SharedExhaustiveCompanion (Extensions)
- (SharedExhaustive<id> *)az __attribute__((swift_name("az()")));
- (SharedExhaustive<NSString *> *)azstringRange:(SharedKotlinIntRange *)range __attribute__((swift_name("azstring(range:)")));
- (SharedExhaustive<SharedBoolean *> *)boolean __attribute__((swift_name("boolean()")));
- (SharedExhaustive<SharedByte *> *)bytesFrom:(int8_t)from to:(int8_t)to __attribute__((swift_name("bytes(from:to:)")));
- (SharedExhaustive<id> *)cartesianA:(SharedExhaustive<id> *)a b:(SharedExhaustive<id> *)b f:(id _Nullable (^)(id _Nullable, id _Nullable))f __attribute__((swift_name("cartesian(a:b:f:)")));
- (SharedExhaustive<id> *)cartesianA:(SharedExhaustive<id> *)a b:(SharedExhaustive<id> *)b c:(SharedExhaustive<id> *)c f:(id _Nullable (^)(id _Nullable, id _Nullable, id _Nullable))f __attribute__((swift_name("cartesian(a:b:c:f:)")));
- (SharedExhaustive<id> *)cartesianA:(SharedExhaustive<id> *)a b:(SharedExhaustive<id> *)b c:(SharedExhaustive<id> *)c d:(SharedExhaustive<id> *)d f:(id _Nullable (^)(id _Nullable, id _Nullable, id _Nullable, id _Nullable))f __attribute__((swift_name("cartesian(a:b:c:d:f:)")));
- (SharedExhaustive<id> *)cartesianA:(SharedExhaustive<id> *)a b:(SharedExhaustive<id> *)b c:(SharedExhaustive<id> *)c d:(SharedExhaustive<id> *)d e:(SharedExhaustive<id> *)e f:(id _Nullable (^)(id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))f __attribute__((swift_name("cartesian(a:b:c:d:e:f:)")));
- (SharedExhaustive<SharedKotlinPair<id, id> *> *)cartesianPairsA:(SharedExhaustive<id> *)a b:(SharedExhaustive<id> *)b __attribute__((swift_name("cartesianPairs(a:b:)")));
- (SharedExhaustive<id> *)collectionCollection:(id)collection __attribute__((swift_name("collection(collection:)")));
- (SharedExhaustive<id> *)constantA:(id _Nullable)a __attribute__((swift_name("constant(a:)")));
- (SharedExhaustive<SharedKotlinEnum *> *)enum __attribute__((swift_name("enum()")));
- (SharedExhaustive<SharedInt *> *)intsRange:(SharedKotlinIntRange *)range __attribute__((swift_name("ints(range:)")));
- (SharedExhaustive<id> *)lazyF:(SharedExhaustive<id> *(^)(void))f __attribute__((swift_name("lazy(f:)")));
- (SharedExhaustive<SharedLong *> *)longsRange:(SharedKotlinLongRange *)range __attribute__((swift_name("longs(range:)")));
- (SharedExhaustive<SharedKotlinNothing *> *)nullable __attribute__((swift_name("nullable()")));
- (SharedExhaustive<id> *)ofElements:(SharedKotlinArray<id> *)elements __attribute__((swift_name("of(elements:)")));
@end;

@interface SharedCodepoint (Extensions)
- (NSString *)asString __attribute__((swift_name("asString()")));
@property (readonly) unichar highSurrogate __attribute__((swift_name("highSurrogate")));
@property (readonly) BOOL isBmpCodePoint __attribute__((swift_name("isBmpCodePoint")));
@property (readonly) unichar lowSurrogate __attribute__((swift_name("lowSurrogate")));
@end;

@interface SharedArbCompanion (Extensions)
- (SharedArb<SharedCodepoint *> *)alphanumeric __attribute__((swift_name("alphanumeric()"))) __attribute__((deprecated("Codepoints in Arb.{code point} are deprecated. Use Codepoint.{code point} instead.")));
- (SharedArb<SharedCodepoint *> *)arabic __attribute__((swift_name("arabic()"))) __attribute__((deprecated("Codepoints in Arb.{code point} are deprecated. Use Codepoint.{code point} instead.")));
- (SharedArb<SharedCodepoint *> *)armenian __attribute__((swift_name("armenian()"))) __attribute__((deprecated("Codepoints in Arb.{code point} are deprecated. Use Codepoint.{code point} instead.")));
- (SharedArb<SharedCodepoint *> *)ascii __attribute__((swift_name("ascii()"))) __attribute__((deprecated("Codepoints in Arb.{code point} are deprecated. Use Codepoint.{code point} instead.")));
- (SharedArb<SharedCodepoint *> *)az __attribute__((swift_name("az()"))) __attribute__((deprecated("Codepoints in Arb.{code point} are deprecated. Use Codepoint.{code point} instead.")));
- (SharedArb<id> *)bindGenA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB bindFn:(id _Nullable (^)(id _Nullable, id _Nullable))bindFn __attribute__((swift_name("bind(genA:genB:bindFn:)")));
- (SharedArb<id> *)bindGenA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC bindFn:(id _Nullable (^)(id _Nullable, id _Nullable, id _Nullable))bindFn __attribute__((swift_name("bind(genA:genB:genC:bindFn:)")));
- (SharedArb<id> *)bindGenA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD bindFn:(id _Nullable (^)(id _Nullable, id _Nullable, id _Nullable, id _Nullable))bindFn __attribute__((swift_name("bind(genA:genB:genC:genD:bindFn:)")));
- (SharedArb<id> *)bindGenA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE bindFn:(id _Nullable (^)(id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))bindFn __attribute__((swift_name("bind(genA:genB:genC:genD:genE:bindFn:)")));
- (SharedArb<id> *)bindGenA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF bindFn:(id _Nullable (^)(id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))bindFn __attribute__((swift_name("bind(genA:genB:genC:genD:genE:genF:bindFn:)")));
- (SharedArb<id> *)bindGenA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG bindFn:(id _Nullable (^)(id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))bindFn __attribute__((swift_name("bind(genA:genB:genC:genD:genE:genF:genG:bindFn:)")));
- (SharedArb<id> *)bindGenA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG genH:(SharedGen<id> *)genH bindFn:(id _Nullable (^)(id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))bindFn __attribute__((swift_name("bind(genA:genB:genC:genD:genE:genF:genG:genH:bindFn:)")));
- (SharedArb<id> *)bindGenA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG genH:(SharedGen<id> *)genH genI:(SharedGen<id> *)genI bindFn:(id _Nullable (^)(id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))bindFn __attribute__((swift_name("bind(genA:genB:genC:genD:genE:genF:genG:genH:genI:bindFn:)")));
- (SharedArb<id> *)bindGenA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG genH:(SharedGen<id> *)genH genI:(SharedGen<id> *)genI genJ:(SharedGen<id> *)genJ bindFn:(id _Nullable (^)(id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))bindFn __attribute__((swift_name("bind(genA:genB:genC:genD:genE:genF:genG:genH:genI:genJ:bindFn:)")));
- (SharedArb<id> *)bindGenA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG genH:(SharedGen<id> *)genH genI:(SharedGen<id> *)genI genJ:(SharedGen<id> *)genJ genK:(SharedGen<id> *)genK bindFn:(id _Nullable (^)(id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))bindFn __attribute__((swift_name("bind(genA:genB:genC:genD:genE:genF:genG:genH:genI:genJ:genK:bindFn:)")));
- (SharedArb<id> *)bindGenA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG genH:(SharedGen<id> *)genH genI:(SharedGen<id> *)genI genJ:(SharedGen<id> *)genJ genK:(SharedGen<id> *)genK genL:(SharedGen<id> *)genL bindFn:(id _Nullable (^)(id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))bindFn __attribute__((swift_name("bind(genA:genB:genC:genD:genE:genF:genG:genH:genI:genJ:genK:genL:bindFn:)")));
- (SharedArb<id> *)bindGenA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG genH:(SharedGen<id> *)genH genI:(SharedGen<id> *)genI genJ:(SharedGen<id> *)genJ genK:(SharedGen<id> *)genK genL:(SharedGen<id> *)genL genM:(SharedGen<id> *)genM bindFn:(id _Nullable (^)(id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))bindFn __attribute__((swift_name("bind(genA:genB:genC:genD:genE:genF:genG:genH:genI:genJ:genK:genL:genM:bindFn:)")));
- (SharedArb<id> *)bindGenA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG genH:(SharedGen<id> *)genH genI:(SharedGen<id> *)genI genJ:(SharedGen<id> *)genJ genK:(SharedGen<id> *)genK genL:(SharedGen<id> *)genL genM:(SharedGen<id> *)genM genN:(SharedGen<id> *)genN bindFn:(id _Nullable (^)(id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))bindFn __attribute__((swift_name("bind(genA:genB:genC:genD:genE:genF:genG:genH:genI:genJ:genK:genL:genM:genN:bindFn:)")));
- (SharedArb<id> *)bindArbs:(NSArray<SharedArb<id> *> *)arbs fn:(id _Nullable (^)(NSArray<id> *))fn __attribute__((swift_name("bind(arbs:fn:)")));
- (SharedArb<SharedBoolean *> *)bool __attribute__((swift_name("bool()"))) __attribute__((deprecated("use boolean")));
- (SharedArb<SharedBoolean *> *)boolean __attribute__((swift_name("boolean()")));
- (SharedArb<SharedKotlinBooleanArray *> *)booleanArrayLength:(SharedGen<SharedInt *> *)length content:(SharedArb<SharedBoolean *> *)content __attribute__((swift_name("booleanArray(length:content:)")));
- (SharedArb<SharedByte *> *)byteMin:(int8_t)min max:(int8_t)max __attribute__((swift_name("byte(min:max:)")));
- (SharedArb<SharedKotlinByteArray *> *)byteArrayLength:(SharedGen<SharedInt *> *)length content:(SharedArb<SharedByte *> *)content __attribute__((swift_name("byteArray(length:content:)")));
- (SharedArb<SharedKotlinByteArray *> *)byteArraysGenerateArrayLength:(SharedGen<SharedInt *> *)generateArrayLength generateContents:(SharedArb<SharedByte *> *)generateContents __attribute__((swift_name("byteArrays(generateArrayLength:generateContents:)"))) __attribute__((deprecated("use byteArray")));
- (SharedArb<id> *)charRanges:(NSArray<SharedKotlinCharRange *> *)ranges __attribute__((swift_name("char(ranges:)")));
- (SharedArb<id> *)charRange:(SharedKotlinCharRange *)range ranges:(SharedKotlinArray<SharedKotlinCharRange *> *)ranges __attribute__((swift_name("char(range:ranges:)")));
- (SharedArb<SharedKotlinCharArray *> *)charArrayLength:(SharedGen<SharedInt *> *)length content:(SharedArb<id> *)content __attribute__((swift_name("charArray(length:content:)")));
- (SharedArb<id> *)choiceArb:(SharedArb<id> *)arb arbs:(SharedKotlinArray<SharedArb<id> *> *)arbs __attribute__((swift_name("choice(arb:arbs:)")));
- (SharedArb<id> *)choiceArbs:(NSArray<SharedArb<id> *> *)arbs __attribute__((swift_name("choice(arbs:)")));
- (SharedArb<id> *)chooseA:(SharedKotlinPair<SharedInt *, id> *)a b:(SharedKotlinPair<SharedInt *, id> *)b cs:(SharedKotlinArray<SharedKotlinPair<SharedInt *, id> *> *)cs __attribute__((swift_name("choose(a:b:cs:)")));
- (SharedArb<id> *)chooseA:(SharedKotlinPair<SharedInt *, SharedArb<id> *> *)a b:(SharedKotlinPair<SharedInt *, SharedArb<id> *> *)b cs_:(SharedKotlinArray<SharedKotlinPair<SharedInt *, SharedArb<id> *> *> *)cs __attribute__((swift_name("choose(a:b:cs_:)")));
- (SharedArb<SharedCodepoint *> *)codepoints __attribute__((swift_name("codepoints()")));
- (SharedArb<id> *)constantA:(id _Nullable)a __attribute__((swift_name("constant(a:)")));
- (SharedArb<SharedCodepoint *> *)cyrillic __attribute__((swift_name("cyrillic()"))) __attribute__((deprecated("Codepoints in Arb.{code point} are deprecated. Use Codepoint.{code point} instead.")));
- (SharedArb<id> *)default __attribute__((swift_name("default()")));
- (SharedArb<NSString *> *)domainTlds:(NSArray<NSString *> *)tlds labelArb:(SharedArb<NSString *> *)labelArb __attribute__((swift_name("domain(tlds:labelArb:)")));
- (SharedArb<SharedDouble *> *)doubleMin:(double)min max:(double)max __attribute__((swift_name("double(min:max:)")));
- (SharedArb<SharedDouble *> *)doubleRange:(id<SharedKotlinClosedFloatingPointRange>)range __attribute__((swift_name("double(range:)")));
- (SharedArb<SharedKotlinDoubleArray *> *)doubleArrayLength:(SharedGen<SharedInt *> *)length content:(SharedArb<SharedDouble *> *)content __attribute__((swift_name("doubleArray(length:content:)")));
- (SharedArb<SharedCodepoint *> *)egyptianHieroglyphs __attribute__((swift_name("egyptianHieroglyphs()"))) __attribute__((deprecated("Codepoints in Arb.{code point} are deprecated. Use Codepoint.{code point} instead.")));
- (SharedArb<id> *)elementCollection:(SharedKotlinArray<id> *)collection __attribute__((swift_name("element(collection:)")));
- (SharedArb<id> *)elementCollection_:(id)collection __attribute__((swift_name("element(collection_:)")));
- (SharedArb<NSString *> *)emailLocalPartGen:(SharedGen<NSString *> *)localPartGen domainGen:(SharedGen<NSString *> *)domainGen __attribute__((swift_name("email(localPartGen:domainGen:)")));
- (SharedArb<NSString *> *)emailUsernameSize:(SharedKotlinIntRange *)usernameSize domainSize:(SharedKotlinIntRange *)domainSize __attribute__((swift_name("email(usernameSize:domainSize:)"))) __attribute__((deprecated("This function is deprecated since 5.0. Use Arb.email(localPartGen, domainGen). This will be removed in 6.0")));
- (SharedArb<NSString *> *)emailLocalPart __attribute__((swift_name("emailLocalPart()")));
- (SharedArb<SharedKotlinEnum *> *)enum __attribute__((swift_name("enum()")));
- (SharedArb<SharedInt *> *)factorK:(int32_t)k __attribute__((swift_name("factor(k:)")));
- (SharedArb<SharedInt *> *)factorsK:(int32_t)k __attribute__((swift_name("factors(k:)"))) __attribute__((deprecated("Use factor. Deprecated since 5.0.")));
- (SharedArb<SharedFloat *> *)floatMin:(float)min max:(float)max __attribute__((swift_name("float(min:max:)")));
- (SharedArb<SharedFloat *> *)floatRange:(id<SharedKotlinClosedFloatingPointRange>)range __attribute__((swift_name("float(range:)")));
- (SharedArb<SharedKotlinFloatArray *> *)floatArrayLength:(SharedGen<SharedInt *> *)length content:(SharedArb<SharedFloat *> *)content __attribute__((swift_name("floatArray(length:content:)")));
- (SharedArb<id> *)forClassKClass:(id<SharedKotlinKClass>)kClass __attribute__((swift_name("forClass(kClass:)")));
- (SharedArb<id> *)frequencyA:(SharedKotlinPair<SharedInt *, id> *)a b:(SharedKotlinPair<SharedInt *, id> *)b cs:(SharedKotlinArray<SharedKotlinPair<SharedInt *, id> *> *)cs __attribute__((swift_name("frequency(a:b:cs:)")));
- (SharedArb<id> *)frequencyA:(SharedKotlinPair<SharedInt *, SharedArb<id> *> *)a b:(SharedKotlinPair<SharedInt *, SharedArb<id> *> *)b cs_:(SharedKotlinArray<SharedKotlinPair<SharedInt *, SharedArb<id> *> *> *)cs __attribute__((swift_name("frequency(a:b:cs_:)")));
- (SharedArb<SharedGeoLocation *> *)geoLocation __attribute__((swift_name("geoLocation()")));
- (SharedArb<SharedCodepoint *> *)georgian __attribute__((swift_name("georgian()"))) __attribute__((deprecated("Codepoints in Arb.{code point} are deprecated. Use Codepoint.{code point} instead.")));
- (SharedArb<SharedCodepoint *> *)greekCoptic __attribute__((swift_name("greekCoptic()"))) __attribute__((deprecated("Codepoints in Arb.{code point} are deprecated. Use Codepoint.{code point} instead.")));
- (SharedArb<SharedCodepoint *> *)hebrew __attribute__((swift_name("hebrew()"))) __attribute__((deprecated("Codepoints in Arb.{code point} are deprecated. Use Codepoint.{code point} instead.")));
- (SharedArb<SharedCodepoint *> *)hiragana __attribute__((swift_name("hiragana()"))) __attribute__((deprecated("Codepoints in Arb.{code point} are deprecated. Use Codepoint.{code point} instead.")));
- (SharedArb<SharedInt *> *)intMin:(int32_t)min max:(int32_t)max __attribute__((swift_name("int(min:max:)")));
- (SharedArb<SharedInt *> *)intRange:(SharedKotlinIntRange *)range __attribute__((swift_name("int(range:)")));
- (SharedArb<SharedKotlinIntArray *> *)intArrayLength:(SharedGen<SharedInt *> *)length content:(SharedArb<SharedInt *> *)content __attribute__((swift_name("intArray(length:content:)")));
- (SharedArb<NSString *> *)ipAddressV4 __attribute__((swift_name("ipAddressV4()")));
- (SharedArb<SharedCodepoint *> *)katakana __attribute__((swift_name("katakana()"))) __attribute__((deprecated("Codepoints in Arb.{code point} are deprecated. Use Codepoint.{code point} instead.")));
- (SharedArb<SharedKotlinPair<SharedDouble *, SharedDouble *> *> *)latlong __attribute__((swift_name("latlong()"))) __attribute__((deprecated("Use Arb.geoLocation()")));
- (SharedArb<id> *)lazyF:(SharedArb<id> *(^)(void))f __attribute__((swift_name("lazy(f:)")));
- (SharedArb<NSArray<id> *> *)listGen:(SharedGen<id> *)gen range:(SharedKotlinIntRange *)range __attribute__((swift_name("list(gen:range:)")));
- (SharedArb<NSString *> *)locale __attribute__((swift_name("locale()")));
- (SharedArb<SharedLong *> *)longMin:(int64_t)min max:(int64_t)max __attribute__((swift_name("long(min:max:)")));
- (SharedArb<SharedLong *> *)longRange:(SharedKotlinLongRange *)range __attribute__((swift_name("long(range:)")));
- (SharedArb<SharedKotlinLongArray *> *)longArrayGenerateArrayLength:(SharedGen<SharedInt *> *)generateArrayLength generateContents:(SharedArb<SharedLong *> *)generateContents __attribute__((swift_name("longArray(generateArrayLength:generateContents:)")));
- (SharedArb<NSDictionary<id, id> *> *)mapKeyArb:(SharedArb<id> *)keyArb valueArb:(SharedArb<id> *)valueArb minSize:(int32_t)minSize maxSize:(int32_t)maxSize __attribute__((swift_name("map(keyArb:valueArb:minSize:maxSize:)")));
- (SharedArb<NSDictionary<id, id> *> *)mapArb:(SharedArb<SharedKotlinPair<id, id> *> *)arb minSize:(int32_t)minSize maxSize:(int32_t)maxSize __attribute__((swift_name("map(arb:minSize:maxSize:)")));
- (SharedArb<SharedInt *> *)multipleK:(int32_t)k max:(int32_t)max __attribute__((swift_name("multiple(k:max:)")));
- (SharedArb<SharedInt *> *)multiplesK:(int32_t)k max:(int32_t)max __attribute__((swift_name("multiples(k:max:)"))) __attribute__((deprecated("Use multiple. Deprecated since 5.0.")));
- (SharedArb<SharedInt *> *)natsMax:(int32_t)max __attribute__((swift_name("nats(max:)"))) __attribute__((deprecated("use positiveInt. Deprecated in 5.0.")));
- (SharedArb<SharedByte *> *)negativeByteMin:(int8_t)min __attribute__((swift_name("negativeByte(min:)")));
- (SharedArb<SharedDouble *> *)negativeDoubleMin:(double)min __attribute__((swift_name("negativeDouble(min:)")));
- (SharedArb<SharedDouble *> *)negativeDoubles __attribute__((swift_name("negativeDoubles()"))) __attribute__((deprecated("use negativeDouble. Deprecated in 5.0.")));
- (SharedArb<SharedFloat *> *)negativeFloat __attribute__((swift_name("negativeFloat()")));
- (SharedArb<SharedInt *> *)negativeIntMin:(int32_t)min __attribute__((swift_name("negativeInt(min:)")));
- (SharedArb<SharedInt *> *)negativeIntsMin:(int32_t)min __attribute__((swift_name("negativeInts(min:)"))) __attribute__((deprecated("use negativeInt. Deprecated in 5.0.")));
- (SharedArb<SharedLong *> *)negativeLongMin:(int64_t)min __attribute__((swift_name("negativeLong(min:)")));
- (SharedArb<SharedShort *> *)negativeShortMin:(int16_t)min __attribute__((swift_name("negativeShort(min:)")));
- (SharedArb<SharedInt *> *)nonNegativeIntMax:(int32_t)max __attribute__((swift_name("nonNegativeInt(max:)")));
- (SharedArb<SharedInt *> *)nonPositiveIntMin:(int32_t)min __attribute__((swift_name("nonPositiveInt(min:)")));
- (SharedArb<SharedDouble *> *)numericDoubleMin:(double)min max:(double)max __attribute__((swift_name("numericDouble(min:max:)")));
- (SharedArb<SharedDouble *> *)numericDoublesFrom:(double)from to:(double)to __attribute__((swift_name("numericDoubles(from:to:)"))) __attribute__((deprecated("use numericDouble. Deprecated in 5.0.")));
- (SharedArb<SharedFloat *> *)numericFloatMin:(float)min max:(float)max __attribute__((swift_name("numericFloat(min:max:)")));
- (SharedArb<SharedFloat *> *)numericFloatsFrom:(float)from to:(float)to __attribute__((swift_name("numericFloats(from:to:)"))) __attribute__((deprecated("use numericFloat")));
- (SharedArb<id> *)ofCollection:(SharedKotlinArray<id> *)collection __attribute__((swift_name("of(collection:)")));
- (SharedArb<id> *)ofCollection_:(id)collection __attribute__((swift_name("of(collection_:)")));
- (SharedArb<SharedKotlinPair<id, id> *> *)pairK:(SharedArb<id> *)k v:(SharedArb<id> *)v __attribute__((swift_name("pair(k:v:)")));
- (SharedArb<SharedByte *> *)positiveByteMax:(int8_t)max __attribute__((swift_name("positiveByte(max:)")));
- (SharedArb<SharedDouble *> *)positiveDoubleMax:(double)max __attribute__((swift_name("positiveDouble(max:)")));
- (SharedArb<SharedDouble *> *)positiveDoubles __attribute__((swift_name("positiveDoubles()"))) __attribute__((deprecated("use positiveDouble. Deprecated in 5.0.")));
- (SharedArb<SharedFloat *> *)positiveFloat __attribute__((swift_name("positiveFloat()")));
- (SharedArb<SharedInt *> *)positiveIntMax:(int32_t)max __attribute__((swift_name("positiveInt(max:)")));
- (SharedArb<SharedInt *> *)positiveIntsMax:(int32_t)max __attribute__((swift_name("positiveInts(max:)"))) __attribute__((deprecated("use positiveInt. Deprecated in 5.0.")));
- (SharedArb<SharedLong *> *)positiveLongMax:(int64_t)max __attribute__((swift_name("positiveLong(max:)")));
- (SharedArb<SharedShort *> *)positiveShortMax:(int16_t)max __attribute__((swift_name("positiveShort(max:)")));
- (SharedArb<NSSet<id> *> *)setGen:(SharedGen<id> *)gen size:(int32_t)size slippage:(int32_t)slippage __attribute__((swift_name("set(gen:size:slippage:)")));
- (SharedArb<NSSet<id> *> *)setGen:(SharedGen<id> *)gen range:(SharedKotlinIntRange *)range slippage:(int32_t)slippage __attribute__((swift_name("set(gen:range:slippage:)")));
- (SharedArb<SharedShort *> *)shortMin:(int16_t)min max:(int16_t)max __attribute__((swift_name("short(min:max:)")));
- (SharedArb<SharedKotlinShortArray *> *)shortArrayLength:(SharedGen<SharedInt *> *)length content:(SharedArb<SharedShort *> *)content __attribute__((swift_name("shortArray(length:content:)")));
- (SharedArb<NSArray<id> *> *)shuffleList:(NSArray<id> *)list __attribute__((swift_name("shuffle(list:)")));
- (SharedArb<NSString *> *)stringSize:(int32_t)size codepoints:(SharedArb<SharedCodepoint *> *)codepoints __attribute__((swift_name("string(size:codepoints:)")));
- (SharedArb<NSString *> *)stringMinSize:(int32_t)minSize maxSize:(int32_t)maxSize codepoints:(SharedArb<SharedCodepoint *> *)codepoints __attribute__((swift_name("string(minSize:maxSize:codepoints:)")));
- (SharedArb<NSString *> *)stringRange:(SharedKotlinIntRange *)range codepoints:(SharedArb<SharedCodepoint *> *)codepoints __attribute__((swift_name("string(range:codepoints:)")));
- (SharedArb<NSArray<id> *> *)subsequenceList:(NSArray<id> *)list __attribute__((swift_name("subsequence(list:)")));
- (SharedArb<NSString *> *)timezoneCodeThree __attribute__((swift_name("timezoneCodeThree()")));
- (SharedArb<SharedKotlinTriple<id, id, id> *> *)tripleArbA:(SharedArb<id> *)arbA arbB:(SharedArb<id> *)arbB arbC:(SharedArb<id> *)arbC __attribute__((swift_name("triple(arbA:arbB:arbC:)")));
- (SharedArb<SharedUByte *> *)uByteMin:(uint8_t)min max:(uint8_t)max __attribute__((swift_name("uByte(min:max:)")));
- (SharedArb<id> *)uByteArrayLength:(SharedGen<SharedInt *> *)length content:(SharedArb<SharedUByte *> *)content __attribute__((swift_name("uByteArray(length:content:)")));
- (SharedArb<SharedUInt *> *)uIntMin:(uint32_t)min max:(uint32_t)max __attribute__((swift_name("uInt(min:max:)")));
- (SharedArb<SharedUInt *> *)uIntRange:(SharedKotlinUIntRange *)range __attribute__((swift_name("uInt(range:)")));
- (SharedArb<id> *)uIntArrayLength:(SharedGen<SharedInt *> *)length content:(SharedArb<SharedUInt *> *)content __attribute__((swift_name("uIntArray(length:content:)")));
- (SharedArb<SharedULong *> *)uLongMin:(uint64_t)min max:(uint64_t)max __attribute__((swift_name("uLong(min:max:)")));
- (SharedArb<SharedULong *> *)uLongRange:(SharedKotlinULongRange *)range __attribute__((swift_name("uLong(range:)")));
- (SharedArb<id> *)uLongArrayGenerateArrayLength:(SharedGen<SharedInt *> *)generateArrayLength generateContents:(SharedArb<SharedULong *> *)generateContents __attribute__((swift_name("uLongArray(generateArrayLength:generateContents:)")));
- (SharedArb<SharedUShort *> *)uShortMin:(uint16_t)min max:(uint16_t)max __attribute__((swift_name("uShort(min:max:)")));
- (SharedArb<id> *)uShortArrayLength:(SharedGen<SharedInt *> *)length content:(SharedArb<SharedUShort *> *)content __attribute__((swift_name("uShortArray(length:content:)")));
- (SharedArb<SharedUShort *> *)ushortMin:(uint16_t)min max:(uint16_t)max __attribute__((swift_name("ushort(min:max:)"))) __attribute__((deprecated("use uShort")));
- (SharedArb<id> *)zipGenA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB zipFn:(id _Nullable (^)(id _Nullable, id _Nullable))zipFn __attribute__((swift_name("zip(genA:genB:zipFn:)")));
- (SharedArb<id> *)zipGenA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC zipFn:(id _Nullable (^)(id _Nullable, id _Nullable, id _Nullable))zipFn __attribute__((swift_name("zip(genA:genB:genC:zipFn:)")));
- (SharedArb<id> *)zipGenA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD zipFn:(id _Nullable (^)(id _Nullable, id _Nullable, id _Nullable, id _Nullable))zipFn __attribute__((swift_name("zip(genA:genB:genC:genD:zipFn:)")));
- (SharedArb<id> *)zipGenA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE zipFn:(id _Nullable (^)(id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))zipFn __attribute__((swift_name("zip(genA:genB:genC:genD:genE:zipFn:)")));
- (SharedArb<id> *)zipGenA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF zipFn:(id _Nullable (^)(id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))zipFn __attribute__((swift_name("zip(genA:genB:genC:genD:genE:genF:zipFn:)")));
- (SharedArb<id> *)zipGenA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG zipFn:(id _Nullable (^)(id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))zipFn __attribute__((swift_name("zip(genA:genB:genC:genD:genE:genF:genG:zipFn:)")));
- (SharedArb<id> *)zipGenA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG genH:(SharedGen<id> *)genH zipFn:(id _Nullable (^)(id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))zipFn __attribute__((swift_name("zip(genA:genB:genC:genD:genE:genF:genG:genH:zipFn:)")));
- (SharedArb<id> *)zipGenA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG genH:(SharedGen<id> *)genH genI:(SharedGen<id> *)genI zipFn:(id _Nullable (^)(id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))zipFn __attribute__((swift_name("zip(genA:genB:genC:genD:genE:genF:genG:genH:genI:zipFn:)")));
- (SharedArb<id> *)zipGenA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG genH:(SharedGen<id> *)genH genI:(SharedGen<id> *)genI genJ:(SharedGen<id> *)genJ zipFn:(id _Nullable (^)(id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))zipFn __attribute__((swift_name("zip(genA:genB:genC:genD:genE:genF:genG:genH:genI:genJ:zipFn:)")));
- (SharedArb<id> *)zipGenA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG genH:(SharedGen<id> *)genH genI:(SharedGen<id> *)genI genJ:(SharedGen<id> *)genJ genK:(SharedGen<id> *)genK zipFn:(id _Nullable (^)(id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))zipFn __attribute__((swift_name("zip(genA:genB:genC:genD:genE:genF:genG:genH:genI:genJ:genK:zipFn:)")));
- (SharedArb<id> *)zipGenA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG genH:(SharedGen<id> *)genH genI:(SharedGen<id> *)genI genJ:(SharedGen<id> *)genJ genK:(SharedGen<id> *)genK genL:(SharedGen<id> *)genL zipFn:(id _Nullable (^)(id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))zipFn __attribute__((swift_name("zip(genA:genB:genC:genD:genE:genF:genG:genH:genI:genJ:genK:genL:zipFn:)")));
- (SharedArb<id> *)zipGenA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG genH:(SharedGen<id> *)genH genI:(SharedGen<id> *)genI genJ:(SharedGen<id> *)genJ genK:(SharedGen<id> *)genK genL:(SharedGen<id> *)genL genM:(SharedGen<id> *)genM zipFn:(id _Nullable (^)(id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))zipFn __attribute__((swift_name("zip(genA:genB:genC:genD:genE:genF:genG:genH:genI:genJ:genK:genL:genM:zipFn:)")));
- (SharedArb<id> *)zipGenA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG genH:(SharedGen<id> *)genH genI:(SharedGen<id> *)genI genJ:(SharedGen<id> *)genJ genK:(SharedGen<id> *)genK genL:(SharedGen<id> *)genL genM:(SharedGen<id> *)genM genN:(SharedGen<id> *)genN zipFn:(id _Nullable (^)(id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))zipFn __attribute__((swift_name("zip(genA:genB:genC:genD:genE:genF:genG:genH:genI:genJ:genK:genL:genM:genN:zipFn:)")));
- (SharedArb<id> *)zipArbs:(NSArray<SharedArb<id> *> *)arbs fn:(id _Nullable (^)(NSArray<id> *))fn __attribute__((swift_name("zip(arbs:fn:)")));
@end;

@interface SharedCodepointCompanion (Extensions)
- (SharedArb<SharedCodepoint *> *)alphanumeric __attribute__((swift_name("alphanumeric()")));
- (SharedArb<SharedCodepoint *> *)arabic __attribute__((swift_name("arabic()")));
- (SharedArb<SharedCodepoint *> *)armenian __attribute__((swift_name("armenian()")));
- (SharedArb<SharedCodepoint *> *)ascii __attribute__((swift_name("ascii()")));
- (SharedArb<SharedCodepoint *> *)az __attribute__((swift_name("az()")));
- (SharedArb<SharedCodepoint *> *)cyrillic __attribute__((swift_name("cyrillic()")));
- (SharedArb<SharedCodepoint *> *)egyptianHieroglyphs __attribute__((swift_name("egyptianHieroglyphs()")));
- (SharedArb<SharedCodepoint *> *)georgian __attribute__((swift_name("georgian()")));
- (SharedArb<SharedCodepoint *> *)greekCoptic __attribute__((swift_name("greekCoptic()")));
- (SharedArb<SharedCodepoint *> *)hebrew __attribute__((swift_name("hebrew()")));
- (SharedArb<SharedCodepoint *> *)hex __attribute__((swift_name("hex()")));
- (SharedArb<SharedCodepoint *> *)hiragana __attribute__((swift_name("hiragana()")));
- (SharedArb<SharedCodepoint *> *)katakana __attribute__((swift_name("katakana()")));
@end;

@interface SharedArb (Extensions)
- (SharedArb<NSArray<id> *> *)chunkedMinSize:(int32_t)minSize maxSize:(int32_t)maxSize __attribute__((swift_name("chunked(minSize:maxSize:)")));
- (SharedArb<NSArray<id> *> *)chunkedSize:(SharedKotlinIntRange *)size __attribute__((swift_name("chunked(size:)")));
- (SharedArb<id> *)distinctAttempts:(int32_t)attempts __attribute__((swift_name("distinct(attempts:)")));
- (NSSet<id> *)edgecasesIterations:(int32_t)iterations rs:(SharedRandomSource *)rs __attribute__((swift_name("edgecases(iterations:rs:)")));
- (SharedArb<id> *)filterPredicate:(SharedBoolean *(^)(id _Nullable))predicate __attribute__((swift_name("filter(predicate:)")));
- (SharedArb<id> *)filterIsInstance __attribute__((swift_name("filterIsInstance()")));
- (SharedArb<id> *)filterNotF:(SharedBoolean *(^)(id _Nullable))f __attribute__((swift_name("filterNot(f:)")));
- (SharedArb<id> *)flatMapF:(SharedArb<id> *(^)(id _Nullable))f __attribute__((swift_name("flatMap(f:)")));
- (SharedArb<id> *)mapF:(id _Nullable (^)(id _Nullable))f __attribute__((swift_name("map(f:)")));
- (SharedArb<id> *)mergeOther:(SharedGen<id> *)other __attribute__((swift_name("merge(other:)")));
- (SharedArb<id> *)modifyEdgecasesF:(id _Nullable (^)(id _Nullable))f __attribute__((swift_name("modifyEdgecases(f:)")));
- (id _Nullable)nextPredicate:(SharedBoolean *(^)(id _Nullable))predicate rs:(SharedRandomSource *)rs __attribute__((swift_name("next(predicate:rs:)")));
- (id _Nullable)nextRs:(SharedRandomSource *)rs __attribute__((swift_name("next(rs:)")));
- (SharedArb<id> *)orNullIsNextNull:(SharedBoolean *(^)(SharedRandomSource *))isNextNull __attribute__((swift_name("orNull(isNextNull:)")));
- (SharedArb<id> *)orNullNullProbability:(double)nullProbability __attribute__((swift_name("orNull(nullProbability:)")));
- (SharedArb<id> *)removeEdgecases __attribute__((swift_name("removeEdgecases()")));
- (id _Nullable)singleRs:(SharedRandomSource *)rs __attribute__((swift_name("single(rs:)")));
- (id<SharedKotlinSequence>)takeCount:(int32_t)count rs:(SharedRandomSource *)rs __attribute__((swift_name("take(count:rs:)")));
- (SharedArb<id> *)withEdgecasesEdgecases:(SharedKotlinArray<id> *)edgecases __attribute__((swift_name("withEdgecases(edgecases:)")));
- (SharedArb<id> *)withEdgecasesEdgecases_:(NSArray<id> *)edgecases __attribute__((swift_name("withEdgecases(edgecases_:)")));
@end;

@interface SharedTable1 (Extensions)
- (void)forAllFn:(void (^)(id _Nullable))fn __attribute__((swift_name("forAll(fn:)")));
- (void)forNoneFn:(void (^)(id _Nullable))fn __attribute__((swift_name("forNone(fn:)")));
@end;

@interface SharedTable2 (Extensions)
- (void)forAllFn:(void (^)(id _Nullable, id _Nullable))fn __attribute__((swift_name("forAll(fn:)")));
- (void)forNoneFn:(void (^)(id _Nullable, id _Nullable))fn __attribute__((swift_name("forNone(fn:)")));
@end;

@interface SharedTable3 (Extensions)
- (void)forAllFn:(void (^)(id _Nullable, id _Nullable, id _Nullable))fn __attribute__((swift_name("forAll(fn:)")));
- (void)forNoneFn:(void (^)(id _Nullable, id _Nullable, id _Nullable))fn __attribute__((swift_name("forNone(fn:)")));
@end;

@interface SharedTable4 (Extensions)
- (void)forAllFn:(void (^)(id _Nullable, id _Nullable, id _Nullable, id _Nullable))fn __attribute__((swift_name("forAll(fn:)")));
- (void)forNoneFn:(void (^)(id _Nullable, id _Nullable, id _Nullable, id _Nullable))fn __attribute__((swift_name("forNone(fn:)")));
@end;

@interface SharedTable5 (Extensions)
- (void)forAllFn:(void (^)(id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))fn __attribute__((swift_name("forAll(fn:)")));
- (void)forNoneFn:(void (^)(id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))fn __attribute__((swift_name("forNone(fn:)")));
@end;

@interface SharedTable6 (Extensions)
- (void)forAllFn:(void (^)(id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))fn __attribute__((swift_name("forAll(fn:)")));
- (void)forNoneFn:(void (^)(id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))fn __attribute__((swift_name("forNone(fn:)")));
@end;

@interface SharedTable7 (Extensions)
- (void)forAllFn:(void (^)(id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))fn __attribute__((swift_name("forAll(fn:)")));
- (void)forNoneFn:(void (^)(id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))fn __attribute__((swift_name("forNone(fn:)")));
@end;

@interface SharedTable8 (Extensions)
- (void)forAllFn:(void (^)(id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))fn __attribute__((swift_name("forAll(fn:)")));
- (void)forNoneFn:(void (^)(id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))fn __attribute__((swift_name("forNone(fn:)")));
@end;

@interface SharedTable9 (Extensions)
- (void)forAllFn:(void (^)(id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))fn __attribute__((swift_name("forAll(fn:)")));
- (void)forNoneFn:(void (^)(id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))fn __attribute__((swift_name("forNone(fn:)")));
@end;

@interface SharedHttpClient (Extensions)

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)callBuilder:(SharedHttpRequestBuilder *)builder completionHandler:(void (^)(SharedHttpClientCall * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("call(builder:completionHandler:)"))) __attribute__((unavailable("Unbound [HttpClientCall] is deprecated. Consider using [request<HttpResponse>(builder)] instead.")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)callUrl:(SharedUrl *)url block:(id<SharedKotlinSuspendFunction1>)block completionHandler:(void (^)(SharedHttpClientCall * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("call(url:block:completionHandler:)"))) __attribute__((unavailable("Unbound [HttpClientCall] is deprecated. Consider using [request<HttpResponse>(url, block)] instead.")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)callUrlString:(NSString *)urlString block:(id<SharedKotlinSuspendFunction1>)block completionHandler:(void (^)(SharedHttpClientCall * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("call(urlString:block:completionHandler:)"))) __attribute__((unavailable("Unbound [HttpClientCall] is deprecated. Consider using [request<HttpResponse>(urlString, block)] instead.")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)callBlock:(id<SharedKotlinSuspendFunction1>)block completionHandler:(void (^)(SharedHttpClientCall * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("call(block:completionHandler:)"))) __attribute__((unavailable("Unbound [HttpClientCall] is deprecated. Consider using [request<HttpResponse>(block)] in instead.")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteBuilder:(SharedHttpRequestBuilder *)builder completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("delete(builder:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteUrl:(SharedUrl *)url block:(void (^)(SharedHttpRequestBuilder *))block completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("delete(url:block:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteUrlString:(NSString *)urlString block:(void (^)(SharedHttpRequestBuilder *))block completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("delete(urlString:block:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteScheme:(NSString *)scheme host:(NSString *)host port:(int32_t)port path:(NSString *)path body:(id)body block:(void (^)(SharedHttpRequestBuilder *))block completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("delete(scheme:host:port:path:body:block:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)getBuilder:(SharedHttpRequestBuilder *)builder completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("get(builder:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)getUrl:(SharedUrl *)url block:(void (^)(SharedHttpRequestBuilder *))block completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("get(url:block:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)getUrlString:(NSString *)urlString block:(void (^)(SharedHttpRequestBuilder *))block completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("get(urlString:block:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)getScheme:(NSString *)scheme host:(NSString *)host port:(int32_t)port path:(NSString *)path body:(id)body block:(void (^)(SharedHttpRequestBuilder *))block completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("get(scheme:host:port:path:body:block:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)headBuilder:(SharedHttpRequestBuilder *)builder completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("head(builder:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)headUrl:(SharedUrl *)url block:(void (^)(SharedHttpRequestBuilder *))block completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("head(url:block:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)headUrlString:(NSString *)urlString block:(void (^)(SharedHttpRequestBuilder *))block completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("head(urlString:block:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)headScheme:(NSString *)scheme host:(NSString *)host port:(int32_t)port path:(NSString *)path body:(id)body block:(void (^)(SharedHttpRequestBuilder *))block completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("head(scheme:host:port:path:body:block:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)optionsBuilder:(SharedHttpRequestBuilder *)builder completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("options(builder:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)optionsUrl:(SharedUrl *)url block:(void (^)(SharedHttpRequestBuilder *))block completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("options(url:block:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)optionsUrlString:(NSString *)urlString block:(void (^)(SharedHttpRequestBuilder *))block completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("options(urlString:block:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)optionsScheme:(NSString *)scheme host:(NSString *)host port:(int32_t)port path:(NSString *)path body:(id)body block:(void (^)(SharedHttpRequestBuilder *))block completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("options(scheme:host:port:path:body:block:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)patchBuilder:(SharedHttpRequestBuilder *)builder completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("patch(builder:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)patchUrl:(SharedUrl *)url block:(void (^)(SharedHttpRequestBuilder *))block completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("patch(url:block:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)patchUrlString:(NSString *)urlString block:(void (^)(SharedHttpRequestBuilder *))block completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("patch(urlString:block:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)patchScheme:(NSString *)scheme host:(NSString *)host port:(int32_t)port path:(NSString *)path body:(id)body block:(void (^)(SharedHttpRequestBuilder *))block completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("patch(scheme:host:port:path:body:block:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)postBuilder:(SharedHttpRequestBuilder *)builder completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("post(builder:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)postUrl:(SharedUrl *)url block:(void (^)(SharedHttpRequestBuilder *))block completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("post(url:block:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)postUrlString:(NSString *)urlString block:(void (^)(SharedHttpRequestBuilder *))block completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("post(urlString:block:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)postScheme:(NSString *)scheme host:(NSString *)host port:(int32_t)port path:(NSString *)path body:(id)body block:(void (^)(SharedHttpRequestBuilder *))block completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("post(scheme:host:port:path:body:block:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)putBuilder:(SharedHttpRequestBuilder *)builder completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("put(builder:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)putUrl:(SharedUrl *)url block:(void (^)(SharedHttpRequestBuilder *))block completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("put(url:block:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)putUrlString:(NSString *)urlString block:(void (^)(SharedHttpRequestBuilder *))block completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("put(urlString:block:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)putScheme:(NSString *)scheme host:(NSString *)host port:(int32_t)port path:(NSString *)path body:(id)body block:(void (^)(SharedHttpRequestBuilder *))block completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("put(scheme:host:port:path:body:block:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)requestBuilder:(SharedHttpRequestBuilder *)builder completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("request(builder:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)requestBlock:(void (^)(SharedHttpRequestBuilder *))block completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("request(block:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)requestUrl:(SharedUrl *)url block:(void (^)(SharedHttpRequestBuilder *))block completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("request(url:block:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)requestUrlString:(NSString *)urlString block:(void (^)(SharedHttpRequestBuilder *))block completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("request(urlString:block:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)submitFormFormParameters:(id<SharedParameters>)formParameters encodeInQuery:(BOOL)encodeInQuery block:(void (^)(SharedHttpRequestBuilder *))block completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("submitForm(formParameters:encodeInQuery:block:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)submitFormUrl:(NSString *)url formParameters:(id<SharedParameters>)formParameters encodeInQuery:(BOOL)encodeInQuery block:(void (^)(SharedHttpRequestBuilder *))block completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("submitForm(url:formParameters:encodeInQuery:block:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)submitFormScheme:(NSString *)scheme host:(NSString *)host port:(int32_t)port path:(NSString *)path formParameters:(id<SharedParameters>)formParameters encodeInQuery:(BOOL)encodeInQuery block:(void (^)(SharedHttpRequestBuilder *))block completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("submitForm(scheme:host:port:path:formParameters:encodeInQuery:block:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)submitFormWithBinaryDataScheme:(NSString *)scheme host:(NSString *)host port:(int32_t)port path:(NSString *)path formData:(NSArray<SharedPartData *> *)formData block:(void (^)(SharedHttpRequestBuilder *))block completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("submitFormWithBinaryData(scheme:host:port:path:formData:block:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)submitFormWithBinaryDataUrl:(NSString *)url formData:(NSArray<SharedPartData *> *)formData block:(void (^)(SharedHttpRequestBuilder *))block completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("submitFormWithBinaryData(url:formData:block:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)submitFormWithBinaryDataFormData:(NSArray<SharedPartData *> *)formData block:(void (^)(SharedHttpRequestBuilder *))block completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("submitFormWithBinaryData(formData:block:completionHandler:)")));
- (void)defaultTransformers __attribute__((swift_name("defaultTransformers()")));
- (id _Nullable)featureFeature:(id<SharedHttpClientFeature>)feature __attribute__((swift_name("feature(feature:)")));
- (id)getFeature:(id<SharedHttpClientFeature>)feature __attribute__((swift_name("get(feature:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)cookiesUrl:(SharedUrl *)url completionHandler:(void (^)(NSArray<SharedCookie *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("cookies(url:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)cookiesUrlString:(NSString *)urlString completionHandler:(void (^)(NSArray<SharedCookie *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("cookies(urlString:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)webSocketRequest:(void (^)(SharedHttpRequestBuilder *))request block:(id<SharedKotlinSuspendFunction1>)block completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("webSocket(request:block:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)webSocketMethod:(SharedHttpMethod *)method host:(NSString *)host port:(int32_t)port path:(NSString *)path request:(void (^)(SharedHttpRequestBuilder *))request block:(id<SharedKotlinSuspendFunction1>)block completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("webSocket(method:host:port:path:request:block:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)webSocketUrlString:(NSString *)urlString request:(void (^)(SharedHttpRequestBuilder *))request block:(id<SharedKotlinSuspendFunction1>)block completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("webSocket(urlString:request:block:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)webSocketSessionBlock:(void (^)(SharedHttpRequestBuilder *))block completionHandler:(void (^)(SharedDefaultClientWebSocketSession * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("webSocketSession(block:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)webSocketSessionMethod:(SharedHttpMethod *)method host:(NSString *)host port:(int32_t)port path:(NSString *)path block:(void (^)(SharedHttpRequestBuilder *))block completionHandler:(void (^)(SharedDefaultClientWebSocketSession * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("webSocketSession(method:host:port:path:block:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)wsRequest:(void (^)(SharedHttpRequestBuilder *))request block:(id<SharedKotlinSuspendFunction1>)block completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("ws(request:block:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)wsMethod:(SharedHttpMethod *)method host:(NSString *)host port:(int32_t)port path:(NSString *)path request:(void (^)(SharedHttpRequestBuilder *))request block:(id<SharedKotlinSuspendFunction1>)block completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("ws(method:host:port:path:request:block:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)wsUrlString:(NSString *)urlString request:(void (^)(SharedHttpRequestBuilder *))request block:(id<SharedKotlinSuspendFunction1>)block completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("ws(urlString:request:block:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)wssRequest:(void (^)(SharedHttpRequestBuilder *))request block:(id<SharedKotlinSuspendFunction1>)block completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("wss(request:block:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)wssMethod:(SharedHttpMethod *)method host:(NSString *)host port:(int32_t)port path:(NSString *)path request:(void (^)(SharedHttpRequestBuilder *))request block:(id<SharedKotlinSuspendFunction1>)block completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("wss(method:host:port:path:request:block:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)wssUrlString:(NSString *)urlString request:(void (^)(SharedHttpRequestBuilder *))request block:(id<SharedKotlinSuspendFunction1>)block completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("wss(urlString:request:block:completionHandler:)")));
@end;

@interface SharedHttpClientCall (Extensions)

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)receiveWithCompletionHandler_:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("receive(completionHandler_:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)saveWithCompletionHandler:(void (^)(SharedHttpClientCall * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("save(completionHandler:)")));
- (SharedHttpClientCall *)wrapWithContentContent:(id<SharedByteReadChannel>)content __attribute__((swift_name("wrapWithContent(content:)")));
- (SharedHttpClientCall *)wrapWithContentContent:(id<SharedByteReadChannel>)content shouldCloseOrigin:(BOOL)shouldCloseOrigin __attribute__((swift_name("wrapWithContent(content:shouldCloseOrigin:)"))) __attribute__((unavailable("Parameter [shouldCloseOrigin] is deprecated")));
@end;

@interface SharedHttpResponse (Extensions)

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)receiveWithCompletionHandler_:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("receive(completionHandler_:)")));
- (void)close_ __attribute__((swift_name("close_()"))) __attribute__((deprecated("Close is obsolete for [HttpResponse]")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)discardRemainingWithCompletionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("discardRemaining(completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)readBytesWithCompletionHandler:(void (^)(SharedKotlinByteArray * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readBytes(completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)readBytesCount:(int32_t)count completionHandler:(void (^)(SharedKotlinByteArray * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readBytes(count:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)readTextFallbackCharset:(SharedCharset * _Nullable)fallbackCharset completionHandler:(void (^)(NSString * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readText(fallbackCharset:completionHandler:)")));
- (void)useBlock:(void (^)(void))block __attribute__((swift_name("use(block:)"))) __attribute__((deprecated("Use is obsolete for [HttpResponse]")));
@property (readonly) id<SharedHttpRequest> request __attribute__((swift_name("request")));
@property (readonly) SharedHttpResponse *response __attribute__((swift_name("response"))) __attribute__((deprecated("[response] is obsolete for [HttpResponse]")));
@end;

@interface SharedDispatchers (Extensions)
- (SharedCoroutineDispatcher *)clientDispatcherThreadCount:(int32_t)threadCount dispatcherName:(NSString *)dispatcherName __attribute__((swift_name("clientDispatcher(threadCount:dispatcherName:)")));
@end;

@interface SharedOutgoingContent (Extensions)
- (SharedOutgoingContent *)wrapHeadersBlock:(id<SharedHeaders> (^)(id<SharedHeaders>))block __attribute__((swift_name("wrapHeaders(block:)")));
@property SharedCachingOptions * _Nullable caching __attribute__((swift_name("caching")));
@end;

@interface SharedHttpRequestBuilder (Extensions)
- (void)acceptContentType:(SharedContentType *)contentType __attribute__((swift_name("accept(contentType:)")));
- (void)cookieName:(NSString *)name value:(NSString *)value maxAge:(int32_t)maxAge expires:(SharedGMTDate * _Nullable)expires domain:(NSString * _Nullable)domain path:(NSString * _Nullable)path secure:(BOOL)secure httpOnly:(BOOL)httpOnly extensions:(NSDictionary<NSString *, id> *)extensions __attribute__((swift_name("cookie(name:value:maxAge:expires:domain:path:secure:httpOnly:extensions:)")));
- (void)headerKey:(NSString *)key value:(id _Nullable)value __attribute__((swift_name("header(key:value:)")));
- (SharedHeadersBuilder *)headersBlock:(void (^)(SharedHeadersBuilder *))block __attribute__((swift_name("headers(block:)")));
- (void)parameterKey:(NSString *)key value:(id _Nullable)value __attribute__((swift_name("parameter(key:value:)")));
- (SharedHttpRequestBuilder *)takeFromRequest:(id<SharedHttpRequest>)request __attribute__((swift_name("takeFrom(request:)")));
- (SharedHttpRequestBuilder *)takeFromRequest_:(SharedHttpRequestData *)request __attribute__((swift_name("takeFrom(request_:)")));
- (void)urlBlock_:(void (^)(SharedURLBuilder *))block __attribute__((swift_name("url(block_:)")));
- (void)urlUrl:(SharedUrl *)url __attribute__((swift_name("url(url:)")));
- (void)urlUrlString:(NSString *)urlString __attribute__((swift_name("url(urlString:)")));
- (void)urlScheme:(NSString *)scheme host:(NSString *)host port:(int32_t)port path:(NSString *)path block:(void (^)(SharedURLBuilder *))block __attribute__((swift_name("url(scheme:host:port:path:block:)")));
- (void)onDownloadListener:(id<SharedKotlinSuspendFunction2> _Nullable)listener __attribute__((swift_name("onDownload(listener:)")));
- (void)onUploadListener:(id<SharedKotlinSuspendFunction2> _Nullable)listener __attribute__((swift_name("onUpload(listener:)")));
- (void)timeoutBlock:(void (^)(SharedHttpTimeoutHttpTimeoutCapabilityConfiguration *))block __attribute__((swift_name("timeout(block:)")));
@property NSString *host __attribute__((swift_name("host")));
@property int32_t port __attribute__((swift_name("port")));
@property BOOL expectSuccess __attribute__((swift_name("expectSuccess")));
@end;

@interface SharedHttpRequestBuilderCompanion (Extensions)
- (SharedHttpRequestBuilder *)invokeBlock:(void (^)(SharedURLBuilder *))block __attribute__((swift_name("invoke(block:)")));
- (SharedHttpRequestBuilder *)invokeScheme:(NSString *)scheme host:(NSString *)host port:(int32_t)port path:(NSString *)path block:(void (^)(SharedURLBuilder *))block __attribute__((swift_name("invoke(scheme:host:port:path:block:)")));
@end;

@interface SharedHttpRequestData (Extensions)
- (BOOL)isUpgradeRequest __attribute__((swift_name("isUpgradeRequest()")));
@end;

@interface SharedFormBuilder (Extensions)
- (void)appendKey:(NSString *)key headers:(id<SharedHeaders>)headers size:(SharedLong * _Nullable)size bodyBuilder:(void (^)(SharedBytePacketBuilder *))bodyBuilder __attribute__((swift_name("append(key:headers:size:bodyBuilder:)")));
- (void)appendKey:(NSString *)key filename:(NSString *)filename contentType:(SharedContentType * _Nullable)contentType size:(SharedLong * _Nullable)size bodyBuilder:(void (^)(SharedBytePacketBuilder *))bodyBuilder __attribute__((swift_name("append(key:filename:contentType:size:bodyBuilder:)")));
@end;

@interface SharedHttpResponse_ (Extensions)

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)discardRemainingWithCompletionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("discardRemaining(completionHandler:)"))) __attribute__((unavailable("Unbound streaming [HttpResponse] is deprecated. Consider using [HttpStatement] instead.")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)readBytesWithCompletionHandler:(void (^)(SharedKotlinByteArray * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readBytes(completionHandler:)"))) __attribute__((unavailable("Unbound streaming [HttpResponse] is deprecated. Consider using [HttpStatement] instead.")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)readBytesCount:(int32_t)count completionHandler:(void (^)(SharedKotlinByteArray * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readBytes(count:completionHandler:)"))) __attribute__((unavailable("Unbound streaming [HttpResponse] is deprecated. Consider using [HttpStatement] instead.")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)readTextCharset:(SharedCharset * _Nullable)charset completionHandler:(void (^)(NSString * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readText(charset:completionHandler:)"))) __attribute__((unavailable("Unbound streaming [HttpResponse] is deprecated. Consider using [HttpStatement] instead.")));
@end;

@interface SharedHttpStatement (Extensions)
- (void)useBlock:(id<SharedKotlinSuspendFunction1>)block __attribute__((swift_name("use(block:)"))) __attribute__((unavailable("[HttpStatement] isn't closeable.")));
@property (readonly) SharedHttpResponse *response __attribute__((swift_name("response"))) __attribute__((unavailable("Unbound [HttpResponse] is deprecated. Consider using [execute()] instead.")));
@end;

@interface SharedProxyConfig (Extensions)
- (SharedNetworkAddress *)resolveAddress __attribute__((swift_name("resolveAddress()")));
@property (readonly) SharedProxyType *type __attribute__((swift_name("type")));
@end;

@interface SharedProxyBuilder (Extensions)
- (SharedProxyConfig *)httpUrlString:(NSString *)urlString __attribute__((swift_name("http(urlString:)")));
@end;

@interface SharedQuery (Extensions)
- (id<SharedFlow>)asFlow __attribute__((swift_name("asFlow()")));
@end;

@interface SharedHttpHeadersMap (Extensions)
- (void)dumpToIndent:(NSString *)indent out:(id<SharedKotlinAppendable>)out __attribute__((swift_name("dumpTo(indent:out:)")));
@end;

@interface SharedFrame (Extensions)
- (SharedKotlinByteArray *)readBytes __attribute__((swift_name("readBytes()")));
@end;

@interface SharedFrameClose (Extensions)
- (SharedCloseReason * _Nullable)readReason __attribute__((swift_name("readReason()")));
@end;

@interface SharedFrameText (Extensions)
- (NSString *)readText __attribute__((swift_name("readText()")));
@end;

@interface SharedHttpStatusCodeCompanion (Extensions)
@property (readonly) SharedHttpStatusCode *ExceptionFailed __attribute__((swift_name("ExceptionFailed"))) __attribute__((unavailable("Use ExpectationFailed instead")));
@end;

@interface SharedURLBuilder (Extensions)
- (SharedURLBuilder *)clone __attribute__((swift_name("clone()")));
- (SharedURLBuilder *)pathComponentsComponents:(SharedKotlinArray<NSString *> *)components __attribute__((swift_name("pathComponents(components:)")));
- (SharedURLBuilder *)pathComponentsComponents_:(NSArray<NSString *> *)components __attribute__((swift_name("pathComponents(components_:)")));
- (SharedURLBuilder *)takeFromUrl:(SharedURLBuilder *)url __attribute__((swift_name("takeFrom(url:)")));
- (SharedURLBuilder *)takeFromUrl_:(SharedUrl *)url __attribute__((swift_name("takeFrom(url_:)")));
- (SharedURLBuilder *)takeFromUrlString:(NSString *)urlString __attribute__((swift_name("takeFrom(urlString:)")));
@property (readonly) NSString *authority __attribute__((swift_name("authority")));
@end;

@interface SharedUrl (Extensions)
@property (readonly) NSString *authority __attribute__((swift_name("authority")));
@property (readonly) NSString *fullPath __attribute__((swift_name("fullPath")));
@property (readonly) NSString *hostWithPort __attribute__((swift_name("hostWithPort")));
@end;

@interface SharedStringValuesBuilder (Extensions)
- (void)appendName:(NSString *)name value_:(SharedHeaderValueWithParameters *)value __attribute__((swift_name("append(name:value_:)")));
- (SharedStringValuesBuilder *)appendAllBuilder:(SharedStringValuesBuilder *)builder __attribute__((swift_name("appendAll(builder:)")));
- (void)appendFilteredSource:(id<SharedStringValues>)source keepEmpty:(BOOL)keepEmpty predicate:(SharedBoolean *(^)(NSString *, NSString *))predicate __attribute__((swift_name("appendFiltered(source:keepEmpty:predicate:)")));
@end;

@interface SharedHeaderValueWithParameters (Extensions)
- (SharedCharset * _Nullable)charset __attribute__((swift_name("charset()")));
@end;

@interface SharedContentTypeCompanion (Extensions)
- (SharedContentType *)defaultForFileExtensionExtension:(NSString *)extension __attribute__((swift_name("defaultForFileExtension(extension:)")));
- (SharedContentType *)defaultForFilePathPath:(NSString *)path __attribute__((swift_name("defaultForFilePath(path:)")));
- (NSArray<SharedContentType *> *)fromFileExtensionExt:(NSString *)ext __attribute__((swift_name("fromFileExtension(ext:)")));
- (NSArray<SharedContentType *> *)fromFilePathPath:(NSString *)path __attribute__((swift_name("fromFilePath(path:)")));
@end;

@interface SharedHeadersBuilder (Extensions)
- (void)etagEntityTag:(NSString *)entityTag __attribute__((swift_name("etag(entityTag:)")));
@end;

@interface SharedContentType (Extensions)
- (NSArray<NSString *> *)fileExtensions __attribute__((swift_name("fileExtensions()")));
- (SharedContentType *)withCharsetCharset:(SharedCharset *)charset __attribute__((swift_name("withCharset(charset:)")));
@end;

@interface SharedURLProtocol (Extensions)
- (BOOL)isSecure __attribute__((swift_name("isSecure()")));
- (BOOL)isWebsocket __attribute__((swift_name("isWebsocket()")));
@end;

@interface SharedHttpStatusCode (Extensions)
- (BOOL)isSuccess __attribute__((swift_name("isSuccess()")));
@end;

@interface SharedGMTDate (Extensions)
- (NSString *)toHttpDate __attribute__((swift_name("toHttpDate()")));
- (SharedGMTDate *)minusMilliseconds:(int64_t)milliseconds __attribute__((swift_name("minus(milliseconds:)")));
- (SharedGMTDate *)minusDuration:(int64_t)duration __attribute__((swift_name("minus(duration:)")));
- (SharedGMTDate *)plusMilliseconds:(int64_t)milliseconds __attribute__((swift_name("plus(milliseconds:)")));
- (SharedGMTDate *)plusDuration:(int64_t)duration __attribute__((swift_name("plus(duration:)")));
- (SharedGMTDate *)truncateToSeconds __attribute__((swift_name("truncateToSeconds()")));
@end;

__attribute__((swift_name("KotlinLongProgression")))
@interface SharedKotlinLongProgression : SharedBase <SharedKotlinIterable>
@property (class, readonly, getter=companion) SharedKotlinLongProgressionCompanion *companion __attribute__((swift_name("companion")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (BOOL)isEmpty __attribute__((swift_name("isEmpty()")));
- (SharedKotlinLongIterator *)iterator __attribute__((swift_name("iterator()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int64_t first __attribute__((swift_name("first")));
@property (readonly) int64_t last __attribute__((swift_name("last")));
@property (readonly, getter=step_) int64_t step __attribute__((swift_name("step")));
@end;

__attribute__((swift_name("KotlinClosedRange")))
@protocol SharedKotlinClosedRange
@required
- (BOOL)containsValue:(id)value __attribute__((swift_name("contains(value:)")));
- (BOOL)isEmpty_ __attribute__((swift_name("isEmpty()")));
@property (readonly) id endInclusive __attribute__((swift_name("endInclusive")));
@property (readonly, getter=start_) id start __attribute__((swift_name("start")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinLongRange")))
@interface SharedKotlinLongRange : SharedKotlinLongProgression <SharedKotlinClosedRange>
- (instancetype)initWithStart:(int64_t)start endInclusive:(int64_t)endInclusive __attribute__((swift_name("init(start:endInclusive:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedKotlinLongRangeCompanion *companion __attribute__((swift_name("companion")));
- (BOOL)containsValue:(SharedLong *)value __attribute__((swift_name("contains(value:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (BOOL)isEmpty __attribute__((swift_name("isEmpty()")));
- (BOOL)isEmpty_ __attribute__((swift_name("isEmpty()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedLong *endInclusive __attribute__((swift_name("endInclusive")));
@property (readonly, getter=start_) SharedLong *start __attribute__((swift_name("start")));
@end;

@interface SharedKotlinLongRange (Extensions)
- (BOOL)containsOther:(SharedKotlinLongRange *)other __attribute__((swift_name("contains(other:)")));
- (id<SharedFlow>)asFlow __attribute__((swift_name("asFlow()")));
@property (readonly) int64_t length __attribute__((swift_name("length"))) __attribute__((unavailable("Not supported anymore.")));
@end;

@interface SharedByteReadPacket (Extensions)
- (id<SharedInput>)decodeBase64Bytes __attribute__((swift_name("decodeBase64Bytes()")));
- (NSString *)encodeBase64 __attribute__((swift_name("encodeBase64()")));
- (int32_t)readAvailableDst:(void *)dst limit:(int32_t)limit __attribute__((swift_name("readAvailable(dst:limit:)")));
- (int64_t)readAvailableDst:(void *)dst limit_:(int64_t)limit __attribute__((swift_name("readAvailable(dst:limit_:)")));
- (SharedKotlinByteArray *)readBytesN:(int32_t)n __attribute__((swift_name("readBytes(n:)")));
- (int32_t)readFullyDst:(void *)dst size:(int32_t)size __attribute__((swift_name("readFully(dst:size:)")));
- (int64_t)readFullyDst:(void *)dst size_:(int64_t)size __attribute__((swift_name("readFully(dst:size_:)")));
- (NSString * _Nullable)readUTF8LineEstimate:(int32_t)estimate limit:(int32_t)limit __attribute__((swift_name("readUTF8Line(estimate:limit:)")));
@property (readonly) BOOL isEmpty __attribute__((swift_name("isEmpty")));
@property (readonly) BOOL isNotEmpty __attribute__((swift_name("isNotEmpty")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinByteArray")))
@interface SharedKotlinByteArray : SharedBase
+ (instancetype)arrayWithSize:(int32_t)size __attribute__((swift_name("init(size:)")));
+ (instancetype)arrayWithSize:(int32_t)size init:(SharedByte *(^)(SharedInt *))init __attribute__((swift_name("init(size:init:)")));
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (int8_t)getIndex:(int32_t)index __attribute__((swift_name("get(index:)")));
- (SharedKotlinByteIterator *)iterator __attribute__((swift_name("iterator()")));
- (void)setIndex:(int32_t)index value:(int8_t)value __attribute__((swift_name("set(index:value:)")));
@property (readonly) int32_t size __attribute__((swift_name("size")));
@end;

@interface SharedKotlinByteArray (Extensions)
- (NSString *)encodeBase64 __attribute__((swift_name("encodeBase64()")));
- (int16_t)readShortOffset:(int32_t)offset __attribute__((swift_name("readShort(offset:)")));
- (id _Nullable)useMemoryOffset:(int32_t)offset length:(int32_t)length block:(id _Nullable (^)(SharedMemory *))block __attribute__((swift_name("useMemory(offset:length:block:)")));
@end;

@interface SharedLock (Extensions)
- (id _Nullable)withLockBlock:(id _Nullable (^)(void))block __attribute__((swift_name("withLock(block:)")));
@end;

@interface SharedNetworkAddress (Extensions)
@property (readonly) NSString *hostname_ __attribute__((swift_name("hostname_")));
@property (readonly) int32_t port_ __attribute__((swift_name("port_")));
@end;

@interface SharedPipeline (Extensions)

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)executeContext:(id)context completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("execute(context:completionHandler:)")));
- (void)interceptPhase:(SharedPipelinePhase *)phase block_:(id<SharedKotlinSuspendFunction2>)block __attribute__((swift_name("intercept(phase:block_:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinAtomicLong")))
@interface SharedKotlinAtomicLong : SharedBase
- (instancetype)initWithValue_:(int64_t)value_ __attribute__((swift_name("init(value_:)"))) __attribute__((objc_designated_initializer));
- (int64_t)addAndGetDelta:(int32_t)delta __attribute__((swift_name("addAndGet(delta:)")));
- (int64_t)addAndGetDelta_:(int64_t)delta __attribute__((swift_name("addAndGet(delta_:)")));
- (BOOL)compareAndSetExpected:(int64_t)expected new:(int64_t)new_ __attribute__((swift_name("compareAndSet(expected:new:)")));
- (int64_t)compareAndSwapExpected:(int64_t)expected new:(int64_t)new_ __attribute__((swift_name("compareAndSwap(expected:new:)")));
- (void)decrement __attribute__((swift_name("decrement()")));
- (void)increment __attribute__((swift_name("increment()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property int64_t value __attribute__((swift_name("value")));
@end;

@interface SharedKotlinAtomicLong (Extensions)
- (void)loopAction:(void (^)(SharedLong *))action __attribute__((swift_name("loop(action:)")));
- (void)updateFunction:(SharedLong *(^)(SharedLong *))function __attribute__((swift_name("update(function:)")));
- (int64_t)updateAndGetFunction:(SharedLong *(^)(SharedLong *))function __attribute__((swift_name("updateAndGet(function:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinAtomicReference")))
@interface SharedKotlinAtomicReference<T> : SharedBase
- (instancetype)initWithValue:(T _Nullable)value __attribute__((swift_name("init(value:)"))) __attribute__((objc_designated_initializer));
- (BOOL)compareAndSetExpected:(T _Nullable)expected new:(T _Nullable)new_ __attribute__((swift_name("compareAndSet(expected:new:)")));
- (T _Nullable)compareAndSwapExpected:(T _Nullable)expected new:(T _Nullable)new_ __attribute__((swift_name("compareAndSwap(expected:new:)")));
- (NSString *)description __attribute__((swift_name("description()")));
@property T _Nullable value __attribute__((swift_name("value")));
@end;

@interface SharedKotlinAtomicReference (Extensions)
- (void)loopAction:(void (^)(id _Nullable))action __attribute__((swift_name("loop(action:)")));
@end;

@interface SharedByteChannelSequentialBase (Extensions)

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)doCopyToDst:(SharedByteChannelSequentialBase *)dst limit:(int64_t)limit completionHandler:(void (^)(SharedLong * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("doCopyTo(dst:limit:completionHandler:)"))) __attribute__((unavailable("This is going to become internal. Use ByteReadChannel receiver instead.")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)joinToDst:(SharedByteChannelSequentialBase *)dst closeOnEnd:(BOOL)closeOnEnd completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("joinTo(dst:closeOnEnd:completionHandler:)"))) __attribute__((unavailable("This is going to become internal. Use ByteReadChannel receiver instead.")));
@end;

@interface SharedMemory (Extensions)
- (void)doCopyToDestination:(SharedKotlinByteArray *)destination offset:(int32_t)offset length:(int32_t)length __attribute__((swift_name("doCopyTo(destination:offset:length:)")));
- (void)doCopyToDestination:(SharedKotlinByteArray *)destination offset:(int32_t)offset length:(int32_t)length destinationOffset__:(int32_t)destinationOffset __attribute__((swift_name("doCopyTo(destination:offset:length:destinationOffset__:)")));
- (void)doCopyToDestination:(SharedKotlinByteArray *)destination offset:(int64_t)offset length_:(int32_t)length __attribute__((swift_name("doCopyTo(destination:offset:length_:)")));
- (void)doCopyToDestination:(SharedKotlinByteArray *)destination offset:(int64_t)offset length:(int32_t)length destinationOffset___:(int32_t)destinationOffset __attribute__((swift_name("doCopyTo(destination:offset:length:destinationOffset___:)")));
- (void)doCopyToDestination:(void *)destination offset:(int32_t)offset length:(int32_t)length destinationOffset____:(int32_t)destinationOffset __attribute__((swift_name("doCopyTo(destination:offset:length:destinationOffset____:)")));
- (void)doCopyToDestination:(void *)destination offset:(int64_t)offset length:(int64_t)length destinationOffset_____:(int64_t)destinationOffset __attribute__((swift_name("doCopyTo(destination:offset:length:destinationOffset_____:)")));
- (void)fillOffset:(int32_t)offset count:(int32_t)count value:(int8_t)value __attribute__((swift_name("fill(offset:count:value:)")));
- (void)fillOffset:(int64_t)offset count:(int64_t)count value_:(int8_t)value __attribute__((swift_name("fill(offset:count:value_:)")));
- (int8_t)getIndex:(int32_t)index __attribute__((swift_name("get(index:)")));
- (int8_t)getIndex_:(int64_t)index __attribute__((swift_name("get(index_:)")));
- (void)loadByteArrayOffset:(int32_t)offset destination:(SharedKotlinByteArray *)destination destinationOffset:(int32_t)destinationOffset count:(int32_t)count __attribute__((swift_name("loadByteArray(offset:destination:destinationOffset:count:)")));
- (void)loadByteArrayOffset:(int64_t)offset destination:(SharedKotlinByteArray *)destination destinationOffset:(int32_t)destinationOffset count_:(int32_t)count __attribute__((swift_name("loadByteArray(offset:destination:destinationOffset:count_:)")));
- (void)loadDoubleArrayOffset:(int32_t)offset destination:(SharedKotlinDoubleArray *)destination destinationOffset:(int32_t)destinationOffset count:(int32_t)count __attribute__((swift_name("loadDoubleArray(offset:destination:destinationOffset:count:)")));
- (void)loadDoubleArrayOffset:(int64_t)offset destination:(SharedKotlinDoubleArray *)destination destinationOffset:(int32_t)destinationOffset count_:(int32_t)count __attribute__((swift_name("loadDoubleArray(offset:destination:destinationOffset:count_:)")));
- (double)loadDoubleAtOffset:(int32_t)offset __attribute__((swift_name("loadDoubleAt(offset:)")));
- (double)loadDoubleAtOffset_:(int64_t)offset __attribute__((swift_name("loadDoubleAt(offset_:)")));
- (void)loadFloatArrayOffset:(int32_t)offset destination:(SharedKotlinFloatArray *)destination destinationOffset:(int32_t)destinationOffset count:(int32_t)count __attribute__((swift_name("loadFloatArray(offset:destination:destinationOffset:count:)")));
- (void)loadFloatArrayOffset:(int64_t)offset destination:(SharedKotlinFloatArray *)destination destinationOffset:(int32_t)destinationOffset count_:(int32_t)count __attribute__((swift_name("loadFloatArray(offset:destination:destinationOffset:count_:)")));
- (float)loadFloatAtOffset:(int32_t)offset __attribute__((swift_name("loadFloatAt(offset:)")));
- (float)loadFloatAtOffset_:(int64_t)offset __attribute__((swift_name("loadFloatAt(offset_:)")));
- (void)loadIntArrayOffset:(int32_t)offset destination:(SharedKotlinIntArray *)destination destinationOffset:(int32_t)destinationOffset count:(int32_t)count __attribute__((swift_name("loadIntArray(offset:destination:destinationOffset:count:)")));
- (void)loadIntArrayOffset:(int64_t)offset destination:(SharedKotlinIntArray *)destination destinationOffset:(int32_t)destinationOffset count_:(int32_t)count __attribute__((swift_name("loadIntArray(offset:destination:destinationOffset:count_:)")));
- (int32_t)loadIntAtOffset:(int32_t)offset __attribute__((swift_name("loadIntAt(offset:)")));
- (int32_t)loadIntAtOffset_:(int64_t)offset __attribute__((swift_name("loadIntAt(offset_:)")));
- (void)loadLongArrayOffset:(int32_t)offset destination:(SharedKotlinLongArray *)destination destinationOffset:(int32_t)destinationOffset count:(int32_t)count __attribute__((swift_name("loadLongArray(offset:destination:destinationOffset:count:)")));
- (void)loadLongArrayOffset:(int64_t)offset destination:(SharedKotlinLongArray *)destination destinationOffset:(int32_t)destinationOffset count_:(int32_t)count __attribute__((swift_name("loadLongArray(offset:destination:destinationOffset:count_:)")));
- (int64_t)loadLongAtOffset:(int32_t)offset __attribute__((swift_name("loadLongAt(offset:)")));
- (int64_t)loadLongAtOffset_:(int64_t)offset __attribute__((swift_name("loadLongAt(offset_:)")));
- (void)loadShortArrayOffset:(int32_t)offset destination:(SharedKotlinShortArray *)destination destinationOffset:(int32_t)destinationOffset count:(int32_t)count __attribute__((swift_name("loadShortArray(offset:destination:destinationOffset:count:)")));
- (void)loadShortArrayOffset:(int64_t)offset destination:(SharedKotlinShortArray *)destination destinationOffset:(int32_t)destinationOffset count_:(int32_t)count __attribute__((swift_name("loadShortArray(offset:destination:destinationOffset:count_:)")));
- (int16_t)loadShortAtOffset:(int32_t)offset __attribute__((swift_name("loadShortAt(offset:)")));
- (int16_t)loadShortAtOffset_:(int64_t)offset __attribute__((swift_name("loadShortAt(offset_:)")));
- (void)loadUByteArrayOffset:(int32_t)offset destination:(id)destination destinationOffset:(int32_t)destinationOffset count:(int32_t)count __attribute__((swift_name("loadUByteArray(offset:destination:destinationOffset:count:)")));
- (void)loadUByteArrayOffset:(int64_t)offset destination:(id)destination destinationOffset:(int32_t)destinationOffset count_:(int32_t)count __attribute__((swift_name("loadUByteArray(offset:destination:destinationOffset:count_:)")));
- (void)loadUIntArrayOffset:(int32_t)offset destination:(id)destination destinationOffset:(int32_t)destinationOffset count:(int32_t)count __attribute__((swift_name("loadUIntArray(offset:destination:destinationOffset:count:)")));
- (void)loadUIntArrayOffset:(int64_t)offset destination:(id)destination destinationOffset:(int32_t)destinationOffset count_:(int32_t)count __attribute__((swift_name("loadUIntArray(offset:destination:destinationOffset:count_:)")));
- (uint32_t)loadUIntAtOffset:(int32_t)offset __attribute__((swift_name("loadUIntAt(offset:)")));
- (uint32_t)loadUIntAtOffset_:(int64_t)offset __attribute__((swift_name("loadUIntAt(offset_:)")));
- (void)loadULongArrayOffset:(int32_t)offset destination:(id)destination destinationOffset:(int32_t)destinationOffset count:(int32_t)count __attribute__((swift_name("loadULongArray(offset:destination:destinationOffset:count:)")));
- (void)loadULongArrayOffset:(int64_t)offset destination:(id)destination destinationOffset:(int32_t)destinationOffset count_:(int32_t)count __attribute__((swift_name("loadULongArray(offset:destination:destinationOffset:count_:)")));
- (uint64_t)loadULongAtOffset:(int32_t)offset __attribute__((swift_name("loadULongAt(offset:)")));
- (uint64_t)loadULongAtOffset_:(int64_t)offset __attribute__((swift_name("loadULongAt(offset_:)")));
- (void)loadUShortArrayOffset:(int32_t)offset destination:(id)destination destinationOffset:(int32_t)destinationOffset count:(int32_t)count __attribute__((swift_name("loadUShortArray(offset:destination:destinationOffset:count:)")));
- (void)loadUShortArrayOffset:(int64_t)offset destination:(id)destination destinationOffset:(int32_t)destinationOffset count_:(int32_t)count __attribute__((swift_name("loadUShortArray(offset:destination:destinationOffset:count_:)")));
- (uint16_t)loadUShortAtOffset:(int32_t)offset __attribute__((swift_name("loadUShortAt(offset:)")));
- (uint16_t)loadUShortAtOffset_:(int64_t)offset __attribute__((swift_name("loadUShortAt(offset_:)")));
- (void)setIndex:(int32_t)index value:(int8_t)value __attribute__((swift_name("set(index:value:)")));
- (void)setIndex:(int64_t)index value_:(int8_t)value __attribute__((swift_name("set(index:value_:)")));
- (void)storeAtIndex:(int32_t)index value__:(uint8_t)value __attribute__((swift_name("storeAt(index:value__:)")));
- (void)storeAtIndex:(int64_t)index value___:(uint8_t)value __attribute__((swift_name("storeAt(index:value___:)")));
- (void)storeByteArrayOffset:(int32_t)offset source:(SharedKotlinByteArray *)source sourceOffset:(int32_t)sourceOffset count:(int32_t)count __attribute__((swift_name("storeByteArray(offset:source:sourceOffset:count:)")));
- (void)storeByteArrayOffset:(int64_t)offset source:(SharedKotlinByteArray *)source sourceOffset:(int32_t)sourceOffset count_:(int32_t)count __attribute__((swift_name("storeByteArray(offset:source:sourceOffset:count_:)")));
- (void)storeDoubleArrayOffset:(int32_t)offset source:(SharedKotlinDoubleArray *)source sourceOffset:(int32_t)sourceOffset count:(int32_t)count __attribute__((swift_name("storeDoubleArray(offset:source:sourceOffset:count:)")));
- (void)storeDoubleArrayOffset:(int64_t)offset source:(SharedKotlinDoubleArray *)source sourceOffset:(int32_t)sourceOffset count_:(int32_t)count __attribute__((swift_name("storeDoubleArray(offset:source:sourceOffset:count_:)")));
- (void)storeDoubleAtOffset:(int32_t)offset value:(double)value __attribute__((swift_name("storeDoubleAt(offset:value:)")));
- (void)storeDoubleAtOffset:(int64_t)offset value_:(double)value __attribute__((swift_name("storeDoubleAt(offset:value_:)")));
- (void)storeFloatArrayOffset:(int32_t)offset source:(SharedKotlinFloatArray *)source sourceOffset:(int32_t)sourceOffset count:(int32_t)count __attribute__((swift_name("storeFloatArray(offset:source:sourceOffset:count:)")));
- (void)storeFloatArrayOffset:(int64_t)offset source:(SharedKotlinFloatArray *)source sourceOffset:(int32_t)sourceOffset count_:(int32_t)count __attribute__((swift_name("storeFloatArray(offset:source:sourceOffset:count_:)")));
- (void)storeFloatAtOffset:(int32_t)offset value:(float)value __attribute__((swift_name("storeFloatAt(offset:value:)")));
- (void)storeFloatAtOffset:(int64_t)offset value_:(float)value __attribute__((swift_name("storeFloatAt(offset:value_:)")));
- (void)storeIntArrayOffset:(int32_t)offset source:(SharedKotlinIntArray *)source sourceOffset:(int32_t)sourceOffset count:(int32_t)count __attribute__((swift_name("storeIntArray(offset:source:sourceOffset:count:)")));
- (void)storeIntArrayOffset:(int64_t)offset source:(SharedKotlinIntArray *)source sourceOffset:(int32_t)sourceOffset count_:(int32_t)count __attribute__((swift_name("storeIntArray(offset:source:sourceOffset:count_:)")));
- (void)storeIntAtOffset:(int32_t)offset value:(int32_t)value __attribute__((swift_name("storeIntAt(offset:value:)")));
- (void)storeIntAtOffset:(int64_t)offset value_:(int32_t)value __attribute__((swift_name("storeIntAt(offset:value_:)")));
- (void)storeLongArrayOffset:(int32_t)offset source:(SharedKotlinLongArray *)source sourceOffset:(int32_t)sourceOffset count:(int32_t)count __attribute__((swift_name("storeLongArray(offset:source:sourceOffset:count:)")));
- (void)storeLongArrayOffset:(int64_t)offset source:(SharedKotlinLongArray *)source sourceOffset:(int32_t)sourceOffset count_:(int32_t)count __attribute__((swift_name("storeLongArray(offset:source:sourceOffset:count_:)")));
- (void)storeLongAtOffset:(int32_t)offset value:(int64_t)value __attribute__((swift_name("storeLongAt(offset:value:)")));
- (void)storeLongAtOffset:(int64_t)offset value_:(int64_t)value __attribute__((swift_name("storeLongAt(offset:value_:)")));
- (void)storeShortArrayOffset:(int32_t)offset source:(SharedKotlinShortArray *)source sourceOffset:(int32_t)sourceOffset count:(int32_t)count __attribute__((swift_name("storeShortArray(offset:source:sourceOffset:count:)")));
- (void)storeShortArrayOffset:(int64_t)offset source:(SharedKotlinShortArray *)source sourceOffset:(int32_t)sourceOffset count_:(int32_t)count __attribute__((swift_name("storeShortArray(offset:source:sourceOffset:count_:)")));
- (void)storeShortAtOffset:(int32_t)offset value:(int16_t)value __attribute__((swift_name("storeShortAt(offset:value:)")));
- (void)storeShortAtOffset:(int64_t)offset value_:(int16_t)value __attribute__((swift_name("storeShortAt(offset:value_:)")));
- (void)storeUByteArrayOffset:(int32_t)offset source:(id)source sourceOffset:(int32_t)sourceOffset count:(int32_t)count __attribute__((swift_name("storeUByteArray(offset:source:sourceOffset:count:)")));
- (void)storeUByteArrayOffset:(int64_t)offset source:(id)source sourceOffset:(int32_t)sourceOffset count_:(int32_t)count __attribute__((swift_name("storeUByteArray(offset:source:sourceOffset:count_:)")));
- (void)storeUIntArrayOffset:(int32_t)offset source:(id)source sourceOffset:(int32_t)sourceOffset count:(int32_t)count __attribute__((swift_name("storeUIntArray(offset:source:sourceOffset:count:)")));
- (void)storeUIntArrayOffset:(int64_t)offset source:(id)source sourceOffset:(int32_t)sourceOffset count_:(int32_t)count __attribute__((swift_name("storeUIntArray(offset:source:sourceOffset:count_:)")));
- (void)storeUIntAtOffset:(int32_t)offset value:(uint32_t)value __attribute__((swift_name("storeUIntAt(offset:value:)")));
- (void)storeUIntAtOffset:(int64_t)offset value_:(uint32_t)value __attribute__((swift_name("storeUIntAt(offset:value_:)")));
- (void)storeULongArrayOffset:(int32_t)offset source:(id)source sourceOffset:(int32_t)sourceOffset count:(int32_t)count __attribute__((swift_name("storeULongArray(offset:source:sourceOffset:count:)")));
- (void)storeULongArrayOffset:(int64_t)offset source:(id)source sourceOffset:(int32_t)sourceOffset count_:(int32_t)count __attribute__((swift_name("storeULongArray(offset:source:sourceOffset:count_:)")));
- (void)storeULongAtOffset:(int32_t)offset value:(uint64_t)value __attribute__((swift_name("storeULongAt(offset:value:)")));
- (void)storeULongAtOffset:(int64_t)offset value_:(uint64_t)value __attribute__((swift_name("storeULongAt(offset:value_:)")));
- (void)storeUShortArrayOffset:(int32_t)offset source:(id)source sourceOffset:(int32_t)sourceOffset count:(int32_t)count __attribute__((swift_name("storeUShortArray(offset:source:sourceOffset:count:)")));
- (void)storeUShortArrayOffset:(int64_t)offset source:(id)source sourceOffset:(int32_t)sourceOffset count_:(int32_t)count __attribute__((swift_name("storeUShortArray(offset:source:sourceOffset:count_:)")));
- (void)storeUShortAtOffset:(int32_t)offset value:(uint16_t)value __attribute__((swift_name("storeUShortAt(offset:value:)")));
- (void)storeUShortAtOffset:(int64_t)offset value_:(uint16_t)value __attribute__((swift_name("storeUShortAt(offset:value_:)")));
@end;

@interface SharedMemoryCompanion (Extensions)
- (SharedMemory *)ofPointer:(void *)pointer size:(int32_t)size __attribute__((swift_name("of(pointer:size:)")));
- (SharedMemory *)ofPointer:(void *)pointer size_:(int64_t)size __attribute__((swift_name("of(pointer:size_:)")));
- (SharedMemory *)ofPointer:(void *)pointer size__:(uint64_t)size __attribute__((swift_name("of(pointer:size__:)")));
@end;

@interface SharedBuffer (Extensions)
- (SharedBuffer *)appendC:(unichar)c __attribute__((swift_name("append(c:)"))) __attribute__((deprecated("This is no longer supported. Use a packet builder to append characters instead.")));
- (SharedBuffer *)appendCsq:(SharedKotlinCharArray *)csq start:(int32_t)start end_:(int32_t)end __attribute__((swift_name("append(csq:start:end_:)"))) __attribute__((deprecated("This is no longer supported. Use a packet builder to append characters instead.")));
- (SharedBuffer *)appendCsq:(id _Nullable)csq __attribute__((swift_name("append(csq:)"))) __attribute__((deprecated("This is no longer supported. Use a packet builder to append characters instead.")));
- (SharedBuffer *)appendCsq:(id _Nullable)csq start:(int32_t)start end__:(int32_t)end __attribute__((swift_name("append(csq:start:end__:)"))) __attribute__((deprecated("This is no longer supported. Use a packet builder to append characters instead.")));
- (BOOL)canRead __attribute__((swift_name("canRead()")));
- (BOOL)canWrite __attribute__((swift_name("canWrite()")));
- (void)fillTimes:(int32_t)times value:(int8_t)value __attribute__((swift_name("fill(times:value:)")));
- (void)fillTimes:(int32_t)times value_:(uint8_t)value __attribute__((swift_name("fill(times:value_:)")));
- (void)fillN:(int64_t)n v:(int8_t)v __attribute__((swift_name("fill(n:v:)"))) __attribute__((deprecated("Use fill with n with type Int")));
- (void)flush_ __attribute__((swift_name("flush_()"))) __attribute__((deprecated("Does nothing.")));
- (void)forEachBlock:(void (^)(SharedByte *))block __attribute__((swift_name("forEach(block:)")));
- (SharedBuffer *)makeView_ __attribute__((swift_name("makeView_()"))) __attribute__((deprecated("Use duplicate instead")));
- (void)pushBackN:(int32_t)n __attribute__((swift_name("pushBack(n:)"))) __attribute__((deprecated("Use rewind instead")));
- (int32_t)readBlock:(SharedInt *(^)(SharedMemory *, SharedInt *, SharedInt *))block __attribute__((swift_name("read(block:)")));
- (int32_t)readAvailableDst:(SharedBuffer *)dst length:(int32_t)length __attribute__((swift_name("readAvailable(dst:length:)")));
- (int32_t)readAvailableDestination:(SharedKotlinByteArray *)destination offset:(int32_t)offset length:(int32_t)length __attribute__((swift_name("readAvailable(destination:offset:length:)")));
- (int32_t)readAvailableDestination:(SharedKotlinDoubleArray *)destination offset:(int32_t)offset length_:(int32_t)length __attribute__((swift_name("readAvailable(destination:offset:length_:)")));
- (int32_t)readAvailableDestination:(SharedKotlinFloatArray *)destination offset:(int32_t)offset length__:(int32_t)length __attribute__((swift_name("readAvailable(destination:offset:length__:)")));
- (int32_t)readAvailableDestination:(SharedKotlinIntArray *)destination offset:(int32_t)offset length___:(int32_t)length __attribute__((swift_name("readAvailable(destination:offset:length___:)")));
- (int32_t)readAvailableDestination:(SharedKotlinLongArray *)destination offset:(int32_t)offset length____:(int32_t)length __attribute__((swift_name("readAvailable(destination:offset:length____:)")));
- (int32_t)readAvailableDestination:(SharedKotlinShortArray *)destination offset:(int32_t)offset length_____:(int32_t)length __attribute__((swift_name("readAvailable(destination:offset:length_____:)")));
- (int32_t)readAvailableDestination:(id)destination offset:(int32_t)offset length______:(int32_t)length __attribute__((swift_name("readAvailable(destination:offset:length______:)")));
- (int32_t)readAvailableDestination:(id)destination offset:(int32_t)offset length_______:(int32_t)length __attribute__((swift_name("readAvailable(destination:offset:length_______:)")));
- (int32_t)readAvailableDestination:(id)destination offset:(int32_t)offset length________:(int32_t)length __attribute__((swift_name("readAvailable(destination:offset:length________:)")));
- (int32_t)readAvailableDestination:(id)destination offset:(int32_t)offset length_________:(int32_t)length __attribute__((swift_name("readAvailable(destination:offset:length_________:)")));
- (int32_t)readAvailablePointer:(void *)pointer offset:(int32_t)offset length:(int32_t)length __attribute__((swift_name("readAvailable(pointer:offset:length:)")));
- (int32_t)readAvailablePointer:(void *)pointer offset:(int64_t)offset length_:(int32_t)length __attribute__((swift_name("readAvailable(pointer:offset:length_:)")));
- (int32_t)readAvailableLittleEndianDst:(SharedKotlinDoubleArray *)dst offset:(int32_t)offset length:(int32_t)length __attribute__((swift_name("readAvailableLittleEndian(dst:offset:length:)")));
- (int32_t)readAvailableLittleEndianDst:(SharedKotlinFloatArray *)dst offset:(int32_t)offset length_:(int32_t)length __attribute__((swift_name("readAvailableLittleEndian(dst:offset:length_:)")));
- (int32_t)readAvailableLittleEndianDst:(SharedKotlinIntArray *)dst offset:(int32_t)offset length__:(int32_t)length __attribute__((swift_name("readAvailableLittleEndian(dst:offset:length__:)")));
- (int32_t)readAvailableLittleEndianDst:(SharedKotlinLongArray *)dst offset:(int32_t)offset length___:(int32_t)length __attribute__((swift_name("readAvailableLittleEndian(dst:offset:length___:)")));
- (int32_t)readAvailableLittleEndianDst:(SharedKotlinShortArray *)dst offset:(int32_t)offset length____:(int32_t)length __attribute__((swift_name("readAvailableLittleEndian(dst:offset:length____:)")));
- (int32_t)readAvailableLittleEndianDst:(id)dst offset:(int32_t)offset length_____:(int32_t)length __attribute__((swift_name("readAvailableLittleEndian(dst:offset:length_____:)")));
- (int32_t)readAvailableLittleEndianDst:(id)dst offset:(int32_t)offset length______:(int32_t)length __attribute__((swift_name("readAvailableLittleEndian(dst:offset:length______:)")));
- (int32_t)readAvailableLittleEndianDst:(id)dst offset:(int32_t)offset length_______:(int32_t)length __attribute__((swift_name("readAvailableLittleEndian(dst:offset:length_______:)")));
- (SharedKotlinByteArray *)readBytesCount:(int32_t)count __attribute__((swift_name("readBytes(count:)")));
- (int32_t)readDirectBlock_:(SharedInt *(^)(id))block __attribute__((swift_name("readDirect(block_:)")));
- (double)readDouble __attribute__((swift_name("readDouble()")));
- (double)readDoubleLittleEndian __attribute__((swift_name("readDoubleLittleEndian()")));
- (float)readFloat __attribute__((swift_name("readFloat()")));
- (float)readFloatLittleEndian __attribute__((swift_name("readFloatLittleEndian()")));
- (int32_t)readFullyDst:(SharedBuffer *)dst length:(int32_t)length __attribute__((swift_name("readFully(dst:length:)")));
- (void)readFullyDst:(SharedKotlinArray<SharedByte *> *)dst offset:(int32_t)offset length:(int32_t)length __attribute__((swift_name("readFully(dst:offset:length:)")));
- (void)readFullyDestination:(SharedKotlinByteArray *)destination offset:(int32_t)offset length:(int32_t)length __attribute__((swift_name("readFully(destination:offset:length:)")));
- (void)readFullyDestination:(SharedKotlinDoubleArray *)destination offset:(int32_t)offset length_:(int32_t)length __attribute__((swift_name("readFully(destination:offset:length_:)")));
- (void)readFullyDestination:(SharedKotlinFloatArray *)destination offset:(int32_t)offset length__:(int32_t)length __attribute__((swift_name("readFully(destination:offset:length__:)")));
- (void)readFullyDestination:(SharedKotlinIntArray *)destination offset:(int32_t)offset length___:(int32_t)length __attribute__((swift_name("readFully(destination:offset:length___:)")));
- (void)readFullyDestination:(SharedKotlinLongArray *)destination offset:(int32_t)offset length____:(int32_t)length __attribute__((swift_name("readFully(destination:offset:length____:)")));
- (void)readFullyDestination:(SharedKotlinShortArray *)destination offset:(int32_t)offset length_____:(int32_t)length __attribute__((swift_name("readFully(destination:offset:length_____:)")));
- (void)readFullyDestination:(id)destination offset:(int32_t)offset length______:(int32_t)length __attribute__((swift_name("readFully(destination:offset:length______:)")));
- (void)readFullyDestination:(id)destination offset:(int32_t)offset length_______:(int32_t)length __attribute__((swift_name("readFully(destination:offset:length_______:)")));
- (void)readFullyDestination:(id)destination offset:(int32_t)offset length________:(int32_t)length __attribute__((swift_name("readFully(destination:offset:length________:)")));
- (void)readFullyDestination:(id)destination offset:(int32_t)offset length_________:(int32_t)length __attribute__((swift_name("readFully(destination:offset:length_________:)")));
- (void)readFullyPointer:(void *)pointer offset:(int32_t)offset length:(int32_t)length __attribute__((swift_name("readFully(pointer:offset:length:)")));
- (void)readFullyPointer:(void *)pointer offset:(int64_t)offset length_:(int32_t)length __attribute__((swift_name("readFully(pointer:offset:length_:)")));
- (void)readFullyLittleEndianDst:(SharedKotlinDoubleArray *)dst offset:(int32_t)offset length:(int32_t)length __attribute__((swift_name("readFullyLittleEndian(dst:offset:length:)")));
- (void)readFullyLittleEndianDst:(SharedKotlinFloatArray *)dst offset:(int32_t)offset length_:(int32_t)length __attribute__((swift_name("readFullyLittleEndian(dst:offset:length_:)")));
- (void)readFullyLittleEndianDst:(SharedKotlinIntArray *)dst offset:(int32_t)offset length__:(int32_t)length __attribute__((swift_name("readFullyLittleEndian(dst:offset:length__:)")));
- (void)readFullyLittleEndianDst:(SharedKotlinLongArray *)dst offset:(int32_t)offset length___:(int32_t)length __attribute__((swift_name("readFullyLittleEndian(dst:offset:length___:)")));
- (void)readFullyLittleEndianDst:(SharedKotlinShortArray *)dst offset:(int32_t)offset length____:(int32_t)length __attribute__((swift_name("readFullyLittleEndian(dst:offset:length____:)")));
- (void)readFullyLittleEndianDst:(id)dst offset:(int32_t)offset length_____:(int32_t)length __attribute__((swift_name("readFullyLittleEndian(dst:offset:length_____:)")));
- (void)readFullyLittleEndianDst:(id)dst offset:(int32_t)offset length______:(int32_t)length __attribute__((swift_name("readFullyLittleEndian(dst:offset:length______:)")));
- (void)readFullyLittleEndianDst:(id)dst offset:(int32_t)offset length_______:(int32_t)length __attribute__((swift_name("readFullyLittleEndian(dst:offset:length_______:)")));
- (int32_t)readInt __attribute__((swift_name("readInt()")));
- (int32_t)readIntLittleEndian __attribute__((swift_name("readIntLittleEndian()")));
- (int64_t)readLong __attribute__((swift_name("readLong()")));
- (int64_t)readLongLittleEndian __attribute__((swift_name("readLongLittleEndian()")));
- (int16_t)readShort __attribute__((swift_name("readShort()")));
- (int16_t)readShortLittleEndian __attribute__((swift_name("readShortLittleEndian()")));
- (NSString *)readTextCharset:(SharedCharset *)charset max:(int32_t)max __attribute__((swift_name("readText(charset:max:)")));
- (int32_t)readTextDecoder:(SharedCharsetDecoder *)decoder out:(id<SharedKotlinAppendable>)out lastBuffer:(BOOL)lastBuffer max:(int32_t)max __attribute__((swift_name("readText(decoder:out:lastBuffer:max:)"))) __attribute__((deprecated("This is no longer supported. Read from a packet instead.")));
- (uint8_t)readUByte __attribute__((swift_name("readUByte()")));
- (uint32_t)readUInt __attribute__((swift_name("readUInt()")));
- (uint64_t)readULong __attribute__((swift_name("readULong()")));
- (uint16_t)readUShort __attribute__((swift_name("readUShort()")));
- (int32_t)tryPeek_ __attribute__((swift_name("tryPeek_()"))) __attribute__((deprecated("Use tryPeekByte instead")));
- (int32_t)writeBlock:(SharedInt *(^)(SharedMemory *, SharedInt *, SharedInt *))block __attribute__((swift_name("write(block:)")));
- (int32_t)writeDirectBlock_:(SharedInt *(^)(id))block __attribute__((swift_name("writeDirect(block_:)")));
- (void)writeDoubleValue:(double)value __attribute__((swift_name("writeDouble(value:)")));
- (void)writeDoubleLittleEndianValue:(double)value __attribute__((swift_name("writeDoubleLittleEndian(value:)")));
- (void)writeFloatValue:(float)value __attribute__((swift_name("writeFloat(value:)")));
- (void)writeFloatLittleEndianValue:(float)value __attribute__((swift_name("writeFloatLittleEndian(value:)")));
- (void)writeFullySrc:(SharedBuffer *)src __attribute__((swift_name("writeFully(src:)")));
- (void)writeFullySrc:(SharedBuffer *)src length:(int32_t)length __attribute__((swift_name("writeFully(src:length:)")));
- (void)writeFullySource:(SharedKotlinByteArray *)source offset:(int32_t)offset length:(int32_t)length __attribute__((swift_name("writeFully(source:offset:length:)")));
- (void)writeFullySource:(SharedKotlinDoubleArray *)source offset:(int32_t)offset length_:(int32_t)length __attribute__((swift_name("writeFully(source:offset:length_:)")));
- (void)writeFullySource:(SharedKotlinFloatArray *)source offset:(int32_t)offset length__:(int32_t)length __attribute__((swift_name("writeFully(source:offset:length__:)")));
- (void)writeFullySource:(SharedKotlinIntArray *)source offset:(int32_t)offset length___:(int32_t)length __attribute__((swift_name("writeFully(source:offset:length___:)")));
- (void)writeFullySource:(SharedKotlinLongArray *)source offset:(int32_t)offset length____:(int32_t)length __attribute__((swift_name("writeFully(source:offset:length____:)")));
- (void)writeFullySource:(SharedKotlinShortArray *)source offset:(int32_t)offset length_____:(int32_t)length __attribute__((swift_name("writeFully(source:offset:length_____:)")));
- (void)writeFullySource:(id)source offset:(int32_t)offset length______:(int32_t)length __attribute__((swift_name("writeFully(source:offset:length______:)")));
- (void)writeFullySource:(id)source offset:(int32_t)offset length_______:(int32_t)length __attribute__((swift_name("writeFully(source:offset:length_______:)")));
- (void)writeFullySource:(id)source offset:(int32_t)offset length________:(int32_t)length __attribute__((swift_name("writeFully(source:offset:length________:)")));
- (void)writeFullySource:(id)source offset:(int32_t)offset length_________:(int32_t)length __attribute__((swift_name("writeFully(source:offset:length_________:)")));
- (void)writeFullyPointer:(void *)pointer offset:(int32_t)offset length:(int32_t)length __attribute__((swift_name("writeFully(pointer:offset:length:)")));
- (void)writeFullyPointer:(void *)pointer offset:(int64_t)offset length_:(int32_t)length __attribute__((swift_name("writeFully(pointer:offset:length_:)")));
- (void)writeFullyLittleEndianSource:(SharedKotlinDoubleArray *)source offset:(int32_t)offset length:(int32_t)length __attribute__((swift_name("writeFullyLittleEndian(source:offset:length:)")));
- (void)writeFullyLittleEndianSource:(SharedKotlinFloatArray *)source offset:(int32_t)offset length_:(int32_t)length __attribute__((swift_name("writeFullyLittleEndian(source:offset:length_:)")));
- (void)writeFullyLittleEndianSource:(SharedKotlinIntArray *)source offset:(int32_t)offset length__:(int32_t)length __attribute__((swift_name("writeFullyLittleEndian(source:offset:length__:)")));
- (void)writeFullyLittleEndianSource:(SharedKotlinLongArray *)source offset:(int32_t)offset length___:(int32_t)length __attribute__((swift_name("writeFullyLittleEndian(source:offset:length___:)")));
- (void)writeFullyLittleEndianSource:(SharedKotlinShortArray *)source offset:(int32_t)offset length____:(int32_t)length __attribute__((swift_name("writeFullyLittleEndian(source:offset:length____:)")));
- (void)writeFullyLittleEndianSource:(id)source offset:(int32_t)offset length_____:(int32_t)length __attribute__((swift_name("writeFullyLittleEndian(source:offset:length_____:)")));
- (void)writeFullyLittleEndianSource:(id)source offset:(int32_t)offset length______:(int32_t)length __attribute__((swift_name("writeFullyLittleEndian(source:offset:length______:)")));
- (void)writeFullyLittleEndianSource:(id)source offset:(int32_t)offset length_______:(int32_t)length __attribute__((swift_name("writeFullyLittleEndian(source:offset:length_______:)")));
- (void)writeIntValue:(int32_t)value __attribute__((swift_name("writeInt(value:)")));
- (void)writeIntLittleEndianValue:(int32_t)value __attribute__((swift_name("writeIntLittleEndian(value:)")));
- (void)writeLongValue:(int64_t)value __attribute__((swift_name("writeLong(value:)")));
- (void)writeLongLittleEndianValue:(int64_t)value __attribute__((swift_name("writeLongLittleEndian(value:)")));
- (void)writeShortValue:(int16_t)value __attribute__((swift_name("writeShort(value:)")));
- (void)writeShortLittleEndianValue:(int16_t)value __attribute__((swift_name("writeShortLittleEndian(value:)")));
- (void)writeUByteValue:(uint8_t)value __attribute__((swift_name("writeUByte(value:)")));
- (void)writeUIntValue:(uint32_t)value __attribute__((swift_name("writeUInt(value:)")));
- (void)writeULongValue:(uint64_t)value __attribute__((swift_name("writeULong(value:)")));
- (void)writeUShortValue:(uint16_t)value __attribute__((swift_name("writeUShort(value:)")));
- (int32_t)decodeUTF8Consumer:(SharedBoolean *(^)(id))consumer __attribute__((swift_name("decodeUTF8(consumer:)")));
@property SharedByteOrder *byteOrder_ __attribute__((swift_name("byteOrder_"))) __attribute__((unavailable("This is no longer supported. All operations are big endian by default. Use readXXXLittleEndian to read primitives in little endian")));
@end;

@interface SharedChunkBuffer (Extensions)
- (SharedChunkBuffer *)makeView__ __attribute__((swift_name("makeView__()"))) __attribute__((deprecated("Use duplicate instead")));
- (int64_t)remainingAll __attribute__((swift_name("remainingAll()")));
@end;

@interface SharedBytePacketBuilder (Extensions)
- (id _Nullable)previewBlock:(id _Nullable (^)(SharedByteReadPacket *))block __attribute__((swift_name("preview(block:)")));
- (void)reset __attribute__((swift_name("reset()")));
- (void)writeFullySrc:(void *)src size:(int32_t)size __attribute__((swift_name("writeFully(src:size:)")));
@end;

@interface SharedIoBuffer (Extensions)
- (int32_t)readAvailableDestination:(SharedKotlinByteArray *)destination offset:(int32_t)offset length__________:(int32_t)length __attribute__((swift_name("readAvailable(destination:offset:length__________:)"))) __attribute__((deprecated("IoBuffer is deprecated. Use Memory or Input instead.")));
- (double)readDouble_ __attribute__((swift_name("readDouble_()"))) __attribute__((deprecated("IoBuffer is deprecated. Use Memory or Input instead.")));
- (float)readFloat_ __attribute__((swift_name("readFloat_()"))) __attribute__((deprecated("IoBuffer is deprecated. Use Memory or Input instead.")));
- (void)readFullyDestination:(SharedKotlinByteArray *)destination offset:(int32_t)offset length__________:(int32_t)length __attribute__((swift_name("readFully(destination:offset:length__________:)"))) __attribute__((deprecated("IoBuffer is deprecated. Use Memory or Input instead.")));
- (int32_t)readInt_ __attribute__((swift_name("readInt_()"))) __attribute__((deprecated("IoBuffer is deprecated. Use Memory or Input instead.")));
- (int64_t)readLong_ __attribute__((swift_name("readLong_()"))) __attribute__((deprecated("IoBuffer is deprecated. Use Memory or Input instead.")));
- (int16_t)readShort_ __attribute__((swift_name("readShort_()"))) __attribute__((deprecated("IoBuffer is deprecated. Use Memory or Input instead.")));
- (uint8_t)readUByte_ __attribute__((swift_name("readUByte_()"))) __attribute__((deprecated("IoBuffer is deprecated. Use Memory or Input instead.")));
- (uint32_t)readUInt_ __attribute__((swift_name("readUInt_()"))) __attribute__((deprecated("IoBuffer is deprecated. Use Memory or Input instead.")));
- (uint64_t)readULong_ __attribute__((swift_name("readULong_()"))) __attribute__((deprecated("IoBuffer is deprecated. Use Memory or Input instead.")));
- (uint16_t)readUShort_ __attribute__((swift_name("readUShort_()"))) __attribute__((deprecated("IoBuffer is deprecated. Use Memory or Input instead.")));
- (void)releasePool__:(id<SharedObjectPool>)pool __attribute__((swift_name("release(pool__:)")));
- (void)writeDoubleValue_:(double)value __attribute__((swift_name("writeDouble(value_:)"))) __attribute__((deprecated("IoBuffer is deprecated. Use Memory or Output instead.")));
- (void)writeFloatValue_:(float)value __attribute__((swift_name("writeFloat(value_:)"))) __attribute__((deprecated("IoBuffer is deprecated. Use Memory or Output instead.")));
- (void)writeFullySource:(SharedKotlinByteArray *)source offset:(int32_t)offset length__________:(int32_t)length __attribute__((swift_name("writeFully(source:offset:length__________:)"))) __attribute__((deprecated("IoBuffer is deprecated. Use Memory or Output instead.")));
- (void)writeIntValue_:(int32_t)value __attribute__((swift_name("writeInt(value_:)"))) __attribute__((deprecated("IoBuffer is deprecated. Use Memory or Output instead.")));
- (void)writeLongValue_:(int64_t)value __attribute__((swift_name("writeLong(value_:)"))) __attribute__((deprecated("IoBuffer is deprecated. Use Memory or Output instead.")));
- (void)writeShortValue_:(int16_t)value __attribute__((swift_name("writeShort(value_:)"))) __attribute__((deprecated("IoBuffer is deprecated. Use Memory or Output instead.")));
- (void)writeUByteValue_:(uint8_t)value __attribute__((swift_name("writeUByte(value_:)"))) __attribute__((deprecated("IoBuffer is deprecated. Use Memory or Output instead.")));
- (void)writeUIntValue_:(uint32_t)value __attribute__((swift_name("writeUInt(value_:)"))) __attribute__((deprecated("IoBuffer is deprecated. Use Memory or Output instead.")));
- (void)writeULongValue_:(uint64_t)value __attribute__((swift_name("writeULong(value_:)"))) __attribute__((deprecated("IoBuffer is deprecated. Use Memory or Output instead.")));
- (void)writeUShortValue_:(uint16_t)value __attribute__((swift_name("writeUShort(value_:)"))) __attribute__((deprecated("IoBuffer is deprecated. Use Memory or Output instead.")));
@end;

@interface SharedCharsetDecoder (Extensions)
- (NSString *)decodeInput:(id<SharedInput>)input max:(int32_t)max __attribute__((swift_name("decode(input:max:)")));
- (int32_t)decodeInput:(id<SharedInput>)input dst:(id<SharedKotlinAppendable>)dst max:(int32_t)max __attribute__((swift_name("decode(input:dst:max:)")));
- (NSString *)decodeExactBytesInput:(id<SharedInput>)input inputLength:(int32_t)inputLength __attribute__((swift_name("decodeExactBytes(input:inputLength:)")));
@property (readonly) SharedCharset *charset __attribute__((swift_name("charset")));
@end;

@interface SharedCharsetEncoder (Extensions)
- (void)encodeInput:(SharedKotlinCharArray *)input fromIndex:(int32_t)fromIndex toIndex:(int32_t)toIndex dst:(id<SharedOutput>)dst __attribute__((swift_name("encode(input:fromIndex:toIndex:dst:)")));
- (SharedByteReadPacket *)encodeInput:(id)input fromIndex:(int32_t)fromIndex toIndex:(int32_t)toIndex __attribute__((swift_name("encode(input:fromIndex:toIndex:)")));
- (void)encodeInput:(id)input fromIndex:(int32_t)fromIndex toIndex:(int32_t)toIndex dst_:(id<SharedOutput>)dst __attribute__((swift_name("encode(input:fromIndex:toIndex:dst_:)"))) __attribute__((deprecated("Use writeText on Output instead.")));
- (SharedKotlinByteArray *)encodeToByteArrayInput:(id)input fromIndex:(int32_t)fromIndex toIndex:(int32_t)toIndex __attribute__((swift_name("encodeToByteArray(input:fromIndex:toIndex:)")));
- (SharedKotlinByteArray *)encodeToByteArrayImplInput:(id)input fromIndex:(int32_t)fromIndex toIndex:(int32_t)toIndex __attribute__((swift_name("encodeToByteArrayImpl(input:fromIndex:toIndex:)"))) __attribute__((deprecated("Internal API. Will be hidden in future releases. Use encodeToByteArray instead.")));
- (SharedByteReadPacket *)encodeUTF8Input:(SharedByteReadPacket *)input __attribute__((swift_name("encodeUTF8(input:)")));
- (void)encodeUTF8Input:(SharedByteReadPacket *)input dst:(id<SharedOutput>)dst __attribute__((swift_name("encodeUTF8(input:dst:)")));
@property (readonly) SharedCharset *charset __attribute__((swift_name("charset")));
@end;

@interface SharedCharset (Extensions)
@property (readonly) NSString *name __attribute__((swift_name("name")));
@end;

@interface SharedCoroutineDispatcher (Extensions)

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)invokeBlock:(id<SharedKotlinSuspendFunction1>)block completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("invoke(block:completionHandler:)")));
@end;

@interface SharedSharingStartedCompanion (Extensions)
- (id<SharedSharingStarted>)WhileSubscribedStopTimeout:(int64_t)stopTimeout replayExpiration:(int64_t)replayExpiration __attribute__((swift_name("WhileSubscribed(stopTimeout:replayExpiration:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinIntArray")))
@interface SharedKotlinIntArray : SharedBase
+ (instancetype)arrayWithSize:(int32_t)size __attribute__((swift_name("init(size:)")));
+ (instancetype)arrayWithSize:(int32_t)size init:(SharedInt *(^)(SharedInt *))init __attribute__((swift_name("init(size:init:)")));
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (int32_t)getIndex:(int32_t)index __attribute__((swift_name("get(index:)")));
- (SharedKotlinIntIterator *)iterator __attribute__((swift_name("iterator()")));
- (void)setIndex:(int32_t)index value:(int32_t)value __attribute__((swift_name("set(index:value:)")));
@property (readonly) int32_t size __attribute__((swift_name("size")));
@end;

@interface SharedKotlinIntArray (Extensions)
- (id<SharedFlow>)asFlow __attribute__((swift_name("asFlow()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinLongArray")))
@interface SharedKotlinLongArray : SharedBase
+ (instancetype)arrayWithSize:(int32_t)size __attribute__((swift_name("init(size:)")));
+ (instancetype)arrayWithSize:(int32_t)size init:(SharedLong *(^)(SharedInt *))init __attribute__((swift_name("init(size:init:)")));
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (int64_t)getIndex:(int32_t)index __attribute__((swift_name("get(index:)")));
- (SharedKotlinLongIterator *)iterator __attribute__((swift_name("iterator()")));
- (void)setIndex:(int32_t)index value:(int64_t)value __attribute__((swift_name("set(index:value:)")));
@property (readonly) int32_t size __attribute__((swift_name("size")));
@end;

@interface SharedKotlinLongArray (Extensions)
- (id<SharedFlow>)asFlow __attribute__((swift_name("asFlow()")));
@end;

__attribute__((swift_name("KotlinIntProgression")))
@interface SharedKotlinIntProgression : SharedBase <SharedKotlinIterable>
@property (class, readonly, getter=companion) SharedKotlinIntProgressionCompanion *companion __attribute__((swift_name("companion")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (BOOL)isEmpty __attribute__((swift_name("isEmpty()")));
- (SharedKotlinIntIterator *)iterator __attribute__((swift_name("iterator()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t first __attribute__((swift_name("first")));
@property (readonly) int32_t last __attribute__((swift_name("last")));
@property (readonly, getter=step_) int32_t step __attribute__((swift_name("step")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinIntRange")))
@interface SharedKotlinIntRange : SharedKotlinIntProgression <SharedKotlinClosedRange>
- (instancetype)initWithStart:(int32_t)start endInclusive:(int32_t)endInclusive __attribute__((swift_name("init(start:endInclusive:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedKotlinIntRangeCompanion *companion __attribute__((swift_name("companion")));
- (BOOL)containsValue:(SharedInt *)value __attribute__((swift_name("contains(value:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (BOOL)isEmpty __attribute__((swift_name("isEmpty()")));
- (BOOL)isEmpty_ __attribute__((swift_name("isEmpty()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedInt *endInclusive __attribute__((swift_name("endInclusive")));
@property (readonly, getter=start_) SharedInt *start __attribute__((swift_name("start")));
@end;

@interface SharedKotlinIntRange (Extensions)
- (id<SharedFlow>)asFlow __attribute__((swift_name("asFlow()")));
@end;

@interface SharedAfterVersion (Extensions)
- (SharedAfterVersionWithDriver *)toAfterVersionWithDriver __attribute__((swift_name("toAfterVersionWithDriver()")));
@end;

@interface SharedAtomic (Extensions)
- (id _Nullable)getValueThisRef:(id _Nullable)thisRef prop:(id<SharedKotlinKProperty>)prop __attribute__((swift_name("getValue(thisRef:prop:)")));
- (void)setValueThisRef:(id _Nullable)thisRef prop:(id<SharedKotlinKProperty>)prop value:(id _Nullable)value __attribute__((swift_name("setValue(thisRef:prop:value:)")));
@end;

@interface SharedAtomicInt (Extensions)
@property int32_t value __attribute__((swift_name("value")));
@end;

@interface SharedAtomicLong (Extensions)
@property int64_t value __attribute__((swift_name("value")));
@end;

@interface SharedAtomicReference_ (Extensions)
@property id _Nullable value __attribute__((swift_name("value")));
@end;

@interface SharedThreadLocalRef (Extensions)
@property (getter=value, setter=setValue__:) id _Nullable value_ __attribute__((swift_name("value_")));
@end;

@interface SharedTraceBase (Extensions)
- (SharedTraceBase *)namedName:(NSString *)name __attribute__((swift_name("named(name:)")));
@end;

@interface SharedSynchronizedObject (Extensions)
- (id _Nullable)withLockBlock:(id _Nullable (^)(void))block __attribute__((swift_name("withLock(block:)")));
@end;

@interface SharedJsonPrimitive (Extensions)
@property (readonly) BOOL boolean __attribute__((swift_name("boolean")));
@property (readonly) SharedBoolean * _Nullable booleanOrNull __attribute__((swift_name("booleanOrNull")));
@property (readonly) NSString * _Nullable contentOrNull __attribute__((swift_name("contentOrNull")));
@property (readonly, getter=double) double double_ __attribute__((swift_name("double_")));
@property (readonly) SharedDouble * _Nullable doubleOrNull __attribute__((swift_name("doubleOrNull")));
@property (readonly, getter=float) float float_ __attribute__((swift_name("float_")));
@property (readonly) SharedFloat * _Nullable floatOrNull __attribute__((swift_name("floatOrNull")));
@property (readonly, getter=int) int32_t int_ __attribute__((swift_name("int_")));
@property (readonly) SharedInt * _Nullable intOrNull __attribute__((swift_name("intOrNull")));
@property (readonly, getter=long) int64_t long_ __attribute__((swift_name("long_")));
@property (readonly) SharedLong * _Nullable longOrNull __attribute__((swift_name("longOrNull")));
@end;

@interface SharedJsonElement (Extensions)
@property (readonly) NSArray<SharedJsonElement *> *jsonArray __attribute__((swift_name("jsonArray")));
@property (readonly) SharedJsonNull *jsonNull __attribute__((swift_name("jsonNull")));
@property (readonly) NSDictionary<NSString *, SharedJsonElement *> *jsonObject __attribute__((swift_name("jsonObject")));
@property (readonly) SharedJsonPrimitive *jsonPrimitive __attribute__((swift_name("jsonPrimitive")));
@end;

@interface SharedJsonArrayBuilder (Extensions)
- (BOOL)addValue:(SharedBoolean * _Nullable)value __attribute__((swift_name("add(value:)")));
- (BOOL)addValue_:(id _Nullable)value __attribute__((swift_name("add(value_:)")));
- (BOOL)addValue__:(NSString * _Nullable)value __attribute__((swift_name("add(value__:)")));
- (BOOL)addJsonArrayBuilderAction:(void (^)(SharedJsonArrayBuilder *))builderAction __attribute__((swift_name("addJsonArray(builderAction:)")));
- (BOOL)addJsonObjectBuilderAction:(void (^)(SharedJsonObjectBuilder *))builderAction __attribute__((swift_name("addJsonObject(builderAction:)")));
@end;

@interface SharedJson (Extensions)
- (id _Nullable)decodeFromJsonElementJson:(SharedJsonElement *)json __attribute__((swift_name("decodeFromJsonElement(json:)")));
- (SharedJsonElement *)encodeToJsonElementValue:(id _Nullable)value __attribute__((swift_name("encodeToJsonElement(value:)")));
@end;

@interface SharedJsonObjectBuilder (Extensions)
- (SharedJsonElement * _Nullable)putKey:(NSString *)key value:(SharedBoolean * _Nullable)value __attribute__((swift_name("put(key:value:)")));
- (SharedJsonElement * _Nullable)putKey:(NSString *)key value_:(id _Nullable)value __attribute__((swift_name("put(key:value_:)")));
- (SharedJsonElement * _Nullable)putKey:(NSString *)key value__:(NSString * _Nullable)value __attribute__((swift_name("put(key:value__:)")));
- (SharedJsonElement * _Nullable)putJsonArrayKey:(NSString *)key builderAction:(void (^)(SharedJsonArrayBuilder *))builderAction __attribute__((swift_name("putJsonArray(key:builderAction:)")));
- (SharedJsonElement * _Nullable)putJsonObjectKey:(NSString *)key builderAction:(void (^)(SharedJsonObjectBuilder *))builderAction __attribute__((swift_name("putJsonObject(key:builderAction:)")));
@end;

@interface SharedDatabaseFileContext (Extensions)
- (void)deleteDatabaseConfiguration:(SharedDatabaseConfiguration *)configuration __attribute__((swift_name("deleteDatabase(configuration:)")));
@end;

@interface SharedAbstractPolymorphicSerializer (Extensions)
- (id<SharedDeserializationStrategy>)findPolymorphicSerializerDecoder:(id<SharedCompositeDecoder>)decoder klassName:(NSString * _Nullable)klassName __attribute__((swift_name("findPolymorphicSerializer(decoder:klassName:)")));
- (id<SharedSerializationStrategy>)findPolymorphicSerializerEncoder:(id<SharedEncoder_>)encoder value:(id)value __attribute__((swift_name("findPolymorphicSerializer(encoder:value:)")));
@end;

@interface SharedSerializersModule (Extensions)
- (id<SharedKSerializer>)serializer __attribute__((swift_name("serializer()")));
- (id<SharedKSerializer>)serializerType:(id<SharedKotlinKType>)type __attribute__((swift_name("serializer(type:)")));
- (id<SharedKSerializer> _Nullable)serializerOrNullType:(id<SharedKotlinKType>)type __attribute__((swift_name("serializerOrNull(type:)")));
- (SharedSerializersModule *)overwriteWithOther:(SharedSerializersModule *)other __attribute__((swift_name("overwriteWith(other:)")));
- (SharedSerializersModule *)plusOther_:(SharedSerializersModule *)other __attribute__((swift_name("plus(other_:)")));
- (id<SharedSerialDescriptor> _Nullable)getContextualDescriptorDescriptor:(id<SharedSerialDescriptor>)descriptor __attribute__((swift_name("getContextualDescriptor(descriptor:)")));
- (NSArray<id<SharedSerialDescriptor>> *)getPolymorphicDescriptorsDescriptor:(id<SharedSerialDescriptor>)descriptor __attribute__((swift_name("getPolymorphicDescriptors(descriptor:)")));
@end;

@interface SharedSerializersModuleBuilder (Extensions)
- (void)contextualSerializer:(id<SharedKSerializer>)serializer __attribute__((swift_name("contextual(serializer:)")));
- (void)polymorphicBaseClass:(id<SharedKotlinKClass>)baseClass baseSerializer:(id<SharedKSerializer> _Nullable)baseSerializer builderAction:(void (^)(SharedPolymorphicModuleBuilder<id> *))builderAction __attribute__((swift_name("polymorphic(baseClass:baseSerializer:builderAction:)")));
@end;

@interface SharedPolymorphicModuleBuilder (Extensions)
- (void)subclassClazz:(id<SharedKotlinKClass>)clazz __attribute__((swift_name("subclass(clazz:)")));
- (void)subclassSerializer:(id<SharedKSerializer>)serializer __attribute__((swift_name("subclass(serializer:)")));
@end;

@interface SharedClassSerialDescriptorBuilder (Extensions)
- (void)elementElementName:(NSString *)elementName annotations:(NSArray<id<SharedKotlinAnnotation>> *)annotations isOptional:(BOOL)isOptional __attribute__((swift_name("element(elementName:annotations:isOptional:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinBoolean.Companion")))
@interface SharedKotlinBooleanCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedKotlinBooleanCompanion *shared __attribute__((swift_name("shared")));
@end;

@interface SharedKotlinBooleanCompanion (Extensions)
- (id<SharedKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinByte.Companion")))
@interface SharedKotlinByteCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedKotlinByteCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) int8_t MAX_VALUE __attribute__((swift_name("MAX_VALUE")));
@property (readonly) int8_t MIN_VALUE __attribute__((swift_name("MIN_VALUE")));
@property (readonly) int32_t SIZE_BITS __attribute__((swift_name("SIZE_BITS")));
@property (readonly) int32_t SIZE_BYTES __attribute__((swift_name("SIZE_BYTES")));
@end;

@interface SharedKotlinByteCompanion (Extensions)
- (id<SharedKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinChar.Companion")))
@interface SharedKotlinCharCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedKotlinCharCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) int32_t MAX_CODE_POINT __attribute__((swift_name("MAX_CODE_POINT")));
@property (readonly) unichar MAX_HIGH_SURROGATE __attribute__((swift_name("MAX_HIGH_SURROGATE")));
@property (readonly) unichar MAX_LOW_SURROGATE __attribute__((swift_name("MAX_LOW_SURROGATE")));
@property (readonly) int32_t MAX_RADIX __attribute__((swift_name("MAX_RADIX")));
@property (readonly) unichar MAX_SURROGATE __attribute__((swift_name("MAX_SURROGATE")));
@property (readonly) unichar MAX_VALUE __attribute__((swift_name("MAX_VALUE")));
@property (readonly) int32_t MIN_CODE_POINT __attribute__((swift_name("MIN_CODE_POINT")));
@property (readonly) unichar MIN_HIGH_SURROGATE __attribute__((swift_name("MIN_HIGH_SURROGATE")));
@property (readonly) unichar MIN_LOW_SURROGATE __attribute__((swift_name("MIN_LOW_SURROGATE")));
@property (readonly) int32_t MIN_RADIX __attribute__((swift_name("MIN_RADIX")));
@property (readonly) int32_t MIN_SUPPLEMENTARY_CODE_POINT __attribute__((swift_name("MIN_SUPPLEMENTARY_CODE_POINT")));
@property (readonly) unichar MIN_SURROGATE __attribute__((swift_name("MIN_SURROGATE")));
@property (readonly) unichar MIN_VALUE __attribute__((swift_name("MIN_VALUE")));
@property (readonly) int32_t SIZE_BITS __attribute__((swift_name("SIZE_BITS")));
@property (readonly) int32_t SIZE_BYTES __attribute__((swift_name("SIZE_BYTES")));
@end;

@interface SharedKotlinCharCompanion (Extensions)
- (id<SharedKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinDouble.Companion")))
@interface SharedKotlinDoubleCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedKotlinDoubleCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) double MAX_VALUE __attribute__((swift_name("MAX_VALUE")));
@property (readonly) double MIN_VALUE __attribute__((swift_name("MIN_VALUE")));
@property (readonly) double NEGATIVE_INFINITY __attribute__((swift_name("NEGATIVE_INFINITY")));
@property (readonly) double NaN __attribute__((swift_name("NaN")));
@property (readonly) double POSITIVE_INFINITY __attribute__((swift_name("POSITIVE_INFINITY")));
@property (readonly) int32_t SIZE_BITS __attribute__((swift_name("SIZE_BITS")));
@property (readonly) int32_t SIZE_BYTES __attribute__((swift_name("SIZE_BYTES")));
@end;

@interface SharedKotlinDoubleCompanion (Extensions)
- (id<SharedKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinFloat.Companion")))
@interface SharedKotlinFloatCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedKotlinFloatCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) float MAX_VALUE __attribute__((swift_name("MAX_VALUE")));
@property (readonly) float MIN_VALUE __attribute__((swift_name("MIN_VALUE")));
@property (readonly) float NEGATIVE_INFINITY __attribute__((swift_name("NEGATIVE_INFINITY")));
@property (readonly) float NaN __attribute__((swift_name("NaN")));
@property (readonly) float POSITIVE_INFINITY __attribute__((swift_name("POSITIVE_INFINITY")));
@property (readonly) int32_t SIZE_BITS __attribute__((swift_name("SIZE_BITS")));
@property (readonly) int32_t SIZE_BYTES __attribute__((swift_name("SIZE_BYTES")));
@end;

@interface SharedKotlinFloatCompanion (Extensions)
- (id<SharedKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinInt.Companion")))
@interface SharedKotlinIntCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedKotlinIntCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) int32_t MAX_VALUE __attribute__((swift_name("MAX_VALUE")));
@property (readonly) int32_t MIN_VALUE __attribute__((swift_name("MIN_VALUE")));
@property (readonly) int32_t SIZE_BITS __attribute__((swift_name("SIZE_BITS")));
@property (readonly) int32_t SIZE_BYTES __attribute__((swift_name("SIZE_BYTES")));
@end;

@interface SharedKotlinIntCompanion (Extensions)
- (id<SharedKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinLong.Companion")))
@interface SharedKotlinLongCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedKotlinLongCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) int64_t MAX_VALUE __attribute__((swift_name("MAX_VALUE")));
@property (readonly) int64_t MIN_VALUE __attribute__((swift_name("MIN_VALUE")));
@property (readonly) int32_t SIZE_BITS __attribute__((swift_name("SIZE_BITS")));
@property (readonly) int32_t SIZE_BYTES __attribute__((swift_name("SIZE_BYTES")));
@end;

@interface SharedKotlinLongCompanion (Extensions)
- (id<SharedKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinShort.Companion")))
@interface SharedKotlinShortCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedKotlinShortCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) int16_t MAX_VALUE __attribute__((swift_name("MAX_VALUE")));
@property (readonly) int16_t MIN_VALUE __attribute__((swift_name("MIN_VALUE")));
@property (readonly) int32_t SIZE_BITS __attribute__((swift_name("SIZE_BITS")));
@property (readonly) int32_t SIZE_BYTES __attribute__((swift_name("SIZE_BYTES")));
@end;

@interface SharedKotlinShortCompanion (Extensions)
- (id<SharedKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinString.Companion")))
@interface SharedKotlinStringCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedKotlinStringCompanion *shared __attribute__((swift_name("shared")));
@end;

@interface SharedKotlinStringCompanion (Extensions)
- (id<SharedKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinUByte.Companion")))
@interface SharedKotlinUByteCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedKotlinUByteCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) uint8_t MAX_VALUE __attribute__((swift_name("MAX_VALUE")));
@property (readonly) uint8_t MIN_VALUE __attribute__((swift_name("MIN_VALUE")));
@property (readonly) int32_t SIZE_BITS __attribute__((swift_name("SIZE_BITS")));
@property (readonly) int32_t SIZE_BYTES __attribute__((swift_name("SIZE_BYTES")));
@end;

@interface SharedKotlinUByteCompanion (Extensions)
- (id<SharedKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinUInt.Companion")))
@interface SharedKotlinUIntCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedKotlinUIntCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) uint32_t MAX_VALUE __attribute__((swift_name("MAX_VALUE")));
@property (readonly) uint32_t MIN_VALUE __attribute__((swift_name("MIN_VALUE")));
@property (readonly) int32_t SIZE_BITS __attribute__((swift_name("SIZE_BITS")));
@property (readonly) int32_t SIZE_BYTES __attribute__((swift_name("SIZE_BYTES")));
@end;

@interface SharedKotlinUIntCompanion (Extensions)
- (id<SharedKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinULong.Companion")))
@interface SharedKotlinULongCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedKotlinULongCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) uint64_t MAX_VALUE __attribute__((swift_name("MAX_VALUE")));
@property (readonly) uint64_t MIN_VALUE __attribute__((swift_name("MIN_VALUE")));
@property (readonly) int32_t SIZE_BITS __attribute__((swift_name("SIZE_BITS")));
@property (readonly) int32_t SIZE_BYTES __attribute__((swift_name("SIZE_BYTES")));
@end;

@interface SharedKotlinULongCompanion (Extensions)
- (id<SharedKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinUShort.Companion")))
@interface SharedKotlinUShortCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedKotlinUShortCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) uint16_t MAX_VALUE __attribute__((swift_name("MAX_VALUE")));
@property (readonly) uint16_t MIN_VALUE __attribute__((swift_name("MIN_VALUE")));
@property (readonly) int32_t SIZE_BITS __attribute__((swift_name("SIZE_BITS")));
@property (readonly) int32_t SIZE_BYTES __attribute__((swift_name("SIZE_BYTES")));
@end;

@interface SharedKotlinUShortCompanion (Extensions)
- (id<SharedKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinUnit")))
@interface SharedKotlinUnit : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)unit __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedKotlinUnit *shared __attribute__((swift_name("shared")));
- (NSString *)description __attribute__((swift_name("description()")));
@end;

@interface SharedKotlinUnit (Extensions)
- (id<SharedKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ValidateDateOfBirthKt")))
@interface SharedValidateDateOfBirthKt : SharedBase
+ (NSString * _Nullable)updateDobErrorDayError:(NSString * _Nullable)dayError monthError:(NSString * _Nullable)monthError yearError:(NSString * _Nullable)yearError __attribute__((swift_name("updateDobError(dayError:monthError:yearError:)")));
+ (NSString * _Nullable)validateDayText:(NSString * _Nullable)text inFocus:(BOOL)inFocus __attribute__((swift_name("validateDay(text:inFocus:)")));
+ (NSString * _Nullable)validateMonthText:(NSString * _Nullable)text inFocus:(BOOL)inFocus __attribute__((swift_name("validateMonth(text:inFocus:)")));
+ (NSString * _Nullable)validateYearText:(NSString * _Nullable)text inFocus:(BOOL)inFocus __attribute__((swift_name("validateYear(text:inFocus:)")));
+ (NSString * _Nullable)validateDayText:(NSString * _Nullable)text __attribute__((swift_name("validateDay(text:)")));
+ (NSString * _Nullable)validateMonthText:(NSString * _Nullable)text __attribute__((swift_name("validateMonth(text:)")));
+ (NSString * _Nullable)validateYearText:(NSString * _Nullable)text __attribute__((swift_name("validateYear(text:)")));
@property (class, readonly) NSString *DOB_ERROR_FORMAT __attribute__((swift_name("DOB_ERROR_FORMAT")));
@property (class, readonly) NSString *DOB_ERROR_VALIDATION __attribute__((swift_name("DOB_ERROR_VALIDATION")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DeriveFirstNameLabelKt")))
@interface SharedDeriveFirstNameLabelKt : SharedBase
+ (NSString *)deriveFirstNameLabelGenderEnum:(SharedGenderEnum * _Nullable)genderEnum profileFor:(NSString * _Nullable)profileFor __attribute__((swift_name("deriveFirstNameLabel(genderEnum:profileFor:)")));
+ (NSString *)deriveFirstNameLabelGenderEnum:(SharedGenderEnum * _Nullable)genderEnum __attribute__((swift_name("deriveFirstNameLabel(genderEnum:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DeriveGenderKt")))
@interface SharedDeriveGenderKt : SharedBase
+ (SharedGenderEnum * _Nullable)deriveGenderProfileFor:(NSString * _Nullable)profileFor gender:(NSString * _Nullable)gender __attribute__((swift_name("deriveGender(profileFor:gender:)")));
+ (SharedGenderEnum * _Nullable)deriveGenderProfileFor:(NSString * _Nullable)profileFor __attribute__((swift_name("deriveGender(profileFor:)")));
+ (SharedGenderEnum * _Nullable)parseToGenderEnumString:(NSString * _Nullable)string __attribute__((swift_name("parseToGenderEnum(string:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ErrorLabelDobKt")))
@interface SharedErrorLabelDobKt : SharedBase
+ (NSString * _Nullable)errorLabelDobError:(SharedIDateValidatorDateValidatorError * _Nullable)error minAge:(SharedInt * _Nullable)minAge maxAge:(SharedInt * _Nullable)maxAge __attribute__((swift_name("errorLabelDob(error:minAge:maxAge:)")));
+ (NSString * _Nullable)errorLabelDobError:(SharedIDateValidatorDateValidatorError * _Nullable)error minAge:(SharedInt * _Nullable)minAge maxAge_:(SharedInt * _Nullable)maxAge __attribute__((swift_name("errorLabelDob(error:minAge:maxAge_:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ErrorLabelEmailKt")))
@interface SharedErrorLabelEmailKt : SharedBase
+ (NSString * _Nullable)errorLabelEmailError:(SharedIEmailValidatorEmailValidatorError * _Nullable)error __attribute__((swift_name("errorLabelEmail(error:)")));
+ (NSString * _Nullable)errorLabelEmailError_:(SharedIEmailValidatorEmailValidatorError * _Nullable)error __attribute__((swift_name("errorLabelEmail(error_:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ErrorLabelPhoneKt")))
@interface SharedErrorLabelPhoneKt : SharedBase
+ (NSString * _Nullable)errorLabelPhoneError:(SharedIPhoneNumberValidatorPhoneNumberValidatorError * _Nullable)error __attribute__((swift_name("errorLabelPhone(error:)")));
+ (NSString * _Nullable)errorLabelPhoneError_:(SharedIPhoneNumberValidatorPhoneNumberValidatorError * _Nullable)error __attribute__((swift_name("errorLabelPhone(error_:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ValidateCountryKt")))
@interface SharedValidateCountryKt : SharedBase
+ (NSString * _Nullable)validateCountryText:(NSString * _Nullable)text __attribute__((swift_name("validateCountry(text:)")));
+ (NSString * _Nullable)validateCountryText_:(NSString * _Nullable)text __attribute__((swift_name("validateCountry(text_:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ValidateFirstNameKt")))
@interface SharedValidateFirstNameKt : SharedBase
+ (NSString * _Nullable)validateFirstNameText:(NSString * _Nullable)text __attribute__((swift_name("validateFirstName(text:)")));
+ (NSString * _Nullable)validateFirstNameText_:(NSString * _Nullable)text __attribute__((swift_name("validateFirstName(text_:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ValidateLastNameKt")))
@interface SharedValidateLastNameKt : SharedBase
+ (NSString * _Nullable)validateLastNameText:(NSString * _Nullable)text __attribute__((swift_name("validateLastName(text:)")));
+ (NSString * _Nullable)validateLastNameText_:(NSString * _Nullable)text __attribute__((swift_name("validateLastName(text_:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ValidateMotherTongueKt")))
@interface SharedValidateMotherTongueKt : SharedBase
+ (NSString * _Nullable)validateMotherTongueText:(NSString * _Nullable)text __attribute__((swift_name("validateMotherTongue(text:)")));
+ (NSString * _Nullable)validateMotherTongueText_:(NSString * _Nullable)text __attribute__((swift_name("validateMotherTongue(text_:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ValidateReligionKt")))
@interface SharedValidateReligionKt : SharedBase
+ (NSString * _Nullable)validateReligionText:(NSString * _Nullable)text __attribute__((swift_name("validateReligion(text:)")));
+ (NSString * _Nullable)validateReligionText_:(NSString * _Nullable)text __attribute__((swift_name("validateReligion(text_:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Page1_1ViewModelKt")))
@interface SharedPage1_1ViewModelKt : SharedBase
+ (NSString *)keepOnlyFirstLetterCapital:(NSString *)receiver __attribute__((swift_name("keepOnlyFirstLetterCapital(_:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MakeReg2_1LinkKt")))
@interface SharedMakeReg2_1LinkKt : SharedBase
+ (NSString *)makeReg2_1LinkDomain:(NSString *)domain deviceConstants:(SharedDeviceConstants *)deviceConstants deviceId:(NSString *)deviceId __attribute__((swift_name("makeReg2_1Link(domain:deviceConstants:deviceId:)")));
@property (class, readonly) NSString *mainAppDomain __attribute__((swift_name("mainAppDomain")));
@property (class, readonly) NSArray<NSString *> *seoDomains __attribute__((swift_name("seoDomains")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DeriveReligionLabelKt")))
@interface SharedDeriveReligionLabelKt : SharedBase
+ (NSString *)deriveReligionLabelGenderEnum:(SharedGenderEnum * _Nullable)genderEnum __attribute__((swift_name("deriveReligionLabel(genderEnum:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetDomainTypeKt")))
@interface SharedGetDomainTypeKt : SharedBase
+ (SharedDomainType *)getDomainTypeDomain:(NSString *)domain __attribute__((swift_name("getDomainType(domain:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetMotherTongueFromCommunityDomainKt")))
@interface SharedGetMotherTongueFromCommunityDomainKt : SharedBase
+ (NSString * _Nullable)getMotherTongueFromCommunityDomainDomain:(NSString *)domain __attribute__((swift_name("getMotherTongueFromCommunityDomain(domain:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MobileFieldVisibilityKt")))
@interface SharedMobileFieldVisibilityKt : SharedBase
+ (BOOL)mobileFieldVisibilityCountry:(NSString *)country __attribute__((swift_name("mobileFieldVisibility(country:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ParseDayToTwoLetterKt")))
@interface SharedParseDayToTwoLetterKt : SharedBase
+ (NSString *)parseDayToTwoLetterText:(NSString *)text __attribute__((swift_name("parseDayToTwoLetter(text:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ProfileForToPostedByKt")))
@interface SharedProfileForToPostedByKt : SharedBase
+ (NSString * _Nullable)profileForToPostedByProfileFor:(NSString * _Nullable)profileFor __attribute__((swift_name("profileForToPostedBy(profileFor:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ValidateGenderKt")))
@interface SharedValidateGenderKt : SharedBase
+ (NSString * _Nullable)validateGenderText:(NSString * _Nullable)text __attribute__((swift_name("validateGender(text:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ValidateMobileNumberKt")))
@interface SharedValidateMobileNumberKt : SharedBase
+ (NSString * _Nullable)validateMobileCountryText:(NSString * _Nullable)text __attribute__((swift_name("validateMobileCountry(text:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ValidateProfileForKt")))
@interface SharedValidateProfileForKt : SharedBase
+ (NSString * _Nullable)validateProfileForText:(NSString * _Nullable)text __attribute__((swift_name("validateProfileFor(text:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ExecuteKt")))
@interface SharedExecuteKt : SharedBase

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)executeServiceCall:(id _Nullable (^)(void))serviceCall completionHandler:(void (^)(SharedAppNetworkResult<id> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("execute(serviceCall:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)executeServiceCall:(id _Nullable (^)(void))serviceCall transform:(id _Nullable (^)(id _Nullable))transform completionHandler:(void (^)(SharedAppNetworkResult<id> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("execute(serviceCall:transform:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)executeWithDataWrapperServiceCall:(NSString *(^)(void))serviceCall completionHandler:(void (^)(SharedAppNetworkResult<id> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("executeWithDataWrapper(serviceCall:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)executeWithStringServiceCall:(NSString *(^)(void))serviceCall completionHandler:(void (^)(SharedAppNetworkResult<id> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("executeWithString(serviceCall:completionHandler:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("NetworkExceptionMessageKt")))
@interface SharedNetworkExceptionMessageKt : SharedBase
+ (NSString *)networkExceptionMessageE:(SharedKotlinException *)e __attribute__((swift_name("networkExceptionMessage(e:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FileUtilsKt")))
@interface SharedFileUtilsKt : SharedBase
+ (BOOL)isRemoteFile:(NSString *)receiver __attribute__((swift_name("isRemoteFile(_:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ThreadNameKt")))
@interface SharedThreadNameKt : SharedBase
+ (NSString *)threadName __attribute__((swift_name("threadName()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FlowHelperKt")))
@interface SharedFlowHelperKt : SharedBase
+ (SharedCommonFlow<id> *)asCommonFlow:(id<SharedFlow>)receiver __attribute__((swift_name("asCommonFlow(_:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ListExtensionsKt")))
@interface SharedListExtensionsKt : SharedBase
+ (void)swap:(NSMutableArray<id> *)receiver i:(int32_t)i j:(int32_t)j __attribute__((swift_name("swap(_:i:j:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("UuidKt")))
@interface SharedUuidKt : SharedBase
+ (NSString *)randomUUID __attribute__((swift_name("randomUUID()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ParsingKt")))
@interface SharedParsingKt : SharedBase
+ (SharedJsonElement *)toJsonElement:(id _Nullable)receiver __attribute__((swift_name("toJsonElement(_:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DefaultPosixKt")))
@interface SharedDefaultPosixKt : SharedBase
+ (id<SharedJsonSerializer>)defaultSerializer __attribute__((swift_name("defaultSerializer()")));
@property (class, readonly) NSMutableArray<id<SharedJsonSerializer>> *serializers __attribute__((swift_name("serializers")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MatchersKt")))
@interface SharedMatchersKt : SharedBase
+ (id<SharedMatcher>)beNull __attribute__((swift_name("beNull()")));
+ (void)shouldBeNull:(id _Nullable)receiver __attribute__((swift_name("shouldBeNull(_:)")));
+ (id _Nullable)shouldNotBeNull:(id _Nullable)receiver __attribute__((swift_name("shouldNotBeNull(_:)")));
+ (SharedBeFailure *)beFailure __attribute__((swift_name("beFailure()")));
+ (id<SharedMatcher>)beSuccess __attribute__((swift_name("beSuccess()")));
+ (SharedBeSuccess<id> *)beSuccessExpected:(id _Nullable)expected __attribute__((swift_name("beSuccess(expected:)")));
+ (void)shouldBeFailure:(id _Nullable)receiver block:(void (^ _Nullable)(SharedKotlinThrowable *))block __attribute__((swift_name("shouldBeFailure(_:block:)")));
+ (void)shouldBeFailureOfType:(id _Nullable)receiver __attribute__((swift_name("shouldBeFailureOfType(_:)")));
+ (void)shouldBeSuccess:(id _Nullable)receiver block:(void (^ _Nullable)(id _Nullable))block __attribute__((swift_name("shouldBeSuccess(_:block:)")));
+ (void)shouldBeSuccess:(id _Nullable)receiver expected:(id _Nullable)expected __attribute__((swift_name("shouldBeSuccess(_:expected:)")));
+ (void)shouldNotBeFailure:(id _Nullable)receiver __attribute__((swift_name("shouldNotBeFailure(_:)")));
+ (void)shouldNotBeFailureOfType:(id _Nullable)receiver __attribute__((swift_name("shouldNotBeFailureOfType(_:)")));
+ (void)shouldNotBeSuccess:(id _Nullable)receiver __attribute__((swift_name("shouldNotBeSuccess(_:)")));
+ (void)shouldNotBeSuccess:(id _Nullable)receiver expected:(id _Nullable)expected __attribute__((swift_name("shouldNotBeSuccess(_:expected:)")));
+ (id<SharedMatcher>)atLeastCountN:(int32_t)n __attribute__((swift_name("atLeastCount(n:)")));
+ (id<SharedMatcher>)atMostCountN:(int32_t)n __attribute__((swift_name("atMostCount(n:)")));
+ (id<SharedMatcher>)beEmpty __attribute__((swift_name("beEmpty()")));
+ (id<SharedMatcher>)beLargerThanOther:(id<SharedKotlinSequence>)other __attribute__((swift_name("beLargerThan(other:)")));
+ (id<SharedMatcher>)beSameCountAsOther:(id<SharedKotlinSequence>)other __attribute__((swift_name("beSameCountAs(other:)")));
+ (id<SharedMatcher>)beSmallerThanOther:(id<SharedKotlinSequence>)other __attribute__((swift_name("beSmallerThan(other:)")));
+ (id<SharedMatcher>)beSorted __attribute__((swift_name("beSorted()")));
+ (id<SharedMatcher>)beSortedWithCmp:(SharedInt *(^)(id _Nullable, id _Nullable))cmp __attribute__((swift_name("beSortedWith(cmp:)")));
+ (id<SharedMatcher>)beSortedWithComparator:(id<SharedKotlinComparator>)comparator __attribute__((swift_name("beSortedWith(comparator:)")));
+ (id<SharedMatcher>)beUnique __attribute__((swift_name("beUnique()")));
+ (id<SharedMatcher>)containT:(id _Nullable)t __attribute__((swift_name("contain(t:)")));
+ (id<SharedMatcher>)containAllTs:(NSArray<id> *)ts __attribute__((swift_name("containAll(ts:)")));
+ (id<SharedMatcher>)containAllTs_:(id<SharedKotlinSequence>)ts __attribute__((swift_name("containAll(ts_:)")));
+ (id<SharedMatcher>)containAllInAnyOrderExpected:(id<SharedKotlinSequence>)expected __attribute__((swift_name("containAllInAnyOrder(expected:)")));
+ (id<SharedMatcher>)containAllInAnyOrderExpected_:(SharedKotlinArray<id> *)expected __attribute__((swift_name("containAllInAnyOrder(expected_:)")));
+ (id<SharedMatcher>)containDuplicates __attribute__((swift_name("containDuplicates()")));
+ (id<SharedMatcher>)containExactlyExpected:(id<SharedKotlinSequence>)expected __attribute__((swift_name("containExactly(expected:)")));
+ (id<SharedMatcher>)containExactlyExpected_:(SharedKotlinArray<id> *)expected __attribute__((swift_name("containExactly(expected_:)")));
+ (id<SharedMatcher>)containExactlyInAnyOrderExpected:(id<SharedKotlinSequence>)expected __attribute__((swift_name("containExactlyInAnyOrder(expected:)"))) __attribute__((deprecated("use containAllInAnyOrder")));
+ (id<SharedMatcher>)containExactlyInAnyOrderExpected_:(SharedKotlinArray<id> *)expected __attribute__((swift_name("containExactlyInAnyOrder(expected_:)"))) __attribute__((deprecated("use containAllInAnyOrder")));
+ (id<SharedMatcher>)containNoNulls __attribute__((swift_name("containNoNulls()")));
+ (id<SharedMatcher>)containNull __attribute__((swift_name("containNull()")));
+ (id<SharedMatcher>)containOnlyNulls __attribute__((swift_name("containOnlyNulls()")));
+ (id<SharedMatcher>)containsInOrderSubsequence:(id<SharedKotlinSequence>)subsequence __attribute__((swift_name("containsInOrder(subsequence:)")));
+ (id<SharedMatcher>)existP:(SharedBoolean *(^)(id _Nullable))p __attribute__((swift_name("exist(p:)")));
+ (id<SharedMatcher>)haveCountCount:(int32_t)count __attribute__((swift_name("haveCount(count:)")));
+ (id<SharedMatcher>)haveElementAtIndex:(int32_t)index element:(id _Nullable)element __attribute__((swift_name("haveElementAt(index:element:)")));
+ (id<SharedMatcher>)haveLowerBoundT:(id)t __attribute__((swift_name("haveLowerBound(t:)")));
+ (id<SharedMatcher>)haveSizeSize:(int32_t)size __attribute__((swift_name("haveSize(size:)")));
+ (id<SharedMatcher>)haveUpperBoundT:(id)t __attribute__((swift_name("haveUpperBound(t:)")));
+ (id<SharedMatcher>)singleElementT:(id _Nullable)t __attribute__((swift_name("singleElement(t:)")));
+ (id<SharedMatcher>)sorted __attribute__((swift_name("sorted()")));
+ (id<SharedMatcher>)sortedWithCmp:(SharedInt *(^)(id _Nullable, id _Nullable))cmp __attribute__((swift_name("sortedWith(cmp:)")));
+ (id<SharedMatcher>)sortedWithComparator:(id<SharedKotlinComparator>)comparator __attribute__((swift_name("sortedWith(comparator:)")));
+ (void)shouldBeEmpty:(id<SharedKotlinSequence>)receiver __attribute__((swift_name("shouldBeEmpty(_:)")));
+ (void)shouldBeLargerThan:(id<SharedKotlinSequence>)receiver other:(id<SharedKotlinSequence>)other __attribute__((swift_name("shouldBeLargerThan(_:other:)")));
+ (void)shouldBeSameCountAs:(id<SharedKotlinSequence>)receiver other:(id<SharedKotlinSequence>)other __attribute__((swift_name("shouldBeSameCountAs(_:other:)")));
+ (void)shouldBeSameSizeAs:(id<SharedKotlinSequence>)receiver other:(id<SharedKotlinSequence>)other __attribute__((swift_name("shouldBeSameSizeAs(_:other:)")));
+ (void)shouldBeSmallerThan:(id<SharedKotlinSequence>)receiver other:(id<SharedKotlinSequence>)other __attribute__((swift_name("shouldBeSmallerThan(_:other:)")));
+ (void)shouldBeSorted:(id<SharedKotlinSequence>)receiver __attribute__((swift_name("shouldBeSorted(_:)")));
+ (void)shouldBeSortedWith:(id<SharedKotlinSequence>)receiver cmp:(SharedInt *(^)(id _Nullable, id _Nullable))cmp __attribute__((swift_name("shouldBeSortedWith(_:cmp:)")));
+ (void)shouldBeSortedWith:(id<SharedKotlinSequence>)receiver comparator:(id<SharedKotlinComparator>)comparator __attribute__((swift_name("shouldBeSortedWith(_:comparator:)")));
+ (void)shouldBeUnique:(id<SharedKotlinSequence>)receiver __attribute__((swift_name("shouldBeUnique(_:)")));
+ (void)shouldContain:(id<SharedKotlinSequence>)receiver t:(id _Nullable)t __attribute__((swift_name("shouldContain(_:t:)")));
+ (void)shouldContainAll:(id<SharedKotlinSequence>)receiver ts:(SharedKotlinArray<id> *)ts __attribute__((swift_name("shouldContainAll(_:ts:)")));
+ (void)shouldContainAll:(id<SharedKotlinSequence>)receiver ts_:(id)ts __attribute__((swift_name("shouldContainAll(_:ts_:)")));
+ (void)shouldContainAll:(id<SharedKotlinSequence>)receiver ts__:(id<SharedKotlinSequence>)ts __attribute__((swift_name("shouldContainAll(_:ts__:)")));
+ (void)shouldContainAllInAnyOrder:(id<SharedKotlinSequence> _Nullable)receiver expected:(id<SharedKotlinSequence>)expected __attribute__((swift_name("shouldContainAllInAnyOrder(_:expected:)")));
+ (void)shouldContainAllInAnyOrder:(id<SharedKotlinSequence> _Nullable)receiver expected_:(SharedKotlinArray<id> *)expected __attribute__((swift_name("shouldContainAllInAnyOrder(_:expected_:)")));
+ (void)shouldContainDuplicates:(id<SharedKotlinSequence>)receiver __attribute__((swift_name("shouldContainDuplicates(_:)")));
+ (void)shouldContainExactly:(id<SharedKotlinSequence> _Nullable)receiver expected:(id<SharedKotlinSequence>)expected __attribute__((swift_name("shouldContainExactly(_:expected:)")));
+ (void)shouldContainExactly:(id<SharedKotlinSequence> _Nullable)receiver expected_:(SharedKotlinArray<id> *)expected __attribute__((swift_name("shouldContainExactly(_:expected_:)")));
+ (void)shouldContainExactlyInAnyOrder:(id<SharedKotlinSequence> _Nullable)receiver expected:(id<SharedKotlinSequence>)expected __attribute__((swift_name("shouldContainExactlyInAnyOrder(_:expected:)"))) __attribute__((deprecated("use shouldContainAllInAnyOrder")));
+ (void)shouldContainExactlyInAnyOrder:(id<SharedKotlinSequence> _Nullable)receiver expected_:(SharedKotlinArray<id> *)expected __attribute__((swift_name("shouldContainExactlyInAnyOrder(_:expected_:)"))) __attribute__((deprecated("use shouldContainAllInAnyOrder")));
+ (void)shouldContainInOrder:(id<SharedKotlinSequence>)receiver ts:(SharedKotlinArray<id> *)ts __attribute__((swift_name("shouldContainInOrder(_:ts:)")));
+ (void)shouldContainInOrder:(id<SharedKotlinSequence>)receiver expected:(id<SharedKotlinSequence>)expected __attribute__((swift_name("shouldContainInOrder(_:expected:)")));
+ (void)shouldContainNoNulls:(id<SharedKotlinSequence>)receiver __attribute__((swift_name("shouldContainNoNulls(_:)")));
+ (void)shouldContainNull:(id<SharedKotlinSequence>)receiver __attribute__((swift_name("shouldContainNull(_:)")));
+ (void)shouldContainOnlyNulls:(id<SharedKotlinSequence>)receiver __attribute__((swift_name("shouldContainOnlyNulls(_:)")));
+ (void)shouldExist:(id<SharedKotlinSequence>)receiver p:(SharedBoolean *(^)(id _Nullable))p __attribute__((swift_name("shouldExist(_:p:)")));
+ (void)shouldHaveAtLeastCount:(id<SharedKotlinSequence>)receiver n:(int32_t)n __attribute__((swift_name("shouldHaveAtLeastCount(_:n:)")));
+ (void)shouldHaveAtLeastSize:(id<SharedKotlinSequence>)receiver n:(int32_t)n __attribute__((swift_name("shouldHaveAtLeastSize(_:n:)")));
+ (void)shouldHaveAtMostCount:(id<SharedKotlinSequence>)receiver n:(int32_t)n __attribute__((swift_name("shouldHaveAtMostCount(_:n:)")));
+ (void)shouldHaveAtMostSize:(id<SharedKotlinSequence>)receiver n:(int32_t)n __attribute__((swift_name("shouldHaveAtMostSize(_:n:)")));
+ (void)shouldHaveCount:(id<SharedKotlinSequence>)receiver count:(int32_t)count __attribute__((swift_name("shouldHaveCount(_:count:)")));
+ (void)shouldHaveElementAt:(id<SharedKotlinSequence>)receiver index:(int32_t)index element:(id _Nullable)element __attribute__((swift_name("shouldHaveElementAt(_:index:element:)")));
+ (void)shouldHaveLowerBound:(id<SharedKotlinSequence>)receiver t:(id)t __attribute__((swift_name("shouldHaveLowerBound(_:t:)")));
+ (void)shouldHaveSingleElement:(id<SharedKotlinSequence>)receiver t:(id _Nullable)t __attribute__((swift_name("shouldHaveSingleElement(_:t:)")));
+ (void)shouldHaveSize:(id<SharedKotlinSequence>)receiver size:(int32_t)size __attribute__((swift_name("shouldHaveSize(_:size:)")));
+ (void)shouldHaveUpperBound:(id<SharedKotlinSequence>)receiver t:(id)t __attribute__((swift_name("shouldHaveUpperBound(_:t:)")));
+ (void)shouldNotBeEmpty:(id<SharedKotlinSequence>)receiver __attribute__((swift_name("shouldNotBeEmpty(_:)")));
+ (void)shouldNotBeSorted:(id<SharedKotlinSequence>)receiver __attribute__((swift_name("shouldNotBeSorted(_:)")));
+ (void)shouldNotBeSortedWith:(id<SharedKotlinSequence>)receiver cmp:(SharedInt *(^)(id _Nullable, id _Nullable))cmp __attribute__((swift_name("shouldNotBeSortedWith(_:cmp:)")));
+ (void)shouldNotBeSortedWith:(id<SharedKotlinSequence>)receiver comparator:(id<SharedKotlinComparator>)comparator __attribute__((swift_name("shouldNotBeSortedWith(_:comparator:)")));
+ (void)shouldNotBeUnique:(id<SharedKotlinSequence>)receiver __attribute__((swift_name("shouldNotBeUnique(_:)")));
+ (void)shouldNotContain:(id<SharedKotlinSequence>)receiver t:(id _Nullable)t __attribute__((swift_name("shouldNotContain(_:t:)")));
+ (void)shouldNotContainAll:(id<SharedKotlinSequence>)receiver ts:(SharedKotlinArray<id> *)ts __attribute__((swift_name("shouldNotContainAll(_:ts:)")));
+ (void)shouldNotContainAll:(id<SharedKotlinSequence>)receiver ts_:(id)ts __attribute__((swift_name("shouldNotContainAll(_:ts_:)")));
+ (void)shouldNotContainAll:(id<SharedKotlinSequence>)receiver ts__:(id<SharedKotlinSequence>)ts __attribute__((swift_name("shouldNotContainAll(_:ts__:)")));
+ (void)shouldNotContainAllInAnyOrder:(id<SharedKotlinSequence> _Nullable)receiver expected:(id<SharedKotlinSequence>)expected __attribute__((swift_name("shouldNotContainAllInAnyOrder(_:expected:)")));
+ (void)shouldNotContainAllInAnyOrder:(id<SharedKotlinSequence> _Nullable)receiver expected_:(SharedKotlinArray<id> *)expected __attribute__((swift_name("shouldNotContainAllInAnyOrder(_:expected_:)")));
+ (void)shouldNotContainDuplicates:(id<SharedKotlinSequence>)receiver __attribute__((swift_name("shouldNotContainDuplicates(_:)")));
+ (void)shouldNotContainExactly:(id<SharedKotlinSequence> _Nullable)receiver expected:(id<SharedKotlinSequence>)expected __attribute__((swift_name("shouldNotContainExactly(_:expected:)")));
+ (void)shouldNotContainExactly:(id<SharedKotlinSequence> _Nullable)receiver expected_:(SharedKotlinArray<id> *)expected __attribute__((swift_name("shouldNotContainExactly(_:expected_:)")));
+ (void)shouldNotContainExactlyInAnyOrder:(id<SharedKotlinSequence> _Nullable)receiver expected:(id<SharedKotlinSequence>)expected __attribute__((swift_name("shouldNotContainExactlyInAnyOrder(_:expected:)"))) __attribute__((deprecated("use shouldNotContainAllInAnyOrder")));
+ (void)shouldNotContainExactlyInAnyOrder:(id<SharedKotlinSequence> _Nullable)receiver expected_:(SharedKotlinArray<id> *)expected __attribute__((swift_name("shouldNotContainExactlyInAnyOrder(_:expected_:)"))) __attribute__((deprecated("use shouldNotContainAllInAnyOrder")));
+ (void)shouldNotContainInOrder:(id<SharedKotlinSequence>)receiver expected:(id<SharedKotlinSequence>)expected __attribute__((swift_name("shouldNotContainInOrder(_:expected:)")));
+ (void)shouldNotContainNoNulls:(id<SharedKotlinSequence>)receiver __attribute__((swift_name("shouldNotContainNoNulls(_:)")));
+ (void)shouldNotContainNull:(id<SharedKotlinSequence>)receiver __attribute__((swift_name("shouldNotContainNull(_:)")));
+ (void)shouldNotContainOnlyNulls:(id<SharedKotlinSequence>)receiver __attribute__((swift_name("shouldNotContainOnlyNulls(_:)")));
+ (void)shouldNotHaveCount:(id<SharedKotlinSequence>)receiver count:(int32_t)count __attribute__((swift_name("shouldNotHaveCount(_:count:)")));
+ (void)shouldNotHaveElementAt:(id<SharedKotlinSequence>)receiver index:(int32_t)index element:(id _Nullable)element __attribute__((swift_name("shouldNotHaveElementAt(_:index:element:)")));
+ (void)shouldNotHaveSingleElement:(id<SharedKotlinSequence>)receiver t:(id _Nullable)t __attribute__((swift_name("shouldNotHaveSingleElement(_:t:)")));
+ (void)shouldNotHaveSize:(id<SharedKotlinSequence>)receiver size:(int32_t)size __attribute__((swift_name("shouldNotHaveSize(_:size:)")));
+ (id<SharedMatcher>)beGreaterThanX:(float)x __attribute__((swift_name("beGreaterThan(x:)")));
+ (id<SharedMatcher>)beGreaterThanOrEqualToX:(float)x __attribute__((swift_name("beGreaterThanOrEqualTo(x:)")));
+ (id<SharedMatcher>)beLessThanX:(float)x __attribute__((swift_name("beLessThan(x:)")));
+ (id<SharedMatcher>)beLessThanOrEqualToX:(float)x __attribute__((swift_name("beLessThanOrEqualTo(x:)")));
+ (id<SharedMatcher>)beWithinPercentageOfOther:(float)other percentage:(double)percentage __attribute__((swift_name("beWithinPercentageOf(other:percentage:)")));
+ (id<SharedMatcher>)exactlyD:(float)d __attribute__((swift_name("exactly(d:)")));
+ (id<SharedMatcher>)gtX:(float)x __attribute__((swift_name("gt(x:)")));
+ (id<SharedMatcher>)gteX:(float)x __attribute__((swift_name("gte(x:)")));
+ (id<SharedMatcher>)ltX:(float)x __attribute__((swift_name("lt(x:)")));
+ (id<SharedMatcher>)lteX:(float)x __attribute__((swift_name("lte(x:)")));
+ (void)shouldBeExactly:(float)receiver x:(float)x __attribute__((swift_name("shouldBeExactly(_:x:)")));
+ (void)shouldBeGreaterThan:(float)receiver x:(float)x __attribute__((swift_name("shouldBeGreaterThan(_:x:)")));
+ (void)shouldBeGreaterThanOrEqual:(float)receiver x:(float)x __attribute__((swift_name("shouldBeGreaterThanOrEqual(_:x:)")));
+ (void)shouldBeLessThan:(float)receiver x:(float)x __attribute__((swift_name("shouldBeLessThan(_:x:)")));
+ (void)shouldBeLessThanOrEqual:(float)receiver x:(float)x __attribute__((swift_name("shouldBeLessThanOrEqual(_:x:)")));
+ (void)shouldBeWithinPercentageOf:(float)receiver other:(float)other percentage:(double)percentage __attribute__((swift_name("shouldBeWithinPercentageOf(_:other:percentage:)")));
+ (void)shouldBeZero:(float)receiver __attribute__((swift_name("shouldBeZero(_:)")));
+ (void)shouldNotBeExactly:(float)receiver x:(float)x __attribute__((swift_name("shouldNotBeExactly(_:x:)")));
+ (void)shouldNotBeGreaterThan:(float)receiver x:(float)x __attribute__((swift_name("shouldNotBeGreaterThan(_:x:)")));
+ (void)shouldNotBeGreaterThanOrEqual:(float)receiver x:(float)x __attribute__((swift_name("shouldNotBeGreaterThanOrEqual(_:x:)")));
+ (void)shouldNotBeLessThan:(float)receiver x:(float)x __attribute__((swift_name("shouldNotBeLessThan(_:x:)")));
+ (void)shouldNotBeLessThanOrEqual:(float)receiver x:(float)x __attribute__((swift_name("shouldNotBeLessThanOrEqual(_:x:)")));
+ (void)shouldNotBeWithinPercentageOf:(float)receiver other:(float)other percentage:(double)percentage __attribute__((swift_name("shouldNotBeWithinPercentageOf(_:other:percentage:)")));
+ (void)shouldNotBeZero:(float)receiver __attribute__((swift_name("shouldNotBeZero(_:)")));
+ (id<SharedMatcher>)beBlank __attribute__((swift_name("beBlank()")));
+ (id<SharedMatcher>)beEmpty_ __attribute__((swift_name("beEmpty_()")));
+ (id<SharedMatcher>)beEqualIgnoringCaseOther:(NSString *)other __attribute__((swift_name("beEqualIgnoringCase(other:)")));
+ (id<SharedMatcher>)beUUIDVersion:(SharedUUIDVersion *)version considerNilValid:(BOOL)considerNilValid __attribute__((swift_name("beUUID(version:considerNilValid:)")));
+ (id<SharedMatcher>)containSubstr:(NSString *)substr __attribute__((swift_name("contain(substr:)")));
+ (id<SharedMatcher>)containRegex:(SharedKotlinRegex *)regex __attribute__((swift_name("contain(regex:)")));
+ (id<SharedMatcher>)containADigit __attribute__((swift_name("containADigit()")));
+ (id<SharedMatcher>)containIgnoringCaseSubstr:(NSString *)substr __attribute__((swift_name("containIgnoringCase(substr:)")));
+ (id<SharedMatcher>)containInOrderSubstrings:(SharedKotlinArray<NSString *> *)substrings __attribute__((swift_name("containInOrder(substrings:)")));
+ (id<SharedMatcher>)containOnlyDigits __attribute__((swift_name("containOnlyDigits()")));
+ (id<SharedMatcher>)containOnlyOnceSubstring:(NSString *)substring __attribute__((swift_name("containOnlyOnce(substring:)")));
+ (id<SharedMatcher>)containOnlyWhitespace __attribute__((swift_name("containOnlyWhitespace()")));
+ (id<SharedMatcher>)includeSubstr:(NSString *)substr __attribute__((swift_name("include(substr:)")));
+ (NSString * _Nullable)shouldBeBlank:(NSString * _Nullable)receiver __attribute__((swift_name("shouldBeBlank(_:)")));
+ (NSString * _Nullable)shouldBeEmpty_:(NSString * _Nullable)receiver __attribute__((swift_name("shouldBeEmpty(__:)")));
+ (NSString * _Nullable)shouldBeEqualIgnoringCase:(NSString * _Nullable)receiver other:(NSString *)other __attribute__((swift_name("shouldBeEqualIgnoringCase(_:other:)")));
+ (int32_t)shouldBeInteger:(NSString * _Nullable)receiver radix:(int32_t)radix __attribute__((swift_name("shouldBeInteger(_:radix:)")));
+ (NSString *)shouldBeUUID:(NSString *)receiver version:(SharedUUIDVersion *)version considerNilValid:(BOOL)considerNilValid __attribute__((swift_name("shouldBeUUID(_:version:considerNilValid:)")));
+ (NSString * _Nullable)shouldContain:(NSString * _Nullable)receiver substr:(NSString *)substr __attribute__((swift_name("shouldContain(_:substr:)")));
+ (NSString * _Nullable)shouldContain:(NSString * _Nullable)receiver regex:(SharedKotlinRegex *)regex __attribute__((swift_name("shouldContain(_:regex:)")));
+ (NSString * _Nullable)shouldContainADigit:(NSString * _Nullable)receiver __attribute__((swift_name("shouldContainADigit(_:)")));
+ (NSString * _Nullable)shouldContainIgnoringCase:(NSString * _Nullable)receiver substr:(NSString *)substr __attribute__((swift_name("shouldContainIgnoringCase(_:substr:)")));
+ (NSString * _Nullable)shouldContainInOrder:(NSString * _Nullable)receiver substrings:(SharedKotlinArray<NSString *> *)substrings __attribute__((swift_name("shouldContainInOrder(_:substrings:)")));
+ (NSString * _Nullable)shouldContainOnlyDigits:(NSString * _Nullable)receiver __attribute__((swift_name("shouldContainOnlyDigits(_:)")));
+ (NSString * _Nullable)shouldContainOnlyOnce:(NSString * _Nullable)receiver substr:(NSString *)substr __attribute__((swift_name("shouldContainOnlyOnce(_:substr:)")));
+ (NSString * _Nullable)shouldInclude:(NSString * _Nullable)receiver substr:(NSString *)substr __attribute__((swift_name("shouldInclude(_:substr:)")));
+ (NSString * _Nullable)shouldNotBeBlank:(NSString * _Nullable)receiver __attribute__((swift_name("shouldNotBeBlank(_:)")));
+ (NSString * _Nullable)shouldNotBeEmpty_:(NSString * _Nullable)receiver __attribute__((swift_name("shouldNotBeEmpty(__:)")));
+ (NSString * _Nullable)shouldNotBeEqualIgnoringCase:(NSString * _Nullable)receiver other:(NSString *)other __attribute__((swift_name("shouldNotBeEqualIgnoringCase(_:other:)")));
+ (NSString *)shouldNotBeUUID:(NSString *)receiver version:(SharedUUIDVersion *)version considerNilValid:(BOOL)considerNilValid __attribute__((swift_name("shouldNotBeUUID(_:version:considerNilValid:)")));
+ (NSString * _Nullable)shouldNotContain:(NSString * _Nullable)receiver substr:(NSString *)substr __attribute__((swift_name("shouldNotContain(_:substr:)")));
+ (NSString * _Nullable)shouldNotContain:(NSString * _Nullable)receiver regex:(SharedKotlinRegex *)regex __attribute__((swift_name("shouldNotContain(_:regex:)")));
+ (NSString * _Nullable)shouldNotContainADigit:(NSString * _Nullable)receiver __attribute__((swift_name("shouldNotContainADigit(_:)")));
+ (NSString * _Nullable)shouldNotContainIgnoringCase:(NSString * _Nullable)receiver substr:(NSString *)substr __attribute__((swift_name("shouldNotContainIgnoringCase(_:substr:)")));
+ (NSString * _Nullable)shouldNotContainInOrder:(NSString * _Nullable)receiver substrings:(SharedKotlinArray<NSString *> *)substrings __attribute__((swift_name("shouldNotContainInOrder(_:substrings:)")));
+ (NSString * _Nullable)shouldNotContainOnlyDigits:(NSString * _Nullable)receiver __attribute__((swift_name("shouldNotContainOnlyDigits(_:)")));
+ (NSString * _Nullable)shouldNotContainOnlyOnce:(NSString * _Nullable)receiver substr:(NSString *)substr __attribute__((swift_name("shouldNotContainOnlyOnce(_:substr:)")));
+ (NSString * _Nullable)shouldNotInclude:(NSString * _Nullable)receiver substr:(NSString *)substr __attribute__((swift_name("shouldNotInclude(_:substr:)")));
+ (id<SharedMatcher>)beEmpty__ __attribute__((swift_name("beEmpty__()")));
+ (id<SharedMatcher>)mapcontainKey:(id _Nullable)key v:(id _Nullable)v __attribute__((swift_name("mapcontain(key:v:)")));
+ (void)shouldBeEmpty__:(NSDictionary<id, id> *)receiver __attribute__((swift_name("shouldBeEmpty(___:)")));
+ (void)shouldContain:(NSDictionary<id, id> *)receiver key:(id _Nullable)key value:(id _Nullable)value __attribute__((swift_name("shouldContain(_:key:value:)")));
+ (void)shouldContain:(NSDictionary<id, id> *)receiver entry:(SharedKotlinPair<id, id> *)entry __attribute__((swift_name("shouldContain(_:entry:)")));
+ (void)shouldContainAll:(NSDictionary<id, id> *)receiver expected:(NSDictionary<id, id> *)expected __attribute__((swift_name("shouldContainAll(_:expected:)")));
+ (void)shouldContainAnyKeysOf:(NSDictionary<id, id> *)receiver keys:(SharedKotlinArray<id> *)keys __attribute__((swift_name("shouldContainAnyKeysOf(_:keys:)")));
+ (void)shouldContainAnyValuesOf:(NSDictionary<id, id> *)receiver values:(SharedKotlinArray<id> *)values __attribute__((swift_name("shouldContainAnyValuesOf(_:values:)")));
+ (void)shouldContainExactly:(NSDictionary<id, id> *)receiver expected__:(NSDictionary<id, id> *)expected __attribute__((swift_name("shouldContainExactly(_:expected__:)")));
+ (void)shouldContainKey:(NSDictionary<id, id> *)receiver key:(id _Nullable)key __attribute__((swift_name("shouldContainKey(_:key:)")));
+ (void)shouldContainKeys:(NSDictionary<id, id> *)receiver keys:(SharedKotlinArray<id> *)keys __attribute__((swift_name("shouldContainKeys(_:keys:)")));
+ (void)shouldContainValue:(NSDictionary<id, id> *)receiver value:(id _Nullable)value __attribute__((swift_name("shouldContainValue(_:value:)")));
+ (void)shouldContainValues:(NSDictionary<id, id> *)receiver values:(SharedKotlinArray<id> *)values __attribute__((swift_name("shouldContainValues(_:values:)")));
+ (void)shouldHaveKey:(NSDictionary<id, id> *)receiver key:(id _Nullable)key __attribute__((swift_name("shouldHaveKey(_:key:)")));
+ (void)shouldHaveKeys:(NSDictionary<id, id> *)receiver keys:(SharedKotlinArray<id> *)keys __attribute__((swift_name("shouldHaveKeys(_:keys:)")));
+ (void)shouldHaveSize:(NSDictionary<id, id> *)receiver size_:(int32_t)size __attribute__((swift_name("shouldHaveSize(_:size_:)")));
+ (void)shouldHaveValues:(NSDictionary<id, id> *)receiver values:(SharedKotlinArray<id> *)values __attribute__((swift_name("shouldHaveValues(_:values:)")));
+ (void)shouldNotBeEmpty__:(NSDictionary<id, id> *)receiver __attribute__((swift_name("shouldNotBeEmpty(___:)")));
+ (void)shouldNotContain:(NSDictionary<id, id> *)receiver key:(id _Nullable)key value:(id _Nullable)value __attribute__((swift_name("shouldNotContain(_:key:value:)")));
+ (void)shouldNotContain:(NSDictionary<id, id> *)receiver entry:(SharedKotlinPair<id, id> *)entry __attribute__((swift_name("shouldNotContain(_:entry:)")));
+ (void)shouldNotContainAll:(NSDictionary<id, id> *)receiver expected:(NSDictionary<id, id> *)expected __attribute__((swift_name("shouldNotContainAll(_:expected:)")));
+ (void)shouldNotContainAnyKeysOf:(NSDictionary<id, id> *)receiver keys:(SharedKotlinArray<id> *)keys __attribute__((swift_name("shouldNotContainAnyKeysOf(_:keys:)")));
+ (void)shouldNotContainAnyValuesOf:(NSDictionary<id, id> *)receiver values:(SharedKotlinArray<id> *)values __attribute__((swift_name("shouldNotContainAnyValuesOf(_:values:)")));
+ (void)shouldNotContainExactly:(NSDictionary<id, id> *)receiver expected__:(NSDictionary<id, id> *)expected __attribute__((swift_name("shouldNotContainExactly(_:expected__:)")));
+ (void)shouldNotContainKey:(NSDictionary<id, id> *)receiver key:(id _Nullable)key __attribute__((swift_name("shouldNotContainKey(_:key:)")));
+ (void)shouldNotContainKeys:(NSDictionary<id, id> *)receiver keys:(SharedKotlinArray<id> *)keys __attribute__((swift_name("shouldNotContainKeys(_:keys:)")));
+ (void)shouldNotContainValue:(NSDictionary<id, id> *)receiver value:(id _Nullable)value __attribute__((swift_name("shouldNotContainValue(_:value:)")));
+ (void)shouldNotContainValues:(NSDictionary<id, id> *)receiver values:(SharedKotlinArray<id> *)values __attribute__((swift_name("shouldNotContainValues(_:values:)")));
+ (void)shouldNotHaveKey:(NSDictionary<id, id> *)receiver key:(id _Nullable)key __attribute__((swift_name("shouldNotHaveKey(_:key:)")));
+ (void)shouldNotHaveKeys:(NSDictionary<id, id> *)receiver keys:(SharedKotlinArray<id> *)keys __attribute__((swift_name("shouldNotHaveKeys(_:keys:)")));
+ (void)shouldNotHaveValues:(NSDictionary<id, id> *)receiver values:(SharedKotlinArray<id> *)values __attribute__((swift_name("shouldNotHaveValues(_:values:)")));
+ (id<SharedMatcher>)haveCause __attribute__((swift_name("haveCause()")));
+ (id<SharedMatcher>)haveCauseInstanceOf __attribute__((swift_name("haveCauseInstanceOf()")));
+ (id<SharedMatcher>)haveCauseOfType __attribute__((swift_name("haveCauseOfType()")));
+ (id<SharedMatcher>)haveMessageMessage:(NSString *)message __attribute__((swift_name("haveMessage(message:)")));
+ (id<SharedMatcher>)haveMessageRegex:(SharedKotlinRegex *)regex __attribute__((swift_name("haveMessage(regex:)")));
+ (id<SharedMatcher>)containAnyOfTs:(id)ts __attribute__((swift_name("containAnyOf(ts:)")));
+ (id<SharedMatcher>)existP_:(SharedBoolean *(^)(id _Nullable))p __attribute__((swift_name("exist(p_:)")));
+ (id<SharedMatcher>)haveElementAtIndex:(int32_t)index element_:(id _Nullable)element __attribute__((swift_name("haveElementAt(index:element_:)")));
+ (void)shouldContainAnyOf:(id)receiver ts:(SharedKotlinArray<id> *)ts __attribute__((swift_name("shouldContainAnyOf(_:ts:)")));
+ (void)shouldContainAnyOf:(id)receiver ts_:(id)ts __attribute__((swift_name("shouldContainAnyOf(_:ts_:)")));
+ (void)shouldContainAnyOf:(id)receiver ts__:(SharedKotlinArray<id> *)ts __attribute__((swift_name("shouldContainAnyOf(_:ts__:)")));
+ (void)shouldContainAnyOf:(id)receiver ts___:(id)ts __attribute__((swift_name("shouldContainAnyOf(_:ts___:)")));
+ (void)shouldExist:(id)receiver p_:(SharedBoolean *(^)(id _Nullable))p __attribute__((swift_name("shouldExist(_:p_:)")));
+ (void)shouldExist:(id)receiver p__:(SharedBoolean *(^)(id _Nullable))p __attribute__((swift_name("shouldExist(_:p__:)")));
+ (void)shouldExistInOrder:(id)receiver ps:(SharedKotlinArray<SharedBoolean *(^)(id _Nullable)> *)ps __attribute__((swift_name("shouldExistInOrder(_:ps:)")));
+ (void)shouldExistInOrder:(id)receiver expected:(NSArray<SharedBoolean *(^)(id _Nullable)> *)expected __attribute__((swift_name("shouldExistInOrder(_:expected:)")));
+ (void)shouldExistInOrder:(NSArray<id> *)receiver ps_:(SharedKotlinArray<SharedBoolean *(^)(id _Nullable)> *)ps __attribute__((swift_name("shouldExistInOrder(_:ps_:)")));
+ (void)shouldExistInOrder:(NSArray<id> *)receiver expected_:(NSArray<SharedBoolean *(^)(id _Nullable)> *)expected __attribute__((swift_name("shouldExistInOrder(_:expected_:)")));
+ (void)shouldHaveElementAt:(id)receiver index:(int32_t)index element_:(id _Nullable)element __attribute__((swift_name("shouldHaveElementAt(_:index:element_:)")));
+ (void)shouldHaveElementAt:(NSArray<id> *)receiver index:(int32_t)index element__:(id _Nullable)element __attribute__((swift_name("shouldHaveElementAt(_:index:element__:)")));
+ (void)shouldHaveSingleElement:(id)receiver p:(SharedBoolean *(^)(id _Nullable))p __attribute__((swift_name("shouldHaveSingleElement(_:p:)")));
+ (void)shouldHaveSingleElement:(id)receiver t_:(id _Nullable)t __attribute__((swift_name("shouldHaveSingleElement(_:t_:)")));
+ (id)shouldHaveSingleElement:(id)receiver p_:(SharedBoolean *(^)(id _Nullable))p __attribute__((swift_name("shouldHaveSingleElement(_:p_:)")));
+ (id)shouldHaveSingleElement:(id)receiver t__:(id _Nullable)t __attribute__((swift_name("shouldHaveSingleElement(_:t__:)")));
+ (void)shouldNotContainAnyOf:(id)receiver ts:(SharedKotlinArray<id> *)ts __attribute__((swift_name("shouldNotContainAnyOf(_:ts:)")));
+ (void)shouldNotContainAnyOf:(id)receiver ts_:(id)ts __attribute__((swift_name("shouldNotContainAnyOf(_:ts_:)")));
+ (void)shouldNotContainAnyOf:(id)receiver ts__:(SharedKotlinArray<id> *)ts __attribute__((swift_name("shouldNotContainAnyOf(_:ts__:)")));
+ (void)shouldNotContainAnyOf:(id)receiver ts___:(id)ts __attribute__((swift_name("shouldNotContainAnyOf(_:ts___:)")));
+ (void)shouldNotExistInOrder:(id)receiver expected:(id)expected __attribute__((swift_name("shouldNotExistInOrder(_:expected:)")));
+ (void)shouldNotExistInOrder:(id)receiver expected_:(NSArray<SharedBoolean *(^)(id _Nullable)> *)expected __attribute__((swift_name("shouldNotExistInOrder(_:expected_:)")));
+ (void)shouldNotExistInOrder:(NSArray<id> *)receiver expected__:(NSArray<SharedBoolean *(^)(id _Nullable)> *)expected __attribute__((swift_name("shouldNotExistInOrder(_:expected__:)")));
+ (void)shouldNotHaveElementAt:(id)receiver index:(int32_t)index element_:(id _Nullable)element __attribute__((swift_name("shouldNotHaveElementAt(_:index:element_:)")));
+ (void)shouldNotHaveElementAt:(NSArray<id> *)receiver index:(int32_t)index element__:(id _Nullable)element __attribute__((swift_name("shouldNotHaveElementAt(_:index:element__:)")));
+ (void)shouldNotHaveSingleElement:(id)receiver t_:(id _Nullable)t __attribute__((swift_name("shouldNotHaveSingleElement(_:t_:)")));
+ (void)shouldNotHaveSingleElement:(id)receiver t__:(id _Nullable)t __attribute__((swift_name("shouldNotHaveSingleElement(_:t__:)")));
+ (id)shouldBeInstanceOf:(id _Nullable)receiver __attribute__((swift_name("shouldBeInstanceOf(_:)")));
+ (id)shouldBeInstanceOf:(id _Nullable)receiver block:(void (^)(id))block __attribute__((swift_name("shouldBeInstanceOf(_:block:)"))) __attribute__((deprecated("Use the smart contract version: a.shouldBeInstanceOf<B>(); a.bMethod(). Deprecated since 4.5.")));
+ (void)shouldBeSameInstanceAs:(id _Nullable)receiver ref:(id _Nullable)ref __attribute__((swift_name("shouldBeSameInstanceAs(_:ref:)")));
+ (id)shouldBeTypeOf:(id _Nullable)receiver __attribute__((swift_name("shouldBeTypeOf(_:)")));
+ (id)shouldBeTypeOf:(id _Nullable)receiver block:(void (^)(id))block __attribute__((swift_name("shouldBeTypeOf(_:block:)"))) __attribute__((deprecated("Use the smart contract version: a.shouldBeTypeOf<B>(); a.bMethod(). Deprecated since 4.5.")));
+ (void)shouldNotBeInstanceOf:(id _Nullable)receiver __attribute__((swift_name("shouldNotBeInstanceOf(_:)")));
+ (void)shouldNotBeSameInstanceAs:(id _Nullable)receiver ref:(id _Nullable)ref __attribute__((swift_name("shouldNotBeSameInstanceAs(_:ref:)")));
+ (void)shouldNotBeTypeOf:(id _Nullable)receiver __attribute__((swift_name("shouldNotBeTypeOf(_:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IntMatchersKt")))
@interface SharedIntMatchersKt : SharedBase
+ (id<SharedMatcher>)beBetweenA:(int32_t)a b:(int32_t)b __attribute__((swift_name("beBetween(a:b:)")));
+ (id<SharedMatcher>)beGreaterThanX:(int32_t)x __attribute__((swift_name("beGreaterThan(x:)")));
+ (id<SharedMatcher>)beGreaterThanOrEqualToX:(int32_t)x __attribute__((swift_name("beGreaterThanOrEqualTo(x:)")));
+ (id<SharedMatcher>)beInRangeRange:(SharedKotlinIntRange *)range __attribute__((swift_name("beInRange(range:)")));
+ (id<SharedMatcher>)beLessThanX:(int32_t)x __attribute__((swift_name("beLessThan(x:)")));
+ (id<SharedMatcher>)beLessThanOrEqualToX:(int32_t)x __attribute__((swift_name("beLessThanOrEqualTo(x:)")));
+ (id<SharedMatcher>)beWithinPercentageOfOther:(int32_t)other percentage:(double)percentage __attribute__((swift_name("beWithinPercentageOf(other:percentage:)")));
+ (id<SharedMatcher>)betweenA:(int32_t)a b:(int32_t)b __attribute__((swift_name("between(a:b:)")));
+ (id<SharedMatcher>)exactlyX:(int32_t)x __attribute__((swift_name("exactly(x:)")));
+ (id<SharedMatcher>)gtX:(int32_t)x __attribute__((swift_name("gt(x:)")));
+ (id<SharedMatcher>)gteX:(int32_t)x __attribute__((swift_name("gte(x:)")));
+ (id<SharedMatcher>)ltX:(int32_t)x __attribute__((swift_name("lt(x:)")));
+ (id<SharedMatcher>)lteX:(int32_t)x __attribute__((swift_name("lte(x:)")));
+ (void)shouldBeBetween:(int32_t)receiver a:(int32_t)a b:(int32_t)b __attribute__((swift_name("shouldBeBetween(_:a:b:)")));
+ (void)shouldBeInRange:(int32_t)receiver range:(SharedKotlinIntRange *)range __attribute__((swift_name("shouldBeInRange(_:range:)")));
+ (void)shouldBeWithinPercentageOf:(int32_t)receiver other:(int32_t)other percentage:(double)percentage __attribute__((swift_name("shouldBeWithinPercentageOf(_:other:percentage:)")));
+ (void)shouldNotBeBetween:(int32_t)receiver a:(int32_t)a b:(int32_t)b __attribute__((swift_name("shouldNotBeBetween(_:a:b:)")));
+ (void)shouldNotBeInRange:(int32_t)receiver range:(SharedKotlinIntRange *)range __attribute__((swift_name("shouldNotBeInRange(_:range:)")));
+ (void)shouldNotBeWithinPercentageOf:(int32_t)receiver other:(int32_t)other percentage:(double)percentage __attribute__((swift_name("shouldNotBeWithinPercentageOf(_:other:percentage:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IntKt")))
@interface SharedIntKt : SharedBase
+ (id<SharedMatcher>)beEven __attribute__((swift_name("beEven()")));
+ (id<SharedMatcher>)beOdd __attribute__((swift_name("beOdd()")));
+ (id<SharedMatcher>)negative __attribute__((swift_name("negative()")));
+ (id<SharedMatcher>)nonNegative __attribute__((swift_name("nonNegative()")));
+ (id<SharedMatcher>)nonPositive __attribute__((swift_name("nonPositive()")));
+ (id<SharedMatcher>)positive __attribute__((swift_name("positive()")));
+ (int32_t)shouldBeEven:(int32_t)receiver __attribute__((swift_name("shouldBeEven(_:)")));
+ (int32_t)shouldBeExactly:(int32_t)receiver x:(int32_t)x __attribute__((swift_name("shouldBeExactly(_:x:)")));
+ (int32_t)shouldBeGreaterThan:(int32_t)receiver x:(int32_t)x __attribute__((swift_name("shouldBeGreaterThan(_:x:)")));
+ (int32_t)shouldBeGreaterThanOrEqual:(int32_t)receiver x:(int32_t)x __attribute__((swift_name("shouldBeGreaterThanOrEqual(_:x:)")));
+ (int32_t)shouldBeLessThan:(int32_t)receiver x:(int32_t)x __attribute__((swift_name("shouldBeLessThan(_:x:)")));
+ (int32_t)shouldBeLessThanOrEqual:(int32_t)receiver x:(int32_t)x __attribute__((swift_name("shouldBeLessThanOrEqual(_:x:)")));
+ (int32_t)shouldBeNegative:(int32_t)receiver __attribute__((swift_name("shouldBeNegative(_:)")));
+ (int32_t)shouldBeNonNegative:(int32_t)receiver __attribute__((swift_name("shouldBeNonNegative(_:)")));
+ (int32_t)shouldBeNonPositive:(int32_t)receiver __attribute__((swift_name("shouldBeNonPositive(_:)")));
+ (int32_t)shouldBeOdd:(int32_t)receiver __attribute__((swift_name("shouldBeOdd(_:)")));
+ (int32_t)shouldBePositive:(int32_t)receiver __attribute__((swift_name("shouldBePositive(_:)")));
+ (int32_t)shouldBeZero:(int32_t)receiver __attribute__((swift_name("shouldBeZero(_:)")));
+ (int32_t)shouldNotBeEven:(int32_t)receiver __attribute__((swift_name("shouldNotBeEven(_:)")));
+ (int32_t)shouldNotBeExactly:(int32_t)receiver x:(int32_t)x __attribute__((swift_name("shouldNotBeExactly(_:x:)")));
+ (int32_t)shouldNotBeGreaterThan:(int32_t)receiver x:(int32_t)x __attribute__((swift_name("shouldNotBeGreaterThan(_:x:)")));
+ (int32_t)shouldNotBeGreaterThanOrEqual:(int32_t)receiver x:(int32_t)x __attribute__((swift_name("shouldNotBeGreaterThanOrEqual(_:x:)")));
+ (int32_t)shouldNotBeLessThan:(int32_t)receiver x:(int32_t)x __attribute__((swift_name("shouldNotBeLessThan(_:x:)")));
+ (int32_t)shouldNotBeLessThanOrEqual:(int32_t)receiver x:(int32_t)x __attribute__((swift_name("shouldNotBeLessThanOrEqual(_:x:)")));
+ (int32_t)shouldNotBeOdd:(int32_t)receiver __attribute__((swift_name("shouldNotBeOdd(_:)")));
+ (int32_t)shouldNotBeZero:(int32_t)receiver __attribute__((swift_name("shouldNotBeZero(_:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("UintKt")))
@interface SharedUintKt : SharedBase
+ (id<SharedMatcher>)betweenLower:(uint32_t)lower upper:(uint32_t)upper __attribute__((swift_name("between(lower:upper:)")));
+ (uint32_t)shouldBeBetween:(uint32_t)receiver lower:(uint32_t)lower upper:(uint32_t)upper __attribute__((swift_name("shouldBeBetween(_:lower:upper:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DurationKt")))
@interface SharedDurationKt : SharedBase
+ (id<SharedMatcher>)haveHoursHours:(int64_t)hours __attribute__((swift_name("haveHours(hours:)")));
+ (id<SharedMatcher>)haveMillisMillis:(int64_t)millis __attribute__((swift_name("haveMillis(millis:)")));
+ (id<SharedMatcher>)haveMinutesMinutes:(int64_t)minutes __attribute__((swift_name("haveMinutes(minutes:)")));
+ (id<SharedMatcher>)haveSecondsSeconds:(int64_t)seconds __attribute__((swift_name("haveSeconds(seconds:)")));
+ (void)shouldHaveHours:(int64_t)receiver hours:(int64_t)hours __attribute__((swift_name("shouldHaveHours(_:hours:)")));
+ (void)shouldHaveMillis:(int64_t)receiver millis:(int64_t)millis __attribute__((swift_name("shouldHaveMillis(_:millis:)")));
+ (void)shouldHaveMinutes:(int64_t)receiver minutes:(int64_t)minutes __attribute__((swift_name("shouldHaveMinutes(_:minutes:)")));
+ (void)shouldHaveSeconds:(int64_t)receiver seconds:(int64_t)seconds __attribute__((swift_name("shouldHaveSeconds(_:seconds:)")));
+ (void)shouldNotHaveHours:(int64_t)receiver hours:(int64_t)hours __attribute__((swift_name("shouldNotHaveHours(_:hours:)")));
+ (void)shouldNotHaveMillis:(int64_t)receiver millis:(int64_t)millis __attribute__((swift_name("shouldNotHaveMillis(_:millis:)")));
+ (void)shouldNotHaveMinutes:(int64_t)receiver minutes:(int64_t)minutes __attribute__((swift_name("shouldNotHaveMinutes(_:minutes:)")));
+ (void)shouldNotHaveSeconds:(int64_t)receiver seconds:(int64_t)seconds __attribute__((swift_name("shouldNotHaveSeconds(_:seconds:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("BooleanMatchersKt")))
@interface SharedBooleanMatchersKt : SharedBase
+ (void)shouldBeFalse:(BOOL)receiver __attribute__((swift_name("shouldBeFalse(_:)")));
+ (void)shouldBeTrue:(BOOL)receiver __attribute__((swift_name("shouldBeTrue(_:)")));
+ (void)shouldNotBeFalse:(BOOL)receiver __attribute__((swift_name("shouldNotBeFalse(_:)")));
+ (void)shouldNotBeTrue:(BOOL)receiver __attribute__((swift_name("shouldNotBeTrue(_:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ComparableMatchersKt")))
@interface SharedComparableMatchersKt : SharedBase
+ (id<SharedMatcher>)beEqualComparingToOther:(id)other __attribute__((swift_name("beEqualComparingTo(other:)")));
+ (id<SharedMatcher>)beGreaterThanX:(id)x __attribute__((swift_name("beGreaterThan(x:)")));
+ (id<SharedMatcher>)beGreaterThanOrEqualToX:(id)x __attribute__((swift_name("beGreaterThanOrEqualTo(x:)")));
+ (id<SharedMatcher>)beLessThanX:(id)x __attribute__((swift_name("beLessThan(x:)")));
+ (id<SharedMatcher>)beLessThanOrEqualToX:(id)x __attribute__((swift_name("beLessThanOrEqualTo(x:)")));
+ (id<SharedMatcher>)compareToOther:(id _Nullable)other comparator:(id<SharedKotlinComparator>)comparator __attribute__((swift_name("compareTo(other:comparator:)")));
+ (id<SharedMatcher>)gtX:(id)x __attribute__((swift_name("gt(x:)")));
+ (id<SharedMatcher>)gteX:(id)x __attribute__((swift_name("gte(x:)")));
+ (id<SharedMatcher>)ltX:(id)x __attribute__((swift_name("lt(x:)")));
+ (id<SharedMatcher>)lteX:(id)x __attribute__((swift_name("lte(x:)")));
+ (void)shouldBeEqualComparingTo:(id)receiver other:(id)other __attribute__((swift_name("shouldBeEqualComparingTo(_:other:)")));
+ (void)shouldBeEqualComparingTo:(id)receiver other:(id)other comparator:(id<SharedKotlinComparator>)comparator __attribute__((swift_name("shouldBeEqualComparingTo(_:other:comparator:)")));
+ (void)shouldBeGreaterThan:(id)receiver other:(id)other __attribute__((swift_name("shouldBeGreaterThan(_:other:)")));
+ (void)shouldBeGreaterThanOrEqualTo:(id)receiver other:(id)other __attribute__((swift_name("shouldBeGreaterThanOrEqualTo(_:other:)")));
+ (void)shouldBeLessThan:(id)receiver other:(id)other __attribute__((swift_name("shouldBeLessThan(_:other:)")));
+ (void)shouldBeLessThanOrEqualTo:(id)receiver other:(id)other __attribute__((swift_name("shouldBeLessThanOrEqualTo(_:other:)")));
+ (void)shouldNotBeEqualComparingTo:(id)receiver other:(id)other __attribute__((swift_name("shouldNotBeEqualComparingTo(_:other:)")));
+ (void)shouldNotBeEqualComparingTo:(id)receiver other:(id)other comparator:(id<SharedKotlinComparator>)comparator __attribute__((swift_name("shouldNotBeEqualComparingTo(_:other:comparator:)")));
+ (void)shouldNotBeGreaterThan:(id)receiver other:(id)other __attribute__((swift_name("shouldNotBeGreaterThan(_:other:)")));
+ (void)shouldNotBeGreaterThanOrEqualTo:(id)receiver other:(id)other __attribute__((swift_name("shouldNotBeGreaterThanOrEqualTo(_:other:)")));
+ (void)shouldNotBeLessThan:(id)receiver other:(id)other __attribute__((swift_name("shouldNotBeLessThan(_:other:)")));
+ (void)shouldNotBeLessThanOrEqualTo:(id)receiver other:(id)other __attribute__((swift_name("shouldNotBeLessThanOrEqualTo(_:other:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ByteKt")))
@interface SharedByteKt : SharedBase
+ (id<SharedMatcher>)betweenLower:(int8_t)lower upper:(int8_t)upper __attribute__((swift_name("between(lower:upper:)")));
+ (int8_t)shouldBeBetween:(int8_t)receiver lower:(int8_t)lower upper:(int8_t)upper __attribute__((swift_name("shouldBeBetween(_:lower:upper:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("UbyteKt")))
@interface SharedUbyteKt : SharedBase
+ (id<SharedMatcher>)betweenLower:(uint8_t)lower upper:(uint8_t)upper __attribute__((swift_name("between(lower:upper:)")));
+ (uint8_t)shouldBeBetween:(uint8_t)receiver lower:(uint8_t)lower upper:(uint8_t)upper __attribute__((swift_name("shouldBeBetween(_:lower:upper:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PairsKt")))
@interface SharedPairsKt : SharedBase
+ (id<SharedMatcher>)haveFirstA:(id _Nullable)a __attribute__((swift_name("haveFirst(a:)")));
+ (id<SharedMatcher>)haveSecondB:(id _Nullable)b __attribute__((swift_name("haveSecond(b:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TriplesKt")))
@interface SharedTriplesKt : SharedBase
+ (id<SharedMatcher>)haveTripleFirstA:(id _Nullable)a __attribute__((swift_name("haveTripleFirst(a:)")));
+ (id<SharedMatcher>)haveTripleSecondB:(id _Nullable)b __attribute__((swift_name("haveTripleSecond(b:)")));
+ (id<SharedMatcher>)haveTripleThirdC:(id _Nullable)c __attribute__((swift_name("haveTripleThird(c:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("NaNKt")))
@interface SharedNaNKt : SharedBase
+ (id<SharedMatcher>)beNaN __attribute__((swift_name("beNaN()")));
+ (float)shouldBeNaN:(float)receiver __attribute__((swift_name("shouldBeNaN(_:)")));
+ (float)shouldNotBeNaN:(float)receiver __attribute__((swift_name("shouldNotBeNaN(_:)")));
+ (id<SharedMatcher>)beNaN_ __attribute__((swift_name("beNaN_()")));
+ (double)shouldBeNaN_:(double)receiver __attribute__((swift_name("shouldBeNaN(__:)")));
+ (double)shouldNotBeNaN_:(double)receiver __attribute__((swift_name("shouldNotBeNaN(__:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("BetweenKt")))
@interface SharedBetweenKt : SharedBase
+ (id<SharedMatcher>)betweenA:(float)a b:(float)b tolerance:(float)tolerance __attribute__((swift_name("between(a:b:tolerance:)")));
+ (float)shouldBeBetween:(float)receiver a:(float)a b:(float)b tolerance:(float)tolerance __attribute__((swift_name("shouldBeBetween(_:a:b:tolerance:)")));
+ (float)shouldNotBeBetween:(float)receiver a:(float)a b:(float)b tolerance:(float)tolerance __attribute__((swift_name("shouldNotBeBetween(_:a:b:tolerance:)")));
+ (id<SharedMatcher>)betweenA:(double)a b:(double)b tolerance_:(double)tolerance __attribute__((swift_name("between(a:b:tolerance_:)")));
+ (double)shouldBeBetween:(double)receiver a:(double)a b:(double)b tolerance_:(double)tolerance __attribute__((swift_name("shouldBeBetween(_:a:b:tolerance_:)")));
+ (double)shouldNotBeBetween:(double)receiver a:(double)a b:(double)b tolerance_:(double)tolerance __attribute__((swift_name("shouldNotBeBetween(_:a:b:tolerance_:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FloatMatchersKt")))
@interface SharedFloatMatchersKt : SharedBase
+ (SharedFloatToleranceMatcher *)plusOrMinus:(float)receiver tolerance:(float)tolerance __attribute__((swift_name("plusOrMinus(_:tolerance:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TfKt")))
@interface SharedTfKt : SharedBase
+ (id<SharedMatcher>)beFalsy __attribute__((swift_name("beFalsy()")));
+ (id<SharedMatcher>)beTruthy __attribute__((swift_name("beTruthy()")));
+ (id)shouldBeFalsy:(id _Nullable)receiver __attribute__((swift_name("shouldBeFalsy(_:)")));
+ (id)shouldBeTruthy:(id _Nullable)receiver __attribute__((swift_name("shouldBeTruthy(_:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CaseKt")))
@interface SharedCaseKt : SharedBase
+ (id<SharedMatcher>)beLowerCase __attribute__((swift_name("beLowerCase()")));
+ (id<SharedMatcher>)beUpperCase __attribute__((swift_name("beUpperCase()")));
+ (id _Nullable)shouldBeLowerCase:(id _Nullable)receiver __attribute__((swift_name("shouldBeLowerCase(_:)")));
+ (id)shouldBeUpperCase:(id _Nullable)receiver __attribute__((swift_name("shouldBeUpperCase(_:)")));
+ (id _Nullable)shouldNotBeLowerCase:(id _Nullable)receiver __attribute__((swift_name("shouldNotBeLowerCase(_:)")));
+ (id)shouldNotBeUpperCase:(id _Nullable)receiver __attribute__((swift_name("shouldNotBeUpperCase(_:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("EndKt")))
@interface SharedEndKt : SharedBase
+ (id<SharedMatcher>)endWithSuffix:(id)suffix __attribute__((swift_name("endWith(suffix:)")));
+ (id)shouldEndWith:(id _Nullable)receiver suffix:(id)suffix __attribute__((swift_name("shouldEndWith(_:suffix:)")));
+ (id)shouldNotEndWith:(id _Nullable)receiver suffix:(id)suffix __attribute__((swift_name("shouldNotEndWith(_:suffix:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LengthsKt")))
@interface SharedLengthsKt : SharedBase
+ (id<SharedMatcher>)haveLengthLength:(int32_t)length __attribute__((swift_name("haveLength(length:)")));
+ (id<SharedMatcher>)haveLengthBetweenMin:(int32_t)min max:(int32_t)max __attribute__((swift_name("haveLengthBetween(min:max:)")));
+ (id<SharedMatcher>)haveLengthInRange:(SharedKotlinIntRange *)range __attribute__((swift_name("haveLengthIn(range:)")));
+ (id<SharedMatcher>)haveMaxLengthLength:(int32_t)length __attribute__((swift_name("haveMaxLength(length:)")));
+ (id<SharedMatcher>)haveMinLengthLength:(int32_t)length __attribute__((swift_name("haveMinLength(length:)")));
+ (id<SharedMatcher>)haveSameLengthAsOther:(id _Nullable)other __attribute__((swift_name("haveSameLengthAs(other:)")));
+ (id<SharedMatcher>)strlenLength:(int32_t)length __attribute__((swift_name("strlen(length:)")));
+ (id)shouldHaveLength:(id _Nullable)receiver length:(int32_t)length __attribute__((swift_name("shouldHaveLength(_:length:)")));
+ (id)shouldHaveLengthBetween:(id _Nullable)receiver min:(int32_t)min max:(int32_t)max __attribute__((swift_name("shouldHaveLengthBetween(_:min:max:)")));
+ (id)shouldHaveLengthBetween:(id _Nullable)receiver range:(SharedKotlinIntRange *)range __attribute__((swift_name("shouldHaveLengthBetween(_:range:)")));
+ (id)shouldHaveLengthIn:(id _Nullable)receiver range:(SharedKotlinIntRange *)range __attribute__((swift_name("shouldHaveLengthIn(_:range:)")));
+ (id)shouldHaveMaxLength:(id _Nullable)receiver length:(int32_t)length __attribute__((swift_name("shouldHaveMaxLength(_:length:)")));
+ (id)shouldHaveMinLength:(id _Nullable)receiver length:(int32_t)length __attribute__((swift_name("shouldHaveMinLength(_:length:)")));
+ (id)shouldHaveSameLengthAs:(id _Nullable)receiver other:(NSString *)other __attribute__((swift_name("shouldHaveSameLengthAs(_:other:)")));
+ (id)shouldNotHaveLength:(id _Nullable)receiver length:(int32_t)length __attribute__((swift_name("shouldNotHaveLength(_:length:)")));
+ (id)shouldNotHaveLengthBetween:(id _Nullable)receiver min:(int32_t)min max:(int32_t)max __attribute__((swift_name("shouldNotHaveLengthBetween(_:min:max:)")));
+ (id)shouldNotHaveLengthBetween:(id _Nullable)receiver range:(SharedKotlinIntRange *)range __attribute__((swift_name("shouldNotHaveLengthBetween(_:range:)")));
+ (id)shouldNotHaveLengthIn:(id _Nullable)receiver range:(SharedKotlinIntRange *)range __attribute__((swift_name("shouldNotHaveLengthIn(_:range:)")));
+ (id)shouldNotHaveMaxLength:(id _Nullable)receiver length:(int32_t)length __attribute__((swift_name("shouldNotHaveMaxLength(_:length:)")));
+ (id)shouldNotHaveMinLength:(id _Nullable)receiver length:(int32_t)length __attribute__((swift_name("shouldNotHaveMinLength(_:length:)")));
+ (id)shouldNotHaveSameLengthAs:(id _Nullable)receiver other:(NSString *)other __attribute__((swift_name("shouldNotHaveSameLengthAs(_:other:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LinesKt")))
@interface SharedLinesKt : SharedBase
+ (id<SharedMatcher>)haveLineCountCount:(int32_t)count __attribute__((swift_name("haveLineCount(count:)")));
+ (id)shouldBeSingleLine:(id _Nullable)receiver __attribute__((swift_name("shouldBeSingleLine(_:)")));
+ (id)shouldHaveLineCount:(id _Nullable)receiver count:(int32_t)count __attribute__((swift_name("shouldHaveLineCount(_:count:)")));
+ (id)shouldNotBeSingleLine:(id _Nullable)receiver __attribute__((swift_name("shouldNotBeSingleLine(_:)")));
+ (id)shouldNotHaveLineCount:(id _Nullable)receiver count:(int32_t)count __attribute__((swift_name("shouldNotHaveLineCount(_:count:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StringMatchersKt")))
@interface SharedStringMatchersKt : SharedBase
+ (id<SharedMatcher>)haveSubstringSubstr:(NSString *)substr __attribute__((swift_name("haveSubstring(substr:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MatchKt")))
@interface SharedMatchKt : SharedBase
+ (id<SharedMatcher>)matchRegex:(id)regex __attribute__((swift_name("match(regex:)")));
+ (id<SharedMatcher>)matchRegex_:(SharedKotlinRegex *)regex __attribute__((swift_name("match(regex_:)")));
+ (id)shouldMatch:(id _Nullable)receiver regex:(NSString *)regex __attribute__((swift_name("shouldMatch(_:regex:)")));
+ (id)shouldMatch:(id _Nullable)receiver regex_:(SharedKotlinRegex *)regex __attribute__((swift_name("shouldMatch(_:regex_:)")));
+ (id)shouldNotMatch:(id _Nullable)receiver regex:(NSString *)regex __attribute__((swift_name("shouldNotMatch(_:regex:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StartKt")))
@interface SharedStartKt : SharedBase
+ (id<SharedMatcher>)startWithPrefix:(id)prefix __attribute__((swift_name("startWith(prefix:)")));
+ (id _Nullable)shouldNotStartWith:(id _Nullable)receiver prefix:(id)prefix __attribute__((swift_name("shouldNotStartWith(_:prefix:)")));
+ (id _Nullable)shouldStartWith:(id _Nullable)receiver prefix:(id)prefix __attribute__((swift_name("shouldStartWith(_:prefix:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ToleranceKt")))
@interface SharedToleranceKt : SharedBase
+ (SharedPercentage *)percent:(double)receiver __attribute__((swift_name("percent(_:)")));
+ (id<SharedMatcher>)beWithinPercentageOfOther:(double)other percentage:(double)percentage __attribute__((swift_name("beWithinPercentageOf(other:percentage:)")));
+ (SharedToleranceMatcher *)plusOrMinus:(double)receiver tolerance:(SharedPercentage *)tolerance __attribute__((swift_name("plusOrMinus(_:tolerance:)")));
+ (SharedToleranceMatcher *)plusOrMinus:(double)receiver tolerance_:(double)tolerance __attribute__((swift_name("plusOrMinus(_:tolerance_:)")));
+ (void)shouldBeWithinPercentageOf:(double)receiver other:(double)other percentage:(double)percentage __attribute__((swift_name("shouldBeWithinPercentageOf(_:other:percentage:)")));
+ (void)shouldNotBeWithinPercentageOf:(double)receiver other:(double)other percentage:(double)percentage __attribute__((swift_name("shouldNotBeWithinPercentageOf(_:other:percentage:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GreaterThanKt")))
@interface SharedGreaterThanKt : SharedBase
+ (id<SharedMatcher>)beGreaterThanX:(double)x __attribute__((swift_name("beGreaterThan(x:)")));
+ (id<SharedMatcher>)gtX:(double)x __attribute__((swift_name("gt(x:)")));
+ (double)shouldBeGreaterThan:(double)receiver x:(double)x __attribute__((swift_name("shouldBeGreaterThan(_:x:)")));
+ (double)shouldNotBeGreaterThan:(double)receiver x:(double)x __attribute__((swift_name("shouldNotBeGreaterThan(_:x:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GreaterThanOrEqualKt")))
@interface SharedGreaterThanOrEqualKt : SharedBase
+ (id<SharedMatcher>)beGreaterThanOrEqualToX:(double)x __attribute__((swift_name("beGreaterThanOrEqualTo(x:)")));
+ (id<SharedMatcher>)gteX:(double)x __attribute__((swift_name("gte(x:)")));
+ (double)shouldBeGreaterThanOrEqual:(double)receiver x:(double)x __attribute__((swift_name("shouldBeGreaterThanOrEqual(_:x:)")));
+ (double)shouldNotBeGreaterThanOrEqual:(double)receiver x:(double)x __attribute__((swift_name("shouldNotBeGreaterThanOrEqual(_:x:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LessThanKt")))
@interface SharedLessThanKt : SharedBase
+ (id<SharedMatcher>)beLessThanX:(double)x __attribute__((swift_name("beLessThan(x:)")));
+ (id<SharedMatcher>)ltX:(double)x __attribute__((swift_name("lt(x:)")));
+ (double)shouldBeLessThan:(double)receiver x:(double)x __attribute__((swift_name("shouldBeLessThan(_:x:)")));
+ (double)shouldNotBeLessThan:(double)receiver x:(double)x __attribute__((swift_name("shouldNotBeLessThan(_:x:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LessThanOrEqualKt")))
@interface SharedLessThanOrEqualKt : SharedBase
+ (id<SharedMatcher>)beLessThanOrEqualToX:(double)x __attribute__((swift_name("beLessThanOrEqualTo(x:)")));
+ (id<SharedMatcher>)lteX:(double)x __attribute__((swift_name("lte(x:)")));
+ (double)shouldBeLessThanOrEqual:(double)receiver x:(double)x __attribute__((swift_name("shouldBeLessThanOrEqual(_:x:)")));
+ (double)shouldNotBeLessThanOrEqual:(double)receiver x:(double)x __attribute__((swift_name("shouldNotBeLessThanOrEqual(_:x:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("InfinityKt")))
@interface SharedInfinityKt : SharedBase
+ (id<SharedMatcher>)beNegativeInfinity __attribute__((swift_name("beNegativeInfinity()")));
+ (id<SharedMatcher>)bePositiveInfinity __attribute__((swift_name("bePositiveInfinity()")));
+ (double)shouldBeNegativeInfinity:(double)receiver __attribute__((swift_name("shouldBeNegativeInfinity(_:)")));
+ (double)shouldBePositiveInfinity:(double)receiver __attribute__((swift_name("shouldBePositiveInfinity(_:)")));
+ (double)shouldNotBeNegativeInfinity:(double)receiver __attribute__((swift_name("shouldNotBeNegativeInfinity(_:)")));
+ (double)shouldNotBePositiveInfinity:(double)receiver __attribute__((swift_name("shouldNotBePositiveInfinity(_:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ExactlyKt")))
@interface SharedExactlyKt : SharedBase
+ (id<SharedMatcher>)exactlyD:(double)d __attribute__((swift_name("exactly(d:)")));
+ (double)shouldBeExactly:(double)receiver other:(double)other __attribute__((swift_name("shouldBeExactly(_:other:)")));
+ (double)shouldNotBeExactly:(double)receiver other:(double)other __attribute__((swift_name("shouldNotBeExactly(_:other:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("NegativeKt")))
@interface SharedNegativeKt : SharedBase
+ (id<SharedMatcher>)negative __attribute__((swift_name("negative()")));
+ (double)shouldBeNegative:(double)receiver __attribute__((swift_name("shouldBeNegative(_:)")));
+ (double)shouldNotBeNegative:(double)receiver __attribute__((swift_name("shouldNotBeNegative(_:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PositiveKt")))
@interface SharedPositiveKt : SharedBase
+ (id<SharedMatcher>)positive __attribute__((swift_name("positive()")));
+ (double)shouldBePositive:(double)receiver __attribute__((swift_name("shouldBePositive(_:)")));
+ (double)shouldNotBePositive:(double)receiver __attribute__((swift_name("shouldNotBePositive(_:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ZeroKt")))
@interface SharedZeroKt : SharedBase
+ (double)shouldBeZero:(double)receiver __attribute__((swift_name("shouldBeZero(_:)")));
+ (double)shouldNotBeZero:(double)receiver __attribute__((swift_name("shouldNotBeZero(_:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ShortKt")))
@interface SharedShortKt : SharedBase
+ (id<SharedMatcher>)betweenLower:(int16_t)lower upper:(int16_t)upper __attribute__((swift_name("between(lower:upper:)")));
+ (int16_t)shouldBeBetween:(int16_t)receiver lower:(int16_t)lower upper:(int16_t)upper __attribute__((swift_name("shouldBeBetween(_:lower:upper:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("UshortKt")))
@interface SharedUshortKt : SharedBase
+ (id<SharedMatcher>)betweenLower:(uint16_t)lower upper:(uint16_t)upper __attribute__((swift_name("between(lower:upper:)")));
+ (uint16_t)shouldBeBetween:(uint16_t)receiver lower:(uint16_t)lower upper:(uint16_t)upper __attribute__((swift_name("shouldBeBetween(_:lower:upper:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MapMatchersKt")))
@interface SharedMapMatchersKt : SharedBase
+ (id<SharedMatcher>)containKey:(id _Nullable)key v:(id _Nullable)v __attribute__((swift_name("contain(key:v:)")));
+ (id<SharedMatcher>)containAllExpected:(NSDictionary<id, id> *)expected __attribute__((swift_name("containAll(expected:)")));
+ (id<SharedMatcher>)containAnyKeysKeys:(SharedKotlinArray<id> *)keys __attribute__((swift_name("containAnyKeys(keys:)")));
+ (id<SharedMatcher>)containAnyValuesValues:(SharedKotlinArray<id> *)values __attribute__((swift_name("containAnyValues(values:)")));
+ (id<SharedMatcher>)containExactlyExpected:(NSDictionary<id, id> *)expected __attribute__((swift_name("containExactly(expected:)")));
+ (id<SharedMatcher>)haveKeyKey:(id _Nullable)key __attribute__((swift_name("haveKey(key:)")));
+ (id<SharedMatcher>)haveKeysKeys:(SharedKotlinArray<id> *)keys __attribute__((swift_name("haveKeys(keys:)")));
+ (id<SharedMatcher>)haveSizeSize:(int32_t)size __attribute__((swift_name("haveSize(size:)")));
+ (id<SharedMatcher>)haveValueV:(id _Nullable)v __attribute__((swift_name("haveValue(v:)")));
+ (id<SharedMatcher>)haveValuesValues:(SharedKotlinArray<id> *)values __attribute__((swift_name("haveValues(values:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IteratorMatchersKt")))
@interface SharedIteratorMatchersKt : SharedBase
+ (id<SharedMatcher>)beEmpty __attribute__((swift_name("beEmpty()")));
+ (void)shouldBeEmpty:(id<SharedKotlinIterator>)receiver __attribute__((swift_name("shouldBeEmpty(_:)")));
+ (void)shouldHaveNext:(id<SharedKotlinIterator>)receiver __attribute__((swift_name("shouldHaveNext(_:)")));
+ (void)shouldNotBeEmpty:(id<SharedKotlinIterator>)receiver __attribute__((swift_name("shouldNotBeEmpty(_:)")));
+ (void)shouldNotHaveNext:(id<SharedKotlinIterator>)receiver __attribute__((swift_name("shouldNotHaveNext(_:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CharMatchersKt")))
@interface SharedCharMatchersKt : SharedBase
+ (id<SharedMatcher>)beEqualIgnoreCaseOther:(unichar)other __attribute__((swift_name("beEqualIgnoreCase(other:)")));
+ (id<SharedMatcher>)beInRangeRange:(SharedKotlinCharRange *)range __attribute__((swift_name("beInRange(range:)")));
+ (id<SharedMatcher>)betweenFrom:(unichar)from to:(unichar)to __attribute__((swift_name("between(from:to:)")));
+ (unichar)shouldBeBetween:(unichar)receiver from:(unichar)from to:(unichar)to __attribute__((swift_name("shouldBeBetween(_:from:to:)")));
+ (unichar)shouldBeEqualToIgnoreCase:(unichar)receiver other:(unichar)other __attribute__((swift_name("shouldBeEqualToIgnoreCase(_:other:)")));
+ (unichar)shouldBeInRange:(unichar)receiver range:(SharedKotlinCharRange *)range __attribute__((swift_name("shouldBeInRange(_:range:)")));
+ (unichar)shouldNotBeBetween:(unichar)receiver from:(unichar)from to:(unichar)to __attribute__((swift_name("shouldNotBeBetween(_:from:to:)")));
+ (unichar)shouldNotBeEqualToIgnoreCase:(unichar)receiver other:(unichar)other __attribute__((swift_name("shouldNotBeEqualToIgnoreCase(_:other:)")));
+ (unichar)shouldNotBeInRange:(unichar)receiver range:(SharedKotlinCharRange *)range __attribute__((swift_name("shouldNotBeInRange(_:range:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("RegexMatchersKt")))
@interface SharedRegexMatchersKt : SharedBase
+ (id<SharedMatcher>)areEqualRegexMatcherRegex:(SharedKotlinRegex *)regex __attribute__((swift_name("areEqualRegexMatcher(regex:)")));
+ (id<SharedMatcher>)beRegexRegex:(SharedKotlinRegex *)regex __attribute__((swift_name("beRegex(regex:)")));
+ (id<SharedMatcher>)haveExactOptionsOptions:(NSSet<SharedKotlinRegexOption *> *)options __attribute__((swift_name("haveExactOptions(options:)")));
+ (id<SharedMatcher>)havePatternPattern:(NSString *)pattern __attribute__((swift_name("havePattern(pattern:)")));
+ (id<SharedMatcher>)haveRegexOptionMatcherOptions:(NSSet<SharedKotlinRegexOption *> *)options __attribute__((swift_name("haveRegexOptionMatcher(options:)")));
+ (id<SharedMatcher>)haveRegexOptionMatcherOption:(SharedKotlinRegexOption *)option __attribute__((swift_name("haveRegexOptionMatcher(option:)")));
+ (id<SharedMatcher>)haveSamePatternMatcherPattern:(NSString *)pattern __attribute__((swift_name("haveSamePatternMatcher(pattern:)")));
+ (id<SharedMatcher>)haveSameRegexOptionsMatcherOptions:(NSSet<SharedKotlinRegexOption *> *)options __attribute__((swift_name("haveSameRegexOptionsMatcher(options:)")));
+ (id<SharedMatcher>)includeOptionOption:(SharedKotlinRegexOption *)option __attribute__((swift_name("includeOption(option:)")));
+ (id<SharedMatcher>)includeOptionsOptions:(NSSet<SharedKotlinRegexOption *> *)options __attribute__((swift_name("includeOptions(options:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LongMatchersKt")))
@interface SharedLongMatchersKt : SharedBase
+ (id<SharedMatcher>)beGreaterThanX:(int64_t)x __attribute__((swift_name("beGreaterThan(x:)")));
+ (id<SharedMatcher>)beGreaterThanOrEqualToX:(int64_t)x __attribute__((swift_name("beGreaterThanOrEqualTo(x:)")));
+ (id<SharedMatcher>)beInRangeRange:(SharedKotlinLongRange *)range __attribute__((swift_name("beInRange(range:)")));
+ (id<SharedMatcher>)beLessThanX:(int64_t)x __attribute__((swift_name("beLessThan(x:)")));
+ (id<SharedMatcher>)beLessThanOrEqualToX:(int64_t)x __attribute__((swift_name("beLessThanOrEqualTo(x:)")));
+ (id<SharedMatcher>)beWithinPercentageOfOther:(int64_t)other percentage:(double)percentage __attribute__((swift_name("beWithinPercentageOf(other:percentage:)")));
+ (id<SharedMatcher>)exactlyX:(int64_t)x __attribute__((swift_name("exactly(x:)")));
+ (id<SharedMatcher>)gtX:(int64_t)x __attribute__((swift_name("gt(x:)")));
+ (id<SharedMatcher>)gteX:(int64_t)x __attribute__((swift_name("gte(x:)")));
+ (id<SharedMatcher>)ltX:(int64_t)x __attribute__((swift_name("lt(x:)")));
+ (id<SharedMatcher>)lteX:(int64_t)x __attribute__((swift_name("lte(x:)")));
+ (void)shouldBeInRange:(int64_t)receiver range:(SharedKotlinLongRange *)range __attribute__((swift_name("shouldBeInRange(_:range:)")));
+ (void)shouldBeWithinPercentageOf:(int64_t)receiver other:(int64_t)other percentage:(double)percentage __attribute__((swift_name("shouldBeWithinPercentageOf(_:other:percentage:)")));
+ (void)shouldNotBeInRange:(int64_t)receiver range:(SharedKotlinLongRange *)range __attribute__((swift_name("shouldNotBeInRange(_:range:)")));
+ (void)shouldNotBeWithinPercentageOf:(int64_t)receiver other:(int64_t)other percentage:(double)percentage __attribute__((swift_name("shouldNotBeWithinPercentageOf(_:other:percentage:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("BetweenKt_")))
@interface SharedBetweenKt_ : SharedBase
+ (id<SharedMatcher>)betweenA:(int64_t)a b:(int64_t)b __attribute__((swift_name("between(a:b:)")));
+ (int64_t)shouldBeBetween:(int64_t)receiver a:(int64_t)a b:(int64_t)b __attribute__((swift_name("shouldBeBetween(_:a:b:)")));
+ (int64_t)shouldNotBeBetween:(int64_t)receiver a:(int64_t)a b:(int64_t)b __attribute__((swift_name("shouldNotBeBetween(_:a:b:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("UlongKt")))
@interface SharedUlongKt : SharedBase
+ (id<SharedMatcher>)betweenLower:(uint64_t)lower upper:(uint64_t)upper __attribute__((swift_name("between(lower:upper:)")));
+ (uint64_t)shouldBeBetween:(uint64_t)receiver lower:(uint64_t)lower upper:(uint64_t)upper __attribute__((swift_name("shouldBeBetween(_:lower:upper:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LongKt")))
@interface SharedLongKt : SharedBase
+ (id<SharedMatcher>)lbeEven __attribute__((swift_name("lbeEven()")));
+ (id<SharedMatcher>)lbeOdd __attribute__((swift_name("lbeOdd()")));
+ (id<SharedMatcher>)negativeL __attribute__((swift_name("negativeL()")));
+ (id<SharedMatcher>)positiveL __attribute__((swift_name("positiveL()")));
+ (int64_t)shouldBeEven:(int64_t)receiver __attribute__((swift_name("shouldBeEven(_:)")));
+ (int64_t)shouldBeExactly:(int64_t)receiver x:(int64_t)x __attribute__((swift_name("shouldBeExactly(_:x:)")));
+ (int64_t)shouldBeGreaterThan:(int64_t)receiver x:(int64_t)x __attribute__((swift_name("shouldBeGreaterThan(_:x:)")));
+ (int64_t)shouldBeGreaterThanOrEqual:(int64_t)receiver x:(int64_t)x __attribute__((swift_name("shouldBeGreaterThanOrEqual(_:x:)")));
+ (int64_t)shouldBeLessThan:(int64_t)receiver x:(int64_t)x __attribute__((swift_name("shouldBeLessThan(_:x:)")));
+ (int64_t)shouldBeLessThanOrEqual:(int64_t)receiver x:(int64_t)x __attribute__((swift_name("shouldBeLessThanOrEqual(_:x:)")));
+ (int64_t)shouldBeNegative:(int64_t)receiver __attribute__((swift_name("shouldBeNegative(_:)")));
+ (int64_t)shouldBeOdd:(int64_t)receiver __attribute__((swift_name("shouldBeOdd(_:)")));
+ (int64_t)shouldBePositive:(int64_t)receiver __attribute__((swift_name("shouldBePositive(_:)")));
+ (int64_t)shouldBeZero:(int64_t)receiver __attribute__((swift_name("shouldBeZero(_:)")));
+ (int64_t)shouldNotBeEven:(int64_t)receiver __attribute__((swift_name("shouldNotBeEven(_:)")));
+ (int64_t)shouldNotBeExactly:(int64_t)receiver x:(int64_t)x __attribute__((swift_name("shouldNotBeExactly(_:x:)")));
+ (int64_t)shouldNotBeGreaterThan:(int64_t)receiver x:(int64_t)x __attribute__((swift_name("shouldNotBeGreaterThan(_:x:)")));
+ (int64_t)shouldNotBeGreaterThanOrEqual:(int64_t)receiver x:(int64_t)x __attribute__((swift_name("shouldNotBeGreaterThanOrEqual(_:x:)")));
+ (int64_t)shouldNotBeLessThan:(int64_t)receiver x:(int64_t)x __attribute__((swift_name("shouldNotBeLessThan(_:x:)")));
+ (int64_t)shouldNotBeLessThanOrEqual:(int64_t)receiver x:(int64_t)x __attribute__((swift_name("shouldNotBeLessThanOrEqual(_:x:)")));
+ (int64_t)shouldNotBeOdd:(int64_t)receiver __attribute__((swift_name("shouldNotBeOdd(_:)")));
+ (int64_t)shouldNotBeZero:(int64_t)receiver __attribute__((swift_name("shouldNotBeZero(_:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SizeKt")))
@interface SharedSizeKt : SharedBase
+ (id<SharedMatcher>)atLeastSizeN:(int32_t)n __attribute__((swift_name("atLeastSize(n:)")));
+ (id<SharedMatcher>)atMostSizeN:(int32_t)n __attribute__((swift_name("atMostSize(n:)")));
+ (id<SharedMatcher>)beSameSizeAsOther:(id)other __attribute__((swift_name("beSameSizeAs(other:)")));
+ (id<SharedMatcher>)haveSizeMatcherSize:(int32_t)size __attribute__((swift_name("haveSizeMatcher(size:)")));
+ (id)shouldBeSameSizeAs:(id)receiver other:(id)other __attribute__((swift_name("shouldBeSameSizeAs(_:other:)")));
+ (id)shouldBeSameSizeAs:(id)receiver other_:(id)other __attribute__((swift_name("shouldBeSameSizeAs(_:other_:)")));
+ (id)shouldBeSameSizeAs:(id)receiver other__:(id)other __attribute__((swift_name("shouldBeSameSizeAs(_:other__:)")));
+ (id)shouldHaveAtLeastSize:(id)receiver n:(int32_t)n __attribute__((swift_name("shouldHaveAtLeastSize(_:n:)")));
+ (id)shouldHaveAtLeastSize:(id)receiver n_:(int32_t)n __attribute__((swift_name("shouldHaveAtLeastSize(_:n_:)")));
+ (id)shouldHaveAtMostSize:(id)receiver n:(int32_t)n __attribute__((swift_name("shouldHaveAtMostSize(_:n:)")));
+ (id)shouldHaveAtMostSize:(id)receiver n_:(int32_t)n __attribute__((swift_name("shouldHaveAtMostSize(_:n_:)")));
+ (id)shouldHaveSize:(id)receiver size:(int32_t)size __attribute__((swift_name("shouldHaveSize(_:size:)")));
+ (id)shouldHaveSize:(id)receiver size_:(int32_t)size __attribute__((swift_name("shouldHaveSize(_:size_:)")));
+ (id)shouldNotHaveSize:(id)receiver size:(int32_t)size __attribute__((swift_name("shouldNotHaveSize(_:size:)")));
+ (id)shouldNotHaveSize:(id)receiver size_:(int32_t)size __attribute__((swift_name("shouldNotHaveSize(_:size_:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("EmptyKt")))
@interface SharedEmptyKt : SharedBase
+ (id<SharedMatcher>)beEmpty __attribute__((swift_name("beEmpty()")));
+ (id<SharedMatcher>)beEmptyArray __attribute__((swift_name("beEmptyArray()")));
+ (id)shouldBeEmpty:(id _Nullable)receiver __attribute__((swift_name("shouldBeEmpty(_:)")));
+ (id)shouldBeEmpty_:(id _Nullable)receiver __attribute__((swift_name("shouldBeEmpty(__:)")));
+ (id)shouldNotBeEmpty:(id _Nullable)receiver __attribute__((swift_name("shouldNotBeEmpty(_:)")));
+ (id)shouldNotBeEmpty_:(id _Nullable)receiver __attribute__((swift_name("shouldNotBeEmpty(__:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("BeinKt")))
@interface SharedBeinKt : SharedBase
+ (id<SharedMatcher>)beInCollection:(id)collection __attribute__((swift_name("beIn(collection:)")));
+ (id _Nullable)shouldBeIn:(id _Nullable)receiver array:(SharedKotlinArray<id> *)array __attribute__((swift_name("shouldBeIn(_:array:)")));
+ (id _Nullable)shouldBeIn:(id _Nullable)receiver any:(SharedKotlinArray<id> *)any __attribute__((swift_name("shouldBeIn(_:any:)")));
+ (id _Nullable)shouldBeIn:(id _Nullable)receiver collection:(id)collection __attribute__((swift_name("shouldBeIn(_:collection:)")));
+ (id _Nullable)shouldNotBeIn:(id _Nullable)receiver array:(SharedKotlinArray<id> *)array __attribute__((swift_name("shouldNotBeIn(_:array:)")));
+ (id _Nullable)shouldNotBeIn:(id _Nullable)receiver any:(SharedKotlinArray<id> *)any __attribute__((swift_name("shouldNotBeIn(_:any:)")));
+ (id _Nullable)shouldNotBeIn:(id _Nullable)receiver collection:(id)collection __attribute__((swift_name("shouldNotBeIn(_:collection:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LargerKt")))
@interface SharedLargerKt : SharedBase
+ (id<SharedMatcher>)beLargerThanOther:(id)other __attribute__((swift_name("beLargerThan(other:)")));
+ (id)shouldBeLargerThan:(id)receiver other:(id)other __attribute__((swift_name("shouldBeLargerThan(_:other:)")));
+ (id)shouldBeLargerThan:(id)receiver other_:(id)other __attribute__((swift_name("shouldBeLargerThan(_:other_:)")));
+ (id)shouldBeLargerThan:(id)receiver other__:(id)other __attribute__((swift_name("shouldBeLargerThan(_:other__:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DecreasingKt")))
@interface SharedDecreasingKt : SharedBase
+ (id<SharedMatcher>)beMonotonicallyDecreasing __attribute__((swift_name("beMonotonicallyDecreasing()")));
+ (id<SharedMatcher>)beMonotonicallyDecreasingWithComparator:(id<SharedKotlinComparator>)comparator __attribute__((swift_name("beMonotonicallyDecreasingWith(comparator:)")));
+ (id<SharedMatcher>)beStrictlyDecreasing __attribute__((swift_name("beStrictlyDecreasing()")));
+ (id<SharedMatcher>)beStrictlyDecreasingWithComparator:(id<SharedKotlinComparator>)comparator __attribute__((swift_name("beStrictlyDecreasingWith(comparator:)")));
+ (id<SharedMatcher>)monotonicallyDecreasing __attribute__((swift_name("monotonicallyDecreasing()")));
+ (id<SharedMatcher>)monotonicallyDecreasingWithComparator:(id<SharedKotlinComparator>)comparator __attribute__((swift_name("monotonicallyDecreasingWith(comparator:)")));
+ (id<SharedMatcher>)strictlyDecreasing __attribute__((swift_name("strictlyDecreasing()")));
+ (id<SharedMatcher>)strictlyDecreasingWithComparator:(id<SharedKotlinComparator>)comparator __attribute__((swift_name("strictlyDecreasingWith(comparator:)")));
+ (id)shouldBeMonotonicallyDecreasing:(id)receiver __attribute__((swift_name("shouldBeMonotonicallyDecreasing(_:)")));
+ (NSArray<id> *)shouldBeMonotonicallyDecreasing_:(NSArray<id> *)receiver __attribute__((swift_name("shouldBeMonotonicallyDecreasing(__:)")));
+ (id)shouldBeMonotonicallyDecreasingWith:(id)receiver comparator:(id<SharedKotlinComparator>)comparator __attribute__((swift_name("shouldBeMonotonicallyDecreasingWith(_:comparator:)")));
+ (NSArray<id> *)shouldBeMonotonicallyDecreasingWith:(NSArray<id> *)receiver comparator_:(id<SharedKotlinComparator>)comparator __attribute__((swift_name("shouldBeMonotonicallyDecreasingWith(_:comparator_:)")));
+ (void)shouldBeStrictlyDecreasing:(id)receiver __attribute__((swift_name("shouldBeStrictlyDecreasing(_:)")));
+ (void)shouldBeStrictlyDecreasing_:(NSArray<id> *)receiver __attribute__((swift_name("shouldBeStrictlyDecreasing(__:)")));
+ (void)shouldBeStrictlyDecreasingWith:(id)receiver comparator:(id<SharedKotlinComparator>)comparator __attribute__((swift_name("shouldBeStrictlyDecreasingWith(_:comparator:)")));
+ (void)shouldBeStrictlyDecreasingWith:(NSArray<id> *)receiver comparator_:(id<SharedKotlinComparator>)comparator __attribute__((swift_name("shouldBeStrictlyDecreasingWith(_:comparator_:)")));
+ (id)shouldNotBeMonotonicallyDecreasing:(id)receiver __attribute__((swift_name("shouldNotBeMonotonicallyDecreasing(_:)")));
+ (NSArray<id> *)shouldNotBeMonotonicallyDecreasing_:(NSArray<id> *)receiver __attribute__((swift_name("shouldNotBeMonotonicallyDecreasing(__:)")));
+ (id)shouldNotBeMonotonicallyDecreasingWith:(id)receiver comparator:(id<SharedKotlinComparator>)comparator __attribute__((swift_name("shouldNotBeMonotonicallyDecreasingWith(_:comparator:)")));
+ (NSArray<id> *)shouldNotBeMonotonicallyDecreasingWith:(NSArray<id> *)receiver comparator_:(id<SharedKotlinComparator>)comparator __attribute__((swift_name("shouldNotBeMonotonicallyDecreasingWith(_:comparator_:)")));
+ (void)shouldNotBeStrictlyDecreasing:(id)receiver __attribute__((swift_name("shouldNotBeStrictlyDecreasing(_:)")));
+ (void)shouldNotBeStrictlyDecreasing_:(NSArray<id> *)receiver __attribute__((swift_name("shouldNotBeStrictlyDecreasing(__:)")));
+ (void)shouldNotBeStrictlyDecreasingWith:(id)receiver comparator:(id<SharedKotlinComparator>)comparator __attribute__((swift_name("shouldNotBeStrictlyDecreasingWith(_:comparator:)")));
+ (void)shouldNotBeStrictlyDecreasingWith:(NSArray<id> *)receiver comparator_:(id<SharedKotlinComparator>)comparator __attribute__((swift_name("shouldNotBeStrictlyDecreasingWith(_:comparator_:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IncreasingKt")))
@interface SharedIncreasingKt : SharedBase
+ (id<SharedMatcher>)beMonotonicallyIncreasing __attribute__((swift_name("beMonotonicallyIncreasing()")));
+ (id<SharedMatcher>)beMonotonicallyIncreasingWithComparator:(id<SharedKotlinComparator>)comparator __attribute__((swift_name("beMonotonicallyIncreasingWith(comparator:)")));
+ (id<SharedMatcher>)beStrictlyIncreasing __attribute__((swift_name("beStrictlyIncreasing()")));
+ (id<SharedMatcher>)beStrictlyIncreasingWithComparator:(id<SharedKotlinComparator>)comparator __attribute__((swift_name("beStrictlyIncreasingWith(comparator:)")));
+ (id<SharedMatcher>)monotonicallyIncreasing __attribute__((swift_name("monotonicallyIncreasing()")));
+ (id<SharedMatcher>)monotonicallyIncreasingWithComparator:(id<SharedKotlinComparator>)comparator __attribute__((swift_name("monotonicallyIncreasingWith(comparator:)")));
+ (id<SharedMatcher>)strictlyIncreasing __attribute__((swift_name("strictlyIncreasing()")));
+ (id<SharedMatcher>)strictlyIncreasingWithComparator:(id<SharedKotlinComparator>)comparator __attribute__((swift_name("strictlyIncreasingWith(comparator:)")));
+ (id)shouldBeMonotonicallyIncreasing:(id)receiver __attribute__((swift_name("shouldBeMonotonicallyIncreasing(_:)")));
+ (NSArray<id> *)shouldBeMonotonicallyIncreasing_:(NSArray<id> *)receiver __attribute__((swift_name("shouldBeMonotonicallyIncreasing(__:)")));
+ (id)shouldBeMonotonicallyIncreasingWith:(id)receiver comparator:(id<SharedKotlinComparator>)comparator __attribute__((swift_name("shouldBeMonotonicallyIncreasingWith(_:comparator:)")));
+ (NSArray<id> *)shouldBeMonotonicallyIncreasingWith:(NSArray<id> *)receiver comparator_:(id<SharedKotlinComparator>)comparator __attribute__((swift_name("shouldBeMonotonicallyIncreasingWith(_:comparator_:)")));
+ (id)shouldBeStrictlyIncreasing:(id)receiver __attribute__((swift_name("shouldBeStrictlyIncreasing(_:)")));
+ (NSArray<id> *)shouldBeStrictlyIncreasing_:(NSArray<id> *)receiver __attribute__((swift_name("shouldBeStrictlyIncreasing(__:)")));
+ (void)shouldBeStrictlyIncreasingWith:(id)receiver comparator:(id<SharedKotlinComparator>)comparator __attribute__((swift_name("shouldBeStrictlyIncreasingWith(_:comparator:)")));
+ (void)shouldBeStrictlyIncreasingWith:(NSArray<id> *)receiver comparator_:(id<SharedKotlinComparator>)comparator __attribute__((swift_name("shouldBeStrictlyIncreasingWith(_:comparator_:)")));
+ (id)shouldNotBeMonotonicallyIncreasing:(id)receiver __attribute__((swift_name("shouldNotBeMonotonicallyIncreasing(_:)")));
+ (NSArray<id> *)shouldNotBeMonotonicallyIncreasing_:(NSArray<id> *)receiver __attribute__((swift_name("shouldNotBeMonotonicallyIncreasing(__:)")));
+ (id)shouldNotBeMonotonicallyIncreasingWith:(id)receiver comparator:(id<SharedKotlinComparator>)comparator __attribute__((swift_name("shouldNotBeMonotonicallyIncreasingWith(_:comparator:)")));
+ (NSArray<id> *)shouldNotBeMonotonicallyIncreasingWith:(NSArray<id> *)receiver comparator_:(id<SharedKotlinComparator>)comparator __attribute__((swift_name("shouldNotBeMonotonicallyIncreasingWith(_:comparator_:)")));
+ (id)shouldNotBeStrictlyIncreasing:(id)receiver __attribute__((swift_name("shouldNotBeStrictlyIncreasing(_:)")));
+ (NSArray<id> *)shouldNotBeStrictlyIncreasing_:(NSArray<id> *)receiver __attribute__((swift_name("shouldNotBeStrictlyIncreasing(__:)")));
+ (void)shouldNotBeStrictlyIncreasingWith:(id)receiver comparator:(id<SharedKotlinComparator>)comparator __attribute__((swift_name("shouldNotBeStrictlyIncreasingWith(_:comparator:)")));
+ (void)shouldNotBeStrictlyIncreasingWith:(NSArray<id> *)receiver comparator_:(id<SharedKotlinComparator>)comparator __attribute__((swift_name("shouldNotBeStrictlyIncreasingWith(_:comparator_:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("OneofKt")))
@interface SharedOneofKt : SharedBase
+ (id<SharedMatcher>)beOneOfCollection:(id)collection __attribute__((swift_name("beOneOf(collection:)")));
+ (id _Nullable)shouldBeOneOf:(id _Nullable)receiver any:(SharedKotlinArray<id> *)any __attribute__((swift_name("shouldBeOneOf(_:any:)")));
+ (id _Nullable)shouldBeOneOf:(id _Nullable)receiver collection:(id)collection __attribute__((swift_name("shouldBeOneOf(_:collection:)")));
+ (id _Nullable)shouldNotBeOneOf:(id _Nullable)receiver any:(SharedKotlinArray<id> *)any __attribute__((swift_name("shouldNotBeOneOf(_:any:)")));
+ (id _Nullable)shouldNotBeOneOf:(id _Nullable)receiver collection:(id)collection __attribute__((swift_name("shouldNotBeOneOf(_:collection:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SmallerKt")))
@interface SharedSmallerKt : SharedBase
+ (id<SharedMatcher>)beSmallerThanOther:(id)other __attribute__((swift_name("beSmallerThan(other:)")));
+ (id)shouldBeSmallerThan:(id)receiver other:(id)other __attribute__((swift_name("shouldBeSmallerThan(_:other:)")));
+ (id)shouldBeSmallerThan:(id)receiver other_:(id)other __attribute__((swift_name("shouldBeSmallerThan(_:other_:)")));
+ (id)shouldBeSmallerThan:(id)receiver other__:(id)other __attribute__((swift_name("shouldBeSmallerThan(_:other__:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CollectionMatchersKt")))
@interface SharedCollectionMatchersKt : SharedBase
+ (id<SharedMatcher>)beSorted __attribute__((swift_name("beSorted()")));
+ (id<SharedMatcher>)existInOrderPs:(SharedKotlinArray<SharedBoolean *(^)(id _Nullable)> *)ps __attribute__((swift_name("existInOrder(ps:)")));
+ (id<SharedMatcher>)existInOrderPredicates:(NSArray<SharedBoolean *(^)(id _Nullable)> *)predicates __attribute__((swift_name("existInOrder(predicates:)")));
+ (id<SharedMatcher>)haveSizeSize:(int32_t)size __attribute__((swift_name("haveSize(size:)")));
+ (id<SharedMatcher>)singleElementP:(SharedBoolean *(^)(id _Nullable))p __attribute__((swift_name("singleElement(p:)")));
+ (id<SharedMatcher>)singleElementT:(id _Nullable)t __attribute__((swift_name("singleElement(t:)")));
+ (id<SharedMatcher>)sorted __attribute__((swift_name("sorted()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SortedKt")))
@interface SharedSortedKt : SharedBase
+ (id<SharedMatcher>)beSortedWithCmp:(SharedInt *(^)(id _Nullable, id _Nullable))cmp __attribute__((swift_name("beSortedWith(cmp:)")));
+ (id<SharedMatcher>)beSortedWithComparator:(id<SharedKotlinComparator>)comparator __attribute__((swift_name("beSortedWith(comparator:)")));
+ (id<SharedMatcher>)sortedWithCmp:(SharedInt *(^)(id _Nullable, id _Nullable))cmp __attribute__((swift_name("sortedWith(cmp:)")));
+ (id<SharedMatcher>)sortedWithComparator:(id<SharedKotlinComparator>)comparator __attribute__((swift_name("sortedWith(comparator:)")));
+ (id)shouldBeSorted:(id)receiver __attribute__((swift_name("shouldBeSorted(_:)")));
+ (NSArray<id> *)shouldBeSorted_:(NSArray<id> *)receiver __attribute__((swift_name("shouldBeSorted(__:)")));
+ (id)shouldBeSortedWith:(id)receiver cmp:(SharedInt *(^)(id _Nullable, id _Nullable))cmp __attribute__((swift_name("shouldBeSortedWith(_:cmp:)")));
+ (id)shouldBeSortedWith:(id)receiver comparator:(id<SharedKotlinComparator>)comparator __attribute__((swift_name("shouldBeSortedWith(_:comparator:)")));
+ (NSArray<id> *)shouldBeSortedWith:(NSArray<id> *)receiver cmp_:(SharedInt *(^)(id _Nullable, id _Nullable))cmp __attribute__((swift_name("shouldBeSortedWith(_:cmp_:)")));
+ (NSArray<id> *)shouldBeSortedWith:(NSArray<id> *)receiver comparator_:(id<SharedKotlinComparator>)comparator __attribute__((swift_name("shouldBeSortedWith(_:comparator_:)")));
+ (id)shouldNotBeSorted:(id)receiver __attribute__((swift_name("shouldNotBeSorted(_:)")));
+ (NSArray<id> *)shouldNotBeSorted_:(NSArray<id> *)receiver __attribute__((swift_name("shouldNotBeSorted(__:)")));
+ (id)shouldNotBeSortedWith:(id)receiver cmp:(SharedInt *(^)(id _Nullable, id _Nullable))cmp __attribute__((swift_name("shouldNotBeSortedWith(_:cmp:)")));
+ (id)shouldNotBeSortedWith:(id)receiver comparator:(id<SharedKotlinComparator>)comparator __attribute__((swift_name("shouldNotBeSortedWith(_:comparator:)")));
+ (NSArray<id> *)shouldNotBeSortedWith:(NSArray<id> *)receiver cmp_:(SharedInt *(^)(id _Nullable, id _Nullable))cmp __attribute__((swift_name("shouldNotBeSortedWith(_:cmp_:)")));
+ (NSArray<id> *)shouldNotBeSortedWith:(NSArray<id> *)receiver comparator_:(id<SharedKotlinComparator>)comparator __attribute__((swift_name("shouldNotBeSortedWith(_:comparator_:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("UniqueKt")))
@interface SharedUniqueKt : SharedBase
+ (id<SharedMatcher>)beUnique __attribute__((swift_name("beUnique()")));
+ (id)shouldBeUnique:(id)receiver __attribute__((swift_name("shouldBeUnique(_:)")));
+ (id)shouldBeUnique_:(id)receiver __attribute__((swift_name("shouldBeUnique(__:)")));
+ (id)shouldNotBeUnique:(id)receiver __attribute__((swift_name("shouldNotBeUnique(_:)")));
+ (id)shouldNotBeUnique_:(id)receiver __attribute__((swift_name("shouldNotBeUnique(__:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContainKt")))
@interface SharedContainKt : SharedBase
+ (id<SharedMatcher>)containT:(id _Nullable)t __attribute__((swift_name("contain(t:)")));
+ (id)shouldContain:(id)receiver t:(id _Nullable)t __attribute__((swift_name("shouldContain(_:t:)")));
+ (id)shouldContain:(id)receiver t_:(id _Nullable)t __attribute__((swift_name("shouldContain(_:t_:)")));
+ (id)shouldNotContain:(id)receiver t:(id _Nullable)t __attribute__((swift_name("shouldNotContain(_:t:)")));
+ (id)shouldNotContain:(id)receiver t_:(id _Nullable)t __attribute__((swift_name("shouldNotContain(_:t_:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContainAllKt")))
@interface SharedContainAllKt : SharedBase
+ (id<SharedMatcher>)containAllTs:(SharedKotlinArray<id> *)ts __attribute__((swift_name("containAll(ts:)")));
+ (id<SharedMatcher>)containAllTs_:(id)ts __attribute__((swift_name("containAll(ts_:)")));
+ (void)shouldContainAll:(id)receiver ts:(SharedKotlinArray<id> *)ts __attribute__((swift_name("shouldContainAll(_:ts:)")));
+ (void)shouldContainAll:(id)receiver ts_:(id)ts __attribute__((swift_name("shouldContainAll(_:ts_:)")));
+ (void)shouldContainAll:(id)receiver ts__:(SharedKotlinArray<id> *)ts __attribute__((swift_name("shouldContainAll(_:ts__:)")));
+ (void)shouldContainAll:(id)receiver ts___:(id)ts __attribute__((swift_name("shouldContainAll(_:ts___:)")));
+ (void)shouldNotContainAll:(id)receiver ts:(SharedKotlinArray<id> *)ts __attribute__((swift_name("shouldNotContainAll(_:ts:)")));
+ (void)shouldNotContainAll:(id)receiver ts_:(id)ts __attribute__((swift_name("shouldNotContainAll(_:ts_:)")));
+ (void)shouldNotContainAll:(id)receiver ts__:(SharedKotlinArray<id> *)ts __attribute__((swift_name("shouldNotContainAll(_:ts__:)")));
+ (void)shouldNotContainAll:(id)receiver ts___:(id)ts __attribute__((swift_name("shouldNotContainAll(_:ts___:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DuplicatesKt")))
@interface SharedDuplicatesKt : SharedBase
+ (id<SharedMatcher>)containDuplicates __attribute__((swift_name("containDuplicates()")));
+ (id)shouldContainDuplicates:(id)receiver __attribute__((swift_name("shouldContainDuplicates(_:)")));
+ (id)shouldContainDuplicates_:(id)receiver __attribute__((swift_name("shouldContainDuplicates(__:)")));
+ (id)shouldNotContainDuplicates:(id)receiver __attribute__((swift_name("shouldNotContainDuplicates(_:)")));
+ (id)shouldNotContainDuplicates_:(id)receiver __attribute__((swift_name("shouldNotContainDuplicates(__:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContainExactlyKt")))
@interface SharedContainExactlyKt : SharedBase
+ (id<SharedMatcher>)containExactlyExpected:(id)expected __attribute__((swift_name("containExactly(expected:)")));
+ (id<SharedMatcher>)containExactlyExpected_:(SharedKotlinArray<id> *)expected __attribute__((swift_name("containExactly(expected_:)")));
+ (SharedPrinted *)printed:(id)receiver __attribute__((swift_name("printed(_:)")));
+ (void)shouldContainExactly:(id _Nullable)receiver expected:(id)expected __attribute__((swift_name("shouldContainExactly(_:expected:)")));
+ (void)shouldContainExactly:(id _Nullable)receiver expected_:(SharedKotlinArray<id> *)expected __attribute__((swift_name("shouldContainExactly(_:expected_:)")));
+ (void)shouldContainExactly:(id _Nullable)receiver expected__:(SharedKotlinArray<id> *)expected __attribute__((swift_name("shouldContainExactly(_:expected__:)")));
+ (void)shouldContainExactly:(id _Nullable)receiver expected___:(id)expected __attribute__((swift_name("shouldContainExactly(_:expected___:)")));
+ (void)shouldNotContainExactly:(id _Nullable)receiver expected:(id)expected __attribute__((swift_name("shouldNotContainExactly(_:expected:)")));
+ (void)shouldNotContainExactly:(id _Nullable)receiver expected_:(SharedKotlinArray<id> *)expected __attribute__((swift_name("shouldNotContainExactly(_:expected_:)")));
+ (void)shouldNotContainExactly:(id _Nullable)receiver expected__:(SharedKotlinArray<id> *)expected __attribute__((swift_name("shouldNotContainExactly(_:expected__:)")));
+ (void)shouldNotContainExactly:(id _Nullable)receiver expected___:(id)expected __attribute__((swift_name("shouldNotContainExactly(_:expected___:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContainExactlyInAnyOrderKt")))
@interface SharedContainExactlyInAnyOrderKt : SharedBase
+ (id<SharedMatcher>)containExactlyInAnyOrderExpected:(id)expected __attribute__((swift_name("containExactlyInAnyOrder(expected:)")));
+ (id<SharedMatcher>)containExactlyInAnyOrderExpected_:(SharedKotlinArray<id> *)expected __attribute__((swift_name("containExactlyInAnyOrder(expected_:)")));
+ (id _Nullable)shouldContainExactlyInAnyOrder:(id _Nullable)receiver expected:(SharedKotlinArray<id> *)expected __attribute__((swift_name("shouldContainExactlyInAnyOrder(_:expected:)")));
+ (id _Nullable)shouldContainExactlyInAnyOrder:(id _Nullable)receiver expected_:(id _Nullable)expected __attribute__((swift_name("shouldContainExactlyInAnyOrder(_:expected_:)")));
+ (id _Nullable)shouldNotContainExactlyInAnyOrder:(id _Nullable)receiver expected:(SharedKotlinArray<id> *)expected __attribute__((swift_name("shouldNotContainExactlyInAnyOrder(_:expected:)")));
+ (id _Nullable)shouldNotContainExactlyInAnyOrder:(id _Nullable)receiver expected_:(id _Nullable)expected __attribute__((swift_name("shouldNotContainExactlyInAnyOrder(_:expected_:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("NullsKt")))
@interface SharedNullsKt : SharedBase
+ (id<SharedMatcher>)containNoNulls __attribute__((swift_name("containNoNulls()")));
+ (id<SharedMatcher>)containNull __attribute__((swift_name("containNull()")));
+ (id<SharedMatcher>)containOnlyNulls __attribute__((swift_name("containOnlyNulls()")));
+ (id)shouldContainNoNulls:(id)receiver __attribute__((swift_name("shouldContainNoNulls(_:)")));
+ (id)shouldContainNoNulls_:(id)receiver __attribute__((swift_name("shouldContainNoNulls(__:)")));
+ (id)shouldContainNull:(id)receiver __attribute__((swift_name("shouldContainNull(_:)")));
+ (id)shouldContainNull_:(id)receiver __attribute__((swift_name("shouldContainNull(__:)")));
+ (id)shouldContainOnlyNulls:(id)receiver __attribute__((swift_name("shouldContainOnlyNulls(_:)")));
+ (id)shouldContainOnlyNulls_:(id)receiver __attribute__((swift_name("shouldContainOnlyNulls(__:)")));
+ (id)shouldNotContainNoNulls:(id)receiver __attribute__((swift_name("shouldNotContainNoNulls(_:)")));
+ (id)shouldNotContainNoNulls_:(id)receiver __attribute__((swift_name("shouldNotContainNoNulls(__:)")));
+ (id)shouldNotContainNull:(id)receiver __attribute__((swift_name("shouldNotContainNull(_:)")));
+ (id)shouldNotContainNull_:(id)receiver __attribute__((swift_name("shouldNotContainNull(__:)")));
+ (id)shouldNotContainOnlyNulls:(id)receiver __attribute__((swift_name("shouldNotContainOnlyNulls(_:)")));
+ (id)shouldNotContainOnlyNulls_:(id)receiver __attribute__((swift_name("shouldNotContainOnlyNulls(__:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("InorderKt")))
@interface SharedInorderKt : SharedBase
+ (id<SharedMatcher>)containsInOrderTs:(SharedKotlinArray<id> *)ts __attribute__((swift_name("containsInOrder(ts:)")));
+ (id<SharedMatcher>)containsInOrderSubsequence:(NSArray<id> *)subsequence __attribute__((swift_name("containsInOrder(subsequence:)")));
+ (void)shouldContainInOrder:(id)receiver ts:(SharedKotlinArray<id> *)ts __attribute__((swift_name("shouldContainInOrder(_:ts:)")));
+ (void)shouldContainInOrder:(id)receiver expected:(NSArray<id> *)expected __attribute__((swift_name("shouldContainInOrder(_:expected:)")));
+ (void)shouldContainInOrder:(NSArray<id> *)receiver ts_:(SharedKotlinArray<id> *)ts __attribute__((swift_name("shouldContainInOrder(_:ts_:)")));
+ (void)shouldContainInOrder:(NSArray<id> *)receiver expected_:(NSArray<id> *)expected __attribute__((swift_name("shouldContainInOrder(_:expected_:)")));
+ (void)shouldNotContainInOrder:(id)receiver expected:(id)expected __attribute__((swift_name("shouldNotContainInOrder(_:expected:)")));
+ (void)shouldNotContainInOrder:(id)receiver expected_:(NSArray<id> *)expected __attribute__((swift_name("shouldNotContainInOrder(_:expected_:)")));
+ (void)shouldNotContainInOrder:(NSArray<id> *)receiver expected__:(NSArray<id> *)expected __attribute__((swift_name("shouldNotContainInOrder(_:expected__:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StartwithKt")))
@interface SharedStartwithKt : SharedBase
+ (id<SharedMatcher>)endWithExpectedSlice:(id)expectedSlice __attribute__((swift_name("endWith(expectedSlice:)")));
+ (id<SharedMatcher>)startWithExpectedSlice:(id)expectedSlice __attribute__((swift_name("startWith(expectedSlice:)")));
+ (void)shouldEndWith:(id)receiver element:(id _Nullable)element __attribute__((swift_name("shouldEndWith(_:element:)")));
+ (void)shouldEndWith:(id)receiver slice:(SharedKotlinArray<id> *)slice __attribute__((swift_name("shouldEndWith(_:slice:)")));
+ (void)shouldEndWith:(id)receiver slice_:(id)slice __attribute__((swift_name("shouldEndWith(_:slice_:)")));
+ (void)shouldEndWith:(NSArray<id> *)receiver element_:(id _Nullable)element __attribute__((swift_name("shouldEndWith(_:element_:)")));
+ (void)shouldEndWith:(NSArray<id> *)receiver slice__:(SharedKotlinArray<id> *)slice __attribute__((swift_name("shouldEndWith(_:slice__:)")));
+ (void)shouldEndWith:(NSArray<id> *)receiver slice___:(id)slice __attribute__((swift_name("shouldEndWith(_:slice___:)")));
+ (void)shouldNotEndWith:(id)receiver element:(id _Nullable)element __attribute__((swift_name("shouldNotEndWith(_:element:)")));
+ (void)shouldNotEndWith:(id)receiver slice:(SharedKotlinArray<id> *)slice __attribute__((swift_name("shouldNotEndWith(_:slice:)")));
+ (void)shouldNotEndWith:(id)receiver slice_:(id)slice __attribute__((swift_name("shouldNotEndWith(_:slice_:)")));
+ (void)shouldNotEndWith:(NSArray<id> *)receiver element_:(id _Nullable)element __attribute__((swift_name("shouldNotEndWith(_:element_:)")));
+ (void)shouldNotEndWith:(NSArray<id> *)receiver slice__:(id)slice __attribute__((swift_name("shouldNotEndWith(_:slice__:)")));
+ (void)shouldNotStartWith:(id)receiver element:(id _Nullable)element __attribute__((swift_name("shouldNotStartWith(_:element:)")));
+ (void)shouldNotStartWith:(id)receiver slice:(SharedKotlinArray<id> *)slice __attribute__((swift_name("shouldNotStartWith(_:slice:)")));
+ (void)shouldNotStartWith:(id)receiver slice_:(id)slice __attribute__((swift_name("shouldNotStartWith(_:slice_:)")));
+ (void)shouldNotStartWith:(NSArray<id> *)receiver element_:(id _Nullable)element __attribute__((swift_name("shouldNotStartWith(_:element_:)")));
+ (void)shouldNotStartWith:(NSArray<id> *)receiver slice__:(id)slice __attribute__((swift_name("shouldNotStartWith(_:slice__:)")));
+ (void)shouldStartWith:(id)receiver element:(id _Nullable)element __attribute__((swift_name("shouldStartWith(_:element:)")));
+ (void)shouldStartWith:(id)receiver slice:(SharedKotlinArray<id> *)slice __attribute__((swift_name("shouldStartWith(_:slice:)")));
+ (void)shouldStartWith:(id)receiver slice_:(id)slice __attribute__((swift_name("shouldStartWith(_:slice_:)")));
+ (void)shouldStartWith:(NSArray<id> *)receiver element_:(id _Nullable)element __attribute__((swift_name("shouldStartWith(_:element_:)")));
+ (void)shouldStartWith:(NSArray<id> *)receiver slice__:(id)slice __attribute__((swift_name("shouldStartWith(_:slice__:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("BoundsKt")))
@interface SharedBoundsKt : SharedBase
+ (id<SharedMatcher>)haveLowerBoundT:(id)t __attribute__((swift_name("haveLowerBound(t:)")));
+ (id<SharedMatcher>)haveUpperBoundT:(id)t __attribute__((swift_name("haveUpperBound(t:)")));
+ (id)shouldHaveLowerBound:(id)receiver t:(id)t __attribute__((swift_name("shouldHaveLowerBound(_:t:)")));
+ (id)shouldHaveLowerBound:(id)receiver t_:(id)t __attribute__((swift_name("shouldHaveLowerBound(_:t_:)")));
+ (id)shouldHaveUpperBound:(id)receiver t:(id)t __attribute__((swift_name("shouldHaveUpperBound(_:t:)")));
+ (id)shouldHaveUpperBound:(id)receiver t_:(id)t __attribute__((swift_name("shouldHaveUpperBound(_:t_:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SingletonKt")))
@interface SharedSingletonKt : SharedBase
+ (id)shouldBeSingleton:(id)receiver __attribute__((swift_name("shouldBeSingleton(_:)")));
+ (id)shouldBeSingleton:(id)receiver fn:(void (^)(id _Nullable))fn __attribute__((swift_name("shouldBeSingleton(_:fn:)")));
+ (id)shouldBeSingleton_:(id)receiver __attribute__((swift_name("shouldBeSingleton(__:)")));
+ (id)shouldBeSingleton:(id)receiver fn_:(void (^)(id _Nullable))fn __attribute__((swift_name("shouldBeSingleton(_:fn_:)")));
+ (id)shouldNotBeSingleton:(id)receiver __attribute__((swift_name("shouldNotBeSingleton(_:)")));
+ (id)shouldNotBeSingleton_:(id)receiver __attribute__((swift_name("shouldNotBeSingleton(__:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TypeMatchersKt")))
@interface SharedTypeMatchersKt : SharedBase
+ (id<SharedMatcher>)beInstanceOf __attribute__((swift_name("beInstanceOf()")));
+ (id<SharedMatcher>)beInstanceOfExpected:(id<SharedKotlinKClass>)expected __attribute__((swift_name("beInstanceOf(expected:)")));
+ (id<SharedMatcher>)beInstanceOf2 __attribute__((swift_name("beInstanceOf2()")));
+ (id<SharedMatcher>)beOfType __attribute__((swift_name("beOfType()")));
+ (id<SharedMatcher>)beOfTypeExpected:(id<SharedKotlinKClass>)expected __attribute__((swift_name("beOfType(expected:)")));
+ (id<SharedMatcher>)beTheSameInstanceAsRef:(id _Nullable)ref __attribute__((swift_name("beTheSameInstanceAs(ref:)")));
+ (id<SharedMatcher>)instanceOf __attribute__((swift_name("instanceOf()")));
+ (id<SharedMatcher>)instanceOfExpected:(id<SharedKotlinKClass>)expected __attribute__((swift_name("instanceOf(expected:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HashKt")))
@interface SharedHashKt : SharedBase
+ (id<SharedMatcher>)haveSameHashCodeAsOther:(id)other __attribute__((swift_name("haveSameHashCodeAs(other:)")));
+ (void)shouldHaveSameHashCodeAs:(id)receiver other:(id)other __attribute__((swift_name("shouldHaveSameHashCodeAs(_:other:)")));
+ (void)shouldNotHaveSameHashCodeAs:(id)receiver other:(id)other __attribute__((swift_name("shouldNotHaveSameHashCodeAs(_:other:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PropertyTest12Kt")))
@interface SharedPropertyTest12Kt : SharedBase

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllGenA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG genH:(SharedGen<id> *)genH genI:(SharedGen<id> *)genI genJ:(SharedGen<id> *)genJ genK:(SharedGen<id> *)genK genL:(SharedGen<id> *)genL property:(id<SharedKotlinSuspendFunction13>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(genA:genB:genC:genD:genE:genF:genG:genH:genI:genJ:genK:genL:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllConfig:(SharedPropTestConfig *)config genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG genH:(SharedGen<id> *)genH genI:(SharedGen<id> *)genI genJ:(SharedGen<id> *)genJ genK:(SharedGen<id> *)genK genL:(SharedGen<id> *)genL property:(id<SharedKotlinSuspendFunction13>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(config:genA:genB:genC:genD:genE:genF:genG:genH:genI:genJ:genK:genL:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllConfig:(SharedPropTestConfig *)config property:(id<SharedKotlinSuspendFunction13>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(config:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllIterations:(int32_t)iterations genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG genH:(SharedGen<id> *)genH genI:(SharedGen<id> *)genI genJ:(SharedGen<id> *)genJ genK:(SharedGen<id> *)genK genL:(SharedGen<id> *)genL property:(id<SharedKotlinSuspendFunction13>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(iterations:genA:genB:genC:genD:genE:genF:genG:genH:genI:genJ:genK:genL:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllIterations:(int32_t)iterations config:(SharedPropTestConfig *)config genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG genH:(SharedGen<id> *)genH genI:(SharedGen<id> *)genI genJ:(SharedGen<id> *)genJ genK:(SharedGen<id> *)genK genL:(SharedGen<id> *)genL property:(id<SharedKotlinSuspendFunction13>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(iterations:config:genA:genB:genC:genD:genE:genF:genG:genH:genI:genJ:genK:genL:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllIterations:(int32_t)iterations config:(SharedPropTestConfig *)config property:(id<SharedKotlinSuspendFunction13>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(iterations:config:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllIterations:(int32_t)iterations property:(id<SharedKotlinSuspendFunction13>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(iterations:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllProperty:(id<SharedKotlinSuspendFunction13>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllGenA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG genH:(SharedGen<id> *)genH genI:(SharedGen<id> *)genI genJ:(SharedGen<id> *)genJ genK:(SharedGen<id> *)genK genL:(SharedGen<id> *)genL property:(id<SharedKotlinSuspendFunction13>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(genA:genB:genC:genD:genE:genF:genG:genH:genI:genJ:genK:genL:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllConfig:(SharedPropTestConfig *)config genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG genH:(SharedGen<id> *)genH genI:(SharedGen<id> *)genI genJ:(SharedGen<id> *)genJ genK:(SharedGen<id> *)genK genL:(SharedGen<id> *)genL property:(id<SharedKotlinSuspendFunction13>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(config:genA:genB:genC:genD:genE:genF:genG:genH:genI:genJ:genK:genL:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllConfig:(SharedPropTestConfig *)config property:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(config:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllProperty:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllIterations:(int32_t)iterations genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG genH:(SharedGen<id> *)genH genI:(SharedGen<id> *)genI genJ:(SharedGen<id> *)genJ genK:(SharedGen<id> *)genK genL:(SharedGen<id> *)genL property:(id<SharedKotlinSuspendFunction13>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(iterations:genA:genB:genC:genD:genE:genF:genG:genH:genI:genJ:genK:genL:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllIterations:(int32_t)iterations config:(SharedPropTestConfig *)config genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG genH:(SharedGen<id> *)genH genI:(SharedGen<id> *)genI genJ:(SharedGen<id> *)genJ genK:(SharedGen<id> *)genK genL:(SharedGen<id> *)genL property:(id<SharedKotlinSuspendFunction13>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(iterations:config:genA:genB:genC:genD:genE:genF:genG:genH:genI:genJ:genK:genL:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllIterations:(int32_t)iterations config:(SharedPropTestConfig *)config property:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(iterations:config:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllIterations:(int32_t)iterations property:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(iterations:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneGenA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG genH:(SharedGen<id> *)genH genI:(SharedGen<id> *)genI genJ:(SharedGen<id> *)genJ genK:(SharedGen<id> *)genK genL:(SharedGen<id> *)genL property:(id<SharedKotlinSuspendFunction13>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(genA:genB:genC:genD:genE:genF:genG:genH:genI:genJ:genK:genL:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneConfig:(SharedPropTestConfig *)config genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG genH:(SharedGen<id> *)genH genI:(SharedGen<id> *)genI genJ:(SharedGen<id> *)genJ genK:(SharedGen<id> *)genK genL:(SharedGen<id> *)genL property:(id<SharedKotlinSuspendFunction13>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(config:genA:genB:genC:genD:genE:genF:genG:genH:genI:genJ:genK:genL:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneConfig:(SharedPropTestConfig *)config property:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(config:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneProperty:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneIterations:(int32_t)iterations genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG genH:(SharedGen<id> *)genH genI:(SharedGen<id> *)genI genJ:(SharedGen<id> *)genJ genK:(SharedGen<id> *)genK genL:(SharedGen<id> *)genL property:(id<SharedKotlinSuspendFunction13>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(iterations:genA:genB:genC:genD:genE:genF:genG:genH:genI:genJ:genK:genL:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneIterations:(int32_t)iterations config:(SharedPropTestConfig *)config genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG genH:(SharedGen<id> *)genH genI:(SharedGen<id> *)genI genJ:(SharedGen<id> *)genJ genK:(SharedGen<id> *)genK genL:(SharedGen<id> *)genL property:(id<SharedKotlinSuspendFunction13>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(iterations:config:genA:genB:genC:genD:genE:genF:genG:genH:genI:genJ:genK:genL:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneIterations:(int32_t)iterations config:(SharedPropTestConfig *)config property:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(iterations:config:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneIterations:(int32_t)iterations property:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(iterations:property:completionHandler:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PropertyTest11Kt")))
@interface SharedPropertyTest11Kt : SharedBase

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllGenA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG genH:(SharedGen<id> *)genH genI:(SharedGen<id> *)genI genJ:(SharedGen<id> *)genJ genK:(SharedGen<id> *)genK property:(id<SharedKotlinSuspendFunction12>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(genA:genB:genC:genD:genE:genF:genG:genH:genI:genJ:genK:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllConfig:(SharedPropTestConfig *)config genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG genH:(SharedGen<id> *)genH genI:(SharedGen<id> *)genI genJ:(SharedGen<id> *)genJ genK:(SharedGen<id> *)genK property:(id<SharedKotlinSuspendFunction12>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(config:genA:genB:genC:genD:genE:genF:genG:genH:genI:genJ:genK:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllConfig:(SharedPropTestConfig *)config property:(id<SharedKotlinSuspendFunction12>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(config:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllIterations:(int32_t)iterations genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG genH:(SharedGen<id> *)genH genI:(SharedGen<id> *)genI genJ:(SharedGen<id> *)genJ genK:(SharedGen<id> *)genK property:(id<SharedKotlinSuspendFunction12>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(iterations:genA:genB:genC:genD:genE:genF:genG:genH:genI:genJ:genK:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllIterations:(int32_t)iterations config:(SharedPropTestConfig *)config genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG genH:(SharedGen<id> *)genH genI:(SharedGen<id> *)genI genJ:(SharedGen<id> *)genJ genK:(SharedGen<id> *)genK property:(id<SharedKotlinSuspendFunction12>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(iterations:config:genA:genB:genC:genD:genE:genF:genG:genH:genI:genJ:genK:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllIterations:(int32_t)iterations config:(SharedPropTestConfig *)config property:(id<SharedKotlinSuspendFunction12>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(iterations:config:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllIterations:(int32_t)iterations property:(id<SharedKotlinSuspendFunction12>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(iterations:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllProperty:(id<SharedKotlinSuspendFunction12>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllGenA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG genH:(SharedGen<id> *)genH genI:(SharedGen<id> *)genI genJ:(SharedGen<id> *)genJ genK:(SharedGen<id> *)genK property:(id<SharedKotlinSuspendFunction12>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(genA:genB:genC:genD:genE:genF:genG:genH:genI:genJ:genK:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllConfig:(SharedPropTestConfig *)config genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG genH:(SharedGen<id> *)genH genI:(SharedGen<id> *)genI genJ:(SharedGen<id> *)genJ genK:(SharedGen<id> *)genK property:(id<SharedKotlinSuspendFunction12>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(config:genA:genB:genC:genD:genE:genF:genG:genH:genI:genJ:genK:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllConfig:(SharedPropTestConfig *)config property:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(config:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllProperty:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllIterations:(int32_t)iterations genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG genH:(SharedGen<id> *)genH genI:(SharedGen<id> *)genI genJ:(SharedGen<id> *)genJ genK:(SharedGen<id> *)genK property:(id<SharedKotlinSuspendFunction12>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(iterations:genA:genB:genC:genD:genE:genF:genG:genH:genI:genJ:genK:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllIterations:(int32_t)iterations config:(SharedPropTestConfig *)config genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG genH:(SharedGen<id> *)genH genI:(SharedGen<id> *)genI genJ:(SharedGen<id> *)genJ genK:(SharedGen<id> *)genK property:(id<SharedKotlinSuspendFunction12>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(iterations:config:genA:genB:genC:genD:genE:genF:genG:genH:genI:genJ:genK:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllIterations:(int32_t)iterations config:(SharedPropTestConfig *)config property:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(iterations:config:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllIterations:(int32_t)iterations property:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(iterations:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneGenA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG genH:(SharedGen<id> *)genH genI:(SharedGen<id> *)genI genJ:(SharedGen<id> *)genJ genK:(SharedGen<id> *)genK property:(id<SharedKotlinSuspendFunction12>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(genA:genB:genC:genD:genE:genF:genG:genH:genI:genJ:genK:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneConfig:(SharedPropTestConfig *)config genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG genH:(SharedGen<id> *)genH genI:(SharedGen<id> *)genI genJ:(SharedGen<id> *)genJ genK:(SharedGen<id> *)genK property:(id<SharedKotlinSuspendFunction12>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(config:genA:genB:genC:genD:genE:genF:genG:genH:genI:genJ:genK:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneConfig:(SharedPropTestConfig *)config property:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(config:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneProperty:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneIterations:(int32_t)iterations genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG genH:(SharedGen<id> *)genH genI:(SharedGen<id> *)genI genJ:(SharedGen<id> *)genJ genK:(SharedGen<id> *)genK property:(id<SharedKotlinSuspendFunction12>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(iterations:genA:genB:genC:genD:genE:genF:genG:genH:genI:genJ:genK:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneIterations:(int32_t)iterations config:(SharedPropTestConfig *)config genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG genH:(SharedGen<id> *)genH genI:(SharedGen<id> *)genI genJ:(SharedGen<id> *)genJ genK:(SharedGen<id> *)genK property:(id<SharedKotlinSuspendFunction12>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(iterations:config:genA:genB:genC:genD:genE:genF:genG:genH:genI:genJ:genK:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneIterations:(int32_t)iterations config:(SharedPropTestConfig *)config property:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(iterations:config:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneIterations:(int32_t)iterations property:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(iterations:property:completionHandler:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PropertyTest10Kt")))
@interface SharedPropertyTest10Kt : SharedBase

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllGenA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG genH:(SharedGen<id> *)genH genI:(SharedGen<id> *)genI genJ:(SharedGen<id> *)genJ property:(id<SharedKotlinSuspendFunction11>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(genA:genB:genC:genD:genE:genF:genG:genH:genI:genJ:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllConfig:(SharedPropTestConfig *)config genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG genH:(SharedGen<id> *)genH genI:(SharedGen<id> *)genI genJ:(SharedGen<id> *)genJ property:(id<SharedKotlinSuspendFunction11>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(config:genA:genB:genC:genD:genE:genF:genG:genH:genI:genJ:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllConfig:(SharedPropTestConfig *)config property:(id<SharedKotlinSuspendFunction11>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(config:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllIterations:(int32_t)iterations genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG genH:(SharedGen<id> *)genH genI:(SharedGen<id> *)genI genJ:(SharedGen<id> *)genJ property:(id<SharedKotlinSuspendFunction11>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(iterations:genA:genB:genC:genD:genE:genF:genG:genH:genI:genJ:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllIterations:(int32_t)iterations config:(SharedPropTestConfig *)config genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG genH:(SharedGen<id> *)genH genI:(SharedGen<id> *)genI genJ:(SharedGen<id> *)genJ property:(id<SharedKotlinSuspendFunction11>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(iterations:config:genA:genB:genC:genD:genE:genF:genG:genH:genI:genJ:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllIterations:(int32_t)iterations config:(SharedPropTestConfig *)config property:(id<SharedKotlinSuspendFunction11>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(iterations:config:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllIterations:(int32_t)iterations property:(id<SharedKotlinSuspendFunction11>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(iterations:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllProperty:(id<SharedKotlinSuspendFunction11>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllGenA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG genH:(SharedGen<id> *)genH genI:(SharedGen<id> *)genI genJ:(SharedGen<id> *)genJ property:(id<SharedKotlinSuspendFunction11>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(genA:genB:genC:genD:genE:genF:genG:genH:genI:genJ:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllConfig:(SharedPropTestConfig *)config genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG genH:(SharedGen<id> *)genH genI:(SharedGen<id> *)genI genJ:(SharedGen<id> *)genJ property:(id<SharedKotlinSuspendFunction11>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(config:genA:genB:genC:genD:genE:genF:genG:genH:genI:genJ:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllConfig:(SharedPropTestConfig *)config property:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(config:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllProperty:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllIterations:(int32_t)iterations genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG genH:(SharedGen<id> *)genH genI:(SharedGen<id> *)genI genJ:(SharedGen<id> *)genJ property:(id<SharedKotlinSuspendFunction11>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(iterations:genA:genB:genC:genD:genE:genF:genG:genH:genI:genJ:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllIterations:(int32_t)iterations config:(SharedPropTestConfig *)config genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG genH:(SharedGen<id> *)genH genI:(SharedGen<id> *)genI genJ:(SharedGen<id> *)genJ property:(id<SharedKotlinSuspendFunction11>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(iterations:config:genA:genB:genC:genD:genE:genF:genG:genH:genI:genJ:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllIterations:(int32_t)iterations config:(SharedPropTestConfig *)config property:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(iterations:config:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllIterations:(int32_t)iterations property:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(iterations:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneGenA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG genH:(SharedGen<id> *)genH genI:(SharedGen<id> *)genI genJ:(SharedGen<id> *)genJ property:(id<SharedKotlinSuspendFunction11>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(genA:genB:genC:genD:genE:genF:genG:genH:genI:genJ:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneConfig:(SharedPropTestConfig *)config genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG genH:(SharedGen<id> *)genH genI:(SharedGen<id> *)genI genJ:(SharedGen<id> *)genJ property:(id<SharedKotlinSuspendFunction11>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(config:genA:genB:genC:genD:genE:genF:genG:genH:genI:genJ:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneConfig:(SharedPropTestConfig *)config property:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(config:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneProperty:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneIterations:(int32_t)iterations genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG genH:(SharedGen<id> *)genH genI:(SharedGen<id> *)genI genJ:(SharedGen<id> *)genJ property:(id<SharedKotlinSuspendFunction11>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(iterations:genA:genB:genC:genD:genE:genF:genG:genH:genI:genJ:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneIterations:(int32_t)iterations config:(SharedPropTestConfig *)config genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG genH:(SharedGen<id> *)genH genI:(SharedGen<id> *)genI genJ:(SharedGen<id> *)genJ property:(id<SharedKotlinSuspendFunction11>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(iterations:config:genA:genB:genC:genD:genE:genF:genG:genH:genI:genJ:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneIterations:(int32_t)iterations config:(SharedPropTestConfig *)config property:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(iterations:config:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneIterations:(int32_t)iterations property:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(iterations:property:completionHandler:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PropertyTest9Kt")))
@interface SharedPropertyTest9Kt : SharedBase

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllGenA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG genH:(SharedGen<id> *)genH genI:(SharedGen<id> *)genI property:(id<SharedKotlinSuspendFunction10>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(genA:genB:genC:genD:genE:genF:genG:genH:genI:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllConfig:(SharedPropTestConfig *)config genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG genH:(SharedGen<id> *)genH genI:(SharedGen<id> *)genI property:(id<SharedKotlinSuspendFunction10>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(config:genA:genB:genC:genD:genE:genF:genG:genH:genI:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllConfig:(SharedPropTestConfig *)config property:(id<SharedKotlinSuspendFunction10>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(config:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllIterations:(int32_t)iterations genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG genH:(SharedGen<id> *)genH genI:(SharedGen<id> *)genI property:(id<SharedKotlinSuspendFunction10>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(iterations:genA:genB:genC:genD:genE:genF:genG:genH:genI:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllIterations:(int32_t)iterations config:(SharedPropTestConfig *)config genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG genH:(SharedGen<id> *)genH genI:(SharedGen<id> *)genI property:(id<SharedKotlinSuspendFunction10>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(iterations:config:genA:genB:genC:genD:genE:genF:genG:genH:genI:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllIterations:(int32_t)iterations config:(SharedPropTestConfig *)config property:(id<SharedKotlinSuspendFunction10>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(iterations:config:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllIterations:(int32_t)iterations property:(id<SharedKotlinSuspendFunction10>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(iterations:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllProperty:(id<SharedKotlinSuspendFunction10>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllGenA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG genH:(SharedGen<id> *)genH genI:(SharedGen<id> *)genI property:(id<SharedKotlinSuspendFunction10>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(genA:genB:genC:genD:genE:genF:genG:genH:genI:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllConfig:(SharedPropTestConfig *)config genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG genH:(SharedGen<id> *)genH genI:(SharedGen<id> *)genI property:(id<SharedKotlinSuspendFunction10>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(config:genA:genB:genC:genD:genE:genF:genG:genH:genI:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllConfig:(SharedPropTestConfig *)config property:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(config:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllProperty:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllIterations:(int32_t)iterations genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG genH:(SharedGen<id> *)genH genI:(SharedGen<id> *)genI property:(id<SharedKotlinSuspendFunction10>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(iterations:genA:genB:genC:genD:genE:genF:genG:genH:genI:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllIterations:(int32_t)iterations config:(SharedPropTestConfig *)config genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG genH:(SharedGen<id> *)genH genI:(SharedGen<id> *)genI property:(id<SharedKotlinSuspendFunction10>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(iterations:config:genA:genB:genC:genD:genE:genF:genG:genH:genI:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllIterations:(int32_t)iterations config:(SharedPropTestConfig *)config property:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(iterations:config:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllIterations:(int32_t)iterations property:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(iterations:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneGenA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG genH:(SharedGen<id> *)genH genI:(SharedGen<id> *)genI property:(id<SharedKotlinSuspendFunction10>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(genA:genB:genC:genD:genE:genF:genG:genH:genI:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneConfig:(SharedPropTestConfig *)config genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG genH:(SharedGen<id> *)genH genI:(SharedGen<id> *)genI property:(id<SharedKotlinSuspendFunction10>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(config:genA:genB:genC:genD:genE:genF:genG:genH:genI:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneConfig:(SharedPropTestConfig *)config property:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(config:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneProperty:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneIterations:(int32_t)iterations genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG genH:(SharedGen<id> *)genH genI:(SharedGen<id> *)genI property:(id<SharedKotlinSuspendFunction10>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(iterations:genA:genB:genC:genD:genE:genF:genG:genH:genI:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneIterations:(int32_t)iterations config:(SharedPropTestConfig *)config genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG genH:(SharedGen<id> *)genH genI:(SharedGen<id> *)genI property:(id<SharedKotlinSuspendFunction10>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(iterations:config:genA:genB:genC:genD:genE:genF:genG:genH:genI:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneIterations:(int32_t)iterations config:(SharedPropTestConfig *)config property:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(iterations:config:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneIterations:(int32_t)iterations property:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(iterations:property:completionHandler:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PropertyTest8Kt")))
@interface SharedPropertyTest8Kt : SharedBase

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllGenA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG genH:(SharedGen<id> *)genH property:(id<SharedKotlinSuspendFunction9>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(genA:genB:genC:genD:genE:genF:genG:genH:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllConfig:(SharedPropTestConfig *)config genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG genH:(SharedGen<id> *)genH property:(id<SharedKotlinSuspendFunction9>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(config:genA:genB:genC:genD:genE:genF:genG:genH:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllConfig:(SharedPropTestConfig *)config property:(id<SharedKotlinSuspendFunction9>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(config:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllIterations:(int32_t)iterations genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG genH:(SharedGen<id> *)genH property:(id<SharedKotlinSuspendFunction9>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(iterations:genA:genB:genC:genD:genE:genF:genG:genH:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllIterations:(int32_t)iterations config:(SharedPropTestConfig *)config genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG genH:(SharedGen<id> *)genH property:(id<SharedKotlinSuspendFunction9>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(iterations:config:genA:genB:genC:genD:genE:genF:genG:genH:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllIterations:(int32_t)iterations config:(SharedPropTestConfig *)config property:(id<SharedKotlinSuspendFunction9>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(iterations:config:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllIterations:(int32_t)iterations property:(id<SharedKotlinSuspendFunction9>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(iterations:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllProperty:(id<SharedKotlinSuspendFunction9>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllGenA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG genH:(SharedGen<id> *)genH property:(id<SharedKotlinSuspendFunction9>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(genA:genB:genC:genD:genE:genF:genG:genH:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllConfig:(SharedPropTestConfig *)config genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG genH:(SharedGen<id> *)genH property:(id<SharedKotlinSuspendFunction9>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(config:genA:genB:genC:genD:genE:genF:genG:genH:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllConfig:(SharedPropTestConfig *)config property:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(config:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllProperty:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllIterations:(int32_t)iterations genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG genH:(SharedGen<id> *)genH property:(id<SharedKotlinSuspendFunction9>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(iterations:genA:genB:genC:genD:genE:genF:genG:genH:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllIterations:(int32_t)iterations config:(SharedPropTestConfig *)config genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG genH:(SharedGen<id> *)genH property:(id<SharedKotlinSuspendFunction9>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(iterations:config:genA:genB:genC:genD:genE:genF:genG:genH:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllIterations:(int32_t)iterations config:(SharedPropTestConfig *)config property:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(iterations:config:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllIterations:(int32_t)iterations property:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(iterations:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneGenA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG genH:(SharedGen<id> *)genH property:(id<SharedKotlinSuspendFunction9>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(genA:genB:genC:genD:genE:genF:genG:genH:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneConfig:(SharedPropTestConfig *)config genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG genH:(SharedGen<id> *)genH property:(id<SharedKotlinSuspendFunction9>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(config:genA:genB:genC:genD:genE:genF:genG:genH:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneConfig:(SharedPropTestConfig *)config property:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(config:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneProperty:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneIterations:(int32_t)iterations genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG genH:(SharedGen<id> *)genH property:(id<SharedKotlinSuspendFunction9>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(iterations:genA:genB:genC:genD:genE:genF:genG:genH:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneIterations:(int32_t)iterations config:(SharedPropTestConfig *)config genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG genH:(SharedGen<id> *)genH property:(id<SharedKotlinSuspendFunction9>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(iterations:config:genA:genB:genC:genD:genE:genF:genG:genH:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneIterations:(int32_t)iterations config:(SharedPropTestConfig *)config property:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(iterations:config:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneIterations:(int32_t)iterations property:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(iterations:property:completionHandler:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PropertyTest7Kt")))
@interface SharedPropertyTest7Kt : SharedBase

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllGenA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG property:(id<SharedKotlinSuspendFunction8>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(genA:genB:genC:genD:genE:genF:genG:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllConfig:(SharedPropTestConfig *)config genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG property:(id<SharedKotlinSuspendFunction8>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(config:genA:genB:genC:genD:genE:genF:genG:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllConfig:(SharedPropTestConfig *)config property:(id<SharedKotlinSuspendFunction8>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(config:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllIterations:(int32_t)iterations genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG property:(id<SharedKotlinSuspendFunction8>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(iterations:genA:genB:genC:genD:genE:genF:genG:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllIterations:(int32_t)iterations config:(SharedPropTestConfig *)config genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG property:(id<SharedKotlinSuspendFunction8>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(iterations:config:genA:genB:genC:genD:genE:genF:genG:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllIterations:(int32_t)iterations config:(SharedPropTestConfig *)config property:(id<SharedKotlinSuspendFunction8>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(iterations:config:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllIterations:(int32_t)iterations property:(id<SharedKotlinSuspendFunction8>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(iterations:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllProperty:(id<SharedKotlinSuspendFunction8>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllGenA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG property:(id<SharedKotlinSuspendFunction8>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(genA:genB:genC:genD:genE:genF:genG:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllConfig:(SharedPropTestConfig *)config genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG property:(id<SharedKotlinSuspendFunction8>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(config:genA:genB:genC:genD:genE:genF:genG:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllConfig:(SharedPropTestConfig *)config property:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(config:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllProperty:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllIterations:(int32_t)iterations genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG property:(id<SharedKotlinSuspendFunction8>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(iterations:genA:genB:genC:genD:genE:genF:genG:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllIterations:(int32_t)iterations config:(SharedPropTestConfig *)config genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG property:(id<SharedKotlinSuspendFunction8>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(iterations:config:genA:genB:genC:genD:genE:genF:genG:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllIterations:(int32_t)iterations config:(SharedPropTestConfig *)config property:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(iterations:config:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllIterations:(int32_t)iterations property:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(iterations:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneGenA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG property:(id<SharedKotlinSuspendFunction8>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(genA:genB:genC:genD:genE:genF:genG:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneConfig:(SharedPropTestConfig *)config genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG property:(id<SharedKotlinSuspendFunction8>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(config:genA:genB:genC:genD:genE:genF:genG:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneConfig:(SharedPropTestConfig *)config property:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(config:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneProperty:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneIterations:(int32_t)iterations genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG property:(id<SharedKotlinSuspendFunction8>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(iterations:genA:genB:genC:genD:genE:genF:genG:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneIterations:(int32_t)iterations config:(SharedPropTestConfig *)config genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG property:(id<SharedKotlinSuspendFunction8>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(iterations:config:genA:genB:genC:genD:genE:genF:genG:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneIterations:(int32_t)iterations config:(SharedPropTestConfig *)config property:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(iterations:config:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneIterations:(int32_t)iterations property:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(iterations:property:completionHandler:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PropertyTest6Kt")))
@interface SharedPropertyTest6Kt : SharedBase

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllGenA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF property:(id<SharedKotlinSuspendFunction7>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(genA:genB:genC:genD:genE:genF:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllConfig:(SharedPropTestConfig *)config genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF property:(id<SharedKotlinSuspendFunction7>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(config:genA:genB:genC:genD:genE:genF:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllConfig:(SharedPropTestConfig *)config property:(id<SharedKotlinSuspendFunction7>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(config:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllIterations:(int32_t)iterations genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF property:(id<SharedKotlinSuspendFunction7>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(iterations:genA:genB:genC:genD:genE:genF:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllIterations:(int32_t)iterations config:(SharedPropTestConfig *)config genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF property:(id<SharedKotlinSuspendFunction7>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(iterations:config:genA:genB:genC:genD:genE:genF:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllIterations:(int32_t)iterations config:(SharedPropTestConfig *)config property:(id<SharedKotlinSuspendFunction7>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(iterations:config:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllIterations:(int32_t)iterations property:(id<SharedKotlinSuspendFunction7>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(iterations:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllProperty:(id<SharedKotlinSuspendFunction7>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllGenA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF property:(id<SharedKotlinSuspendFunction7>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(genA:genB:genC:genD:genE:genF:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllConfig:(SharedPropTestConfig *)config genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF property:(id<SharedKotlinSuspendFunction7>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(config:genA:genB:genC:genD:genE:genF:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllConfig:(SharedPropTestConfig *)config property:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(config:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllProperty:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllIterations:(int32_t)iterations genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF property:(id<SharedKotlinSuspendFunction7>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(iterations:genA:genB:genC:genD:genE:genF:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllIterations:(int32_t)iterations config:(SharedPropTestConfig *)config genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF property:(id<SharedKotlinSuspendFunction7>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(iterations:config:genA:genB:genC:genD:genE:genF:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllIterations:(int32_t)iterations config:(SharedPropTestConfig *)config property:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(iterations:config:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllIterations:(int32_t)iterations property:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(iterations:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneGenA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF property:(id<SharedKotlinSuspendFunction7>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(genA:genB:genC:genD:genE:genF:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneConfig:(SharedPropTestConfig *)config genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF property:(id<SharedKotlinSuspendFunction7>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(config:genA:genB:genC:genD:genE:genF:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneConfig:(SharedPropTestConfig *)config property:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(config:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneProperty:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneIterations:(int32_t)iterations genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF property:(id<SharedKotlinSuspendFunction7>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(iterations:genA:genB:genC:genD:genE:genF:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneIterations:(int32_t)iterations config:(SharedPropTestConfig *)config genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF property:(id<SharedKotlinSuspendFunction7>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(iterations:config:genA:genB:genC:genD:genE:genF:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneIterations:(int32_t)iterations config:(SharedPropTestConfig *)config property:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(iterations:config:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneIterations:(int32_t)iterations property:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(iterations:property:completionHandler:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PropertyTest5Kt")))
@interface SharedPropertyTest5Kt : SharedBase

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllGenA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE property:(id<SharedKotlinSuspendFunction6>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(genA:genB:genC:genD:genE:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllConfig:(SharedPropTestConfig *)config genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE property:(id<SharedKotlinSuspendFunction6>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(config:genA:genB:genC:genD:genE:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllConfig:(SharedPropTestConfig *)config property:(id<SharedKotlinSuspendFunction6>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(config:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllIterations:(int32_t)iterations genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE property:(id<SharedKotlinSuspendFunction6>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(iterations:genA:genB:genC:genD:genE:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllIterations:(int32_t)iterations config:(SharedPropTestConfig *)config genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE property:(id<SharedKotlinSuspendFunction6>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(iterations:config:genA:genB:genC:genD:genE:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllIterations:(int32_t)iterations config:(SharedPropTestConfig *)config property:(id<SharedKotlinSuspendFunction6>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(iterations:config:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllIterations:(int32_t)iterations property:(id<SharedKotlinSuspendFunction6>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(iterations:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllProperty:(id<SharedKotlinSuspendFunction6>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllGenA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE property:(id<SharedKotlinSuspendFunction6>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(genA:genB:genC:genD:genE:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllConfig:(SharedPropTestConfig *)config genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE property:(id<SharedKotlinSuspendFunction6>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(config:genA:genB:genC:genD:genE:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllConfig:(SharedPropTestConfig *)config property:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(config:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllProperty:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllIterations:(int32_t)iterations genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE property:(id<SharedKotlinSuspendFunction6>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(iterations:genA:genB:genC:genD:genE:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllIterations:(int32_t)iterations config:(SharedPropTestConfig *)config genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE property:(id<SharedKotlinSuspendFunction6>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(iterations:config:genA:genB:genC:genD:genE:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllIterations:(int32_t)iterations config:(SharedPropTestConfig *)config property:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(iterations:config:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllIterations:(int32_t)iterations property:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(iterations:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneConfig:(SharedPropTestConfig *)config genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE property:(id<SharedKotlinSuspendFunction6>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(config:genA:genB:genC:genD:genE:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneConfig:(SharedPropTestConfig *)config property:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(config:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneProperty:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneIterations:(int32_t)iterations genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE property:(id<SharedKotlinSuspendFunction6>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(iterations:genA:genB:genC:genD:genE:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneIterations:(int32_t)iterations config:(SharedPropTestConfig *)config genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE property:(id<SharedKotlinSuspendFunction6>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(iterations:config:genA:genB:genC:genD:genE:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneIterations:(int32_t)iterations config:(SharedPropTestConfig *)config property:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(iterations:config:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneIterations:(int32_t)iterations property:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(iterations:property:completionHandler:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PropertyTest4Kt")))
@interface SharedPropertyTest4Kt : SharedBase

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllGenA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD property:(id<SharedKotlinSuspendFunction5>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(genA:genB:genC:genD:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllConfig:(SharedPropTestConfig *)config genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD property:(id<SharedKotlinSuspendFunction5>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(config:genA:genB:genC:genD:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllConfig:(SharedPropTestConfig *)config property:(id<SharedKotlinSuspendFunction5>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(config:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllIterations:(int32_t)iterations genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD property:(id<SharedKotlinSuspendFunction5>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(iterations:genA:genB:genC:genD:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllIterations:(int32_t)iterations config:(SharedPropTestConfig *)config genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD property:(id<SharedKotlinSuspendFunction5>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(iterations:config:genA:genB:genC:genD:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllIterations:(int32_t)iterations config:(SharedPropTestConfig *)config property:(id<SharedKotlinSuspendFunction5>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(iterations:config:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllIterations:(int32_t)iterations property:(id<SharedKotlinSuspendFunction5>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(iterations:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllProperty:(id<SharedKotlinSuspendFunction5>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllGenA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD property:(id<SharedKotlinSuspendFunction5>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(genA:genB:genC:genD:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllConfig:(SharedPropTestConfig *)config genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD property:(id<SharedKotlinSuspendFunction5>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(config:genA:genB:genC:genD:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllConfig:(SharedPropTestConfig *)config property:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable, id _Nullable, id _Nullable, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(config:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllProperty:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable, id _Nullable, id _Nullable, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllIterations:(int32_t)iterations genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD property:(id<SharedKotlinSuspendFunction5>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(iterations:genA:genB:genC:genD:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllIterations:(int32_t)iterations config:(SharedPropTestConfig *)config genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD property:(id<SharedKotlinSuspendFunction5>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(iterations:config:genA:genB:genC:genD:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllIterations:(int32_t)iterations config:(SharedPropTestConfig *)config property:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable, id _Nullable, id _Nullable, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(iterations:config:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllIterations:(int32_t)iterations property:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable, id _Nullable, id _Nullable, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(iterations:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneGenA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD property:(id<SharedKotlinSuspendFunction5>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(genA:genB:genC:genD:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneConfig:(SharedPropTestConfig *)config genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD property:(id<SharedKotlinSuspendFunction5>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(config:genA:genB:genC:genD:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneConfig:(SharedPropTestConfig *)config property:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable, id _Nullable, id _Nullable, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(config:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneProperty:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable, id _Nullable, id _Nullable, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneIterations:(int32_t)iterations genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD property:(id<SharedKotlinSuspendFunction5>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(iterations:genA:genB:genC:genD:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneIterations:(int32_t)iterations config:(SharedPropTestConfig *)config genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD property:(id<SharedKotlinSuspendFunction5>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(iterations:config:genA:genB:genC:genD:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneIterations:(int32_t)iterations config:(SharedPropTestConfig *)config property:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable, id _Nullable, id _Nullable, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(iterations:config:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneIterations:(int32_t)iterations property:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable, id _Nullable, id _Nullable, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(iterations:property:completionHandler:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PropertyTest3Kt")))
@interface SharedPropertyTest3Kt : SharedBase

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllGenA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC property:(id<SharedKotlinSuspendFunction4>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(genA:genB:genC:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllConfig:(SharedPropTestConfig *)config genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC property:(id<SharedKotlinSuspendFunction4>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(config:genA:genB:genC:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllConfig:(SharedPropTestConfig *)config property:(id<SharedKotlinSuspendFunction4>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(config:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllIterations:(int32_t)iterations genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC property:(id<SharedKotlinSuspendFunction4>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(iterations:genA:genB:genC:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllIterations:(int32_t)iterations config:(SharedPropTestConfig *)config genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC property:(id<SharedKotlinSuspendFunction4>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(iterations:config:genA:genB:genC:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllIterations:(int32_t)iterations config:(SharedPropTestConfig *)config property:(id<SharedKotlinSuspendFunction4>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(iterations:config:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllIterations:(int32_t)iterations property:(id<SharedKotlinSuspendFunction4>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(iterations:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllProperty:(id<SharedKotlinSuspendFunction4>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllGenA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC property:(id<SharedKotlinSuspendFunction4>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(genA:genB:genC:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllConfig:(SharedPropTestConfig *)config genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC property:(id<SharedKotlinSuspendFunction4>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(config:genA:genB:genC:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllConfig:(SharedPropTestConfig *)config property:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable, id _Nullable, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(config:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllProperty:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable, id _Nullable, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllIterations:(int32_t)iterations genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC property:(id<SharedKotlinSuspendFunction4>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(iterations:genA:genB:genC:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllIterations:(int32_t)iterations config:(SharedPropTestConfig *)config genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC property:(id<SharedKotlinSuspendFunction4>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(iterations:config:genA:genB:genC:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllIterations:(int32_t)iterations config:(SharedPropTestConfig *)config property:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable, id _Nullable, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(iterations:config:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllIterations:(int32_t)iterations property:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable, id _Nullable, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(iterations:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneGenA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC property:(id<SharedKotlinSuspendFunction4>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(genA:genB:genC:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneConfig:(SharedPropTestConfig *)config genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC property:(id<SharedKotlinSuspendFunction4>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(config:genA:genB:genC:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneConfig:(SharedPropTestConfig *)config property:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable, id _Nullable, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(config:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneProperty:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable, id _Nullable, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneIterations:(int32_t)iterations genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC property:(id<SharedKotlinSuspendFunction4>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(iterations:genA:genB:genC:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneIterations:(int32_t)iterations config:(SharedPropTestConfig *)config genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC property:(id<SharedKotlinSuspendFunction4>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(iterations:config:genA:genB:genC:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneIterations:(int32_t)iterations config:(SharedPropTestConfig *)config property:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable, id _Nullable, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(iterations:config:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneIterations:(int32_t)iterations property:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable, id _Nullable, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(iterations:property:completionHandler:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PropertyTest2Kt")))
@interface SharedPropertyTest2Kt : SharedBase

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllGenA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB property:(id<SharedKotlinSuspendFunction3>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(genA:genB:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllConfig:(SharedPropTestConfig *)config genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB property:(id<SharedKotlinSuspendFunction3>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(config:genA:genB:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllConfig:(SharedPropTestConfig *)config property:(id<SharedKotlinSuspendFunction3>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(config:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllIterations:(int32_t)iterations genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB property:(id<SharedKotlinSuspendFunction3>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(iterations:genA:genB:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllIterations:(int32_t)iterations config:(SharedPropTestConfig *)config genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB property:(id<SharedKotlinSuspendFunction3>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(iterations:config:genA:genB:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllIterations:(int32_t)iterations config:(SharedPropTestConfig *)config property:(id<SharedKotlinSuspendFunction3>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(iterations:config:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllIterations:(int32_t)iterations property:(id<SharedKotlinSuspendFunction3>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(iterations:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllProperty:(id<SharedKotlinSuspendFunction3>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllGenA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB property:(id<SharedKotlinSuspendFunction3>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(genA:genB:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllConfig:(SharedPropTestConfig *)config genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB property:(id<SharedKotlinSuspendFunction3>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(config:genA:genB:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllConfig:(SharedPropTestConfig *)config property:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(config:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllProperty:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllIterations:(int32_t)iterations genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB property:(id<SharedKotlinSuspendFunction3>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(iterations:genA:genB:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllIterations:(int32_t)iterations config:(SharedPropTestConfig *)config genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB property:(id<SharedKotlinSuspendFunction3>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(iterations:config:genA:genB:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllIterations:(int32_t)iterations config:(SharedPropTestConfig *)config property:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(iterations:config:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllIterations:(int32_t)iterations property:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(iterations:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneGenA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB property:(id<SharedKotlinSuspendFunction3>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(genA:genB:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneConfig:(SharedPropTestConfig *)config genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB property:(id<SharedKotlinSuspendFunction3>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(config:genA:genB:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneConfig:(SharedPropTestConfig *)config property:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(config:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneProperty:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneIterations:(int32_t)iterations genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB property:(id<SharedKotlinSuspendFunction3>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(iterations:genA:genB:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneIterations:(int32_t)iterations config:(SharedPropTestConfig *)config genA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB property:(id<SharedKotlinSuspendFunction3>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(iterations:config:genA:genB:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneIterations:(int32_t)iterations config:(SharedPropTestConfig *)config property:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(iterations:config:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneIterations:(int32_t)iterations property:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(iterations:property:completionHandler:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PropertyTest1Kt")))
@interface SharedPropertyTest1Kt : SharedBase

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllGenA:(SharedGen<id> *)genA property:(id<SharedKotlinSuspendFunction2>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(genA:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllConfig:(SharedPropTestConfig *)config genA:(SharedGen<id> *)genA property:(id<SharedKotlinSuspendFunction2>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(config:genA:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllConfig:(SharedPropTestConfig *)config property:(id<SharedKotlinSuspendFunction2>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(config:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllIterations:(int32_t)iterations genA:(SharedGen<id> *)genA property:(id<SharedKotlinSuspendFunction2>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(iterations:genA:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllIterations:(int32_t)iterations config:(SharedPropTestConfig *)config genA:(SharedGen<id> *)genA property:(id<SharedKotlinSuspendFunction2>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(iterations:config:genA:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllIterations:(int32_t)iterations config:(SharedPropTestConfig *)config property:(id<SharedKotlinSuspendFunction2>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(iterations:config:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllIterations:(int32_t)iterations property:(id<SharedKotlinSuspendFunction2>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(iterations:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkAllProperty:(id<SharedKotlinSuspendFunction2>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAll(property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllGenA:(SharedGen<id> *)genA property:(id<SharedKotlinSuspendFunction2>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(genA:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllConfig:(SharedPropTestConfig *)config genA:(SharedGen<id> *)genA property:(id<SharedKotlinSuspendFunction2>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(config:genA:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllConfig:(SharedPropTestConfig *)config property:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(config:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllProperty:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllIterations:(int32_t)iterations genA:(SharedGen<id> *)genA property:(id<SharedKotlinSuspendFunction2>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(iterations:genA:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllIterations:(int32_t)iterations config:(SharedPropTestConfig *)config genA:(SharedGen<id> *)genA property:(id<SharedKotlinSuspendFunction2>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(iterations:config:genA:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllIterations:(int32_t)iterations config:(SharedPropTestConfig *)config property:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(iterations:config:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllIterations:(int32_t)iterations property:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(iterations:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneGenA:(SharedGen<id> *)genA property:(id<SharedKotlinSuspendFunction2>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(genA:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneConfig:(SharedPropTestConfig *)config genA:(SharedGen<id> *)genA property:(id<SharedKotlinSuspendFunction2>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(config:genA:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneConfig:(SharedPropTestConfig *)config property:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(config:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneProperty:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneIterations:(int32_t)iterations genA:(SharedGen<id> *)genA property:(id<SharedKotlinSuspendFunction2>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(iterations:genA:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneIterations:(int32_t)iterations config:(SharedPropTestConfig *)config genA:(SharedGen<id> *)genA property:(id<SharedKotlinSuspendFunction2>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(iterations:config:genA:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneIterations:(int32_t)iterations config:(SharedPropTestConfig *)config property:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(iterations:config:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneIterations:(int32_t)iterations property:(SharedBoolean *(^)(SharedPropertyContext *, id _Nullable))property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(iterations:property:completionHandler:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CoverageKt")))
@interface SharedCoverageKt : SharedBase

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkCoveragePairs:(SharedKotlinArray<SharedKotlinPair<NSString *, SharedDouble *> *> *)pairs f:(id<SharedKotlinSuspendFunction0>)f completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkCoverage(pairs:f:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)checkCoverageLabel:(NSString *)label percentage:(double)percentage f:(id<SharedKotlinSuspendFunction0>)f completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkCoverage(label:percentage:f:completionHandler:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GenKt")))
@interface SharedGenKt : SharedBase
+ (SharedSample<id> *)sampleOfA:(id _Nullable)a shrinker:(id<SharedShrinker>)shrinker __attribute__((swift_name("sampleOf(a:shrinker:)")));
+ (SharedSample<id> *)asSample:(id _Nullable)receiver __attribute__((swift_name("asSample(_:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ConstraintsKt")))
@interface SharedConstraintsKt : SharedBase
+ (id<SharedConstraints>)and:(id<SharedConstraints>)receiver other:(id<SharedConstraints>)other __attribute__((swift_name("and(_:other:)")));
+ (id<SharedConstraints>)or:(id<SharedConstraints>)receiver other:(id<SharedConstraints>)other __attribute__((swift_name("or(_:other:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ShrinkerKt")))
@interface SharedShrinkerKt : SharedBase
+ (id<SharedShrinker>)bimap:(id<SharedShrinker>)receiver f:(id _Nullable (^)(id _Nullable))f g:(id _Nullable (^)(id _Nullable))g __attribute__((swift_name("bimap(_:f:g:)")));
+ (SharedRTree<id> *)rtree:(id<SharedShrinker>)receiver value:(id _Nullable (^)(void))value __attribute__((swift_name("rtree(_:value:)")));
+ (SharedRTree<id> *)rtree:(id<SharedShrinker>)receiver value_:(id _Nullable)value __attribute__((swift_name("rtree(_:value_:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("RandomKt")))
@interface SharedRandomKt : SharedBase
+ (SharedRandomSource *)random:(int64_t)receiver __attribute__((swift_name("random(_:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ShrinkKt")))
@interface SharedShrinkKt : SharedBase

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)doShrinkingInitial:(SharedRTree<id> *)initial mode:(SharedShrinkingMode *)mode test:(id<SharedKotlinSuspendFunction1>)test completionHandler:(void (^)(SharedShrinkResult<id> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("doShrinking(initial:mode:test:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)doStepTree:(SharedRTree<id> *)tree mode:(SharedShrinkingMode *)mode tested:(SharedMutableSet<id> *)tested counter:(SharedCounter *)counter test:(id<SharedKotlinSuspendFunction1>)test sb:(SharedKotlinStringBuilder *)sb completionHandler:(void (^)(SharedStepResult<id> * _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("doStep(tree:mode:tested:counter:test:sb:completionHandler:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ProptestKt")))
@interface SharedProptestKt : SharedBase

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)proptestGenA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG genH:(SharedGen<id> *)genH genI:(SharedGen<id> *)genI genJ:(SharedGen<id> *)genJ genK:(SharedGen<id> *)genK genL:(SharedGen<id> *)genL config:(SharedPropTestConfig *)config property:(id<SharedKotlinSuspendFunction13>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("proptest(genA:genB:genC:genD:genE:genF:genG:genH:genI:genJ:genK:genL:config:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)proptestGenA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG genH:(SharedGen<id> *)genH genI:(SharedGen<id> *)genI genJ:(SharedGen<id> *)genJ genK:(SharedGen<id> *)genK config:(SharedPropTestConfig *)config property:(id<SharedKotlinSuspendFunction12>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("proptest(genA:genB:genC:genD:genE:genF:genG:genH:genI:genJ:genK:config:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)proptestGenA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG genH:(SharedGen<id> *)genH genI:(SharedGen<id> *)genI genJ:(SharedGen<id> *)genJ config:(SharedPropTestConfig *)config property:(id<SharedKotlinSuspendFunction11>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("proptest(genA:genB:genC:genD:genE:genF:genG:genH:genI:genJ:config:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)proptestGenA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG genH:(SharedGen<id> *)genH genI:(SharedGen<id> *)genI config:(SharedPropTestConfig *)config property:(id<SharedKotlinSuspendFunction10>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("proptest(genA:genB:genC:genD:genE:genF:genG:genH:genI:config:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)proptestGenA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG genH:(SharedGen<id> *)genH config:(SharedPropTestConfig *)config property:(id<SharedKotlinSuspendFunction9>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("proptest(genA:genB:genC:genD:genE:genF:genG:genH:config:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)proptestGenA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF genG:(SharedGen<id> *)genG config:(SharedPropTestConfig *)config property:(id<SharedKotlinSuspendFunction8>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("proptest(genA:genB:genC:genD:genE:genF:genG:config:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)proptestGenA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE genF:(SharedGen<id> *)genF config:(SharedPropTestConfig *)config property:(id<SharedKotlinSuspendFunction7>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("proptest(genA:genB:genC:genD:genE:genF:config:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)proptestGenA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD genE:(SharedGen<id> *)genE config:(SharedPropTestConfig *)config property:(id<SharedKotlinSuspendFunction6>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("proptest(genA:genB:genC:genD:genE:config:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)proptestGenA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC genD:(SharedGen<id> *)genD config:(SharedPropTestConfig *)config property:(id<SharedKotlinSuspendFunction5>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("proptest(genA:genB:genC:genD:config:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)proptestGenA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB genC:(SharedGen<id> *)genC config:(SharedPropTestConfig *)config property:(id<SharedKotlinSuspendFunction4>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("proptest(genA:genB:genC:config:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)proptestGenA:(SharedGen<id> *)genA genB:(SharedGen<id> *)genB config:(SharedPropTestConfig *)config property:(id<SharedKotlinSuspendFunction3>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("proptest(genA:genB:config:property:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)proptestGenA:(SharedGen<id> *)genA config:(SharedPropTestConfig *)config property:(id<SharedKotlinSuspendFunction2>)property completionHandler:(void (^)(SharedPropertyContext * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("proptest(genA:config:property:completionHandler:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ShrinkfnsKt")))
@interface SharedShrinkfnsKt : SharedBase
+ (id<SharedKotlinSuspendFunction0>)shrinkfnA:(SharedSample<id> *)a b:(SharedSample<id> *)b c:(SharedSample<id> *)c d:(SharedSample<id> *)d e:(SharedSample<id> *)e f:(SharedSample<id> *)f g:(SharedSample<id> *)g h:(SharedSample<id> *)h i:(SharedSample<id> *)i j:(SharedSample<id> *)j k:(SharedSample<id> *)k l:(SharedSample<id> *)l property:(id<SharedKotlinSuspendFunction13>)property shrinkingMode:(SharedShrinkingMode *)shrinkingMode __attribute__((swift_name("shrinkfn(a:b:c:d:e:f:g:h:i:j:k:l:property:shrinkingMode:)")));
+ (id<SharedKotlinSuspendFunction0>)shrinkfnA:(SharedSample<id> *)a b:(SharedSample<id> *)b c:(SharedSample<id> *)c d:(SharedSample<id> *)d e:(SharedSample<id> *)e f:(SharedSample<id> *)f g:(SharedSample<id> *)g h:(SharedSample<id> *)h i:(SharedSample<id> *)i j:(SharedSample<id> *)j k:(SharedSample<id> *)k property:(id<SharedKotlinSuspendFunction12>)property shrinkingMode:(SharedShrinkingMode *)shrinkingMode __attribute__((swift_name("shrinkfn(a:b:c:d:e:f:g:h:i:j:k:property:shrinkingMode:)")));
+ (id<SharedKotlinSuspendFunction0>)shrinkfnA:(SharedSample<id> *)a b:(SharedSample<id> *)b c:(SharedSample<id> *)c d:(SharedSample<id> *)d e:(SharedSample<id> *)e f:(SharedSample<id> *)f g:(SharedSample<id> *)g h:(SharedSample<id> *)h i:(SharedSample<id> *)i j:(SharedSample<id> *)j property:(id<SharedKotlinSuspendFunction11>)property shrinkingMode:(SharedShrinkingMode *)shrinkingMode __attribute__((swift_name("shrinkfn(a:b:c:d:e:f:g:h:i:j:property:shrinkingMode:)")));
+ (id<SharedKotlinSuspendFunction0>)shrinkfnA:(SharedSample<id> *)a b:(SharedSample<id> *)b c:(SharedSample<id> *)c d:(SharedSample<id> *)d e:(SharedSample<id> *)e f:(SharedSample<id> *)f g:(SharedSample<id> *)g h:(SharedSample<id> *)h i:(SharedSample<id> *)i property:(id<SharedKotlinSuspendFunction10>)property shrinkingMode:(SharedShrinkingMode *)shrinkingMode __attribute__((swift_name("shrinkfn(a:b:c:d:e:f:g:h:i:property:shrinkingMode:)")));
+ (id<SharedKotlinSuspendFunction0>)shrinkfnA:(SharedSample<id> *)a b:(SharedSample<id> *)b c:(SharedSample<id> *)c d:(SharedSample<id> *)d e:(SharedSample<id> *)e f:(SharedSample<id> *)f g:(SharedSample<id> *)g h:(SharedSample<id> *)h property:(id<SharedKotlinSuspendFunction9>)property shrinkingMode:(SharedShrinkingMode *)shrinkingMode __attribute__((swift_name("shrinkfn(a:b:c:d:e:f:g:h:property:shrinkingMode:)")));
+ (id<SharedKotlinSuspendFunction0>)shrinkfnA:(SharedSample<id> *)a b:(SharedSample<id> *)b c:(SharedSample<id> *)c d:(SharedSample<id> *)d e:(SharedSample<id> *)e f:(SharedSample<id> *)f g:(SharedSample<id> *)g property:(id<SharedKotlinSuspendFunction8>)property shrinkingMode:(SharedShrinkingMode *)shrinkingMode __attribute__((swift_name("shrinkfn(a:b:c:d:e:f:g:property:shrinkingMode:)")));
+ (id<SharedKotlinSuspendFunction0>)shrinkfnA:(SharedSample<id> *)a b:(SharedSample<id> *)b c:(SharedSample<id> *)c d:(SharedSample<id> *)d e:(SharedSample<id> *)e f:(SharedSample<id> *)f property:(id<SharedKotlinSuspendFunction7>)property shrinkingMode:(SharedShrinkingMode *)shrinkingMode __attribute__((swift_name("shrinkfn(a:b:c:d:e:f:property:shrinkingMode:)")));
+ (id<SharedKotlinSuspendFunction0>)shrinkfnA:(SharedSample<id> *)a b:(SharedSample<id> *)b c:(SharedSample<id> *)c d:(SharedSample<id> *)d e:(SharedSample<id> *)e property:(id<SharedKotlinSuspendFunction6>)property shrinkingMode:(SharedShrinkingMode *)shrinkingMode __attribute__((swift_name("shrinkfn(a:b:c:d:e:property:shrinkingMode:)")));
+ (id<SharedKotlinSuspendFunction0>)shrinkfnA:(SharedSample<id> *)a b:(SharedSample<id> *)b c:(SharedSample<id> *)c d:(SharedSample<id> *)d property:(id<SharedKotlinSuspendFunction5>)property shrinkingMode:(SharedShrinkingMode *)shrinkingMode __attribute__((swift_name("shrinkfn(a:b:c:d:property:shrinkingMode:)")));
+ (id<SharedKotlinSuspendFunction0>)shrinkfnA:(SharedSample<id> *)a b:(SharedSample<id> *)b c:(SharedSample<id> *)c property:(id<SharedKotlinSuspendFunction4>)property shrinkingMode:(SharedShrinkingMode *)shrinkingMode __attribute__((swift_name("shrinkfn(a:b:c:property:shrinkingMode:)")));
+ (id<SharedKotlinSuspendFunction0>)shrinkfnA:(SharedSample<id> *)a b:(SharedSample<id> *)b property:(id<SharedKotlinSuspendFunction3>)property shrinkingMode:(SharedShrinkingMode *)shrinkingMode __attribute__((swift_name("shrinkfn(a:b:property:shrinkingMode:)")));
+ (id<SharedKotlinSuspendFunction0>)shrinkfnA:(SharedSample<id> *)a property:(id<SharedKotlinSuspendFunction2>)property shrinkingMode:(SharedShrinkingMode *)shrinkingMode __attribute__((swift_name("shrinkfn(a:property:shrinkingMode:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ExhaustiveKt")))
@interface SharedExhaustiveKt : SharedBase
+ (SharedExhaustive<id> *)exhaustiveAs:(NSArray<id> *)as __attribute__((swift_name("exhaustive(as:)")));
+ (SharedExhaustive<id> *)exhaustive:(NSArray<id> *)receiver __attribute__((swift_name("exhaustive(_:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("BytesKt")))
@interface SharedBytesKt : SharedBase
@property (class, readonly) id<SharedShrinker> ByteShrinker __attribute__((swift_name("ByteShrinker")));
@property (class, readonly) id<SharedShrinker> UByteShrinker __attribute__((swift_name("UByteShrinker")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ShortsKt")))
@interface SharedShortsKt : SharedBase
@property (class, readonly) id<SharedShrinker> ShortShrinker __attribute__((swift_name("ShortShrinker")));
@property (class, readonly) id<SharedShrinker> UShortShrinker __attribute__((swift_name("UShortShrinker")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LocaleKt")))
@interface SharedLocaleKt : SharedBase
@property (class, readonly) NSArray<NSString *> *locales __attribute__((swift_name("locales")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("BuildersKt")))
@interface SharedBuildersKt : SharedBase
+ (SharedArb<id> *)arbitraryEdgecaseFn:(id _Nullable (^)(SharedRandomSource *))edgecaseFn shrinker:(id<SharedShrinker>)shrinker sampleFn:(id<SharedKotlinSuspendFunction2>)sampleFn __attribute__((swift_name("arbitrary(edgecaseFn:shrinker:sampleFn:)")));
+ (SharedArb<id> *)arbitraryEdgecaseFn:(id _Nullable (^)(SharedRandomSource *))edgecaseFn sampleFn:(id<SharedKotlinSuspendFunction2>)sampleFn __attribute__((swift_name("arbitrary(edgecaseFn:sampleFn:)")));
+ (SharedArb<id> *)arbitraryClassifier:(id<SharedClassifier>)classifier fn:(id<SharedKotlinSuspendFunction2>)fn __attribute__((swift_name("arbitrary(classifier:fn:)")));
+ (SharedArb<id> *)arbitraryShrinker:(id<SharedShrinker>)shrinker classifier:(id<SharedClassifier>)classifier fn:(id<SharedKotlinSuspendFunction2>)fn __attribute__((swift_name("arbitrary(shrinker:classifier:fn:)")));
+ (SharedArb<id> *)arbitraryShrinker:(id<SharedShrinker>)shrinker fn:(id<SharedKotlinSuspendFunction2>)fn __attribute__((swift_name("arbitrary(shrinker:fn:)")));
+ (SharedArb<id> *)arbitraryEdgecases:(NSArray<id> *)edgecases shrinker:(id<SharedShrinker>)shrinker fn:(id<SharedKotlinSuspendFunction2>)fn __attribute__((swift_name("arbitrary(edgecases:shrinker:fn:)")));
+ (SharedArb<id> *)arbitraryEdgecases:(NSArray<id> *)edgecases fn:(id<SharedKotlinSuspendFunction2>)fn __attribute__((swift_name("arbitrary(edgecases:fn:)")));
+ (SharedArb<id> *)arbitraryFn:(id<SharedKotlinSuspendFunction2>)fn __attribute__((swift_name("arbitrary(fn:)")));
+ (SharedArb<id> *)arbitraryBuilderShrinker:(id<SharedShrinker> _Nullable)shrinker classifier:(id<SharedClassifier> _Nullable)classifier edgecaseFn:(id _Nullable (^ _Nullable)(SharedRandomSource *))edgecaseFn builderFn:(id<SharedKotlinSuspendFunction2>)builderFn __attribute__((swift_name("arbitraryBuilder(shrinker:classifier:edgecaseFn:builderFn:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)generateArbitraryEdgecaseFn:(id _Nullable (^)(SharedRandomSource *))edgecaseFn shrinker:(id<SharedShrinker>)shrinker sampleFn:(id<SharedKotlinSuspendFunction2>)sampleFn completionHandler:(void (^)(SharedArb<id> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("generateArbitrary(edgecaseFn:shrinker:sampleFn:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)generateArbitraryEdgecaseFn:(id _Nullable (^)(SharedRandomSource *))edgecaseFn sampleFn:(id<SharedKotlinSuspendFunction2>)sampleFn completionHandler:(void (^)(SharedArb<id> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("generateArbitrary(edgecaseFn:sampleFn:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)generateArbitraryClassifier:(id<SharedClassifier>)classifier fn:(id<SharedKotlinSuspendFunction2>)fn completionHandler:(void (^)(SharedArb<id> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("generateArbitrary(classifier:fn:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)generateArbitraryShrinker:(id<SharedShrinker>)shrinker classifier:(id<SharedClassifier>)classifier fn:(id<SharedKotlinSuspendFunction2>)fn completionHandler:(void (^)(SharedArb<id> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("generateArbitrary(shrinker:classifier:fn:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)generateArbitraryShrinker:(id<SharedShrinker>)shrinker fn:(id<SharedKotlinSuspendFunction2>)fn completionHandler:(void (^)(SharedArb<id> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("generateArbitrary(shrinker:fn:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)generateArbitraryEdgecases:(NSArray<id> *)edgecases shrinker:(id<SharedShrinker>)shrinker fn:(id<SharedKotlinSuspendFunction2>)fn completionHandler:(void (^)(SharedArb<id> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("generateArbitrary(edgecases:shrinker:fn:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)generateArbitraryEdgecases:(NSArray<id> *)edgecases fn:(id<SharedKotlinSuspendFunction2>)fn completionHandler:(void (^)(SharedArb<id> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("generateArbitrary(edgecases:fn:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)generateArbitraryFn:(id<SharedKotlinSuspendFunction2>)fn completionHandler:(void (^)(SharedArb<id> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("generateArbitrary(fn:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)suspendArbitraryBuilderShrinker:(id<SharedShrinker> _Nullable)shrinker classifier:(id<SharedClassifier> _Nullable)classifier edgecaseFn:(id _Nullable (^ _Nullable)(SharedRandomSource *))edgecaseFn fn:(id<SharedKotlinSuspendFunction2>)fn completionHandler:(void (^)(SharedArb<id> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("suspendArbitraryBuilder(shrinker:classifier:edgecaseFn:fn:completionHandler:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ReflectionKt")))
@interface SharedReflectionKt : SharedBase
+ (SharedArb<id> * _Nullable)defaultForClassKClass:(id<SharedKotlinKClass>)kClass __attribute__((swift_name("defaultForClass(kClass:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TargetDefaultForClassNameKt")))
@interface SharedTargetDefaultForClassNameKt : SharedBase
+ (SharedArb<id> * _Nullable)targetDefaultForClass __attribute__((swift_name("targetDefaultForClass()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("EdgecasesKt")))
@interface SharedEdgecasesKt : SharedBase
+ (id _Nullable)edgecase:(NSArray<SharedArb<id> *> *)receiver rs:(SharedRandomSource *)rs __attribute__((swift_name("edgecase(_:rs:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CounterKt")))
@interface SharedCounterKt : SharedBase
+ (int32_t)getAndReset:(id<SharedAssertionCounter>)receiver __attribute__((swift_name("getAndReset(_:)")));
+ (void)inc:(id<SharedAssertionCounter>)receiver count:(int32_t)count __attribute__((swift_name("inc(_:count:)")));
@property (class, readonly) id<SharedAssertionCounter> assertionCounter __attribute__((swift_name("assertionCounter")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ErrorCollectorKt")))
@interface SharedErrorCollectorKt : SharedBase
+ (NSString *)clueContextAsString __attribute__((swift_name("clueContextAsString()")));
+ (void)collectOrThrow:(id<SharedErrorCollector>)receiver error:(SharedKotlinThrowable *)error __attribute__((swift_name("collectOrThrow(_:error:)")));
+ (void)collectOrThrow:(id<SharedErrorCollector>)receiver errors:(id)errors __attribute__((swift_name("collectOrThrow(_:errors:)")));
+ (SharedKotlinAssertionError * _Nullable)collectiveError:(id<SharedErrorCollector>)receiver __attribute__((swift_name("collectiveError(_:)")));
+ (void)pushErrors:(id<SharedErrorCollector>)receiver errors:(id)errors __attribute__((swift_name("pushErrors(_:errors:)")));
+ (void)throwCollectedErrors:(id<SharedErrorCollector>)receiver __attribute__((swift_name("throwCollectedErrors(_:)")));
@property (class, readonly) id<SharedErrorCollector> errorCollector __attribute__((swift_name("errorCollector")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AllKt")))
@interface SharedAllKt : SharedBase

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)allT:(id _Nullable)t assertions:(id<SharedKotlinSuspendFunction2>)assertions completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("all(t:assertions:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)allAssertions:(id<SharedKotlinSuspendFunction0>)assertions completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("all(assertions:completionHandler:)")));
+ (id _Nullable)assertSoftlyAssertions:(id _Nullable (^)(void))assertions __attribute__((swift_name("assertSoftly(assertions:)")));
+ (id _Nullable)assertSoftlyT:(id _Nullable)t assertions:(void (^)(id _Nullable, id _Nullable))assertions __attribute__((swift_name("assertSoftly(t:assertions:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AnyKt")))
@interface SharedAnyKt : SharedBase

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)anyT:(id _Nullable)t assertions:(id<SharedKotlinSuspendFunction2>)assertions completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("any(t:assertions:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)anyAssertions:(id<SharedKotlinSuspendFunction0>)assertions completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("any(assertions:completionHandler:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DiffLargeStringKt")))
@interface SharedDiffLargeStringKt : SharedBase
+ (SharedKotlinPair<NSString *, NSString *> * _Nullable)diffLargeStringExpected:(NSString *)expected actual:(NSString *)actual __attribute__((swift_name("diffLargeString(expected:actual:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ExceptionToMessageKt")))
@interface SharedExceptionToMessageKt : SharedBase
+ (NSString *)exceptionToMessageT:(SharedKotlinThrowable *)t __attribute__((swift_name("exceptionToMessage(t:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ExtractingKt")))
@interface SharedExtractingKt : SharedBase
+ (NSArray<id> *)extractingCol:(id)col extractor:(id _Nullable (^)(id _Nullable))extractor __attribute__((swift_name("extracting(col:extractor:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FailKt")))
@interface SharedFailKt : SharedBase
+ (void)failMsg:(NSString *)msg __attribute__((swift_name("fail(msg:)")));
+ (SharedKotlinAssertionError *)shouldFailBlock:(id _Nullable (^)(void))block __attribute__((swift_name("shouldFail(block:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FailuresKt")))
@interface SharedFailuresKt : SharedBase
+ (SharedKotlinThrowable *)failureExpected:(SharedExpected *)expected actual:(SharedActual *)actual prependMessage:(NSString *)prependMessage __attribute__((swift_name("failure(expected:actual:prependMessage:)")));
+ (SharedKotlinAssertionError *)failureMessage:(NSString *)message __attribute__((swift_name("failure(message:)")));
+ (SharedKotlinAssertionError *)failureMessage:(NSString *)message cause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("failure(message:cause:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("InspectingKt")))
@interface SharedInspectingKt : SharedBase
+ (void)inspectingObj:(id _Nullable)obj inspector:(void (^)(id _Nullable))inspector __attribute__((swift_name("inspecting(obj:inspector:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IntellijFormatterKt")))
@interface SharedIntellijFormatterKt : SharedBase
+ (NSString *)intellijFormatErrorExpected:(SharedExpected *)expected actual:(SharedActual *)actual __attribute__((swift_name("intellijFormatError(expected:actual:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MultiAssertionErrorKt")))
@interface SharedMultiAssertionErrorKt : SharedBase
+ (SharedKotlinThrowable *)multiAssertionErrorErrors:(NSArray<SharedKotlinThrowable *> *)errors __attribute__((swift_name("multiAssertionError(errors:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("OneKt")))
@interface SharedOneKt : SharedBase

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)oneT:(id _Nullable)t assertions:(id<SharedKotlinSuspendFunction2>)assertions completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("one(t:assertions:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)oneAssertions:(id<SharedKotlinSuspendFunction0>)assertions completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("one(assertions:completionHandler:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("RetryKt")))
@interface SharedRetryKt : SharedBase

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)retryMaxRetry:(int32_t)maxRetry timeout:(int64_t)timeout delay:(int64_t)delay multiplier:(int32_t)multiplier exceptionClass:(id<SharedKotlinKClass>)exceptionClass f:(id<SharedKotlinSuspendFunction0>)f completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("retry(maxRetry:timeout:delay:multiplier:exceptionClass:f:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)retryMaxRetry:(int32_t)maxRetry timeout:(int64_t)timeout delay:(int64_t)delay multiplier:(int32_t)multiplier f:(id<SharedKotlinSuspendFunction0>)f completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("retry(maxRetry:timeout:delay:multiplier:f:completionHandler:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CluesKt")))
@interface SharedCluesKt : SharedBase
+ (id _Nullable)withClueClue:(id _Nullable)clue thunk:(id _Nullable (^)(void))thunk __attribute__((swift_name("withClue(clue:thunk:)")));
+ (id _Nullable)withClueClue:(id<SharedKotlinLazy>)clue thunk_:(id _Nullable (^)(void))thunk __attribute__((swift_name("withClue(clue:thunk_:)")));
+ (id _Nullable)asClue:(id _Nullable)receiver block:(id _Nullable (^)(id _Nullable))block __attribute__((swift_name("asClue(_:block:)")));
+ (void)forEachAsClue:(id)receiver action:(void (^)(id _Nullable))action __attribute__((swift_name("forEachAsClue(_:action:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CovariantThrowableHandlingKt")))
@interface SharedCovariantThrowableHandlingKt : SharedBase
+ (void)shouldNotThrowBlock:(id _Nullable (^)(void))block __attribute__((swift_name("shouldNotThrow(block:)")));
+ (void)shouldNotThrowUnitBlock:(void (^)(void))block __attribute__((swift_name("shouldNotThrowUnit(block:)")));
+ (SharedKotlinThrowable *)shouldThrowBlock:(id _Nullable (^)(void))block __attribute__((swift_name("shouldThrow(block:)")));
+ (SharedKotlinThrowable *)shouldThrowUnitBlock:(void (^)(void))block __attribute__((swift_name("shouldThrowUnit(block:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AnyThrowableHandlingKt")))
@interface SharedAnyThrowableHandlingKt : SharedBase
+ (id _Nullable)shouldNotThrowAnyBlock:(id _Nullable (^)(void))block __attribute__((swift_name("shouldNotThrowAny(block:)")));
+ (void)shouldNotThrowAnyUnitBlock:(void (^)(void))block __attribute__((swift_name("shouldNotThrowAnyUnit(block:)")));
+ (void)shouldNotThrowMessageMessage:(NSString *)message block:(id _Nullable (^)(void))block __attribute__((swift_name("shouldNotThrowMessage(message:block:)")));
+ (SharedKotlinThrowable *)shouldThrowAnyBlock:(id _Nullable (^)(void))block __attribute__((swift_name("shouldThrowAny(block:)")));
+ (SharedKotlinThrowable *)shouldThrowAnyUnitBlock:(void (^)(void))block __attribute__((swift_name("shouldThrowAnyUnit(block:)")));
+ (void)shouldThrowMessageMessage:(NSString *)message block:(id _Nullable (^)(void))block __attribute__((swift_name("shouldThrowMessage(message:block:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StrictThrowableHandlingKt")))
@interface SharedStrictThrowableHandlingKt : SharedBase
+ (void)shouldNotThrowExactlyBlock:(id _Nullable (^)(void))block __attribute__((swift_name("shouldNotThrowExactly(block:)")));
+ (void)shouldNotThrowExactlyUnitBlock:(void (^)(void))block __attribute__((swift_name("shouldNotThrowExactlyUnit(block:)")));
+ (SharedKotlinThrowable *)shouldThrowExactlyBlock:(id _Nullable (^)(void))block __attribute__((swift_name("shouldThrowExactly(block:)")));
+ (SharedKotlinThrowable *)shouldThrowExactlyUnitBlock:(void (^)(void))block __attribute__((swift_name("shouldThrowExactlyUnit(block:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PrintKt")))
@interface SharedPrintKt : SharedBase
+ (id<SharedPrint> _Nullable)commonPrintForA:(id)a __attribute__((swift_name("commonPrintFor(a:)")));
+ (id<SharedPrint>)printForA:(id)a __attribute__((swift_name("printFor(a:)")));
+ (SharedPrinted *)print:(id _Nullable)receiver __attribute__((swift_name("print(_:)")));
+ (SharedPrinted *)print:(id _Nullable)receiver level:(int32_t)level __attribute__((swift_name("print(_:level:)")));
+ (SharedPrinted *)printed:(NSString *)receiver __attribute__((swift_name("printed(_:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PrintersKt")))
@interface SharedPrintersKt : SharedBase
+ (id<SharedPrint>)dataClassPrint __attribute__((swift_name("dataClassPrint()")));
+ (id<SharedPrint> _Nullable)platformPrintA:(id)a __attribute__((swift_name("platformPrint(a:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FibonacciIntervalKt")))
@interface SharedFibonacciIntervalKt : SharedBase
+ (int32_t)fibonacciN:(int32_t)n __attribute__((swift_name("fibonacci(n:)")));
+ (SharedFibonacciInterval *)fibonacci:(int64_t)receiver max:(id _Nullable)max __attribute__((swift_name("fibonacci(_:max:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("UntilKt")))
@interface SharedUntilKt : SharedBase

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)untilPatience:(SharedPatienceConfig *)patience f:(id<SharedKotlinSuspendFunction0>)f completionHandler:(void (^)(SharedBoolean * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("until(patience:f:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)untilPatience:(SharedPatienceConfig *)patience predicate:(id<SharedKotlinSuspendFunction1>)predicate f:(id<SharedKotlinSuspendFunction0>)f completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("until(patience:predicate:f:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)untilDuration:(int64_t)duration interval:(id<SharedInterval>)interval f:(id<SharedKotlinSuspendFunction0>)f completionHandler:(void (^)(SharedBoolean * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("until(duration:interval:f:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)untilDuration:(int64_t)duration interval:(id<SharedInterval>)interval predicate:(id<SharedKotlinSuspendFunction1>)predicate listener:(id<SharedUntilListener>)listener f:(id<SharedKotlinSuspendFunction0>)f completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("until(duration:interval:predicate:listener:f:completionHandler:)"))) __attribute__((deprecated("Simply move the listener code into the predicate code. Will be removed in 6.0")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)untilDuration:(int64_t)duration interval:(id<SharedInterval>)interval predicate:(id<SharedKotlinSuspendFunction1>)predicate f:(id<SharedKotlinSuspendFunction0>)f completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("until(duration:interval:predicate:f:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)untilDuration:(int64_t)duration f:(id<SharedKotlinSuspendFunction0>)f completionHandler:(void (^)(SharedBoolean * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("until(duration:f:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)untilDuration:(int64_t)duration predicate:(id<SharedKotlinSuspendFunction1>)predicate f:(id<SharedKotlinSuspendFunction0>)f completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("until(duration:predicate:f:completionHandler:)")));
+ (id<SharedUntilListener>)untilListenerF:(void (^)(id _Nullable))f __attribute__((swift_name("untilListener(f:)"))) __attribute__((deprecated("UntilListener is a functional interface. Simply use a lambda")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ExponentialIntervalKt")))
@interface SharedExponentialIntervalKt : SharedBase
+ (SharedExponentialInterval *)exponential:(int64_t)receiver factor:(double)factor max:(id _Nullable)max __attribute__((swift_name("exponential(_:factor:max:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FixedIntervalKt")))
@interface SharedFixedIntervalKt : SharedBase
+ (SharedFixedInterval *)fixed:(int64_t)receiver __attribute__((swift_name("fixed(_:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContinuallyKt")))
@interface SharedContinuallyKt : SharedBase

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)continuallyDuration:(int64_t)duration interval:(id<SharedInterval>)interval f:(id<SharedKotlinSuspendFunction0>)f completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("continually(duration:interval:f:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)continuallyDuration:(int64_t)duration poll:(int64_t)poll f:(id<SharedKotlinSuspendFunction0>)f completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("continually(duration:poll:f:completionHandler:)"))) __attribute__((deprecated("Use continually with an interval, using Duration based poll is deprecated")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("EventuallyKt")))
@interface SharedEventuallyKt : SharedBase

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)eventuallyConfig:(SharedEventuallyConfig *)config predicate:(SharedBoolean *(^)(id _Nullable))predicate listener:(id<SharedEventuallyListener>)listener f:(id<SharedKotlinSuspendFunction0>)f completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("eventually(config:predicate:listener:f:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)eventuallyDuration:(int64_t)duration interval:(id<SharedInterval>)interval listener:(id<SharedEventuallyListener>)listener f:(id<SharedKotlinSuspendFunction0>)f completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("eventually(duration:interval:listener:f:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)eventuallyDuration:(int64_t)duration interval:(id<SharedInterval>)interval predicate:(SharedBoolean *(^)(id _Nullable))predicate listener:(id<SharedEventuallyListener>)listener retries:(int32_t)retries exceptionClass:(id<SharedKotlinKClass> _Nullable)exceptionClass f:(id<SharedKotlinSuspendFunction0>)f completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("eventually(duration:interval:predicate:listener:retries:exceptionClass:f:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)eventuallyDuration:(int64_t)duration interval:(id<SharedInterval>)interval predicate:(SharedBoolean *(^)(id _Nullable))predicate f:(id<SharedKotlinSuspendFunction0>)f completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("eventually(duration:interval:predicate:f:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)eventuallyDuration:(int64_t)duration interval:(id<SharedInterval>)interval f:(id<SharedKotlinSuspendFunction0>)f completionHandler:(void (^)(id _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("eventually(duration:interval:f:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)eventuallyDuration:(int64_t)duration exceptionClass:(id<SharedKotlinKClass>)exceptionClass f:(id<SharedKotlinSuspendFunction0>)f completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("eventually(duration:exceptionClass:f:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)eventuallyDuration:(int64_t)duration poll:(int64_t)poll f:(id<SharedKotlinSuspendFunction0>)f completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("eventually(duration:poll:f:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)eventuallyDuration:(int64_t)duration f:(id<SharedKotlinSuspendFunction0>)f completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("eventually(duration:f:completionHandler:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("EqKt")))
@interface SharedEqKt : SharedBase
+ (SharedKotlinAssertionError *)actualIsNullExpected:(id)expected __attribute__((swift_name("actualIsNull(expected:)")));
+ (SharedKotlinThrowable * _Nullable)eqActual:(id _Nullable)actual expected:(id _Nullable)expected __attribute__((swift_name("eq(actual:expected:)")));
+ (SharedKotlinThrowable * _Nullable)eqActual:(id _Nullable)actual expected:(id _Nullable)expected strictNumberEq:(BOOL)strictNumberEq __attribute__((swift_name("eq(actual:expected:strictNumberEq:)")));
+ (SharedKotlinAssertionError *)expectedIsNullActual:(id)actual __attribute__((swift_name("expectedIsNull(actual:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StringEqKt")))
@interface SharedStringEqKt : SharedBase
+ (NSString *)escapeLineBreaksInput:(NSString *)input __attribute__((swift_name("escapeLineBreaks(input:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ForAll1Kt")))
@interface SharedForAll1Kt : SharedBase
+ (void)forAllTable:(SharedTable1<id> *)table testfn:(void (^)(id _Nullable))testfn __attribute__((swift_name("forAll(table:testfn:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllRows:(SharedKotlinArray<SharedRow1<id> *> *)rows testfn:(id<SharedKotlinSuspendFunction1>)testfn completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(rows:testfn:completionHandler:)")));
+ (void)forNoneTable:(SharedTable1<id> *)table testfn:(void (^)(id _Nullable))testfn __attribute__((swift_name("forNone(table:testfn:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneRows:(SharedKotlinArray<SharedRow1<id> *> *)rows testfn:(id<SharedKotlinSuspendFunction1>)testfn completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(rows:testfn:completionHandler:)")));
+ (void)forAllRows:(SharedKotlinArray<SharedRow1<id> *> *)rows testfn:(void (^)(id _Nullable))testfn __attribute__((swift_name("forAll(rows:testfn:)")));
+ (void)forNoneRows:(SharedKotlinArray<SharedRow1<id> *> *)rows testfn:(void (^)(id _Nullable))testfn __attribute__((swift_name("forNone(rows:testfn:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ForAll2Kt")))
@interface SharedForAll2Kt : SharedBase
+ (void)forAllTable:(SharedTable2<id, id> *)table testfn:(void (^)(id _Nullable, id _Nullable))testfn __attribute__((swift_name("forAll(table:testfn:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllRows:(SharedKotlinArray<SharedRow2<id, id> *> *)rows testfn:(id<SharedKotlinSuspendFunction2>)testfn completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(rows:testfn:completionHandler:)")));
+ (void)forNoneTable:(SharedTable2<id, id> *)table testfn:(void (^)(id _Nullable, id _Nullable))testfn __attribute__((swift_name("forNone(table:testfn:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneRows:(SharedKotlinArray<SharedRow2<id, id> *> *)rows testfn:(id<SharedKotlinSuspendFunction2>)testfn completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(rows:testfn:completionHandler:)")));
+ (void)forAllRows:(SharedKotlinArray<SharedRow2<id, id> *> *)rows testfn:(void (^)(id _Nullable, id _Nullable))testfn __attribute__((swift_name("forAll(rows:testfn:)")));
+ (void)forNoneRows:(SharedKotlinArray<SharedRow2<id, id> *> *)rows testfn:(void (^)(id _Nullable, id _Nullable))testfn __attribute__((swift_name("forNone(rows:testfn:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ForAll3Kt")))
@interface SharedForAll3Kt : SharedBase
+ (void)forAllTable:(SharedTable3<id, id, id> *)table testfn:(void (^)(id _Nullable, id _Nullable, id _Nullable))testfn __attribute__((swift_name("forAll(table:testfn:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllRows:(SharedKotlinArray<SharedRow3<id, id, id> *> *)rows testfn:(id<SharedKotlinSuspendFunction3>)testfn completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(rows:testfn:completionHandler:)")));
+ (void)forNoneTable:(SharedTable3<id, id, id> *)table testfn:(void (^)(id _Nullable, id _Nullable, id _Nullable))testfn __attribute__((swift_name("forNone(table:testfn:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneRows:(SharedKotlinArray<SharedRow3<id, id, id> *> *)rows testfn:(id<SharedKotlinSuspendFunction3>)testfn completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(rows:testfn:completionHandler:)")));
+ (void)forAllRows:(SharedKotlinArray<SharedRow3<id, id, id> *> *)rows testfn:(void (^)(id _Nullable, id _Nullable, id _Nullable))testfn __attribute__((swift_name("forAll(rows:testfn:)")));
+ (void)forNoneRows:(SharedKotlinArray<SharedRow3<id, id, id> *> *)rows testfn:(void (^)(id _Nullable, id _Nullable, id _Nullable))testfn __attribute__((swift_name("forNone(rows:testfn:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ForAll4Kt")))
@interface SharedForAll4Kt : SharedBase
+ (void)forAllTable:(SharedTable4<id, id, id, id> *)table testfn:(void (^)(id _Nullable, id _Nullable, id _Nullable, id _Nullable))testfn __attribute__((swift_name("forAll(table:testfn:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllRows:(SharedKotlinArray<SharedRow4<id, id, id, id> *> *)rows testfn:(id<SharedKotlinSuspendFunction4>)testfn completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(rows:testfn:completionHandler:)")));
+ (void)forNoneTable:(SharedTable4<id, id, id, id> *)table testfn:(void (^)(id _Nullable, id _Nullable, id _Nullable, id _Nullable))testfn __attribute__((swift_name("forNone(table:testfn:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneRows:(SharedKotlinArray<SharedRow4<id, id, id, id> *> *)rows testfn:(id<SharedKotlinSuspendFunction4>)testfn completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(rows:testfn:completionHandler:)")));
+ (void)forAllRows:(SharedKotlinArray<SharedRow4<id, id, id, id> *> *)rows testfn:(void (^)(id _Nullable, id _Nullable, id _Nullable, id _Nullable))testfn __attribute__((swift_name("forAll(rows:testfn:)")));
+ (void)forNoneRows:(SharedKotlinArray<SharedRow4<id, id, id, id> *> *)rows testfn:(void (^)(id _Nullable, id _Nullable, id _Nullable, id _Nullable))testfn __attribute__((swift_name("forNone(rows:testfn:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ForAll5Kt")))
@interface SharedForAll5Kt : SharedBase
+ (void)forAllTable:(SharedTable5<id, id, id, id, id> *)table testfn:(void (^)(id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))testfn __attribute__((swift_name("forAll(table:testfn:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllRows:(SharedKotlinArray<SharedRow5<id, id, id, id, id> *> *)rows testfn:(id<SharedKotlinSuspendFunction5>)testfn completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(rows:testfn:completionHandler:)")));
+ (void)forNoneTable:(SharedTable5<id, id, id, id, id> *)table testfn:(void (^)(id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))testfn __attribute__((swift_name("forNone(table:testfn:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneRows:(SharedKotlinArray<SharedRow5<id, id, id, id, id> *> *)rows testfn:(id<SharedKotlinSuspendFunction5>)testfn completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(rows:testfn:completionHandler:)")));
+ (void)forAllRows:(SharedKotlinArray<SharedRow5<id, id, id, id, id> *> *)rows testfn:(void (^)(id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))testfn __attribute__((swift_name("forAll(rows:testfn:)")));
+ (void)forNoneRows:(SharedKotlinArray<SharedRow5<id, id, id, id, id> *> *)rows testfn:(void (^)(id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))testfn __attribute__((swift_name("forNone(rows:testfn:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ForAll6Kt")))
@interface SharedForAll6Kt : SharedBase
+ (void)forAllTable:(SharedTable6<id, id, id, id, id, id> *)table testfn:(void (^)(id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))testfn __attribute__((swift_name("forAll(table:testfn:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllRows:(SharedKotlinArray<SharedRow6<id, id, id, id, id, id> *> *)rows testfn:(id<SharedKotlinSuspendFunction6>)testfn completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(rows:testfn:completionHandler:)")));
+ (void)forNoneTable:(SharedTable6<id, id, id, id, id, id> *)table testfn:(void (^)(id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))testfn __attribute__((swift_name("forNone(table:testfn:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneRows:(SharedKotlinArray<SharedRow6<id, id, id, id, id, id> *> *)rows testfn:(id<SharedKotlinSuspendFunction6>)testfn completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(rows:testfn:completionHandler:)")));
+ (void)forAllRows:(SharedKotlinArray<SharedRow6<id, id, id, id, id, id> *> *)rows testfn:(void (^)(id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))testfn __attribute__((swift_name("forAll(rows:testfn:)")));
+ (void)forNoneRows:(SharedKotlinArray<SharedRow6<id, id, id, id, id, id> *> *)rows testfn:(void (^)(id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))testfn __attribute__((swift_name("forNone(rows:testfn:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ForAll7Kt")))
@interface SharedForAll7Kt : SharedBase
+ (void)forAllTable:(SharedTable7<id, id, id, id, id, id, id> *)table testfn:(void (^)(id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))testfn __attribute__((swift_name("forAll(table:testfn:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllRows:(SharedKotlinArray<SharedRow7<id, id, id, id, id, id, id> *> *)rows testfn:(id<SharedKotlinSuspendFunction7>)testfn completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(rows:testfn:completionHandler:)")));
+ (void)forNoneTable:(SharedTable7<id, id, id, id, id, id, id> *)table testfn:(void (^)(id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))testfn __attribute__((swift_name("forNone(table:testfn:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneRows:(SharedKotlinArray<SharedRow7<id, id, id, id, id, id, id> *> *)rows testfn:(id<SharedKotlinSuspendFunction7>)testfn completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(rows:testfn:completionHandler:)")));
+ (void)forAllRows:(SharedKotlinArray<SharedRow7<id, id, id, id, id, id, id> *> *)rows testfn:(void (^)(id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))testfn __attribute__((swift_name("forAll(rows:testfn:)")));
+ (void)forNoneRows:(SharedKotlinArray<SharedRow7<id, id, id, id, id, id, id> *> *)rows testfn:(void (^)(id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))testfn __attribute__((swift_name("forNone(rows:testfn:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ForAll8Kt")))
@interface SharedForAll8Kt : SharedBase
+ (void)forAllTable:(SharedTable8<id, id, id, id, id, id, id, id> *)table testfn:(void (^)(id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))testfn __attribute__((swift_name("forAll(table:testfn:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllRows:(SharedKotlinArray<SharedRow8<id, id, id, id, id, id, id, id> *> *)rows testfn:(id<SharedKotlinSuspendFunction8>)testfn completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(rows:testfn:completionHandler:)")));
+ (void)forNoneTable:(SharedTable8<id, id, id, id, id, id, id, id> *)table testfn:(void (^)(id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))testfn __attribute__((swift_name("forNone(table:testfn:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneRows:(SharedKotlinArray<SharedRow8<id, id, id, id, id, id, id, id> *> *)rows testfn:(id<SharedKotlinSuspendFunction8>)testfn completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(rows:testfn:completionHandler:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ForAll9Kt")))
@interface SharedForAll9Kt : SharedBase
+ (void)forAllTable:(SharedTable9<id, id, id, id, id, id, id, id, id> *)table testfn:(void (^)(id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))testfn __attribute__((swift_name("forAll(table:testfn:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forAllRows:(SharedKotlinArray<SharedRow9<id, id, id, id, id, id, id, id, id> *> *)rows testfn:(id<SharedKotlinSuspendFunction9>)testfn completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forAll(rows:testfn:completionHandler:)")));
+ (void)forNoneTable:(SharedTable9<id, id, id, id, id, id, id, id, id> *)table testfn:(void (^)(id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable, id _Nullable))testfn __attribute__((swift_name("forNone(table:testfn:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forNoneRows:(SharedKotlinArray<SharedRow9<id, id, id, id, id, id, id, id, id> *> *)rows testfn:(id<SharedKotlinSuspendFunction9>)testfn completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forNone(rows:testfn:completionHandler:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HeadersKt")))
@interface SharedHeadersKt : SharedBase
+ (SharedHeaders1 *)headersA:(NSString *)a __attribute__((swift_name("headers(a:)")));
+ (SharedHeaders2 *)headersA:(NSString *)a b:(NSString *)b __attribute__((swift_name("headers(a:b:)")));
+ (SharedHeaders3 *)headersA:(NSString *)a b:(NSString *)b c:(NSString *)c __attribute__((swift_name("headers(a:b:c:)")));
+ (SharedHeaders4 *)headersA:(NSString *)a b:(NSString *)b c:(NSString *)c d:(NSString *)d __attribute__((swift_name("headers(a:b:c:d:)")));
+ (SharedHeaders5 *)headersA:(NSString *)a b:(NSString *)b c:(NSString *)c d:(NSString *)d e:(NSString *)e __attribute__((swift_name("headers(a:b:c:d:e:)")));
+ (SharedHeaders6 *)headersA:(NSString *)a b:(NSString *)b c:(NSString *)c d:(NSString *)d e:(NSString *)e f:(NSString *)f __attribute__((swift_name("headers(a:b:c:d:e:f:)")));
+ (SharedHeaders7 *)headersA:(NSString *)a b:(NSString *)b c:(NSString *)c d:(NSString *)d e:(NSString *)e f:(NSString *)f g:(NSString *)g __attribute__((swift_name("headers(a:b:c:d:e:f:g:)")));
+ (SharedHeaders8 *)headersA:(NSString *)a b:(NSString *)b c:(NSString *)c d:(NSString *)d e:(NSString *)e f:(NSString *)f g:(NSString *)g h:(NSString *)h __attribute__((swift_name("headers(a:b:c:d:e:f:g:h:)")));
+ (SharedHeaders9 *)headersA:(NSString *)a b:(NSString *)b c:(NSString *)c d:(NSString *)d e:(NSString *)e f:(NSString *)f g:(NSString *)g h:(NSString *)h i:(NSString *)i __attribute__((swift_name("headers(a:b:c:d:e:f:g:h:i:)")));
+ (SharedHeaders10 *)headersA:(NSString *)a b:(NSString *)b c:(NSString *)c d:(NSString *)d e:(NSString *)e f:(NSString *)f g:(NSString *)g h:(NSString *)h i:(NSString *)i j:(NSString *)j __attribute__((swift_name("headers(a:b:c:d:e:f:g:h:i:j:)")));
+ (SharedHeaders11 *)headersA:(NSString *)a b:(NSString *)b c:(NSString *)c d:(NSString *)d e:(NSString *)e f:(NSString *)f g:(NSString *)g h:(NSString *)h i:(NSString *)i j:(NSString *)j k:(NSString *)k __attribute__((swift_name("headers(a:b:c:d:e:f:g:h:i:j:k:)")));
+ (SharedHeaders12 *)headersA:(NSString *)a b:(NSString *)b c:(NSString *)c d:(NSString *)d e:(NSString *)e f:(NSString *)f g:(NSString *)g h:(NSString *)h i:(NSString *)i j:(NSString *)j k:(NSString *)k l:(NSString *)l __attribute__((swift_name("headers(a:b:c:d:e:f:g:h:i:j:k:l:)")));
+ (SharedHeaders13 *)headersA:(NSString *)a b:(NSString *)b c:(NSString *)c d:(NSString *)d e:(NSString *)e f:(NSString *)f g:(NSString *)g h:(NSString *)h i:(NSString *)i j:(NSString *)j k:(NSString *)k l:(NSString *)l m:(NSString *)m __attribute__((swift_name("headers(a:b:c:d:e:f:g:h:i:j:k:l:m:)")));
+ (SharedHeaders14 *)headersA:(NSString *)a b:(NSString *)b c:(NSString *)c d:(NSString *)d e:(NSString *)e f:(NSString *)f g:(NSString *)g h:(NSString *)h i:(NSString *)i j:(NSString *)j k:(NSString *)k l:(NSString *)l m:(NSString *)m n:(NSString *)n __attribute__((swift_name("headers(a:b:c:d:e:f:g:h:i:j:k:l:m:n:)")));
+ (SharedHeaders15 *)headersA:(NSString *)a b:(NSString *)b c:(NSString *)c d:(NSString *)d e:(NSString *)e f:(NSString *)f g:(NSString *)g h:(NSString *)h i:(NSString *)i j:(NSString *)j k:(NSString *)k l:(NSString *)l m:(NSString *)m n:(NSString *)n o:(NSString *)o __attribute__((swift_name("headers(a:b:c:d:e:f:g:h:i:j:k:l:m:n:o:)")));
+ (SharedHeaders16 *)headersA:(NSString *)a b:(NSString *)b c:(NSString *)c d:(NSString *)d e:(NSString *)e f:(NSString *)f g:(NSString *)g h:(NSString *)h i:(NSString *)i j:(NSString *)j k:(NSString *)k l:(NSString *)l m:(NSString *)m n:(NSString *)n o:(NSString *)o p:(NSString *)p __attribute__((swift_name("headers(a:b:c:d:e:f:g:h:i:j:k:l:m:n:o:p:)")));
+ (SharedHeaders17 *)headersA:(NSString *)a b:(NSString *)b c:(NSString *)c d:(NSString *)d e:(NSString *)e f:(NSString *)f g:(NSString *)g h:(NSString *)h i:(NSString *)i j:(NSString *)j k:(NSString *)k l:(NSString *)l m:(NSString *)m n:(NSString *)n o:(NSString *)o p:(NSString *)p q:(NSString *)q __attribute__((swift_name("headers(a:b:c:d:e:f:g:h:i:j:k:l:m:n:o:p:q:)")));
+ (SharedHeaders18 *)headersA:(NSString *)a b:(NSString *)b c:(NSString *)c d:(NSString *)d e:(NSString *)e f:(NSString *)f g:(NSString *)g h:(NSString *)h i:(NSString *)i j:(NSString *)j k:(NSString *)k l:(NSString *)l m:(NSString *)m n:(NSString *)n o:(NSString *)o p:(NSString *)p q:(NSString *)q r:(NSString *)r __attribute__((swift_name("headers(a:b:c:d:e:f:g:h:i:j:k:l:m:n:o:p:q:r:)")));
+ (SharedHeaders19 *)headersA:(NSString *)a b:(NSString *)b c:(NSString *)c d:(NSString *)d e:(NSString *)e f:(NSString *)f g:(NSString *)g h:(NSString *)h i:(NSString *)i j:(NSString *)j k:(NSString *)k l:(NSString *)l m:(NSString *)m n:(NSString *)n o:(NSString *)o p:(NSString *)p q:(NSString *)q r:(NSString *)r s:(NSString *)s __attribute__((swift_name("headers(a:b:c:d:e:f:g:h:i:j:k:l:m:n:o:p:q:r:s:)")));
+ (SharedHeaders20 *)headersA:(NSString *)a b:(NSString *)b c:(NSString *)c d:(NSString *)d e:(NSString *)e f:(NSString *)f g:(NSString *)g h:(NSString *)h i:(NSString *)i j:(NSString *)j k:(NSString *)k l:(NSString *)l m:(NSString *)m n:(NSString *)n o:(NSString *)o p:(NSString *)p q:(NSString *)q r:(NSString *)r s:(NSString *)s t:(NSString *)t __attribute__((swift_name("headers(a:b:c:d:e:f:g:h:i:j:k:l:m:n:o:p:q:r:s:t:)")));
+ (SharedHeaders21 *)headersA:(NSString *)a b:(NSString *)b c:(NSString *)c d:(NSString *)d e:(NSString *)e f:(NSString *)f g:(NSString *)g h:(NSString *)h i:(NSString *)i j:(NSString *)j k:(NSString *)k l:(NSString *)l m:(NSString *)m n:(NSString *)n o:(NSString *)o p:(NSString *)p q:(NSString *)q r:(NSString *)r s:(NSString *)s t:(NSString *)t u:(NSString *)u __attribute__((swift_name("headers(a:b:c:d:e:f:g:h:i:j:k:l:m:n:o:p:q:r:s:t:u:)")));
+ (SharedHeaders22 *)headersA:(NSString *)a b:(NSString *)b c:(NSString *)c d:(NSString *)d e:(NSString *)e f:(NSString *)f g:(NSString *)g h:(NSString *)h i:(NSString *)i j:(NSString *)j k:(NSString *)k l:(NSString *)l m:(NSString *)m n:(NSString *)n o:(NSString *)o p:(NSString *)p q:(NSString *)q r:(NSString *)r s:(NSString *)s t:(NSString *)t u:(NSString *)u v:(NSString *)v __attribute__((swift_name("headers(a:b:c:d:e:f:g:h:i:j:k:l:m:n:o:p:q:r:s:t:u:v:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("RowsKt")))
@interface SharedRowsKt : SharedBase
+ (SharedRow1<id> *)rowA:(id _Nullable)a __attribute__((swift_name("row(a:)")));
+ (SharedRow2<id, id> *)rowA:(id _Nullable)a b:(id _Nullable)b __attribute__((swift_name("row(a:b:)")));
+ (SharedRow3<id, id, id> *)rowA:(id _Nullable)a b:(id _Nullable)b c:(id _Nullable)c __attribute__((swift_name("row(a:b:c:)")));
+ (SharedRow4<id, id, id, id> *)rowA:(id _Nullable)a b:(id _Nullable)b c:(id _Nullable)c d:(id _Nullable)d __attribute__((swift_name("row(a:b:c:d:)")));
+ (SharedRow5<id, id, id, id, id> *)rowA:(id _Nullable)a b:(id _Nullable)b c:(id _Nullable)c d:(id _Nullable)d e:(id _Nullable)e __attribute__((swift_name("row(a:b:c:d:e:)")));
+ (SharedRow6<id, id, id, id, id, id> *)rowA:(id _Nullable)a b:(id _Nullable)b c:(id _Nullable)c d:(id _Nullable)d e:(id _Nullable)e f:(id _Nullable)f __attribute__((swift_name("row(a:b:c:d:e:f:)")));
+ (SharedRow7<id, id, id, id, id, id, id> *)rowA:(id _Nullable)a b:(id _Nullable)b c:(id _Nullable)c d:(id _Nullable)d e:(id _Nullable)e f:(id _Nullable)f g:(id _Nullable)g __attribute__((swift_name("row(a:b:c:d:e:f:g:)")));
+ (SharedRow8<id, id, id, id, id, id, id, id> *)rowA:(id _Nullable)a b:(id _Nullable)b c:(id _Nullable)c d:(id _Nullable)d e:(id _Nullable)e f:(id _Nullable)f g:(id _Nullable)g h:(id _Nullable)h __attribute__((swift_name("row(a:b:c:d:e:f:g:h:)")));
+ (SharedRow9<id, id, id, id, id, id, id, id, id> *)rowA:(id _Nullable)a b:(id _Nullable)b c:(id _Nullable)c d:(id _Nullable)d e:(id _Nullable)e f:(id _Nullable)f g:(id _Nullable)g h:(id _Nullable)h i:(id _Nullable)i __attribute__((swift_name("row(a:b:c:d:e:f:g:h:i:)")));
+ (SharedRow10<id, id, id, id, id, id, id, id, id, id> *)rowA:(id _Nullable)a b:(id _Nullable)b c:(id _Nullable)c d:(id _Nullable)d e:(id _Nullable)e f:(id _Nullable)f g:(id _Nullable)g h:(id _Nullable)h i:(id _Nullable)i j:(id _Nullable)j __attribute__((swift_name("row(a:b:c:d:e:f:g:h:i:j:)")));
+ (SharedRow11<id, id, id, id, id, id, id, id, id, id, id> *)rowA:(id _Nullable)a b:(id _Nullable)b c:(id _Nullable)c d:(id _Nullable)d e:(id _Nullable)e f:(id _Nullable)f g:(id _Nullable)g h:(id _Nullable)h i:(id _Nullable)i j:(id _Nullable)j k:(id _Nullable)k __attribute__((swift_name("row(a:b:c:d:e:f:g:h:i:j:k:)")));
+ (SharedRow12<id, id, id, id, id, id, id, id, id, id, id, id> *)rowA:(id _Nullable)a b:(id _Nullable)b c:(id _Nullable)c d:(id _Nullable)d e:(id _Nullable)e f:(id _Nullable)f g:(id _Nullable)g h:(id _Nullable)h i:(id _Nullable)i j:(id _Nullable)j k:(id _Nullable)k l:(id _Nullable)l __attribute__((swift_name("row(a:b:c:d:e:f:g:h:i:j:k:l:)")));
+ (SharedRow13<id, id, id, id, id, id, id, id, id, id, id, id, id> *)rowA:(id _Nullable)a b:(id _Nullable)b c:(id _Nullable)c d:(id _Nullable)d e:(id _Nullable)e f:(id _Nullable)f g:(id _Nullable)g h:(id _Nullable)h i:(id _Nullable)i j:(id _Nullable)j k:(id _Nullable)k l:(id _Nullable)l m:(id _Nullable)m __attribute__((swift_name("row(a:b:c:d:e:f:g:h:i:j:k:l:m:)")));
+ (SharedRow14<id, id, id, id, id, id, id, id, id, id, id, id, id, id> *)rowA:(id _Nullable)a b:(id _Nullable)b c:(id _Nullable)c d:(id _Nullable)d e:(id _Nullable)e f:(id _Nullable)f g:(id _Nullable)g h:(id _Nullable)h i:(id _Nullable)i j:(id _Nullable)j k:(id _Nullable)k l:(id _Nullable)l m:(id _Nullable)m n:(id _Nullable)n __attribute__((swift_name("row(a:b:c:d:e:f:g:h:i:j:k:l:m:n:)")));
+ (SharedRow15<id, id, id, id, id, id, id, id, id, id, id, id, id, id, id> *)rowA:(id _Nullable)a b:(id _Nullable)b c:(id _Nullable)c d:(id _Nullable)d e:(id _Nullable)e f:(id _Nullable)f g:(id _Nullable)g h:(id _Nullable)h i:(id _Nullable)i j:(id _Nullable)j k:(id _Nullable)k l:(id _Nullable)l m:(id _Nullable)m n:(id _Nullable)n o:(id _Nullable)o __attribute__((swift_name("row(a:b:c:d:e:f:g:h:i:j:k:l:m:n:o:)")));
+ (SharedRow16<id, id, id, id, id, id, id, id, id, id, id, id, id, id, id, id> *)rowA:(id _Nullable)a b:(id _Nullable)b c:(id _Nullable)c d:(id _Nullable)d e:(id _Nullable)e f:(id _Nullable)f g:(id _Nullable)g h:(id _Nullable)h i:(id _Nullable)i j:(id _Nullable)j k:(id _Nullable)k l:(id _Nullable)l m:(id _Nullable)m n:(id _Nullable)n o:(id _Nullable)o p:(id _Nullable)p __attribute__((swift_name("row(a:b:c:d:e:f:g:h:i:j:k:l:m:n:o:p:)")));
+ (SharedRow17<id, id, id, id, id, id, id, id, id, id, id, id, id, id, id, id, id> *)rowA:(id _Nullable)a b:(id _Nullable)b c:(id _Nullable)c d:(id _Nullable)d e:(id _Nullable)e f:(id _Nullable)f g:(id _Nullable)g h:(id _Nullable)h i:(id _Nullable)i j:(id _Nullable)j k:(id _Nullable)k l:(id _Nullable)l m:(id _Nullable)m n:(id _Nullable)n o:(id _Nullable)o p:(id _Nullable)p q:(id _Nullable)q __attribute__((swift_name("row(a:b:c:d:e:f:g:h:i:j:k:l:m:n:o:p:q:)")));
+ (SharedRow18<id, id, id, id, id, id, id, id, id, id, id, id, id, id, id, id, id, id> *)rowA:(id _Nullable)a b:(id _Nullable)b c:(id _Nullable)c d:(id _Nullable)d e:(id _Nullable)e f:(id _Nullable)f g:(id _Nullable)g h:(id _Nullable)h i:(id _Nullable)i j:(id _Nullable)j k:(id _Nullable)k l:(id _Nullable)l m:(id _Nullable)m n:(id _Nullable)n o:(id _Nullable)o p:(id _Nullable)p q:(id _Nullable)q r:(id _Nullable)r __attribute__((swift_name("row(a:b:c:d:e:f:g:h:i:j:k:l:m:n:o:p:q:r:)")));
+ (SharedRow19<id, id, id, id, id, id, id, id, id, id, id, id, id, id, id, id, id, id, id> *)rowA:(id _Nullable)a b:(id _Nullable)b c:(id _Nullable)c d:(id _Nullable)d e:(id _Nullable)e f:(id _Nullable)f g:(id _Nullable)g h:(id _Nullable)h i:(id _Nullable)i j:(id _Nullable)j k:(id _Nullable)k l:(id _Nullable)l m:(id _Nullable)m n:(id _Nullable)n o:(id _Nullable)o p:(id _Nullable)p q:(id _Nullable)q r:(id _Nullable)r s:(id _Nullable)s __attribute__((swift_name("row(a:b:c:d:e:f:g:h:i:j:k:l:m:n:o:p:q:r:s:)")));
+ (SharedRow20<id, id, id, id, id, id, id, id, id, id, id, id, id, id, id, id, id, id, id, id> *)rowA:(id _Nullable)a b:(id _Nullable)b c:(id _Nullable)c d:(id _Nullable)d e:(id _Nullable)e f:(id _Nullable)f g:(id _Nullable)g h:(id _Nullable)h i:(id _Nullable)i j:(id _Nullable)j k:(id _Nullable)k l:(id _Nullable)l m:(id _Nullable)m n:(id _Nullable)n o:(id _Nullable)o p:(id _Nullable)p q:(id _Nullable)q r:(id _Nullable)r s:(id _Nullable)s t:(id _Nullable)t __attribute__((swift_name("row(a:b:c:d:e:f:g:h:i:j:k:l:m:n:o:p:q:r:s:t:)")));
+ (SharedRow21<id, id, id, id, id, id, id, id, id, id, id, id, id, id, id, id, id, id, id, id, id> *)rowA:(id _Nullable)a b:(id _Nullable)b c:(id _Nullable)c d:(id _Nullable)d e:(id _Nullable)e f:(id _Nullable)f g:(id _Nullable)g h:(id _Nullable)h i:(id _Nullable)i j:(id _Nullable)j k:(id _Nullable)k l:(id _Nullable)l m:(id _Nullable)m n:(id _Nullable)n o:(id _Nullable)o p:(id _Nullable)p q:(id _Nullable)q r:(id _Nullable)r s:(id _Nullable)s t:(id _Nullable)t u:(id _Nullable)u __attribute__((swift_name("row(a:b:c:d:e:f:g:h:i:j:k:l:m:n:o:p:q:r:s:t:u:)")));
+ (SharedRow22<id, id, id, id, id, id, id, id, id, id, id, id, id, id, id, id, id, id, id, id, id, id> *)rowA:(id _Nullable)a b:(id _Nullable)b c:(id _Nullable)c d:(id _Nullable)d e:(id _Nullable)e f:(id _Nullable)f g:(id _Nullable)g h:(id _Nullable)h i:(id _Nullable)i j:(id _Nullable)j k:(id _Nullable)k l:(id _Nullable)l m:(id _Nullable)m n:(id _Nullable)n o:(id _Nullable)o p:(id _Nullable)p q:(id _Nullable)q r:(id _Nullable)r s:(id _Nullable)s t:(id _Nullable)t u:(id _Nullable)u v:(id _Nullable)v __attribute__((swift_name("row(a:b:c:d:e:f:g:h:i:j:k:l:m:n:o:p:q:r:s:t:u:v:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TablesKt")))
@interface SharedTablesKt : SharedBase
+ (SharedTable1<id> *)tableHeaders:(SharedHeaders1 *)headers rows:(SharedKotlinArray<SharedRow1<id> *> *)rows __attribute__((swift_name("table(headers:rows:)")));
+ (SharedTable10<id, id, id, id, id, id, id, id, id, id> *)tableHeaders:(SharedHeaders10 *)headers rows_:(SharedKotlinArray<SharedRow10<id, id, id, id, id, id, id, id, id, id> *> *)rows __attribute__((swift_name("table(headers:rows_:)")));
+ (SharedTable11<id, id, id, id, id, id, id, id, id, id, id> *)tableHeaders:(SharedHeaders11 *)headers rows__:(SharedKotlinArray<SharedRow11<id, id, id, id, id, id, id, id, id, id, id> *> *)rows __attribute__((swift_name("table(headers:rows__:)")));
+ (SharedTable12<id, id, id, id, id, id, id, id, id, id, id, id> *)tableHeaders:(SharedHeaders12 *)headers rows___:(SharedKotlinArray<SharedRow12<id, id, id, id, id, id, id, id, id, id, id, id> *> *)rows __attribute__((swift_name("table(headers:rows___:)")));
+ (SharedTable13<id, id, id, id, id, id, id, id, id, id, id, id, id> *)tableHeaders:(SharedHeaders13 *)headers rows____:(SharedKotlinArray<SharedRow13<id, id, id, id, id, id, id, id, id, id, id, id, id> *> *)rows __attribute__((swift_name("table(headers:rows____:)")));
+ (SharedTable14<id, id, id, id, id, id, id, id, id, id, id, id, id, id> *)tableHeaders:(SharedHeaders14 *)headers rows_____:(SharedKotlinArray<SharedRow14<id, id, id, id, id, id, id, id, id, id, id, id, id, id> *> *)rows __attribute__((swift_name("table(headers:rows_____:)")));
+ (SharedTable15<id, id, id, id, id, id, id, id, id, id, id, id, id, id, id> *)tableHeaders:(SharedHeaders15 *)headers rows______:(SharedKotlinArray<SharedRow15<id, id, id, id, id, id, id, id, id, id, id, id, id, id, id> *> *)rows __attribute__((swift_name("table(headers:rows______:)")));
+ (SharedTable16<id, id, id, id, id, id, id, id, id, id, id, id, id, id, id, id> *)tableHeaders:(SharedHeaders16 *)headers rows_______:(SharedKotlinArray<SharedRow16<id, id, id, id, id, id, id, id, id, id, id, id, id, id, id, id> *> *)rows __attribute__((swift_name("table(headers:rows_______:)")));
+ (SharedTable17<id, id, id, id, id, id, id, id, id, id, id, id, id, id, id, id, id> *)tableHeaders:(SharedHeaders17 *)headers rows________:(SharedKotlinArray<SharedRow17<id, id, id, id, id, id, id, id, id, id, id, id, id, id, id, id, id> *> *)rows __attribute__((swift_name("table(headers:rows________:)")));
+ (SharedTable18<id, id, id, id, id, id, id, id, id, id, id, id, id, id, id, id, id, id> *)tableHeaders:(SharedHeaders18 *)headers rows_________:(SharedKotlinArray<SharedRow18<id, id, id, id, id, id, id, id, id, id, id, id, id, id, id, id, id, id> *> *)rows __attribute__((swift_name("table(headers:rows_________:)")));
+ (SharedTable19<id, id, id, id, id, id, id, id, id, id, id, id, id, id, id, id, id, id, id> *)tableHeaders:(SharedHeaders19 *)headers rows__________:(SharedKotlinArray<SharedRow19<id, id, id, id, id, id, id, id, id, id, id, id, id, id, id, id, id, id, id> *> *)rows __attribute__((swift_name("table(headers:rows__________:)")));
+ (SharedTable2<id, id> *)tableHeaders:(SharedHeaders2 *)headers rows___________:(SharedKotlinArray<SharedRow2<id, id> *> *)rows __attribute__((swift_name("table(headers:rows___________:)")));
+ (SharedTable20<id, id, id, id, id, id, id, id, id, id, id, id, id, id, id, id, id, id, id, id> *)tableHeaders:(SharedHeaders20 *)headers rows____________:(SharedKotlinArray<SharedRow20<id, id, id, id, id, id, id, id, id, id, id, id, id, id, id, id, id, id, id, id> *> *)rows __attribute__((swift_name("table(headers:rows____________:)")));
+ (SharedTable21<id, id, id, id, id, id, id, id, id, id, id, id, id, id, id, id, id, id, id, id, id> *)tableHeaders:(SharedHeaders21 *)headers rows_____________:(SharedKotlinArray<SharedRow21<id, id, id, id, id, id, id, id, id, id, id, id, id, id, id, id, id, id, id, id, id> *> *)rows __attribute__((swift_name("table(headers:rows_____________:)")));
+ (SharedTable22<id, id, id, id, id, id, id, id, id, id, id, id, id, id, id, id, id, id, id, id, id, id> *)tableHeaders:(SharedHeaders22 *)headers rows______________:(SharedKotlinArray<SharedRow22<id, id, id, id, id, id, id, id, id, id, id, id, id, id, id, id, id, id, id, id, id, id> *> *)rows __attribute__((swift_name("table(headers:rows______________:)")));
+ (SharedTable3<id, id, id> *)tableHeaders:(SharedHeaders3 *)headers rows_______________:(SharedKotlinArray<SharedRow3<id, id, id> *> *)rows __attribute__((swift_name("table(headers:rows_______________:)")));
+ (SharedTable4<id, id, id, id> *)tableHeaders:(SharedHeaders4 *)headers rows________________:(SharedKotlinArray<SharedRow4<id, id, id, id> *> *)rows __attribute__((swift_name("table(headers:rows________________:)")));
+ (SharedTable5<id, id, id, id, id> *)tableHeaders:(SharedHeaders5 *)headers rows_________________:(SharedKotlinArray<SharedRow5<id, id, id, id, id> *> *)rows __attribute__((swift_name("table(headers:rows_________________:)")));
+ (SharedTable6<id, id, id, id, id, id> *)tableHeaders:(SharedHeaders6 *)headers rows__________________:(SharedKotlinArray<SharedRow6<id, id, id, id, id, id> *> *)rows __attribute__((swift_name("table(headers:rows__________________:)")));
+ (SharedTable7<id, id, id, id, id, id, id> *)tableHeaders:(SharedHeaders7 *)headers rows___________________:(SharedKotlinArray<SharedRow7<id, id, id, id, id, id, id> *> *)rows __attribute__((swift_name("table(headers:rows___________________:)")));
+ (SharedTable8<id, id, id, id, id, id, id, id> *)tableHeaders:(SharedHeaders8 *)headers rows____________________:(SharedKotlinArray<SharedRow8<id, id, id, id, id, id, id, id> *> *)rows __attribute__((swift_name("table(headers:rows____________________:)")));
+ (SharedTable9<id, id, id, id, id, id, id, id, id> *)tableHeaders:(SharedHeaders9 *)headers rows_____________________:(SharedKotlinArray<SharedRow9<id, id, id, id, id, id, id, id, id> *> *)rows __attribute__((swift_name("table(headers:rows_____________________:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ShouldKt")))
@interface SharedShouldKt : SharedBase
+ (id<SharedMatcher>)beExpected:(id _Nullable)expected __attribute__((swift_name("be(expected:)")));
+ (id<SharedMatcher>)equalityMatcherExpected:(id _Nullable)expected __attribute__((swift_name("equalityMatcher(expected:)")));
+ (id _Nullable)invokeMatcherT:(id _Nullable)t matcher:(id<SharedMatcher>)matcher __attribute__((swift_name("invokeMatcher(t:matcher:)")));
+ (void)should:(id _Nullable)receiver matcher:(void (^)(id _Nullable))matcher __attribute__((swift_name("should(_:matcher:)")));
+ (void)should:(id _Nullable)receiver matcher_:(id<SharedMatcher>)matcher __attribute__((swift_name("should(_:matcher_:)")));
+ (void)shouldBe:(id _Nullable)receiver expected:(id _Nullable)expected __attribute__((swift_name("shouldBe(_:expected:)")));
+ (void)shouldHave:(id _Nullable)receiver matcher:(id<SharedMatcher>)matcher __attribute__((swift_name("shouldHave(_:matcher:)")));
+ (void)shouldNot:(id _Nullable)receiver matcher:(id<SharedMatcher>)matcher __attribute__((swift_name("shouldNot(_:matcher:)")));
+ (void)shouldNotBe:(id _Nullable)receiver any:(id _Nullable)any __attribute__((swift_name("shouldNotBe(_:any:)")));
+ (void)shouldNotHave:(id _Nullable)receiver matcher:(id<SharedMatcher>)matcher __attribute__((swift_name("shouldNotHave(_:matcher:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ErrorKt")))
@interface SharedErrorKt : SharedBase
+ (void)buildAssertionErrorMsg:(NSString *)msg results:(NSArray<SharedElementResult<id> *> *)results __attribute__((swift_name("buildAssertionError(msg:results:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("RunTestsKt")))
@interface SharedRunTestsKt : SharedBase
+ (SharedElementResult<id> *)runTestT:(id _Nullable)t f:(void (^)(id _Nullable))f __attribute__((swift_name("runTest(t:f:)")));
+ (NSArray<SharedElementResult<id> *> *)runTestsCol:(id)col f:(void (^)(id _Nullable))f __attribute__((swift_name("runTests(col:f:)")));
+ (NSArray<SharedElementResult<id<SharedKotlinMapEntry>> *> *)runTestsMap:(NSDictionary<id, id> *)map f:(void (^)(id<SharedKotlinMapEntry>))f __attribute__((swift_name("runTests(map:f:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("InspectorsKt")))
@interface SharedInspectorsKt : SharedBase
+ (id)forAll:(id)receiver fn:(void (^)(id _Nullable))fn __attribute__((swift_name("forAll(_:fn:)")));
+ (NSDictionary<id, id> *)forAll:(NSDictionary<id, id> *)receiver fn_:(void (^)(id<SharedKotlinMapEntry>))fn __attribute__((swift_name("forAll(_:fn_:)")));
+ (id<SharedKotlinSequence>)forAll:(id<SharedKotlinSequence>)receiver fn__:(void (^)(id _Nullable))fn __attribute__((swift_name("forAll(_:fn__:)")));
+ (NSDictionary<id, id> *)forAllKeys:(NSDictionary<id, id> *)receiver fn:(void (^)(id _Nullable))fn __attribute__((swift_name("forAllKeys(_:fn:)")));
+ (NSDictionary<id, id> *)forAllValues:(NSDictionary<id, id> *)receiver fn:(void (^)(id _Nullable))fn __attribute__((swift_name("forAllValues(_:fn:)")));
+ (id)forAny:(id)receiver fn:(void (^)(id _Nullable))fn __attribute__((swift_name("forAny(_:fn:)")));
+ (NSDictionary<id, id> *)forAny:(NSDictionary<id, id> *)receiver fn_:(void (^)(id<SharedKotlinMapEntry>))fn __attribute__((swift_name("forAny(_:fn_:)")));
+ (id<SharedKotlinSequence>)forAny:(id<SharedKotlinSequence>)receiver fn__:(void (^)(id _Nullable))fn __attribute__((swift_name("forAny(_:fn__:)")));
+ (NSDictionary<id, id> *)forAnyKey:(NSDictionary<id, id> *)receiver fn:(void (^)(id _Nullable))fn __attribute__((swift_name("forAnyKey(_:fn:)")));
+ (NSDictionary<id, id> *)forAnyValue:(NSDictionary<id, id> *)receiver fn:(void (^)(id _Nullable))fn __attribute__((swift_name("forAnyValue(_:fn:)")));
+ (id)forAtLeast:(id)receiver k:(int32_t)k fn:(void (^)(id _Nullable))fn __attribute__((swift_name("forAtLeast(_:k:fn:)")));
+ (NSDictionary<id, id> *)forAtLeast:(NSDictionary<id, id> *)receiver k:(int32_t)k fn_:(void (^)(id<SharedKotlinMapEntry>))fn __attribute__((swift_name("forAtLeast(_:k:fn_:)")));
+ (id<SharedKotlinSequence>)forAtLeast:(id<SharedKotlinSequence>)receiver k:(int32_t)k fn__:(void (^)(id _Nullable))fn __attribute__((swift_name("forAtLeast(_:k:fn__:)")));
+ (id)forAtLeastOne:(id)receiver f:(void (^)(id _Nullable))f __attribute__((swift_name("forAtLeastOne(_:f:)")));
+ (NSDictionary<id, id> *)forAtLeastOne:(NSDictionary<id, id> *)receiver fn:(void (^)(id<SharedKotlinMapEntry>))fn __attribute__((swift_name("forAtLeastOne(_:fn:)")));
+ (id<SharedKotlinSequence>)forAtLeastOne:(id<SharedKotlinSequence>)receiver fn_:(void (^)(id _Nullable))fn __attribute__((swift_name("forAtLeastOne(_:fn_:)")));
+ (NSDictionary<id, id> *)forAtLeastOneKey:(NSDictionary<id, id> *)receiver fn:(void (^)(id _Nullable))fn __attribute__((swift_name("forAtLeastOneKey(_:fn:)")));
+ (NSDictionary<id, id> *)forAtLeastOneValue:(NSDictionary<id, id> *)receiver fn:(void (^)(id _Nullable))fn __attribute__((swift_name("forAtLeastOneValue(_:fn:)")));
+ (id)forAtMost:(id)receiver k:(int32_t)k fn:(void (^)(id _Nullable))fn __attribute__((swift_name("forAtMost(_:k:fn:)")));
+ (NSDictionary<id, id> *)forAtMost:(NSDictionary<id, id> *)receiver k:(int32_t)k fn_:(void (^)(id<SharedKotlinMapEntry>))fn __attribute__((swift_name("forAtMost(_:k:fn_:)")));
+ (id<SharedKotlinSequence>)forAtMost:(id<SharedKotlinSequence>)receiver k:(int32_t)k fn__:(void (^)(id _Nullable))fn __attribute__((swift_name("forAtMost(_:k:fn__:)")));
+ (id)forAtMostOne:(id)receiver fn:(void (^)(id _Nullable))fn __attribute__((swift_name("forAtMostOne(_:fn:)")));
+ (NSDictionary<id, id> *)forAtMostOne:(NSDictionary<id, id> *)receiver fn_:(void (^)(id<SharedKotlinMapEntry>))fn __attribute__((swift_name("forAtMostOne(_:fn_:)")));
+ (id<SharedKotlinSequence>)forAtMostOne:(id<SharedKotlinSequence>)receiver fn__:(void (^)(id _Nullable))fn __attribute__((swift_name("forAtMostOne(_:fn__:)")));
+ (NSDictionary<id, id> *)forAtMostOneKey:(NSDictionary<id, id> *)receiver fn:(void (^)(id _Nullable))fn __attribute__((swift_name("forAtMostOneKey(_:fn:)")));
+ (NSDictionary<id, id> *)forAtMostOneValue:(NSDictionary<id, id> *)receiver fn:(void (^)(id _Nullable))fn __attribute__((swift_name("forAtMostOneValue(_:fn:)")));
+ (id)forExactly:(id)receiver k:(int32_t)k fn:(void (^)(id _Nullable))fn __attribute__((swift_name("forExactly(_:k:fn:)")));
+ (NSDictionary<id, id> *)forExactly:(NSDictionary<id, id> *)receiver k:(int32_t)k fn_:(void (^)(id<SharedKotlinMapEntry>))fn __attribute__((swift_name("forExactly(_:k:fn_:)")));
+ (id<SharedKotlinSequence>)forExactly:(id<SharedKotlinSequence>)receiver k:(int32_t)k fn__:(void (^)(id _Nullable))fn __attribute__((swift_name("forExactly(_:k:fn__:)")));
+ (NSDictionary<id, id> *)forKeysAtLeast:(NSDictionary<id, id> *)receiver k:(int32_t)k fn:(void (^)(id _Nullable))fn __attribute__((swift_name("forKeysAtLeast(_:k:fn:)")));
+ (NSDictionary<id, id> *)forKeysAtMost:(NSDictionary<id, id> *)receiver k:(int32_t)k fn:(void (^)(id _Nullable))fn __attribute__((swift_name("forKeysAtMost(_:k:fn:)")));
+ (NSDictionary<id, id> *)forKeysExactly:(NSDictionary<id, id> *)receiver k:(int32_t)k fn:(void (^)(id _Nullable))fn __attribute__((swift_name("forKeysExactly(_:k:fn:)")));
+ (id)forNone:(id)receiver f:(void (^)(id _Nullable))f __attribute__((swift_name("forNone(_:f:)")));
+ (NSDictionary<id, id> *)forNone:(NSDictionary<id, id> *)receiver fn:(void (^)(id<SharedKotlinMapEntry>))fn __attribute__((swift_name("forNone(_:fn:)")));
+ (id<SharedKotlinSequence>)forNone:(id<SharedKotlinSequence>)receiver fn_:(void (^)(id _Nullable))fn __attribute__((swift_name("forNone(_:fn_:)")));
+ (NSDictionary<id, id> *)forNoneKey:(NSDictionary<id, id> *)receiver fn:(void (^)(id _Nullable))fn __attribute__((swift_name("forNoneKey(_:fn:)")));
+ (NSDictionary<id, id> *)forNoneValue:(NSDictionary<id, id> *)receiver fn:(void (^)(id _Nullable))fn __attribute__((swift_name("forNoneValue(_:fn:)")));
+ (id)forOne:(id)receiver fn:(void (^)(id _Nullable))fn __attribute__((swift_name("forOne(_:fn:)")));
+ (NSDictionary<id, id> *)forOne:(NSDictionary<id, id> *)receiver fn_:(void (^)(id<SharedKotlinMapEntry>))fn __attribute__((swift_name("forOne(_:fn_:)")));
+ (id<SharedKotlinSequence>)forOne:(id<SharedKotlinSequence>)receiver fn__:(void (^)(id _Nullable))fn __attribute__((swift_name("forOne(_:fn__:)")));
+ (NSDictionary<id, id> *)forOneKey:(NSDictionary<id, id> *)receiver fn:(void (^)(id _Nullable))fn __attribute__((swift_name("forOneKey(_:fn:)")));
+ (NSDictionary<id, id> *)forOneValue:(NSDictionary<id, id> *)receiver fn:(void (^)(id _Nullable))fn __attribute__((swift_name("forOneValue(_:fn:)")));
+ (id)forSome:(id)receiver fn:(void (^)(id _Nullable))fn __attribute__((swift_name("forSome(_:fn:)")));
+ (NSDictionary<id, id> *)forSome:(NSDictionary<id, id> *)receiver fn_:(void (^)(id<SharedKotlinMapEntry>))fn __attribute__((swift_name("forSome(_:fn_:)")));
+ (id<SharedKotlinSequence>)forSome:(id<SharedKotlinSequence>)receiver fn__:(void (^)(id _Nullable))fn __attribute__((swift_name("forSome(_:fn__:)")));
+ (NSDictionary<id, id> *)forSomeKeys:(NSDictionary<id, id> *)receiver fn:(void (^)(id _Nullable))fn __attribute__((swift_name("forSomeKeys(_:fn:)")));
+ (NSDictionary<id, id> *)forSomeValues:(NSDictionary<id, id> *)receiver fn:(void (^)(id _Nullable))fn __attribute__((swift_name("forSomeValues(_:fn:)")));
+ (NSDictionary<id, id> *)forValuesAtLeast:(NSDictionary<id, id> *)receiver k:(int32_t)k fn:(void (^)(id _Nullable))fn __attribute__((swift_name("forValuesAtLeast(_:k:fn:)")));
+ (NSDictionary<id, id> *)forValuesAtMost:(NSDictionary<id, id> *)receiver k:(int32_t)k fn:(void (^)(id _Nullable))fn __attribute__((swift_name("forValuesAtMost(_:k:fn:)")));
+ (NSDictionary<id, id> *)forValuesExactly:(NSDictionary<id, id> *)receiver k:(int32_t)k fn:(void (^)(id _Nullable))fn __attribute__((swift_name("forValuesExactly(_:k:fn:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("InspectorAliasesKt")))
@interface SharedInspectorAliasesKt : SharedBase
+ (id)shouldForAll:(id)receiver fn:(void (^)(id _Nullable))fn __attribute__((swift_name("shouldForAll(_:fn:)")));
+ (id<SharedKotlinSequence>)shouldForAll:(id<SharedKotlinSequence>)receiver fn_:(void (^)(id _Nullable))fn __attribute__((swift_name("shouldForAll(_:fn_:)")));
+ (id)shouldForAny:(id)receiver fn:(void (^)(id _Nullable))fn __attribute__((swift_name("shouldForAny(_:fn:)")));
+ (id<SharedKotlinSequence>)shouldForAny:(id<SharedKotlinSequence>)receiver fn_:(void (^)(id _Nullable))fn __attribute__((swift_name("shouldForAny(_:fn_:)")));
+ (id)shouldForAtLeast:(id)receiver k:(int32_t)k fn:(void (^)(id _Nullable))fn __attribute__((swift_name("shouldForAtLeast(_:k:fn:)")));
+ (id<SharedKotlinSequence>)shouldForAtLeast:(id<SharedKotlinSequence>)receiver k:(int32_t)k fn_:(void (^)(id _Nullable))fn __attribute__((swift_name("shouldForAtLeast(_:k:fn_:)")));
+ (id)shouldForAtLeastOne:(id)receiver fn:(void (^)(id _Nullable))fn __attribute__((swift_name("shouldForAtLeastOne(_:fn:)")));
+ (id<SharedKotlinSequence>)shouldForAtLeastOne:(id<SharedKotlinSequence>)receiver fn_:(void (^)(id _Nullable))fn __attribute__((swift_name("shouldForAtLeastOne(_:fn_:)")));
+ (id)shouldForAtMost:(id)receiver k:(int32_t)k fn:(void (^)(id _Nullable))fn __attribute__((swift_name("shouldForAtMost(_:k:fn:)")));
+ (id<SharedKotlinSequence>)shouldForAtMost:(id<SharedKotlinSequence>)receiver k:(int32_t)k fn_:(void (^)(id _Nullable))fn __attribute__((swift_name("shouldForAtMost(_:k:fn_:)")));
+ (id)shouldForAtMostOne:(id)receiver fn:(void (^)(id _Nullable))fn __attribute__((swift_name("shouldForAtMostOne(_:fn:)")));
+ (id<SharedKotlinSequence>)shouldForAtMostOne:(id<SharedKotlinSequence>)receiver fn_:(void (^)(id _Nullable))fn __attribute__((swift_name("shouldForAtMostOne(_:fn_:)")));
+ (id)shouldForExactly:(id)receiver k:(int32_t)k fn:(void (^)(id _Nullable))fn __attribute__((swift_name("shouldForExactly(_:k:fn:)")));
+ (id<SharedKotlinSequence>)shouldForExactly:(id<SharedKotlinSequence>)receiver k:(int32_t)k fn_:(void (^)(id _Nullable))fn __attribute__((swift_name("shouldForExactly(_:k:fn_:)")));
+ (id)shouldForNone:(id)receiver fn:(void (^)(id _Nullable))fn __attribute__((swift_name("shouldForNone(_:fn:)")));
+ (id<SharedKotlinSequence>)shouldForNone:(id<SharedKotlinSequence>)receiver fn_:(void (^)(id _Nullable))fn __attribute__((swift_name("shouldForNone(_:fn_:)")));
+ (id)shouldForOne:(id)receiver fn:(void (^)(id _Nullable))fn __attribute__((swift_name("shouldForOne(_:fn:)")));
+ (id<SharedKotlinSequence>)shouldForOne:(id<SharedKotlinSequence>)receiver fn_:(void (^)(id _Nullable))fn __attribute__((swift_name("shouldForOne(_:fn_:)")));
+ (id)shouldForSome:(id)receiver fn:(void (^)(id _Nullable))fn __attribute__((swift_name("shouldForSome(_:fn:)")));
+ (id<SharedKotlinSequence>)shouldForSome:(id<SharedKotlinSequence>)receiver fn_:(void (^)(id _Nullable))fn __attribute__((swift_name("shouldForSome(_:fn_:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PlatformKt")))
@interface SharedPlatformKt : SharedBase
@property (class, readonly) SharedPlatform *platform __attribute__((swift_name("platform")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CollectionsKt")))
@interface SharedCollectionsKt : SharedBase
+ (SharedMutableDictionary<id, id> *)concurrentHashMap __attribute__((swift_name("concurrentHashMap()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IntellijKt")))
@interface SharedIntellijKt : SharedBase
+ (BOOL)isIntellij __attribute__((swift_name("isIntellij()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("RunBlockingKt")))
@interface SharedRunBlockingKt : SharedBase
+ (id _Nullable)runBlockingF:(id<SharedKotlinSuspendFunction0>)f __attribute__((swift_name("runBlocking(f:)")));
+ (void)runPromiseF:(id<SharedKotlinSuspendFunction0>)f __attribute__((swift_name("runPromise(f:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ResultsKt")))
@interface SharedResultsKt : SharedBase
+ (id _Nullable)collect:(NSArray<id> *)receiver f:(SharedKotlinThrowable *(^)(NSArray<SharedKotlinThrowable *> *))f __attribute__((swift_name("collect(_:f:)")));
+ (id _Nullable)flatMap:(id _Nullable)receiver fn:(id _Nullable (^)(id _Nullable))fn __attribute__((swift_name("flatMap(_:fn:)")));
+ (id _Nullable)mapError:(id _Nullable)receiver f:(SharedKotlinThrowable *(^)(SharedKotlinThrowable *))f __attribute__((swift_name("mapError(_:f:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ReflectionKt_")))
@interface SharedReflectionKt_ : SharedBase
@property (class, readonly) id<SharedReflection> reflection __attribute__((swift_name("reflection")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StacktracesKt")))
@interface SharedStacktracesKt : SharedBase
@property (class) BOOL shouldRemoveKotestElementsFromStacktrace __attribute__((swift_name("shouldRemoveKotestElementsFromStacktrace")));
@property (class, readonly) id<SharedStackTraces> stacktraces __attribute__((swift_name("stacktraces")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LoggerKt")))
@interface SharedLoggerKt : SharedBase
+ (void)logF:(NSString *(^)(void))f __attribute__((swift_name("log(f:)")));
+ (void)logT:(SharedKotlinThrowable * _Nullable)t f:(NSString *(^)(void))f __attribute__((swift_name("log(t:f:)")));
@property (class, readonly) SharedKotlinTimeMark *start __attribute__((swift_name("start")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SyspropKt")))
@interface SharedSyspropKt : SharedBase
+ (NSString * _Nullable)envName:(NSString *)name __attribute__((swift_name("env(name:)")));
+ (NSString * _Nullable)syspropName:(NSString *)name __attribute__((swift_name("sysprop(name:)")));
+ (id _Nullable)syspropKey:(NSString *)key default:(id _Nullable)default_ converter:(id _Nullable (^)(NSString *))converter __attribute__((swift_name("sysprop(key:default:converter:)")));
+ (BOOL)syspropKey:(NSString *)key default:(BOOL)default_ __attribute__((swift_name("sysprop(key:default:)")));
+ (double)syspropKey:(NSString *)key default_:(double)default_ __attribute__((swift_name("sysprop(key:default_:)")));
+ (int32_t)syspropKey:(NSString *)key default__:(int32_t)default_ __attribute__((swift_name("sysprop(key:default__:)")));
+ (NSString *)syspropKey:(NSString *)key default___:(NSString *)default_ __attribute__((swift_name("sysprop(key:default___:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StableKt")))
@interface SharedStableKt : SharedBase
+ (BOOL)isStableKclass:(id<SharedKotlinKClass>)kclass __attribute__((swift_name("isStable(kclass:)")));
+ (BOOL)isStableType:(id<SharedKotlinKType>)type __attribute__((swift_name("isStable(type:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ReplayKt")))
@interface SharedReplayKt : SharedBase

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)replayTimes:(int32_t)times threads:(int32_t)threads before:(id<SharedKotlinSuspendFunction1>)before after:(id<SharedKotlinSuspendFunction1>)after action:(id<SharedKotlinSuspendFunction1>)action completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("replay(times:threads:before:after:action:completionHandler:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TimeKt")))
@interface SharedTimeKt : SharedBase
+ (int64_t)timeInMillis __attribute__((swift_name("timeInMillis()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("UuidKt_")))
@interface SharedUuidKt_ : SharedBase
+ (NSString *)uniqueId __attribute__((swift_name("uniqueId()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WriteLogKt")))
@interface SharedWriteLogKt : SharedBase
+ (void)writeLogStart:(SharedKotlinTimeMark *)start t:(SharedKotlinThrowable * _Nullable)t f:(NSString *(^)(void))f __attribute__((swift_name("writeLog(start:t:f:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ReflectionKt__")))
@interface SharedReflectionKt__ : SharedBase
+ (id _Nullable)annotation:(id<SharedKotlinKClass>)receiver __attribute__((swift_name("annotation(_:)")));
+ (NSArray<id> *)annotations:(id<SharedKotlinKClass>)receiver __attribute__((swift_name("annotations(_:)")));
+ (NSString *)bestName:(id<SharedKotlinKClass>)receiver __attribute__((swift_name("bestName(_:)")));
+ (BOOL)hasAnnotation:(id<SharedKotlinKClass>)receiver __attribute__((swift_name("hasAnnotation(_:)")));
+ (id)doNewInstanceNoArgConstructor:(id<SharedKotlinKClass>)receiver __attribute__((swift_name("doNewInstanceNoArgConstructor(_:)")));
+ (id)doNewInstanceNoArgConstructorOrObjectInstance:(id<SharedKotlinKClass>)receiver __attribute__((swift_name("doNewInstanceNoArgConstructorOrObjectInstance(_:)")));
+ (NSString * _Nullable)qualifiedNameOrNull:(id<SharedKotlinKClass>)receiver __attribute__((swift_name("qualifiedNameOrNull(_:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpClientKt")))
@interface SharedHttpClientKt : SharedBase
+ (SharedHttpClient *)HttpClientBlock:(void (^)(SharedHttpClientConfig<id> *))block __attribute__((swift_name("HttpClient(block:)")));
+ (SharedHttpClient *)HttpClientEngine:(id<SharedHttpClientEngine>)engine block:(void (^)(SharedHttpClientConfig<id> *))block __attribute__((swift_name("HttpClient(engine:block:)")));
+ (SharedHttpClient *)HttpClientEngineFactory:(id<SharedHttpClientEngineFactory>)engineFactory block:(void (^)(SharedHttpClientConfig<SharedHttpClientEngineConfig *> *))block __attribute__((swift_name("HttpClient(engineFactory:block:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TypeInfoKt")))
@interface SharedTypeInfoKt : SharedBase
+ (SharedTypeInfo *)typeInfo __attribute__((swift_name("typeInfo()"))) __attribute__((deprecated("This was moved to another package.")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CIOKt")))
@interface SharedCIOKt : SharedBase
@property (class, readonly) int32_t DEFAULT_HTTP_BUFFER_SIZE __attribute__((swift_name("DEFAULT_HTTP_BUFFER_SIZE")));
@property (class, readonly) int32_t DEFAULT_HTTP_POOL_SIZE __attribute__((swift_name("DEFAULT_HTTP_POOL_SIZE")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HeadersKt_")))
@interface SharedHeadersKt_ : SharedBase
+ (id<SharedHeaders>)buildHeadersBlock:(void (^)(SharedHeadersBuilder *))block __attribute__((swift_name("buildHeaders(block:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("BuildersKt_")))
@interface SharedBuildersKt_ : SharedBase
+ (SharedHttpRequestBuilder *)requestBlock:(void (^)(SharedHttpRequestBuilder *))block __attribute__((swift_name("request(block:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FormDslKt")))
@interface SharedFormDslKt : SharedBase
+ (NSArray<SharedPartData *> *)formDataBlock:(void (^)(SharedFormBuilder *))block __attribute__((swift_name("formData(block:)")));
+ (NSArray<SharedPartData *> *)formDataValues:(SharedKotlinArray<SharedFormPart<id> *> *)values __attribute__((swift_name("formData(values:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpClientEngineCapabilityKt")))
@interface SharedHttpClientEngineCapabilityKt : SharedBase
@property (class, readonly) NSSet<SharedHttpTimeoutFeature *> *DEFAULT_CAPABILITIES __attribute__((swift_name("DEFAULT_CAPABILITIES")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("UtilsKt")))
@interface SharedUtilsKt : SharedBase

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)callContextWithCompletionHandler:(void (^)(id<SharedKotlinCoroutineContext> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("callContext(completionHandler:)")));
+ (void)mergeHeadersRequestHeaders:(id<SharedHeaders>)requestHeaders content:(SharedOutgoingContent *)content block:(void (^)(NSString *, NSString *))block __attribute__((swift_name("mergeHeaders(requestHeaders:content:block:)")));
@property (class, readonly) NSString *KTOR_DEFAULT_USER_AGENT __attribute__((swift_name("KTOR_DEFAULT_USER_AGENT")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpClientEngineKt")))
@interface SharedHttpClientEngineKt : SharedBase
+ (id<SharedHttpClientEngineFactory>)config:(id<SharedHttpClientEngineFactory>)receiver nested:(void (^)(SharedHttpClientEngineConfig *))nested __attribute__((swift_name("config(_:nested:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpTimeoutKt")))
@interface SharedHttpTimeoutKt : SharedBase
+ (SharedConnectTimeoutException *)ConnectTimeoutExceptionRequest:(SharedHttpRequestData *)request cause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("ConnectTimeoutException(request:cause:)")));
+ (SharedConnectTimeoutException *)ConnectTimeoutExceptionUrl:(NSString *)url timeout:(SharedLong * _Nullable)timeout cause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("ConnectTimeoutException(url:timeout:cause:)")));
+ (SharedSocketTimeoutException *)SocketTimeoutExceptionRequest:(SharedHttpRequestData *)request cause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("SocketTimeoutException(request:cause:)")));
+ (int32_t)convertLongTimeoutToIntWithInfiniteAsZeroTimeout:(int64_t)timeout __attribute__((swift_name("convertLongTimeoutToIntWithInfiniteAsZero(timeout:)")));
+ (int64_t)convertLongTimeoutToLongWithInfiniteAsZeroTimeout:(int64_t)timeout __attribute__((swift_name("convertLongTimeoutToLongWithInfiniteAsZero(timeout:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CookiesStorageKt")))
@interface SharedCookiesStorageKt : SharedBase

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)addCookie:(id<SharedCookiesStorage>)receiver urlString:(NSString *)urlString cookie:(SharedCookie *)cookie completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("addCookie(_:urlString:cookie:completionHandler:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpCookiesKt")))
@interface SharedHttpCookiesKt : SharedBase
+ (SharedCookie * _Nullable)get:(NSArray<SharedCookie *> *)receiver name:(NSString *)name __attribute__((swift_name("get(_:name:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TimeoutExceptionsCommonKt")))
@interface SharedTimeoutExceptionsCommonKt : SharedBase
+ (id<SharedByteReadChannel>)mapEngineExceptions:(id<SharedCoroutineScope>)receiver input:(id<SharedByteReadChannel>)input request:(SharedHttpRequestData *)request __attribute__((swift_name("mapEngineExceptions(_:input:request:)")));
+ (id<SharedByteWriteChannel>)mapEngineExceptions:(id<SharedCoroutineScope>)receiver output:(id<SharedByteWriteChannel>)output request:(SharedHttpRequestData *)request __attribute__((swift_name("mapEngineExceptions(_:output:request:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FlowExtensionsKt")))
@interface SharedFlowExtensionsKt : SharedBase
+ (id<SharedFlow>)mapToList:(id<SharedFlow>)receiver context:(id<SharedKotlinCoroutineContext>)context __attribute__((swift_name("mapToList(_:context:)")));
+ (id<SharedFlow>)mapToOne:(id<SharedFlow>)receiver context:(id<SharedKotlinCoroutineContext>)context __attribute__((swift_name("mapToOne(_:context:)")));
+ (id<SharedFlow>)mapToOneNotNull:(id<SharedFlow>)receiver context:(id<SharedKotlinCoroutineContext>)context __attribute__((swift_name("mapToOneNotNull(_:context:)")));
+ (id<SharedFlow>)mapToOneOrDefault:(id<SharedFlow>)receiver defaultValue:(id)defaultValue context:(id<SharedKotlinCoroutineContext>)context __attribute__((swift_name("mapToOneOrDefault(_:defaultValue:context:)")));
+ (id<SharedFlow>)mapToOneOrNull:(id<SharedFlow>)receiver context:(id<SharedKotlinCoroutineContext>)context __attribute__((swift_name("mapToOneOrNull(_:context:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ChunkedTransferEncodingKt")))
@interface SharedChunkedTransferEncodingKt : SharedBase

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)decodeChunkedInput:(id<SharedByteReadChannel>)input out:(id<SharedByteWriteChannel>)out completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("decodeChunked(input:out:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)decodeChunkedInput:(id<SharedByteReadChannel>)input out:(id<SharedByteWriteChannel>)out contentLength:(int64_t)contentLength completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("decodeChunked(input:out:contentLength:completionHandler:)"))) __attribute__((deprecated("The contentLength is ignored for chunked transfer encoding")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)encodeChunkedOutput:(id<SharedByteWriteChannel>)output input:(id<SharedByteReadChannel>)input completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("encodeChunked(output:input:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)encodeChunkedOutput:(id<SharedByteWriteChannel>)output coroutineContext:(id<SharedKotlinCoroutineContext>)coroutineContext completionHandler:(void (^)(id<SharedReaderJob> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("encodeChunked(output:coroutineContext:completionHandler:)")));
+ (id<SharedWriterJob>)decodeChunked:(id<SharedCoroutineScope>)receiver input:(id<SharedByteReadChannel>)input __attribute__((swift_name("decodeChunked(_:input:)"))) __attribute__((deprecated("Specify content length if known or pass -1L")));
+ (id<SharedWriterJob>)decodeChunked:(id<SharedCoroutineScope>)receiver input:(id<SharedByteReadChannel>)input contentLength:(int64_t)contentLength __attribute__((swift_name("decodeChunked(_:input:contentLength:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpBodyKt")))
@interface SharedHttpBodyKt : SharedBase
+ (BOOL)expectHttpBodyMethod:(SharedHttpMethod *)method contentLength:(int64_t)contentLength transferEncoding:(id _Nullable)transferEncoding connectionOptions:(SharedConnectionOptions * _Nullable)connectionOptions contentType:(id _Nullable)contentType __attribute__((swift_name("expectHttpBody(method:contentLength:transferEncoding:connectionOptions:contentType:)")));
+ (BOOL)expectHttpBodyRequest:(SharedRequest *)request __attribute__((swift_name("expectHttpBody(request:)")));
+ (BOOL)expectHttpUpgradeMethod:(SharedHttpMethod *)method upgrade:(id _Nullable)upgrade connectionOptions:(SharedConnectionOptions * _Nullable)connectionOptions __attribute__((swift_name("expectHttpUpgrade(method:upgrade:connectionOptions:)")));
+ (BOOL)expectHttpUpgradeRequest:(SharedRequest *)request __attribute__((swift_name("expectHttpUpgrade(request:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)parseHttpBodyHeaders:(SharedHttpHeadersMap *)headers input:(id<SharedByteReadChannel>)input out:(id<SharedByteWriteChannel>)out completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("parseHttpBody(headers:input:out:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)parseHttpBodyContentLength:(int64_t)contentLength transferEncoding:(id _Nullable)transferEncoding connectionOptions:(SharedConnectionOptions * _Nullable)connectionOptions input:(id<SharedByteReadChannel>)input out:(id<SharedByteWriteChannel>)out completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("parseHttpBody(contentLength:transferEncoding:connectionOptions:input:out:completionHandler:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpParserKt")))
@interface SharedHttpParserKt : SharedBase

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)parseHeadersInput:(id<SharedByteReadChannel>)input completionHandler:(void (^)(SharedHttpHeadersMap * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("parseHeaders(input:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)parseRequestInput:(id<SharedByteReadChannel>)input completionHandler:(void (^)(SharedRequest * _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("parseRequest(input:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)parseResponseInput:(id<SharedByteReadChannel>)input completionHandler:(void (^)(SharedResponse * _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("parseResponse(input:completionHandler:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DefaultWebSocketSessionNativeKt")))
@interface SharedDefaultWebSocketSessionNativeKt : SharedBase
+ (id<SharedDefaultWebSocketSession>)DefaultWebSocketSessionSession:(id<SharedWebSocketSession>)session pingInterval:(int64_t)pingInterval timeoutMillis:(int64_t)timeoutMillis __attribute__((swift_name("DefaultWebSocketSession(session:pingInterval:timeoutMillis:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WebSocketExtensionHeaderKt")))
@interface SharedWebSocketExtensionHeaderKt : SharedBase
+ (NSArray<SharedWebSocketExtensionHeader *> *)parseWebSocketExtensionsValue:(NSString *)value __attribute__((swift_name("parseWebSocketExtensions(value:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WebSocketSessionKt")))
@interface SharedWebSocketSessionKt : SharedBase

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)close:(id<SharedWebSocketSession>)receiver reason:(SharedCloseReason *)reason completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("close(_:reason:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)close:(id<SharedWebSocketSession>)receiver cause:(SharedKotlinThrowable * _Nullable)cause completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("close(_:cause:completionHandler:)"))) __attribute__((deprecated("Close with reason or terminate instead.")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)closeExceptionally:(id<SharedWebSocketSession>)receiver cause:(SharedKotlinThrowable *)cause completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("closeExceptionally(_:cause:completionHandler:)")));
+ (id<SharedWebSocketExtension>)extension:(id<SharedWebSocketSession>)receiver extension:(id<SharedWebSocketExtensionFactory>)extension __attribute__((swift_name("extension(_:extension:)")));
+ (id<SharedWebSocketExtension> _Nullable)extensionOrNull:(id<SharedWebSocketSession>)receiver extension:(id<SharedWebSocketExtensionFactory>)extension __attribute__((swift_name("extensionOrNull(_:extension:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)send:(id<SharedWebSocketSession>)receiver content:(SharedKotlinByteArray *)content completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("send(_:content:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)send:(id<SharedWebSocketSession>)receiver content:(NSString *)content completionHandler_:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("send(_:content:completionHandler_:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("URLBuilderKt")))
@interface SharedURLBuilderKt : SharedBase
@property (class, readonly) int32_t DEFAULT_PORT __attribute__((swift_name("DEFAULT_PORT")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("URLUtilsKt")))
@interface SharedURLUtilsKt : SharedBase
+ (SharedURLBuilder *)URLBuilderBuilder:(SharedURLBuilder *)builder __attribute__((swift_name("URLBuilder(builder:)")));
+ (SharedURLBuilder *)URLBuilderUrl:(SharedUrl *)url __attribute__((swift_name("URLBuilder(url:)")));
+ (SharedURLBuilder *)URLBuilderUrlString:(NSString *)urlString __attribute__((swift_name("URLBuilder(urlString:)")));
+ (SharedUrl *)UrlBuilder:(SharedURLBuilder *)builder __attribute__((swift_name("Url(builder:)")));
+ (SharedUrl *)UrlUrlString:(NSString *)urlString __attribute__((swift_name("Url(urlString:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContentRangeKt")))
@interface SharedContentRangeKt : SharedBase
+ (NSString *)contentRangeHeaderValueRange:(SharedKotlinLongRange * _Nullable)range fullLength:(SharedLong * _Nullable)fullLength unit:(SharedRangeUnits *)unit __attribute__((swift_name("contentRangeHeaderValue(range:fullLength:unit:)")));
+ (NSString *)contentRangeHeaderValueRange:(SharedKotlinLongRange * _Nullable)range fullLength:(SharedLong * _Nullable)fullLength unit_:(NSString *)unit __attribute__((swift_name("contentRangeHeaderValue(range:fullLength:unit_:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CookieKt")))
@interface SharedCookieKt : SharedBase
+ (NSString *)decodeCookieValueEncodedValue:(NSString *)encodedValue encoding:(SharedCookieEncoding *)encoding __attribute__((swift_name("decodeCookieValue(encodedValue:encoding:)")));
+ (NSString *)encodeCookieValueValue:(NSString *)value encoding:(SharedCookieEncoding *)encoding __attribute__((swift_name("encodeCookieValue(value:encoding:)")));
+ (NSDictionary<NSString *, NSString *> *)parseClientCookiesHeaderCookiesHeader:(NSString *)cookiesHeader skipEscaped:(BOOL)skipEscaped __attribute__((swift_name("parseClientCookiesHeader(cookiesHeader:skipEscaped:)")));
+ (SharedCookie *)parseServerSetCookieHeaderCookiesHeader:(NSString *)cookiesHeader __attribute__((swift_name("parseServerSetCookieHeader(cookiesHeader:)")));
+ (NSString *)renderCookieHeaderCookie:(SharedCookie *)cookie __attribute__((swift_name("renderCookieHeader(cookie:)")));
+ (NSString *)renderSetCookieHeaderCookie:(SharedCookie *)cookie __attribute__((swift_name("renderSetCookieHeader(cookie:)")));
+ (NSString *)renderSetCookieHeaderName:(NSString *)name value:(NSString *)value encoding:(SharedCookieEncoding *)encoding maxAge:(int32_t)maxAge expires:(SharedGMTDate * _Nullable)expires domain:(NSString * _Nullable)domain path:(NSString * _Nullable)path secure:(BOOL)secure httpOnly:(BOOL)httpOnly extensions:(NSDictionary<NSString *, id> *)extensions includeEncoding:(BOOL)includeEncoding __attribute__((swift_name("renderSetCookieHeader(name:value:encoding:maxAge:expires:domain:path:secure:httpOnly:extensions:includeEncoding:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HeadersKt__")))
@interface SharedHeadersKt__ : SharedBase
+ (id<SharedHeaders>)headersOf __attribute__((swift_name("headersOf()")));
+ (id<SharedHeaders>)headersOfPairs:(SharedKotlinArray<SharedKotlinPair<NSString *, NSArray<NSString *> *> *> *)pairs __attribute__((swift_name("headersOf(pairs:)")));
+ (id<SharedHeaders>)headersOfName:(NSString *)name value:(NSString *)value __attribute__((swift_name("headersOf(name:value:)")));
+ (id<SharedHeaders>)headersOfName:(NSString *)name values:(NSArray<NSString *> *)values __attribute__((swift_name("headersOf(name:values:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IpParserKt")))
@interface SharedIpParserKt : SharedBase
+ (BOOL)hostIsIpHost:(NSString *)host __attribute__((swift_name("hostIsIp(host:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ParametersKt")))
@interface SharedParametersKt : SharedBase
+ (id<SharedParameters>)parametersOf __attribute__((swift_name("parametersOf()")));
+ (id<SharedParameters>)parametersOfPairs:(SharedKotlinArray<SharedKotlinPair<NSString *, NSArray<NSString *> *> *> *)pairs __attribute__((swift_name("parametersOf(pairs:)")));
+ (id<SharedParameters>)parametersOfName:(NSString *)name value:(NSString *)value __attribute__((swift_name("parametersOf(name:value:)")));
+ (id<SharedParameters>)parametersOfName:(NSString *)name values:(NSArray<NSString *> *)values __attribute__((swift_name("parametersOf(name:values:)")));
+ (id<SharedParameters>)plus:(id<SharedParameters>)receiver other:(id<SharedParameters>)other __attribute__((swift_name("plus(_:other:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpHeaderValueParserKt")))
@interface SharedHttpHeaderValueParserKt : SharedBase
+ (NSArray<SharedHeaderValue *> *)parseAndSortContentTypeHeaderHeader:(NSString * _Nullable)header __attribute__((swift_name("parseAndSortContentTypeHeader(header:)")));
+ (NSArray<SharedHeaderValue *> *)parseAndSortHeaderHeader:(NSString * _Nullable)header __attribute__((swift_name("parseAndSortHeader(header:)")));
+ (NSArray<SharedHeaderValue *> *)parseHeaderValueText:(NSString * _Nullable)text __attribute__((swift_name("parseHeaderValue(text:)")));
+ (NSArray<SharedHeaderValue *> *)parseHeaderValueText:(NSString * _Nullable)text parametersOnly:(BOOL)parametersOnly __attribute__((swift_name("parseHeaderValue(text:parametersOnly:)")));
+ (NSArray<SharedHeaderValueParam *> *)toHeaderParamsList:(id)receiver __attribute__((swift_name("toHeaderParamsList(_:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("QueryKt")))
@interface SharedQueryKt : SharedBase
+ (id<SharedParameters>)parseQueryStringQuery:(NSString *)query startIndex:(int32_t)startIndex limit:(int32_t)limit __attribute__((swift_name("parseQueryString(query:startIndex:limit:)")));
+ (void)parseQueryStringToParametersBuilder:(SharedParametersBuilder *)parametersBuilder query:(NSString *)query startIndex:(int32_t)startIndex limit:(int32_t)limit __attribute__((swift_name("parseQueryStringTo(parametersBuilder:query:startIndex:limit:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("RangesKt")))
@interface SharedRangesKt : SharedBase
+ (SharedRangesSpecifier * _Nullable)parseRangesSpecifierRangeSpec:(NSString *)rangeSpec __attribute__((swift_name("parseRangesSpecifier(rangeSpec:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpMessagePropertiesKt")))
@interface SharedHttpMessagePropertiesKt : SharedBase
+ (NSArray<SharedHeaderValue *> *)cacheControl:(id<SharedHttpMessage>)receiver __attribute__((swift_name("cacheControl(_:)")));
+ (SharedCharset * _Nullable)charset:(id<SharedHttpMessage>)receiver __attribute__((swift_name("charset(_:)")));
+ (SharedCharset * _Nullable)charset_:(id<SharedHttpMessageBuilder>)receiver __attribute__((swift_name("charset(__:)")));
+ (SharedKotlinUnit * _Nullable)charset:(id<SharedHttpMessageBuilder>)receiver charset:(SharedCharset *)charset __attribute__((swift_name("charset(_:charset:)"))) __attribute__((unavailable("Use content with particular content type and charset instead")));
+ (SharedLong * _Nullable)contentLength:(id<SharedHttpMessage>)receiver __attribute__((swift_name("contentLength(_:)")));
+ (SharedLong * _Nullable)contentLength_:(id<SharedHttpMessageBuilder>)receiver __attribute__((swift_name("contentLength(__:)")));
+ (void)contentLength:(id<SharedHttpMessageBuilder>)receiver length:(int32_t)length __attribute__((swift_name("contentLength(_:length:)"))) __attribute__((unavailable("Content-Length is controlled by underlying engine. Don't specify it explicitly.")));
+ (SharedContentType * _Nullable)contentType:(id<SharedHttpMessage>)receiver __attribute__((swift_name("contentType(_:)")));
+ (SharedContentType * _Nullable)contentType_:(id<SharedHttpMessageBuilder>)receiver __attribute__((swift_name("contentType(__:)")));
+ (void)contentType:(id<SharedHttpMessageBuilder>)receiver type:(SharedContentType *)type __attribute__((swift_name("contentType(_:type:)")));
+ (NSArray<SharedCookie *> *)cookies:(id<SharedHttpMessageBuilder>)receiver __attribute__((swift_name("cookies(_:)")));
+ (NSString * _Nullable)etag:(id<SharedHttpMessage>)receiver __attribute__((swift_name("etag(_:)")));
+ (NSString * _Nullable)etag_:(id<SharedHttpMessageBuilder>)receiver __attribute__((swift_name("etag(__:)")));
+ (void)ifNoneMatch:(id<SharedHttpMessageBuilder>)receiver value:(NSString *)value __attribute__((swift_name("ifNoneMatch(_:value:)")));
+ (void)maxAge:(id<SharedHttpMessageBuilder>)receiver seconds:(int32_t)seconds __attribute__((swift_name("maxAge(_:seconds:)")));
+ (NSArray<SharedCookie *> *)setCookie:(id<SharedHttpMessage>)receiver __attribute__((swift_name("setCookie(_:)")));
+ (void)userAgent:(id<SharedHttpMessageBuilder>)receiver content:(NSString *)content __attribute__((swift_name("userAgent(_:content:)")));
+ (NSArray<NSString *> * _Nullable)vary:(id<SharedHttpMessage>)receiver __attribute__((swift_name("vary(_:)")));
+ (NSArray<NSString *> * _Nullable)vary_:(id<SharedHttpMessageBuilder>)receiver __attribute__((swift_name("vary(__:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CodecsKt")))
@interface SharedCodecsKt : SharedBase
+ (NSString *)decodeURLPart:(NSString *)receiver start:(int32_t)start end:(int32_t)end charset:(SharedCharset *)charset __attribute__((swift_name("decodeURLPart(_:start:end:charset:)")));
+ (NSString *)decodeURLQueryComponent:(NSString *)receiver start:(int32_t)start end:(int32_t)end plusIsSpace:(BOOL)plusIsSpace charset:(SharedCharset *)charset __attribute__((swift_name("decodeURLQueryComponent(_:start:end:plusIsSpace:charset:)")));
+ (NSString *)encodeOAuth:(NSString *)receiver __attribute__((swift_name("encodeOAuth(_:)")));
+ (NSString *)encodeURLParameter:(NSString *)receiver spaceToPlus:(BOOL)spaceToPlus __attribute__((swift_name("encodeURLParameter(_:spaceToPlus:)")));
+ (NSString *)encodeURLPath:(NSString *)receiver __attribute__((swift_name("encodeURLPath(_:)")));
+ (NSString *)encodeURLQueryComponent:(NSString *)receiver encodeFull:(BOOL)encodeFull spaceToPlus:(BOOL)spaceToPlus charset:(SharedCharset *)charset __attribute__((swift_name("encodeURLQueryComponent(_:encodeFull:spaceToPlus:charset:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HeaderValueWithParametersKt")))
@interface SharedHeaderValueWithParametersKt : SharedBase
+ (NSString *)escapeIfNeeded:(NSString *)receiver __attribute__((swift_name("escapeIfNeeded(_:)")));
+ (NSString *)quote:(NSString *)receiver __attribute__((swift_name("quote(_:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpUrlEncodedKt")))
@interface SharedHttpUrlEncodedKt : SharedBase
+ (NSString *)formUrlEncode:(id<SharedParameters>)receiver __attribute__((swift_name("formUrlEncode(_:)")));
+ (NSString *)formUrlEncode:(NSArray<SharedKotlinPair<NSString *, NSString *> *> *)receiver option:(SharedUrlEncodingOption *)option __attribute__((swift_name("formUrlEncode(_:option:)")));
+ (void)formUrlEncodeTo:(id<SharedParameters>)receiver out:(id<SharedKotlinAppendable>)out __attribute__((swift_name("formUrlEncodeTo(_:out:)")));
+ (void)formUrlEncodeTo:(NSArray<SharedKotlinPair<NSString *, NSString *> *> *)receiver out:(id<SharedKotlinAppendable>)out option:(SharedUrlEncodingOption *)option __attribute__((swift_name("formUrlEncodeTo(_:out:option:)")));
+ (id<SharedParameters>)parseUrlEncodedParameters:(NSString *)receiver defaultEncoding:(SharedCharset *)defaultEncoding limit:(int32_t)limit __attribute__((swift_name("parseUrlEncodedParameters(_:defaultEncoding:limit:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DateUtilsKt")))
@interface SharedDateUtilsKt : SharedBase
+ (SharedGMTDate *)fromCookieToGmtDate:(NSString *)receiver __attribute__((swift_name("fromCookieToGmtDate(_:)")));
+ (SharedGMTDate *)fromHttpToGmtDate:(NSString *)receiver __attribute__((swift_name("fromHttpToGmtDate(_:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpAuthHeaderKt")))
@interface SharedHttpAuthHeaderKt : SharedBase
+ (SharedHttpAuthHeader * _Nullable)parseAuthorizationHeaderHeaderValue:(NSString *)headerValue __attribute__((swift_name("parseAuthorizationHeader(headerValue:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CachingOptionsKt")))
@interface SharedCachingOptionsKt : SharedBase
@property (class, readonly) SharedAttributeKey<SharedCachingOptions *> *CachingProperty __attribute__((swift_name("CachingProperty")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MultipartKt")))
@interface SharedMultipartKt : SharedBase

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forEachPart:(id<SharedMultiPartData>)receiver partHandler:(id<SharedKotlinSuspendFunction1>)partHandler completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forEachPart(_:partHandler:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)readAllParts:(id<SharedMultiPartData>)receiver completionHandler:(void (^)(NSArray<SharedPartData *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readAllParts(_:completionHandler:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("UtilsKt_")))
@interface SharedUtilsKt_ : SharedBase
+ (NSString *)websocketServerAcceptNonce:(NSString *)nonce __attribute__((swift_name("websocketServerAccept(nonce:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AttributesNativeKt")))
@interface SharedAttributesNativeKt : SharedBase
+ (id<SharedAttributes>)AttributesConcurrent:(BOOL)concurrent __attribute__((swift_name("Attributes(concurrent:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CryptoNativeKt")))
@interface SharedCryptoNativeKt : SharedBase
+ (id<SharedDigest>)DigestName:(NSString *)name __attribute__((swift_name("Digest(name:)")));
+ (NSString *)generateNonce __attribute__((swift_name("generateNonce()")));
+ (SharedKotlinByteArray *)sha1Bytes:(SharedKotlinByteArray *)bytes __attribute__((swift_name("sha1(bytes:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CoroutinesUtilsKt")))
@interface SharedCoroutinesUtilsKt : SharedBase
+ (id<SharedKotlinCoroutineContext>)SilentSupervisorParent:(id<SharedJob> _Nullable)parent __attribute__((swift_name("SilentSupervisor(parent:)")));
+ (void)printDebugTree:(id<SharedJob>)receiver offset:(int32_t)offset __attribute__((swift_name("printDebugTree(_:offset:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CollectionsKt_")))
@interface SharedCollectionsKt_ : SharedBase
+ (SharedMutableDictionary<NSString *, id> *)caseInsensitiveMap __attribute__((swift_name("caseInsensitiveMap()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CryptoKt")))
@interface SharedCryptoKt : SharedBase
+ (SharedKotlinByteArray *)generateNonceSize:(int32_t)size __attribute__((swift_name("generateNonce(size:)")));
+ (NSString *)hexBytes:(SharedKotlinByteArray *)bytes __attribute__((swift_name("hex(bytes:)")));
+ (SharedKotlinByteArray *)hexS:(NSString *)s __attribute__((swift_name("hex(s:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)build:(id<SharedDigest>)receiver bytes:(SharedKotlinByteArray *)bytes completionHandler:(void (^)(SharedKotlinByteArray * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("build(_:bytes:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)build:(id<SharedDigest>)receiver string:(NSString *)string charset:(SharedCharset *)charset completionHandler:(void (^)(SharedKotlinByteArray * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("build(_:string:charset:completionHandler:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StringValuesKt")))
@interface SharedStringValuesKt : SharedBase
+ (id<SharedStringValues>)valuesOf __attribute__((swift_name("valuesOf()")));
+ (id<SharedStringValues>)valuesOfPairs:(SharedKotlinArray<SharedKotlinPair<NSString *, NSArray<NSString *> *> *> *)pairs caseInsensitiveKey:(BOOL)caseInsensitiveKey __attribute__((swift_name("valuesOf(pairs:caseInsensitiveKey:)")));
+ (id<SharedStringValues>)valuesOfName:(NSString *)name value:(NSString *)value caseInsensitiveKey:(BOOL)caseInsensitiveKey __attribute__((swift_name("valuesOf(name:value:caseInsensitiveKey:)")));
+ (id<SharedStringValues>)valuesOfName:(NSString *)name values:(NSArray<NSString *> *)values caseInsensitiveKey:(BOOL)caseInsensitiveKey __attribute__((swift_name("valuesOf(name:values:caseInsensitiveKey:)")));
+ (id<SharedStringValues>)valuesOfMap:(NSDictionary<NSString *, id> *)map caseInsensitiveKey:(BOOL)caseInsensitiveKey __attribute__((swift_name("valuesOf(map:caseInsensitiveKey:)")));
+ (id<SharedStringValues>)filter:(id<SharedStringValues>)receiver keepEmpty:(BOOL)keepEmpty predicate:(SharedBoolean *(^)(NSString *, NSString *))predicate __attribute__((swift_name("filter(_:keepEmpty:predicate:)")));
+ (NSArray<SharedKotlinPair<NSString *, NSString *> *> *)flattenEntries:(id<SharedStringValues>)receiver __attribute__((swift_name("flattenEntries(_:)")));
+ (void)flattenForEach:(id<SharedStringValues>)receiver block:(void (^)(NSString *, NSString *))block __attribute__((swift_name("flattenForEach(_:block:)")));
+ (NSDictionary<NSString *, NSArray<NSString *> *> *)toMap:(id<SharedStringValues>)receiver __attribute__((swift_name("toMap(_:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TextKt")))
@interface SharedTextKt : SharedBase
+ (SharedKotlinPair<NSString *, NSString *> *)chomp:(NSString *)receiver separator:(NSString *)separator onMissingDelimiter:(SharedKotlinPair<NSString *, NSString *> *(^)(void))onMissingDelimiter __attribute__((swift_name("chomp(_:separator:onMissingDelimiter:)")));
+ (NSString *)escapeHTML:(NSString *)receiver __attribute__((swift_name("escapeHTML(_:)")));
+ (NSString *)toLowerCasePreservingASCIIRules:(NSString *)receiver __attribute__((swift_name("toLowerCasePreservingASCIIRules(_:)")));
+ (NSString *)toUpperCasePreservingASCIIRules:(NSString *)receiver __attribute__((swift_name("toUpperCasePreservingASCIIRules(_:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ByteChannelsKt")))
@interface SharedByteChannelsKt : SharedBase
+ (void)doCopyToBoth:(id<SharedByteReadChannel>)receiver first:(id<SharedByteWriteChannel>)first second:(id<SharedByteWriteChannel>)second __attribute__((swift_name("doCopyToBoth(_:first:second:)")));
+ (SharedKotlinPair<id<SharedByteReadChannel>, id<SharedByteReadChannel>> *)split:(id<SharedByteReadChannel>)receiver coroutineScope:(id<SharedCoroutineScope>)coroutineScope __attribute__((swift_name("split(_:coroutineScope:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)toByteArray:(id<SharedByteReadChannel>)receiver completionHandler:(void (^)(SharedKotlinByteArray * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("toByteArray(_:completionHandler:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Base64Kt")))
@interface SharedBase64Kt : SharedBase
+ (SharedKotlinByteArray *)decodeBase64Bytes:(NSString *)receiver __attribute__((swift_name("decodeBase64Bytes(_:)")));
+ (NSString *)decodeBase64String:(NSString *)receiver __attribute__((swift_name("decodeBase64String(_:)")));
+ (NSString *)encodeBase64:(NSString *)receiver __attribute__((swift_name("encodeBase64(_:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CharsetKt")))
@interface SharedCharsetKt : SharedBase
+ (BOOL)isLowerCase:(unichar)receiver __attribute__((swift_name("isLowerCase(_:)")));
+ (SharedKotlinCharArray *)toCharArray:(NSString *)receiver __attribute__((swift_name("toCharArray(_:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AttributesKt")))
@interface SharedAttributesKt : SharedBase
+ (void)putAll:(id<SharedAttributes>)receiver other:(id<SharedAttributes>)other __attribute__((swift_name("putAll(_:other:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CollectionsNativeKt")))
@interface SharedCollectionsNativeKt : SharedBase
+ (NSSet<id> *)unmodifiable:(NSSet<id> *)receiver __attribute__((swift_name("unmodifiable(_:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("NetworkAddressNativeKt")))
@interface SharedNetworkAddressNativeKt : SharedBase
+ (SharedNetworkAddress *)NetworkAddressHostname:(NSString *)hostname port:(int32_t)port __attribute__((swift_name("NetworkAddress(hostname:port:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ReadersKt")))
@interface SharedReadersKt : SharedBase

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)toByteArray:(id<SharedByteReadChannel>)receiver limit:(int32_t)limit completionHandler:(void (^)(SharedKotlinByteArray * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("toByteArray(_:limit:completionHandler:)")));
+ (void)use:(id<SharedByteWriteChannel>)receiver block:(void (^)(id<SharedByteWriteChannel>))block __attribute__((swift_name("use(_:block:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DateNativeKt")))
@interface SharedDateNativeKt : SharedBase
+ (SharedGMTDate *)GMTDateSeconds:(int32_t)seconds minutes:(int32_t)minutes hours:(int32_t)hours dayOfMonth:(int32_t)dayOfMonth month:(SharedMonth *)month year:(int32_t)year __attribute__((swift_name("GMTDate(seconds:minutes:hours:dayOfMonth:month:year:)")));
+ (SharedGMTDate *)GMTDateTimestamp:(SharedLong * _Nullable)timestamp __attribute__((swift_name("GMTDate(timestamp:)")));
+ (int64_t)getTimeMillis __attribute__((swift_name("getTimeMillis()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PipelineContextKt")))
@interface SharedPipelineContextKt : SharedBase
+ (id<SharedPipelineExecutor>)pipelineExecutorForContext:(id)context interceptors:(NSArray<id<SharedKotlinSuspendFunction2>> *)interceptors subject:(id)subject __attribute__((swift_name("pipelineExecutorFor(context:interceptors:subject:)"))) __attribute__((deprecated("This is going to become internal. Use Pipeline.execute() instead.")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TypeInfoNativeKt")))
@interface SharedTypeInfoNativeKt : SharedBase
+ (id<SharedTypeInfo>)typeInfo __attribute__((swift_name("typeInfo()")));
+ (BOOL)instanceOf:(id)receiver type:(id<SharedKotlinKClass>)type __attribute__((swift_name("instanceOf(_:type:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ByteChannelCtorKt")))
@interface SharedByteChannelCtorKt : SharedBase
+ (id<SharedByteReadChannel>)ByteReadChannelContent:(SharedKotlinByteArray *)content __attribute__((swift_name("ByteReadChannel(content:)")));
+ (id<SharedByteReadChannel>)ByteReadChannelContent:(SharedKotlinByteArray *)content offset:(int32_t)offset __attribute__((swift_name("ByteReadChannel(content:offset:)")));
+ (id<SharedByteReadChannel>)ByteReadChannelText:(NSString *)text charset:(SharedCharset *)charset __attribute__((swift_name("ByteReadChannel(text:charset:)")));
@property (class, readonly) id<SharedByteReadChannel> EmptyByteReadChannel __attribute__((swift_name("EmptyByteReadChannel"))) __attribute__((unavailable("Use ByteReadChannel.Empty instead")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ByteChannelNativeKt")))
@interface SharedByteChannelNativeKt : SharedBase
+ (id<SharedByteChannel>)ByteChannelAutoFlush:(BOOL)autoFlush __attribute__((swift_name("ByteChannel(autoFlush:)")));
+ (id<SharedByteReadChannel>)ByteReadChannelContent:(SharedKotlinByteArray *)content offset:(int32_t)offset length:(int32_t)length __attribute__((swift_name("ByteReadChannel(content:offset:length:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)doCopyTo:(id<SharedByteReadChannel>)receiver dst:(id<SharedByteWriteChannel>)dst limit:(int64_t)limit completionHandler:(void (^)(SharedLong * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("doCopyTo(_:dst:limit:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)joinTo:(id<SharedByteReadChannel>)receiver dst:(id<SharedByteWriteChannel>)dst closeOnEnd:(BOOL)closeOnEnd completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("joinTo(_:dst:closeOnEnd:completionHandler:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CoroutinesKt")))
@interface SharedCoroutinesKt : SharedBase
+ (id<SharedReaderJob>)readerCoroutineContext:(id<SharedKotlinCoroutineContext>)coroutineContext channel:(id<SharedByteChannel>)channel parent:(id<SharedJob> _Nullable)parent block:(id<SharedKotlinSuspendFunction1>)block __attribute__((swift_name("reader(coroutineContext:channel:parent:block:)"))) __attribute__((deprecated("Use scope.reader instead")));
+ (id<SharedReaderJob>)readerCoroutineContext:(id<SharedKotlinCoroutineContext>)coroutineContext autoFlush:(BOOL)autoFlush parent:(id<SharedJob> _Nullable)parent block:(id<SharedKotlinSuspendFunction1>)block __attribute__((swift_name("reader(coroutineContext:autoFlush:parent:block:)"))) __attribute__((deprecated("Use scope.reader instead")));
+ (id<SharedWriterJob>)writerCoroutineContext:(id<SharedKotlinCoroutineContext>)coroutineContext channel:(id<SharedByteChannel>)channel parent:(id<SharedJob> _Nullable)parent block:(id<SharedKotlinSuspendFunction1>)block __attribute__((swift_name("writer(coroutineContext:channel:parent:block:)"))) __attribute__((deprecated("Use scope.writer instead")));
+ (id<SharedWriterJob>)writerCoroutineContext:(id<SharedKotlinCoroutineContext>)coroutineContext autoFlush:(BOOL)autoFlush parent:(id<SharedJob> _Nullable)parent block:(id<SharedKotlinSuspendFunction1>)block __attribute__((swift_name("writer(coroutineContext:autoFlush:parent:block:)"))) __attribute__((deprecated("Use scope.writer instead")));
+ (id<SharedReaderJob>)reader:(id<SharedCoroutineScope>)receiver coroutineContext:(id<SharedKotlinCoroutineContext>)coroutineContext channel:(id<SharedByteChannel>)channel block:(id<SharedKotlinSuspendFunction1>)block __attribute__((swift_name("reader(_:coroutineContext:channel:block:)")));
+ (id<SharedReaderJob>)reader:(id<SharedCoroutineScope>)receiver coroutineContext:(id<SharedKotlinCoroutineContext>)coroutineContext autoFlush:(BOOL)autoFlush block:(id<SharedKotlinSuspendFunction1>)block __attribute__((swift_name("reader(_:coroutineContext:autoFlush:block:)")));
+ (id<SharedWriterJob>)writer:(id<SharedCoroutineScope>)receiver coroutineContext:(id<SharedKotlinCoroutineContext>)coroutineContext channel:(id<SharedByteChannel>)channel block:(id<SharedKotlinSuspendFunction1>)block __attribute__((swift_name("writer(_:coroutineContext:channel:block:)")));
+ (id<SharedWriterJob>)writer:(id<SharedCoroutineScope>)receiver coroutineContext:(id<SharedKotlinCoroutineContext>)coroutineContext autoFlush:(BOOL)autoFlush block:(id<SharedKotlinSuspendFunction1>)block __attribute__((swift_name("writer(_:coroutineContext:autoFlush:block:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ByteReadChannelKt")))
@interface SharedByteReadChannelKt : SharedBase
+ (BOOL)cancel:(id<SharedByteReadChannel>)receiver __attribute__((swift_name("cancel(_:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)doCopyAndClose:(id<SharedByteReadChannel>)receiver dst:(id<SharedByteWriteChannel>)dst limit:(int64_t)limit completionHandler:(void (^)(SharedLong * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("doCopyAndClose(_:dst:limit:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)doCopyTo:(id<SharedByteReadChannel>)receiver dst:(id<SharedByteWriteChannel>)dst completionHandler:(void (^)(SharedLong * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("doCopyTo(_:dst:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)discard:(id<SharedByteReadChannel>)receiver completionHandler:(void (^)(SharedLong * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("discard(_:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)discardExact:(id<SharedByteReadChannel>)receiver n:(int64_t)n completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("discardExact(_:n:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)readAvailable:(id<SharedByteReadChannel>)receiver dst:(SharedKotlinByteArray *)dst completionHandler:(void (^)(SharedInt * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readAvailable(_:dst:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)readFully:(id<SharedByteReadChannel>)receiver dst:(SharedIoBuffer *)dst completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readFully(_:dst:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)readFully:(id<SharedByteReadChannel>)receiver dst:(SharedKotlinByteArray *)dst completionHandler_:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readFully(_:dst:completionHandler_:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)readPacket:(id<SharedByteReadChannel>)receiver size:(int32_t)size completionHandler:(void (^)(SharedByteReadPacket * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readPacket(_:size:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)readRemaining:(id<SharedByteReadChannel>)receiver completionHandler:(void (^)(SharedByteReadPacket * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readRemaining(_:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)readRemaining:(id<SharedByteReadChannel>)receiver limit:(int64_t)limit completionHandler:(void (^)(SharedByteReadPacket * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readRemaining(_:limit:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)readUTF8Line:(id<SharedByteReadChannel>)receiver completionHandler:(void (^)(NSString * _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("readUTF8Line(_:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)readUTF8LineTo:(id<SharedByteReadChannel>)receiver out:(id<SharedKotlinAppendable>)out completionHandler:(void (^)(SharedBoolean * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readUTF8LineTo(_:out:completionHandler:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ByteWriteChannelKt")))
@interface SharedByteWriteChannelKt : SharedBase
+ (BOOL)close:(id<SharedByteWriteChannel>)receiver __attribute__((swift_name("close(_:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)writeAvailable:(id<SharedByteWriteChannel>)receiver src:(SharedKotlinByteArray *)src completionHandler:(void (^)(SharedInt * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("writeAvailable(_:src:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)writeBoolean:(id<SharedByteWriteChannel>)receiver b:(BOOL)b completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("writeBoolean(_:b:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)writeByte:(id<SharedByteWriteChannel>)receiver b:(int32_t)b completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("writeByte(_:b:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)writeChar:(id<SharedByteWriteChannel>)receiver ch:(unichar)ch completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("writeChar(_:ch:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)writeFully:(id<SharedByteWriteChannel>)receiver src:(SharedKotlinByteArray *)src completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("writeFully(_:src:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)writeInt:(id<SharedByteWriteChannel>)receiver i:(int64_t)i completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("writeInt(_:i:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)writeInt:(id<SharedByteWriteChannel>)receiver i:(int64_t)i byteOrder:(SharedByteOrder *)byteOrder completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("writeInt(_:i:byteOrder:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)writePacket:(id<SharedByteWriteChannel>)receiver headerSizeHint:(int32_t)headerSizeHint builder:(void (^)(SharedBytePacketBuilder *))builder completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("writePacket(_:headerSizeHint:builder:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)writePacketSuspend:(id<SharedByteWriteChannel>)receiver builder:(id<SharedKotlinSuspendFunction1>)builder completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("writePacketSuspend(_:builder:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)writeShort:(id<SharedByteWriteChannel>)receiver s:(int32_t)s completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("writeShort(_:s:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)writeShort:(id<SharedByteWriteChannel>)receiver s:(int32_t)s byteOrder:(SharedByteOrder *)byteOrder completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("writeShort(_:s:byteOrder:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)writeStringUtf8:(id<SharedByteWriteChannel>)receiver s:(id)s completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("writeStringUtf8(_:s:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)writeStringUtf8:(id<SharedByteWriteChannel>)receiver s:(NSString *)s completionHandler_:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("writeStringUtf8(_:s:completionHandler_:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("NativeUtilsNativeKt")))
@interface SharedNativeUtilsNativeKt : SharedBase
+ (void)makeShared:(id)receiver __attribute__((swift_name("makeShared(_:)")));
+ (void)preventFreeze:(id)receiver __attribute__((swift_name("preventFreeze(_:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ReadSessionKt")))
@interface SharedReadSessionKt : SharedBase

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)read:(id<SharedByteReadChannel>)receiver desiredSize:(int32_t)desiredSize block:(SharedInt *(^)(SharedMemory *, SharedLong *, SharedLong *))block completionHandler:(void (^)(SharedInt * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("read(_:desiredSize:block:completionHandler:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ChannelLittleEndianKt")))
@interface SharedChannelLittleEndianKt : SharedBase

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)readDouble:(id<SharedByteReadChannel>)receiver byteOrder:(SharedByteOrder *)byteOrder completionHandler:(void (^)(SharedDouble * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readDouble(_:byteOrder:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)readDoubleLittleEndian:(id<SharedByteReadChannel>)receiver completionHandler:(void (^)(SharedDouble * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readDoubleLittleEndian(_:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)readFloat:(id<SharedByteReadChannel>)receiver byteOrder:(SharedByteOrder *)byteOrder completionHandler:(void (^)(SharedFloat * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readFloat(_:byteOrder:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)readFloatLittleEndian:(id<SharedByteReadChannel>)receiver completionHandler:(void (^)(SharedFloat * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readFloatLittleEndian(_:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)readInt:(id<SharedByteReadChannel>)receiver byteOrder:(SharedByteOrder *)byteOrder completionHandler:(void (^)(SharedInt * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readInt(_:byteOrder:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)readIntLittleEndian:(id<SharedByteReadChannel>)receiver completionHandler:(void (^)(SharedInt * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readIntLittleEndian(_:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)readLong:(id<SharedByteReadChannel>)receiver byteOrder:(SharedByteOrder *)byteOrder completionHandler:(void (^)(SharedLong * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readLong(_:byteOrder:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)readLongLittleEndian:(id<SharedByteReadChannel>)receiver completionHandler:(void (^)(SharedLong * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readLongLittleEndian(_:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)readShort:(id<SharedByteReadChannel>)receiver byteOrder:(SharedByteOrder *)byteOrder completionHandler:(void (^)(SharedShort * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readShort(_:byteOrder:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)readShortLittleEndian:(id<SharedByteReadChannel>)receiver completionHandler:(void (^)(SharedShort * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readShortLittleEndian(_:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)writeDouble:(id<SharedByteWriteChannel>)receiver value:(double)value byteOrder:(SharedByteOrder *)byteOrder completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("writeDouble(_:value:byteOrder:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)writeDoubleLittleEndian:(id<SharedByteWriteChannel>)receiver value:(double)value completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("writeDoubleLittleEndian(_:value:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)writeFloat:(id<SharedByteWriteChannel>)receiver value:(float)value byteOrder:(SharedByteOrder *)byteOrder completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("writeFloat(_:value:byteOrder:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)writeFloatLittleEndian:(id<SharedByteWriteChannel>)receiver value:(float)value completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("writeFloatLittleEndian(_:value:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)writeInt:(id<SharedByteWriteChannel>)receiver value:(int32_t)value byteOrder:(SharedByteOrder *)byteOrder completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("writeInt(_:value:byteOrder:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)writeIntLittleEndian:(id<SharedByteWriteChannel>)receiver value:(int32_t)value completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("writeIntLittleEndian(_:value:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)writeLong:(id<SharedByteWriteChannel>)receiver value:(int64_t)value byteOrder:(SharedByteOrder *)byteOrder completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("writeLong(_:value:byteOrder:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)writeLongLittleEndian:(id<SharedByteWriteChannel>)receiver value:(int64_t)value completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("writeLongLittleEndian(_:value:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)writeShort:(id<SharedByteWriteChannel>)receiver value:(int16_t)value byteOrder:(SharedByteOrder *)byteOrder completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("writeShort(_:value:byteOrder:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)writeShortLittleEndian:(id<SharedByteWriteChannel>)receiver value:(int16_t)value completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("writeShortLittleEndian(_:value:completionHandler:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WriterSessionKt")))
@interface SharedWriterSessionKt : SharedBase

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)write:(id<SharedByteWriteChannel>)receiver desiredSpace:(int32_t)desiredSpace block:(SharedInt *(^)(SharedMemory *, SharedLong *, SharedLong *))block completionHandler:(void (^)(SharedInt * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("write(_:desiredSpace:block:completionHandler:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ByteOrderKt")))
@interface SharedByteOrderKt : SharedBase
+ (int8_t)highByte:(int16_t)receiver __attribute__((swift_name("highByte(_:)")));
+ (int32_t)highInt:(int64_t)receiver __attribute__((swift_name("highInt(_:)")));
+ (int16_t)highShort:(int32_t)receiver __attribute__((swift_name("highShort(_:)")));
+ (int8_t)lowByte:(int16_t)receiver __attribute__((swift_name("lowByte(_:)")));
+ (int32_t)lowInt:(int64_t)receiver __attribute__((swift_name("lowInt(_:)")));
+ (int16_t)lowShort:(int32_t)receiver __attribute__((swift_name("lowShort(_:)")));
+ (uint32_t)reverseByteOrder:(uint32_t)receiver __attribute__((swift_name("reverseByteOrder(_:)")));
+ (uint64_t)reverseByteOrder_:(uint64_t)receiver __attribute__((swift_name("reverseByteOrder(__:)")));
+ (uint16_t)reverseByteOrder__:(uint16_t)receiver __attribute__((swift_name("reverseByteOrder(___:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MemoryFactoryKt")))
@interface SharedMemoryFactoryKt : SharedBase
+ (id _Nullable)withMemorySize:(int32_t)size block:(id _Nullable (^)(SharedMemory *))block __attribute__((swift_name("withMemory(size:block:)")));
+ (id _Nullable)withMemorySize:(int64_t)size block_:(id _Nullable (^)(SharedMemory *))block __attribute__((swift_name("withMemory(size:block_:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MemoryFactoryNativeKt")))
@interface SharedMemoryFactoryNativeKt : SharedBase
+ (SharedMemory *)doAllocMemory:(id<SharedKotlinNativePlacement>)receiver size:(int32_t)size __attribute__((swift_name("doAllocMemory(_:size:)")));
+ (SharedMemory *)doAllocMemory:(id<SharedKotlinNativePlacement>)receiver size_:(int64_t)size __attribute__((swift_name("doAllocMemory(_:size_:)")));
+ (void)free:(id<SharedKotlinNativeFreeablePlacement>)receiver memory:(SharedMemory *)memory __attribute__((swift_name("free(_:memory:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MemoryNativeKt")))
@interface SharedMemoryNativeKt : SharedBase
+ (void)doCopyTo:(void *)receiver destination:(SharedMemory *)destination offset:(int32_t)offset length:(int32_t)length destinationOffset:(int32_t)destinationOffset __attribute__((swift_name("doCopyTo(_:destination:offset:length:destinationOffset:)")));
+ (void)doCopyTo:(void *)receiver destination:(SharedMemory *)destination offset:(int64_t)offset length:(int64_t)length destinationOffset_:(int64_t)destinationOffset __attribute__((swift_name("doCopyTo(_:destination:offset:length:destinationOffset_:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ByteOrderNativeKt")))
@interface SharedByteOrderNativeKt : SharedBase
+ (double)reverseByteOrder:(double)receiver __attribute__((swift_name("reverseByteOrder(_:)")));
+ (float)reverseByteOrder_:(float)receiver __attribute__((swift_name("reverseByteOrder(__:)")));
+ (int32_t)reverseByteOrder__:(int32_t)receiver __attribute__((swift_name("reverseByteOrder(___:)")));
+ (int64_t)reverseByteOrder___:(int64_t)receiver __attribute__((swift_name("reverseByteOrder(____:)")));
+ (int16_t)reverseByteOrder____:(int16_t)receiver __attribute__((swift_name("reverseByteOrder(_____:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SharedNativeKt")))
@interface SharedSharedNativeKt : SharedBase
+ (id<SharedKotlinReadWriteProperty>)sharedValue:(id _Nullable)value __attribute__((swift_name("shared(value:)")));
+ (id<SharedKotlinReadOnlyProperty>)threadLocalValue:(id)value __attribute__((swift_name("threadLocal(value:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PlatformKt_")))
@interface SharedPlatformKt_ : SharedBase
+ (SharedBytePacketBuilder *)BytePacketBuilderHeaderSizeHint:(int32_t)headerSizeHint __attribute__((swift_name("BytePacketBuilder(headerSizeHint:)")));
@property (class, readonly) int32_t PACKET_MAX_COPY_SIZE __attribute__((swift_name("PACKET_MAX_COPY_SIZE")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PacketKt")))
@interface SharedPacketKt : SharedBase
+ (BOOL)isEmpty:(id<SharedInput>)receiver __attribute__((swift_name("isEmpty(_:)"))) __attribute__((deprecated("Use endOfInput property instead")));
+ (BOOL)isNotEmpty:(id<SharedInput>)receiver __attribute__((swift_name("isNotEmpty(_:)"))) __attribute__((deprecated("This makes no sense for streaming inputs. Some use-cases are covered by endOfInput property")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ByteReadPacketKt")))
@interface SharedByteReadPacketKt : SharedBase
+ (SharedByteReadPacket *)ByteReadPacketArray:(SharedKotlinByteArray *)array offset:(int32_t)offset length:(int32_t)length __attribute__((swift_name("ByteReadPacket(array:offset:length:)")));
+ (SharedByteReadPacket *)ByteReadPacketArray:(SharedKotlinByteArray *)array offset:(int32_t)offset length:(int32_t)length block:(void (^)(SharedKotlinByteArray *))block __attribute__((swift_name("ByteReadPacket(array:offset:length:block:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IoBufferNativeKt")))
@interface SharedIoBufferNativeKt : SharedBase
+ (SharedChunkBuffer *)ChunkBufferPtr:(void *)ptr lengthInBytes:(int32_t)lengthInBytes origin:(SharedChunkBuffer * _Nullable)origin __attribute__((swift_name("ChunkBuffer(ptr:lengthInBytes:origin:)")));
+ (SharedChunkBuffer *)ChunkBufferPtr:(void *)ptr lengthInBytes:(int64_t)lengthInBytes origin_:(SharedChunkBuffer * _Nullable)origin __attribute__((swift_name("ChunkBuffer(ptr:lengthInBytes:origin_:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StringsNativeKt")))
@interface SharedStringsNativeKt : SharedBase
+ (NSString *)StringBytes:(SharedKotlinByteArray *)bytes offset:(int32_t)offset length:(int32_t)length charset:(SharedCharset *)charset __attribute__((swift_name("String(bytes:offset:length:charset:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("BuilderKt")))
@interface SharedBuilderKt : SharedBase
+ (SharedByteReadPacket *)buildPacketHeaderSizeHint:(int32_t)headerSizeHint block:(void (^)(SharedBytePacketBuilder *))block __attribute__((swift_name("buildPacket(headerSizeHint:block:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("BufferFactoryKt")))
@interface SharedBufferFactoryKt : SharedBase
+ (id _Nullable)withBufferPool:(id<SharedObjectPool>)pool block:(id _Nullable (^)(SharedBuffer *))block __attribute__((swift_name("withBuffer(pool:block:)")));
+ (id _Nullable)withBufferSize:(int32_t)size block:(id _Nullable (^)(SharedBuffer *))block __attribute__((swift_name("withBuffer(size:block:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("OutputKt")))
@interface SharedOutputKt : SharedBase
+ (id<SharedKotlinAppendable>)append:(id<SharedOutput>)receiver csq:(SharedKotlinCharArray *)csq start:(int32_t)start end:(int32_t)end __attribute__((swift_name("append(_:csq:start:end:)")));
+ (id<SharedKotlinAppendable>)append:(id<SharedOutput>)receiver csq:(id)csq start:(int32_t)start end_:(int32_t)end __attribute__((swift_name("append(_:csq:start:end_:)")));
+ (void)fill:(id<SharedOutput>)receiver times:(int64_t)times value:(int8_t)value __attribute__((swift_name("fill(_:times:value:)")));
+ (void)writeFully:(id<SharedOutput>)receiver src:(SharedMemory *)src offset:(int32_t)offset length:(int32_t)length __attribute__((swift_name("writeFully(_:src:offset:length:)")));
+ (void)writeFully:(id<SharedOutput>)receiver src:(SharedMemory *)src offset:(int64_t)offset length_:(int64_t)length __attribute__((swift_name("writeFully(_:src:offset:length_:)")));
+ (void)writeFully:(id<SharedOutput>)receiver src:(SharedBuffer *)src length:(int32_t)length __attribute__((swift_name("writeFully(_:src:length:)")));
+ (void)writeFully:(id<SharedOutput>)receiver src:(SharedKotlinByteArray *)src offset:(int32_t)offset length__:(int32_t)length __attribute__((swift_name("writeFully(_:src:offset:length__:)")));
+ (void)writeFully:(id<SharedOutput>)receiver src:(SharedKotlinDoubleArray *)src offset:(int32_t)offset length___:(int32_t)length __attribute__((swift_name("writeFully(_:src:offset:length___:)")));
+ (void)writeFully:(id<SharedOutput>)receiver src:(SharedKotlinFloatArray *)src offset:(int32_t)offset length____:(int32_t)length __attribute__((swift_name("writeFully(_:src:offset:length____:)")));
+ (void)writeFully:(id<SharedOutput>)receiver src:(SharedKotlinIntArray *)src offset:(int32_t)offset length_____:(int32_t)length __attribute__((swift_name("writeFully(_:src:offset:length_____:)")));
+ (void)writeFully:(id<SharedOutput>)receiver src:(SharedKotlinLongArray *)src offset:(int32_t)offset length______:(int32_t)length __attribute__((swift_name("writeFully(_:src:offset:length______:)")));
+ (void)writeFully:(id<SharedOutput>)receiver src:(SharedKotlinShortArray *)src offset:(int32_t)offset length_______:(int32_t)length __attribute__((swift_name("writeFully(_:src:offset:length_______:)")));
+ (void)writePacket:(id<SharedOutput>)receiver packet:(SharedByteReadPacket *)packet __attribute__((swift_name("writePacket(_:packet:)")));
+ (void)writeWhile:(id<SharedOutput>)receiver block:(SharedBoolean *(^)(SharedBuffer *))block __attribute__((swift_name("writeWhile(_:block:)")));
+ (void)writeWhileSize:(id<SharedOutput>)receiver initialSize:(int32_t)initialSize block:(SharedInt *(^)(SharedBuffer *))block __attribute__((swift_name("writeWhileSize(_:initialSize:block:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CopyKt")))
@interface SharedCopyKt : SharedBase
+ (int64_t)doCopyTo:(id<SharedInput>)receiver output:(id<SharedOutput>)output __attribute__((swift_name("doCopyTo(_:output:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("InputKt")))
@interface SharedInputKt : SharedBase
+ (int64_t)discard:(id<SharedInput>)receiver __attribute__((swift_name("discard(_:)")));
+ (void)discardExact:(id<SharedInput>)receiver n:(int32_t)n __attribute__((swift_name("discardExact(_:n:)")));
+ (void)discardExact:(id<SharedInput>)receiver n_:(int64_t)n __attribute__((swift_name("discardExact(_:n_:)")));
+ (void)forEach:(id<SharedInput>)receiver block:(void (^)(SharedByte *))block __attribute__((swift_name("forEach(_:block:)")));
+ (unichar)peekCharUtf8:(id<SharedInput>)receiver __attribute__((swift_name("peekCharUtf8(_:)")));
+ (void)takeWhile:(id<SharedInput>)receiver block:(SharedBoolean *(^)(SharedBuffer *))block __attribute__((swift_name("takeWhile(_:block:)")));
+ (void)takeWhileSize:(id<SharedInput>)receiver initialSize:(int32_t)initialSize block:(SharedInt *(^)(SharedBuffer *))block __attribute__((swift_name("takeWhileSize(_:initialSize:block:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ScannerKt")))
@interface SharedScannerKt : SharedBase
+ (int64_t)discardUntilDelimiter:(id<SharedInput>)receiver delimiter:(int8_t)delimiter __attribute__((swift_name("discardUntilDelimiter(_:delimiter:)")));
+ (int64_t)discardUntilDelimiters:(id<SharedInput>)receiver delimiter1:(int8_t)delimiter1 delimiter2:(int8_t)delimiter2 __attribute__((swift_name("discardUntilDelimiters(_:delimiter1:delimiter2:)")));
+ (int64_t)readUntilDelimiter:(id<SharedInput>)receiver delimiter:(int8_t)delimiter dst:(id<SharedOutput>)dst __attribute__((swift_name("readUntilDelimiter(_:delimiter:dst:)")));
+ (int32_t)readUntilDelimiter:(id<SharedInput>)receiver delimiter:(int8_t)delimiter dst:(SharedKotlinByteArray *)dst offset:(int32_t)offset length:(int32_t)length __attribute__((swift_name("readUntilDelimiter(_:delimiter:dst:offset:length:)")));
+ (int64_t)readUntilDelimiters:(id<SharedInput>)receiver delimiter1:(int8_t)delimiter1 delimiter2:(int8_t)delimiter2 dst:(id<SharedOutput>)dst __attribute__((swift_name("readUntilDelimiters(_:delimiter1:delimiter2:dst:)")));
+ (int32_t)readUntilDelimiters:(id<SharedInput>)receiver delimiter1:(int8_t)delimiter1 delimiter2:(int8_t)delimiter2 dst:(SharedKotlinByteArray *)dst offset:(int32_t)offset length:(int32_t)length __attribute__((swift_name("readUntilDelimiters(_:delimiter1:delimiter2:dst:offset:length:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("InputPeekKt")))
@interface SharedInputPeekKt : SharedBase
+ (int32_t)peekTo:(id<SharedInput>)receiver destination:(SharedBuffer *)destination offset:(int32_t)offset min:(int32_t)min max:(int32_t)max __attribute__((swift_name("peekTo(_:destination:offset:min:max:)"))) __attribute__((deprecated("Use peekTo(Memory) instead.")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("InputArraysKt")))
@interface SharedInputArraysKt : SharedBase
+ (int32_t)readAvailable:(id<SharedInput>)receiver destination:(SharedMemory *)destination destinationOffset:(int32_t)destinationOffset length:(int32_t)length __attribute__((swift_name("readAvailable(_:destination:destinationOffset:length:)")));
+ (int64_t)readAvailable:(id<SharedInput>)receiver destination:(SharedMemory *)destination destinationOffset:(int64_t)destinationOffset length_:(int64_t)length __attribute__((swift_name("readAvailable(_:destination:destinationOffset:length_:)")));
+ (int32_t)readAvailable:(id<SharedInput>)receiver dst:(SharedBuffer *)dst length:(int32_t)length __attribute__((swift_name("readAvailable(_:dst:length:)")));
+ (int32_t)readAvailable:(id<SharedInput>)receiver dst:(SharedKotlinByteArray *)dst offset:(int32_t)offset length:(int32_t)length __attribute__((swift_name("readAvailable(_:dst:offset:length:)")));
+ (int32_t)readAvailable:(id<SharedInput>)receiver dst:(SharedKotlinDoubleArray *)dst offset:(int32_t)offset length_:(int32_t)length __attribute__((swift_name("readAvailable(_:dst:offset:length_:)")));
+ (int32_t)readAvailable:(id<SharedInput>)receiver dst:(SharedKotlinFloatArray *)dst offset:(int32_t)offset length__:(int32_t)length __attribute__((swift_name("readAvailable(_:dst:offset:length__:)")));
+ (int32_t)readAvailable:(id<SharedInput>)receiver dst:(SharedKotlinIntArray *)dst offset:(int32_t)offset length___:(int32_t)length __attribute__((swift_name("readAvailable(_:dst:offset:length___:)")));
+ (int32_t)readAvailable:(id<SharedInput>)receiver dst:(SharedKotlinLongArray *)dst offset:(int32_t)offset length____:(int32_t)length __attribute__((swift_name("readAvailable(_:dst:offset:length____:)")));
+ (int32_t)readAvailable:(id<SharedInput>)receiver dst:(SharedKotlinShortArray *)dst offset:(int32_t)offset length_____:(int32_t)length __attribute__((swift_name("readAvailable(_:dst:offset:length_____:)")));
+ (void)readFully:(id<SharedInput>)receiver destination:(SharedMemory *)destination destinationOffset:(int32_t)destinationOffset length:(int32_t)length __attribute__((swift_name("readFully(_:destination:destinationOffset:length:)")));
+ (void)readFully:(id<SharedInput>)receiver destination:(SharedMemory *)destination destinationOffset:(int64_t)destinationOffset length_:(int64_t)length __attribute__((swift_name("readFully(_:destination:destinationOffset:length_:)")));
+ (void)readFully:(id<SharedInput>)receiver dst:(SharedBuffer *)dst length:(int32_t)length __attribute__((swift_name("readFully(_:dst:length:)")));
+ (void)readFully:(id<SharedInput>)receiver dst:(SharedKotlinByteArray *)dst offset:(int32_t)offset length:(int32_t)length __attribute__((swift_name("readFully(_:dst:offset:length:)")));
+ (void)readFully:(id<SharedInput>)receiver dst:(SharedKotlinDoubleArray *)dst offset:(int32_t)offset length_:(int32_t)length __attribute__((swift_name("readFully(_:dst:offset:length_:)")));
+ (void)readFully:(id<SharedInput>)receiver dst:(SharedKotlinFloatArray *)dst offset:(int32_t)offset length__:(int32_t)length __attribute__((swift_name("readFully(_:dst:offset:length__:)")));
+ (void)readFully:(id<SharedInput>)receiver dst:(SharedKotlinIntArray *)dst offset:(int32_t)offset length___:(int32_t)length __attribute__((swift_name("readFully(_:dst:offset:length___:)")));
+ (void)readFully:(id<SharedInput>)receiver dst:(SharedKotlinLongArray *)dst offset:(int32_t)offset length____:(int32_t)length __attribute__((swift_name("readFully(_:dst:offset:length____:)")));
+ (void)readFully:(id<SharedInput>)receiver dst:(SharedKotlinShortArray *)dst offset:(int32_t)offset length_____:(int32_t)length __attribute__((swift_name("readFully(_:dst:offset:length_____:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("InputArraysNativeKt")))
@interface SharedInputArraysNativeKt : SharedBase
+ (int32_t)readAvailable:(id<SharedInput>)receiver dst:(void *)dst offset:(int32_t)offset length:(int32_t)length __attribute__((swift_name("readAvailable(_:dst:offset:length:)")));
+ (int64_t)readAvailable:(id<SharedInput>)receiver dst:(void *)dst offset:(int64_t)offset length_:(int64_t)length __attribute__((swift_name("readAvailable(_:dst:offset:length_:)")));
+ (void)readFully:(id<SharedInput>)receiver dst:(void *)dst offset:(int32_t)offset length:(int32_t)length __attribute__((swift_name("readFully(_:dst:offset:length:)")));
+ (void)readFully:(id<SharedInput>)receiver dst:(void *)dst offset:(int64_t)offset length_:(int64_t)length __attribute__((swift_name("readFully(_:dst:offset:length_:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("InputLittleEndianKt")))
@interface SharedInputLittleEndianKt : SharedBase
+ (int32_t)readAvailableLittleEndian:(id<SharedInput>)receiver dst:(SharedKotlinDoubleArray *)dst offset:(int32_t)offset length:(int32_t)length __attribute__((swift_name("readAvailableLittleEndian(_:dst:offset:length:)")));
+ (int32_t)readAvailableLittleEndian:(id<SharedInput>)receiver dst:(SharedKotlinFloatArray *)dst offset:(int32_t)offset length_:(int32_t)length __attribute__((swift_name("readAvailableLittleEndian(_:dst:offset:length_:)")));
+ (int32_t)readAvailableLittleEndian:(id<SharedInput>)receiver dst:(SharedKotlinIntArray *)dst offset:(int32_t)offset length__:(int32_t)length __attribute__((swift_name("readAvailableLittleEndian(_:dst:offset:length__:)")));
+ (int32_t)readAvailableLittleEndian:(id<SharedInput>)receiver dst:(SharedKotlinLongArray *)dst offset:(int32_t)offset length___:(int32_t)length __attribute__((swift_name("readAvailableLittleEndian(_:dst:offset:length___:)")));
+ (int32_t)readAvailableLittleEndian:(id<SharedInput>)receiver dst:(SharedKotlinShortArray *)dst offset:(int32_t)offset length____:(int32_t)length __attribute__((swift_name("readAvailableLittleEndian(_:dst:offset:length____:)")));
+ (int32_t)readAvailableLittleEndian:(id<SharedInput>)receiver dst:(id)dst offset:(int32_t)offset length_____:(int32_t)length __attribute__((swift_name("readAvailableLittleEndian(_:dst:offset:length_____:)")));
+ (int32_t)readAvailableLittleEndian:(id<SharedInput>)receiver dst:(id)dst offset:(int32_t)offset length______:(int32_t)length __attribute__((swift_name("readAvailableLittleEndian(_:dst:offset:length______:)")));
+ (int32_t)readAvailableLittleEndian:(id<SharedInput>)receiver dst:(id)dst offset:(int32_t)offset length_______:(int32_t)length __attribute__((swift_name("readAvailableLittleEndian(_:dst:offset:length_______:)")));
+ (double)readDouble:(id<SharedInput>)receiver byteOrder:(SharedByteOrder *)byteOrder __attribute__((swift_name("readDouble(_:byteOrder:)")));
+ (double)readDoubleLittleEndian:(id<SharedInput>)receiver __attribute__((swift_name("readDoubleLittleEndian(_:)")));
+ (float)readFloat:(id<SharedInput>)receiver byteOrder:(SharedByteOrder *)byteOrder __attribute__((swift_name("readFloat(_:byteOrder:)")));
+ (float)readFloatLittleEndian:(id<SharedInput>)receiver __attribute__((swift_name("readFloatLittleEndian(_:)")));
+ (void)readFullyLittleEndian:(id<SharedInput>)receiver dst:(SharedKotlinDoubleArray *)dst offset:(int32_t)offset length:(int32_t)length __attribute__((swift_name("readFullyLittleEndian(_:dst:offset:length:)")));
+ (void)readFullyLittleEndian:(id<SharedInput>)receiver dst:(SharedKotlinFloatArray *)dst offset:(int32_t)offset length_:(int32_t)length __attribute__((swift_name("readFullyLittleEndian(_:dst:offset:length_:)")));
+ (void)readFullyLittleEndian:(id<SharedInput>)receiver dst:(SharedKotlinIntArray *)dst offset:(int32_t)offset length__:(int32_t)length __attribute__((swift_name("readFullyLittleEndian(_:dst:offset:length__:)")));
+ (void)readFullyLittleEndian:(id<SharedInput>)receiver dst:(SharedKotlinLongArray *)dst offset:(int32_t)offset length___:(int32_t)length __attribute__((swift_name("readFullyLittleEndian(_:dst:offset:length___:)")));
+ (void)readFullyLittleEndian:(id<SharedInput>)receiver dst:(SharedKotlinShortArray *)dst offset:(int32_t)offset length____:(int32_t)length __attribute__((swift_name("readFullyLittleEndian(_:dst:offset:length____:)")));
+ (void)readFullyLittleEndian:(id<SharedInput>)receiver dst:(id)dst offset:(int32_t)offset length_____:(int32_t)length __attribute__((swift_name("readFullyLittleEndian(_:dst:offset:length_____:)")));
+ (void)readFullyLittleEndian:(id<SharedInput>)receiver dst:(id)dst offset:(int32_t)offset length______:(int32_t)length __attribute__((swift_name("readFullyLittleEndian(_:dst:offset:length______:)")));
+ (void)readFullyLittleEndian:(id<SharedInput>)receiver dst:(id)dst offset:(int32_t)offset length_______:(int32_t)length __attribute__((swift_name("readFullyLittleEndian(_:dst:offset:length_______:)")));
+ (int32_t)readInt:(id<SharedInput>)receiver byteOrder:(SharedByteOrder *)byteOrder __attribute__((swift_name("readInt(_:byteOrder:)")));
+ (int32_t)readIntLittleEndian:(id<SharedInput>)receiver __attribute__((swift_name("readIntLittleEndian(_:)")));
+ (int64_t)readLong:(id<SharedInput>)receiver byteOrder:(SharedByteOrder *)byteOrder __attribute__((swift_name("readLong(_:byteOrder:)")));
+ (int64_t)readLongLittleEndian:(id<SharedInput>)receiver __attribute__((swift_name("readLongLittleEndian(_:)")));
+ (int16_t)readShort:(id<SharedInput>)receiver byteOrder:(SharedByteOrder *)byteOrder __attribute__((swift_name("readShort(_:byteOrder:)")));
+ (int16_t)readShortLittleEndian:(id<SharedInput>)receiver __attribute__((swift_name("readShortLittleEndian(_:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StringsKt")))
@interface SharedStringsKt : SharedBase
+ (SharedKotlinByteArray *)readBytes:(id<SharedInput>)receiver __attribute__((swift_name("readBytes(_:)")));
+ (SharedKotlinByteArray *)readBytes:(id<SharedInput>)receiver n:(int32_t)n __attribute__((swift_name("readBytes(_:n:)")));
+ (SharedKotlinByteArray *)readBytesOf:(id<SharedInput>)receiver min:(int32_t)min max:(int32_t)max __attribute__((swift_name("readBytesOf(_:min:max:)")));
+ (NSString *)readText:(id<SharedInput>)receiver charset:(SharedCharset *)charset max:(int32_t)max __attribute__((swift_name("readText(_:charset:max:)")));
+ (NSString *)readText:(id<SharedInput>)receiver decoder:(SharedCharsetDecoder *)decoder max:(int32_t)max __attribute__((swift_name("readText(_:decoder:max:)"))) __attribute__((deprecated("Use CharsetDecoder.decode instead")));
+ (int32_t)readText:(id<SharedInput>)receiver out:(id<SharedKotlinAppendable>)out charset:(SharedCharset *)charset max:(int32_t)max __attribute__((swift_name("readText(_:out:charset:max:)")));
+ (int32_t)readText:(id<SharedInput>)receiver out:(id<SharedKotlinAppendable>)out decoder:(SharedCharsetDecoder *)decoder max:(int32_t)max __attribute__((swift_name("readText(_:out:decoder:max:)"))) __attribute__((unavailable("Use CharsetDecoder.decode instead")));
+ (NSString *)readTextExact:(id<SharedInput>)receiver charset:(SharedCharset *)charset n:(int32_t)n __attribute__((swift_name("readTextExact(_:charset:n:)"))) __attribute__((deprecated("Use readTextExactCharacters instead.")));
+ (NSString *)readTextExactBytes:(id<SharedInput>)receiver charset:(SharedCharset *)charset bytes:(int32_t)bytes __attribute__((swift_name("readTextExactBytes(_:charset:bytes:)"))) __attribute__((deprecated("Parameters order is changed.")));
+ (NSString *)readTextExactBytes:(id<SharedInput>)receiver bytesCount:(int32_t)bytesCount charset:(SharedCharset *)charset __attribute__((swift_name("readTextExactBytes(_:bytesCount:charset:)")));
+ (NSString *)readTextExactCharacters:(id<SharedInput>)receiver charactersCount:(int32_t)charactersCount charset:(SharedCharset *)charset __attribute__((swift_name("readTextExactCharacters(_:charactersCount:charset:)")));
+ (NSString * _Nullable)readUTF8Line:(id<SharedInput>)receiver estimate:(int32_t)estimate limit:(int32_t)limit __attribute__((swift_name("readUTF8Line(_:estimate:limit:)")));
+ (BOOL)readUTF8LineTo:(id<SharedInput>)receiver out:(id<SharedKotlinAppendable>)out limit:(int32_t)limit __attribute__((swift_name("readUTF8LineTo(_:out:limit:)")));
+ (NSString *)readUTF8UntilDelimiter:(id<SharedInput>)receiver delimiters:(NSString *)delimiters limit:(int32_t)limit __attribute__((swift_name("readUTF8UntilDelimiter(_:delimiters:limit:)")));
+ (int32_t)readUTF8UntilDelimiterTo:(id<SharedInput>)receiver out:(id<SharedOutput>)out delimiters:(NSString *)delimiters limit:(int32_t)limit __attribute__((swift_name("readUTF8UntilDelimiterTo(_:out:delimiters:limit:)")));
+ (int32_t)readUTF8UntilDelimiterTo:(id<SharedInput>)receiver out:(id<SharedKotlinAppendable>)out delimiters:(NSString *)delimiters limit_:(int32_t)limit __attribute__((swift_name("readUTF8UntilDelimiterTo(_:out:delimiters:limit_:)")));
+ (SharedKotlinByteArray *)toByteArray:(NSString *)receiver charset:(SharedCharset *)charset __attribute__((swift_name("toByteArray(_:charset:)")));
+ (void)writeText:(id<SharedOutput>)receiver text:(SharedKotlinCharArray *)text fromIndex:(int32_t)fromIndex toIndex:(int32_t)toIndex charset:(SharedCharset *)charset __attribute__((swift_name("writeText(_:text:fromIndex:toIndex:charset:)")));
+ (void)writeText:(id<SharedOutput>)receiver text:(id)text fromIndex:(int32_t)fromIndex toIndex:(int32_t)toIndex charset_:(SharedCharset *)charset __attribute__((swift_name("writeText(_:text:fromIndex:toIndex:charset_:)")));
+ (void)writeText:(id<SharedOutput>)receiver text:(id)text fromIndex:(int32_t)fromIndex toIndex:(int32_t)toIndex encoder:(SharedCharsetEncoder *)encoder __attribute__((swift_name("writeText(_:text:fromIndex:toIndex:encoder:)"))) __attribute__((unavailable("Use the implementation with Charset instead")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("InputPrimitivesKt")))
@interface SharedInputPrimitivesKt : SharedBase
+ (double)readDouble:(id<SharedInput>)receiver __attribute__((swift_name("readDouble(_:)")));
+ (double)readDoubleFallback:(id<SharedInput>)receiver __attribute__((swift_name("readDoubleFallback(_:)")));
+ (float)readFloat:(id<SharedInput>)receiver __attribute__((swift_name("readFloat(_:)")));
+ (float)readFloatFallback:(id<SharedInput>)receiver __attribute__((swift_name("readFloatFallback(_:)")));
+ (int32_t)readInt:(id<SharedInput>)receiver __attribute__((swift_name("readInt(_:)")));
+ (int64_t)readLong:(id<SharedInput>)receiver __attribute__((swift_name("readLong(_:)")));
+ (int16_t)readShort:(id<SharedInput>)receiver __attribute__((swift_name("readShort(_:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("UnsignedTypesKt")))
@interface SharedUnsignedTypesKt : SharedBase
+ (void)readFully:(id<SharedInput>)receiver dst:(id)dst offset:(int32_t)offset length:(int32_t)length __attribute__((swift_name("readFully(_:dst:offset:length:)")));
+ (void)readFully:(id<SharedInput>)receiver dst:(id)dst offset:(int32_t)offset length_:(int32_t)length __attribute__((swift_name("readFully(_:dst:offset:length_:)")));
+ (void)readFully:(id<SharedInput>)receiver dst:(id)dst offset:(int32_t)offset length__:(int32_t)length __attribute__((swift_name("readFully(_:dst:offset:length__:)")));
+ (void)readFully:(id<SharedInput>)receiver dst:(id)dst offset:(int32_t)offset length___:(int32_t)length __attribute__((swift_name("readFully(_:dst:offset:length___:)")));
+ (uint8_t)readUByte:(id<SharedInput>)receiver __attribute__((swift_name("readUByte(_:)")));
+ (uint32_t)readUInt:(id<SharedInput>)receiver __attribute__((swift_name("readUInt(_:)")));
+ (uint64_t)readULong:(id<SharedInput>)receiver __attribute__((swift_name("readULong(_:)")));
+ (uint16_t)readUShort:(id<SharedInput>)receiver __attribute__((swift_name("readUShort(_:)")));
+ (void)writeFully:(id<SharedOutput>)receiver array:(id)array offset:(int32_t)offset length:(int32_t)length __attribute__((swift_name("writeFully(_:array:offset:length:)")));
+ (void)writeFully:(id<SharedOutput>)receiver array:(id)array offset:(int32_t)offset length_:(int32_t)length __attribute__((swift_name("writeFully(_:array:offset:length_:)")));
+ (void)writeFully:(id<SharedOutput>)receiver array:(id)array offset:(int32_t)offset length__:(int32_t)length __attribute__((swift_name("writeFully(_:array:offset:length__:)")));
+ (void)writeFully:(id<SharedOutput>)receiver array:(id)array offset:(int32_t)offset length___:(int32_t)length __attribute__((swift_name("writeFully(_:array:offset:length___:)")));
+ (void)writeUByte:(id<SharedOutput>)receiver v:(uint8_t)v __attribute__((swift_name("writeUByte(_:v:)")));
+ (void)writeUInt:(id<SharedOutput>)receiver v:(uint32_t)v __attribute__((swift_name("writeUInt(_:v:)")));
+ (void)writeULong:(id<SharedOutput>)receiver v:(uint64_t)v __attribute__((swift_name("writeULong(_:v:)")));
+ (void)writeUShort:(id<SharedOutput>)receiver v:(uint16_t)v __attribute__((swift_name("writeUShort(_:v:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CloseableKt")))
@interface SharedCloseableKt : SharedBase
+ (id _Nullable)use:(id<SharedCloseable_>)receiver block:(id _Nullable (^)(id<SharedCloseable_>))block __attribute__((swift_name("use(_:block:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("OutputPrimitivesKt")))
@interface SharedOutputPrimitivesKt : SharedBase
+ (void)writeDouble:(id<SharedOutput>)receiver value:(double)value __attribute__((swift_name("writeDouble(_:value:)")));
+ (void)writeFloat:(id<SharedOutput>)receiver value:(float)value __attribute__((swift_name("writeFloat(_:value:)")));
+ (void)writeInt:(id<SharedOutput>)receiver value:(int32_t)value __attribute__((swift_name("writeInt(_:value:)")));
+ (void)writeLong:(id<SharedOutput>)receiver value:(int64_t)value __attribute__((swift_name("writeLong(_:value:)")));
+ (void)writeShort:(id<SharedOutput>)receiver value:(int16_t)value __attribute__((swift_name("writeShort(_:value:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("OutputLittleEndianKt")))
@interface SharedOutputLittleEndianKt : SharedBase
+ (void)writeDouble:(id<SharedOutput>)receiver value:(double)value byteOrder:(SharedByteOrder *)byteOrder __attribute__((swift_name("writeDouble(_:value:byteOrder:)")));
+ (void)writeDoubleLittleEndian:(id<SharedOutput>)receiver value:(double)value __attribute__((swift_name("writeDoubleLittleEndian(_:value:)")));
+ (void)writeFloat:(id<SharedOutput>)receiver value:(float)value byteOrder:(SharedByteOrder *)byteOrder __attribute__((swift_name("writeFloat(_:value:byteOrder:)")));
+ (void)writeFloatLittleEndian:(id<SharedOutput>)receiver value:(float)value __attribute__((swift_name("writeFloatLittleEndian(_:value:)")));
+ (void)writeFullyLittleEndian:(id<SharedOutput>)receiver source:(SharedKotlinDoubleArray *)source offset:(int32_t)offset length:(int32_t)length __attribute__((swift_name("writeFullyLittleEndian(_:source:offset:length:)")));
+ (void)writeFullyLittleEndian:(id<SharedOutput>)receiver source:(SharedKotlinFloatArray *)source offset:(int32_t)offset length_:(int32_t)length __attribute__((swift_name("writeFullyLittleEndian(_:source:offset:length_:)")));
+ (void)writeFullyLittleEndian:(id<SharedOutput>)receiver source:(SharedKotlinIntArray *)source offset:(int32_t)offset length__:(int32_t)length __attribute__((swift_name("writeFullyLittleEndian(_:source:offset:length__:)")));
+ (void)writeFullyLittleEndian:(id<SharedOutput>)receiver source:(SharedKotlinLongArray *)source offset:(int32_t)offset length___:(int32_t)length __attribute__((swift_name("writeFullyLittleEndian(_:source:offset:length___:)")));
+ (void)writeFullyLittleEndian:(id<SharedOutput>)receiver source:(SharedKotlinShortArray *)source offset:(int32_t)offset length____:(int32_t)length __attribute__((swift_name("writeFullyLittleEndian(_:source:offset:length____:)")));
+ (void)writeFullyLittleEndian:(id<SharedOutput>)receiver source:(id)source offset:(int32_t)offset length_____:(int32_t)length __attribute__((swift_name("writeFullyLittleEndian(_:source:offset:length_____:)")));
+ (void)writeFullyLittleEndian:(id<SharedOutput>)receiver source:(id)source offset:(int32_t)offset length______:(int32_t)length __attribute__((swift_name("writeFullyLittleEndian(_:source:offset:length______:)")));
+ (void)writeFullyLittleEndian:(id<SharedOutput>)receiver source:(id)source offset:(int32_t)offset length_______:(int32_t)length __attribute__((swift_name("writeFullyLittleEndian(_:source:offset:length_______:)")));
+ (void)writeInt:(id<SharedOutput>)receiver value:(int32_t)value byteOrder:(SharedByteOrder *)byteOrder __attribute__((swift_name("writeInt(_:value:byteOrder:)")));
+ (void)writeIntLittleEndian:(id<SharedOutput>)receiver value:(int32_t)value __attribute__((swift_name("writeIntLittleEndian(_:value:)")));
+ (void)writeLong:(id<SharedOutput>)receiver value:(int64_t)value byteOrder:(SharedByteOrder *)byteOrder __attribute__((swift_name("writeLong(_:value:byteOrder:)")));
+ (void)writeLongLittleEndian:(id<SharedOutput>)receiver value:(int64_t)value __attribute__((swift_name("writeLongLittleEndian(_:value:)")));
+ (void)writeShort:(id<SharedOutput>)receiver value:(int16_t)value byteOrder:(SharedByteOrder *)byteOrder __attribute__((swift_name("writeShort(_:value:byteOrder:)")));
+ (void)writeShortLittleEndian:(id<SharedOutput>)receiver value:(int16_t)value __attribute__((swift_name("writeShortLittleEndian(_:value:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("OutputArraysNativeKt")))
@interface SharedOutputArraysNativeKt : SharedBase
+ (void)writeFully:(id<SharedOutput>)receiver src:(void *)src offset:(int32_t)offset length:(int32_t)length __attribute__((swift_name("writeFully(_:src:offset:length:)")));
+ (void)writeFully:(id<SharedOutput>)receiver src:(void *)src offset:(int64_t)offset length_:(int64_t)length __attribute__((swift_name("writeFully(_:src:offset:length_:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("UTF8Kt")))
@interface SharedUTF8Kt : SharedBase

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)decodeUTF8LineLoopSuspendOut:(id<SharedKotlinAppendable>)out limit:(int32_t)limit nextChunk:(id<SharedKotlinSuspendFunction1>)nextChunk completionHandler:(void (^)(SharedBoolean * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("decodeUTF8LineLoopSuspend(out:limit:nextChunk:completionHandler:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("UnsafeKt")))
@interface SharedUnsafeKt : SharedBase
+ (void)afterHeadWrite:(id<SharedOutput>)receiver current:(SharedChunkBuffer *)current __attribute__((swift_name("afterHeadWrite(_:current:)")));
+ (void)completeReadHead:(id<SharedInput>)receiver current:(SharedChunkBuffer *)current __attribute__((swift_name("completeReadHead(_:current:)")));
+ (SharedChunkBuffer * _Nullable)prepareReadFirstHead:(id<SharedInput>)receiver minSize:(int32_t)minSize __attribute__((swift_name("prepareReadFirstHead(_:minSize:)")));
+ (SharedChunkBuffer * _Nullable)prepareReadNextHead:(id<SharedInput>)receiver current:(SharedChunkBuffer *)current __attribute__((swift_name("prepareReadNextHead(_:current:)")));
+ (SharedChunkBuffer *)prepareWriteHead:(id<SharedOutput>)receiver capacity:(int32_t)capacity current:(SharedChunkBuffer * _Nullable)current __attribute__((swift_name("prepareWriteHead(_:capacity:current:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ByteArrayPoolKt")))
@interface SharedByteArrayPoolKt : SharedBase
@property (class, readonly) id<SharedObjectPool> ByteArrayPool __attribute__((swift_name("ByteArrayPool")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PoolKt")))
@interface SharedPoolKt : SharedBase
+ (id _Nullable)useBorrowed:(id<SharedObjectPool>)receiver block:(id _Nullable (^)(id))block __attribute__((swift_name("useBorrowed(_:block:)"))) __attribute__((deprecated("Use useInstance instead")));
+ (id _Nullable)useInstance:(id<SharedObjectPool>)receiver block:(id _Nullable (^)(id))block __attribute__((swift_name("useInstance(_:block:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ErrorsKt")))
@interface SharedErrorsKt : SharedBase
+ (void)TODO_ERROR __attribute__((swift_name("TODO_ERROR()"))) __attribute__((unavailable("Not implemented.")));
+ (void)TODO_ERRORValue:(id _Nullable)value __attribute__((swift_name("TODO_ERROR(value:)"))) __attribute__((unavailable("Not implemented.")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PosixInputKt")))
@interface SharedPosixInputKt : SharedBase
+ (id<SharedInput>)InputFileDescriptor:(int32_t)fileDescriptor __attribute__((swift_name("Input(fileDescriptor:)")));
+ (id<SharedInput>)InputFile:(void *)file __attribute__((swift_name("Input(file:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PosixOutputKt")))
@interface SharedPosixOutputKt : SharedBase
+ (id<SharedOutput>)OutputFileDescriptor:(int32_t)fileDescriptor __attribute__((swift_name("Output(fileDescriptor:)")));
+ (id<SharedOutput>)OutputFile:(void *)file __attribute__((swift_name("Output(file:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PosixIoKt")))
@interface SharedPosixIoKt : SharedBase
+ (int32_t)freadDestination:(SharedMemory *)destination offset:(int32_t)offset length:(int32_t)length stream:(void *)stream __attribute__((swift_name("fread(destination:offset:length:stream:)")));
+ (int64_t)freadDestination:(SharedMemory *)destination offset:(int64_t)offset length:(int64_t)length stream_:(void *)stream __attribute__((swift_name("fread(destination:offset:length:stream_:)")));
+ (uint64_t)freadBuffer:(SharedBuffer *)buffer stream:(void *)stream __attribute__((swift_name("fread(buffer:stream:)"))) __attribute__((deprecated("Use fread(Memory) instead.")));
+ (int32_t)fwriteSource:(SharedMemory *)source offset:(int32_t)offset length:(int32_t)length stream:(void *)stream __attribute__((swift_name("fwrite(source:offset:length:stream:)")));
+ (int64_t)fwriteSource:(SharedMemory *)source offset:(int64_t)offset length:(int64_t)length stream_:(void *)stream __attribute__((swift_name("fwrite(source:offset:length:stream_:)")));
+ (uint64_t)fwriteBuffer:(SharedBuffer *)buffer stream:(void *)stream __attribute__((swift_name("fwrite(buffer:stream:)"))) __attribute__((deprecated("Use fwrite(Memory) instead.")));
+ (int32_t)readFildes:(int32_t)fildes destination:(SharedMemory *)destination offset:(int32_t)offset length:(int32_t)length __attribute__((swift_name("read(fildes:destination:offset:length:)")));
+ (int64_t)readFildes:(int32_t)fildes destination:(SharedMemory *)destination offset:(int64_t)offset length_:(int64_t)length __attribute__((swift_name("read(fildes:destination:offset:length_:)")));
+ (int64_t)readFildes:(int32_t)fildes buffer:(SharedBuffer *)buffer __attribute__((swift_name("read(fildes:buffer:)"))) __attribute__((deprecated("Use read(Memory) instead.")));
+ (int64_t)recvSocket:(int32_t)socket buffer:(SharedBuffer *)buffer flags:(int32_t)flags __attribute__((swift_name("recv(socket:buffer:flags:)"))) __attribute__((deprecated("Use fread(Memory) instead.")));
+ (int64_t)recvfromSocket:(int32_t)socket buffer:(SharedBuffer *)buffer flags:(int32_t)flags addr:(SharedKotlinCValuesRef<id> *)addr addr_len:(SharedKotlinCValuesRef<id> *)addr_len __attribute__((swift_name("recvfrom(socket:buffer:flags:addr:addr_len:)")));
+ (int32_t)sendSocket:(int32_t)socket source:(SharedMemory *)source sourceOffset:(int32_t)sourceOffset maxLength:(int32_t)maxLength flags:(int32_t)flags __attribute__((swift_name("send(socket:source:sourceOffset:maxLength:flags:)")));
+ (int64_t)sendSocket:(int32_t)socket source:(SharedMemory *)source sourceOffset:(int64_t)sourceOffset maxLength:(int64_t)maxLength flags_:(int32_t)flags __attribute__((swift_name("send(socket:source:sourceOffset:maxLength:flags_:)")));
+ (int64_t)sendSocket:(int32_t)socket buffer:(SharedBuffer *)buffer flags:(int32_t)flags __attribute__((swift_name("send(socket:buffer:flags:)"))) __attribute__((deprecated("Use send(Memory) instead.")));
+ (int64_t)sendtoSocket:(int32_t)socket buffer:(SharedBuffer *)buffer flags:(int32_t)flags addr:(SharedKotlinCValuesRef<id> *)addr addr_len:(uint32_t)addr_len __attribute__((swift_name("sendto(socket:buffer:flags:addr:addr_len:)")));
+ (int32_t)writeFildes:(int32_t)fildes source:(SharedMemory *)source offset:(int32_t)offset length:(int32_t)length __attribute__((swift_name("write(fildes:source:offset:length:)")));
+ (int64_t)writeFildes:(int32_t)fildes source:(SharedMemory *)source offset:(int64_t)offset length_:(int64_t)length __attribute__((swift_name("write(fildes:source:offset:length_:)")));
+ (int64_t)writeFildes:(int32_t)fildes buffer:(SharedBuffer *)buffer __attribute__((swift_name("write(fildes:buffer:)"))) __attribute__((deprecated("Use write(Memory) instead.")));
+ (id _Nullable)use:(void *)receiver block:(id _Nullable (^)(id))block __attribute__((swift_name("use(_:block:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("NativeSqlDatabaseKt")))
@interface SharedNativeSqlDatabaseKt : SharedBase
+ (void)wrapConnectionConnection:(id<SharedDatabaseConnection>)connection block:(void (^)(id<SharedSqlDriver>))block __attribute__((swift_name("wrapConnection(connection:block:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("JobKt")))
@interface SharedJobKt : SharedBase
+ (BOOL)isActive:(id<SharedKotlinCoroutineContext>)receiver __attribute__((swift_name("isActive(_:)")));
+ (id<SharedJob>)job:(id<SharedKotlinCoroutineContext>)receiver __attribute__((swift_name("job(_:)")));
+ (id<SharedCompletableJob>)JobParent:(id<SharedJob> _Nullable)parent __attribute__((swift_name("Job(parent:)")));
+ (void)cancel:(id<SharedKotlinCoroutineContext>)receiver cause:(SharedKotlinCancellationException * _Nullable)cause __attribute__((swift_name("cancel(_:cause:)")));
+ (void)cancel:(id<SharedJob>)receiver message:(NSString *)message cause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("cancel(_:message:cause:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)cancelAndJoin:(id<SharedJob>)receiver completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("cancelAndJoin(_:completionHandler:)")));
+ (void)cancelChildren:(id<SharedKotlinCoroutineContext>)receiver cause:(SharedKotlinCancellationException * _Nullable)cause __attribute__((swift_name("cancelChildren(_:cause:)")));
+ (void)cancelChildren:(id<SharedJob>)receiver cause_:(SharedKotlinCancellationException * _Nullable)cause __attribute__((swift_name("cancelChildren(_:cause_:)")));
+ (void)ensureActive:(id<SharedKotlinCoroutineContext>)receiver __attribute__((swift_name("ensureActive(_:)")));
+ (void)ensureActive_:(id<SharedJob>)receiver __attribute__((swift_name("ensureActive(__:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CoroutineScopeKt")))
@interface SharedCoroutineScopeKt : SharedBase
+ (BOOL)isActive:(id<SharedCoroutineScope>)receiver __attribute__((swift_name("isActive(_:)")));
+ (id<SharedCoroutineScope>)CoroutineScopeContext:(id<SharedKotlinCoroutineContext>)context __attribute__((swift_name("CoroutineScope(context:)")));
+ (id<SharedCoroutineScope>)MainScope __attribute__((swift_name("MainScope()")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)coroutineScopeBlock:(id<SharedKotlinSuspendFunction1>)block completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("coroutineScope(block:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)currentCoroutineContextWithCompletionHandler:(void (^)(id<SharedKotlinCoroutineContext> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("currentCoroutineContext(completionHandler:)")));
+ (void)cancel:(id<SharedCoroutineScope>)receiver message:(NSString *)message cause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("cancel(_:message:cause:)")));
+ (void)cancel:(id<SharedCoroutineScope>)receiver cause:(SharedKotlinCancellationException * _Nullable)cause __attribute__((swift_name("cancel(_:cause:)")));
+ (void)ensureActive:(id<SharedCoroutineScope>)receiver __attribute__((swift_name("ensureActive(_:)")));
+ (id<SharedCoroutineScope>)plus:(id<SharedCoroutineScope>)receiver context:(id<SharedKotlinCoroutineContext>)context __attribute__((swift_name("plus(_:context:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CompletableDeferredKt")))
@interface SharedCompletableDeferredKt : SharedBase
+ (id<SharedCompletableDeferred>)CompletableDeferredValue:(id _Nullable)value __attribute__((swift_name("CompletableDeferred(value:)")));
+ (id<SharedCompletableDeferred>)CompletableDeferredParent:(id<SharedJob> _Nullable)parent __attribute__((swift_name("CompletableDeferred(parent:)")));
+ (BOOL)completeWith:(id<SharedCompletableDeferred>)receiver result:(id _Nullable)result __attribute__((swift_name("completeWith(_:result:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CoroutineExceptionHandlerKt")))
@interface SharedCoroutineExceptionHandlerKt : SharedBase
+ (id<SharedCoroutineExceptionHandler>)CoroutineExceptionHandlerHandler:(void (^)(id<SharedKotlinCoroutineContext>, SharedKotlinThrowable *))handler __attribute__((swift_name("CoroutineExceptionHandler(handler:)")));
+ (void)handleCoroutineExceptionContext:(id<SharedKotlinCoroutineContext>)context exception:(SharedKotlinThrowable *)exception __attribute__((swift_name("handleCoroutineException(context:exception:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("RunnableKt")))
@interface SharedRunnableKt : SharedBase
+ (id<SharedRunnable>)RunnableBlock:(void (^)(void))block __attribute__((swift_name("Runnable(block:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SupervisorKt")))
@interface SharedSupervisorKt : SharedBase
+ (id<SharedCompletableJob>)SupervisorJobParent:(id<SharedJob> _Nullable)parent __attribute__((swift_name("SupervisorJob(parent:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)supervisorScopeBlock:(id<SharedKotlinSuspendFunction1>)block completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("supervisorScope(block:completionHandler:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AwaitKt")))
@interface SharedAwaitKt : SharedBase

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)awaitAllDeferreds:(SharedKotlinArray<id<SharedDeferred>> *)deferreds completionHandler:(void (^)(NSArray<id> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("awaitAll(deferreds:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)joinAllJobs:(SharedKotlinArray<id<SharedJob>> *)jobs completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("joinAll(jobs:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)awaitAll:(id)receiver completionHandler:(void (^)(NSArray<id> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("awaitAll(_:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)joinAll:(id)receiver completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("joinAll(_:completionHandler:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DelayKt")))
@interface SharedDelayKt : SharedBase

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)awaitCancellationWithCompletionHandler:(void (^)(SharedKotlinNothing * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("awaitCancellation(completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)delayTimeMillis:(int64_t)timeMillis completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("delay(timeMillis:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)delayDuration:(int64_t)duration completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("delay(duration:completionHandler:)")));
+ (id<SharedFlow>)debounce:(id<SharedFlow>)receiver timeoutMillis:(SharedLong *(^)(id _Nullable))timeoutMillis __attribute__((swift_name("debounce(_:timeoutMillis:)")));
+ (id<SharedFlow>)debounce:(id<SharedFlow>)receiver timeout:(id (^)(id _Nullable))timeout __attribute__((swift_name("debounce(_:timeout:)")));
+ (id<SharedFlow>)debounce:(id<SharedFlow>)receiver timeoutMillis_:(int64_t)timeoutMillis __attribute__((swift_name("debounce(_:timeoutMillis_:)")));
+ (id<SharedFlow>)debounce:(id<SharedFlow>)receiver timeout_:(int64_t)timeout __attribute__((swift_name("debounce(_:timeout_:)")));
+ (id<SharedFlow>)sample:(id<SharedFlow>)receiver periodMillis:(int64_t)periodMillis __attribute__((swift_name("sample(_:periodMillis:)")));
+ (id<SharedFlow>)sample:(id<SharedFlow>)receiver period:(int64_t)period __attribute__((swift_name("sample(_:period:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ThreadKt")))
@interface SharedThreadKt : SharedBase
+ (void)doInitMainThread __attribute__((swift_name("doInitMainThread()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WorkersKt")))
@interface SharedWorkersKt : SharedBase
+ (SharedCloseableCoroutineDispatcher *)doNewSingleThreadContextName:(NSString *)name __attribute__((swift_name("doNewSingleThreadContext(name:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("BuildersKt__")))
@interface SharedBuildersKt__ : SharedBase
+ (id _Nullable)runBlockingContext:(id<SharedKotlinCoroutineContext>)context block:(id<SharedKotlinSuspendFunction1>)block __attribute__((swift_name("runBlocking(context:block:)")));
+ (id<SharedFlow>)callbackFlowBlock:(id<SharedKotlinSuspendFunction1>)block __attribute__((swift_name("callbackFlow(block:)")));
+ (id<SharedFlow>)channelFlowBlock:(id<SharedKotlinSuspendFunction1>)block __attribute__((swift_name("channelFlow(block:)")));
+ (id<SharedFlow>)emptyFlow __attribute__((swift_name("emptyFlow()")));
+ (id<SharedFlow>)flowBlock:(id<SharedKotlinSuspendFunction1>)block __attribute__((swift_name("flow(block:)")));
+ (id<SharedFlow>)flowOfValue:(id _Nullable)value __attribute__((swift_name("flowOf(value:)")));
+ (id<SharedFlow>)flowOfElements:(SharedKotlinArray<id> *)elements __attribute__((swift_name("flowOf(elements:)")));
+ (id<SharedFlow>)asFlow:(id _Nullable (^)(void))receiver __attribute__((swift_name("asFlow(_:)")));
+ (id<SharedFlow>)asFlow_:(id)receiver __attribute__((swift_name("asFlow(__:)")));
+ (id<SharedFlow>)asFlow__:(id<SharedKotlinIterator>)receiver __attribute__((swift_name("asFlow(___:)")));
+ (id<SharedFlow>)asFlow___:(id<SharedKotlinSequence>)receiver __attribute__((swift_name("asFlow(____:)")));
+ (id<SharedFlow>)asFlow____:(id<SharedKotlinSuspendFunction0>)receiver __attribute__((swift_name("asFlow(_____:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CancellableContinuationKt")))
@interface SharedCancellableContinuationKt : SharedBase

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)suspendCancellableCoroutineBlock:(void (^)(id<SharedCancellableContinuation>))block completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("suspendCancellableCoroutine(block:completionHandler:)")));
+ (void)disposeOnCancellation:(id<SharedCancellableContinuation>)receiver handle:(id<SharedDisposableHandle>)handle __attribute__((swift_name("disposeOnCancellation(_:handle:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Builders_commonKt")))
@interface SharedBuilders_commonKt : SharedBase

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)withContextContext:(id<SharedKotlinCoroutineContext>)context block:(id<SharedKotlinSuspendFunction1>)block completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("withContext(context:block:completionHandler:)")));
+ (id<SharedDeferred>)async:(id<SharedCoroutineScope>)receiver context:(id<SharedKotlinCoroutineContext>)context start:(SharedCoroutineStart *)start block:(id<SharedKotlinSuspendFunction1>)block __attribute__((swift_name("async(_:context:start:block:)")));
+ (id<SharedJob>)launch:(id<SharedCoroutineScope>)receiver context:(id<SharedKotlinCoroutineContext>)context start:(SharedCoroutineStart *)start block:(id<SharedKotlinSuspendFunction1>)block __attribute__((swift_name("launch(_:context:start:block:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TimeoutKt")))
@interface SharedTimeoutKt : SharedBase

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)withTimeoutTimeMillis:(int64_t)timeMillis block:(id<SharedKotlinSuspendFunction1>)block completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("withTimeout(timeMillis:block:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)withTimeoutTimeout:(int64_t)timeout block:(id<SharedKotlinSuspendFunction1>)block completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("withTimeout(timeout:block:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)withTimeoutOrNullTimeMillis:(int64_t)timeMillis block:(id<SharedKotlinSuspendFunction1>)block completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("withTimeoutOrNull(timeMillis:block:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)withTimeoutOrNullTimeout:(int64_t)timeout block:(id<SharedKotlinSuspendFunction1>)block completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("withTimeoutOrNull(timeout:block:completionHandler:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("YieldKt")))
@interface SharedYieldKt : SharedBase

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)yieldWithCompletionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("yield(completionHandler:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CoroutineContextKt")))
@interface SharedCoroutineContextKt : SharedBase
+ (id<SharedKotlinCoroutineContext>)doNewCoroutineContext:(id<SharedCoroutineScope>)receiver context:(id<SharedKotlinCoroutineContext>)context __attribute__((swift_name("doNewCoroutineContext(_:context:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CancellableKt")))
@interface SharedCancellableKt : SharedBase
+ (void)startCoroutineCancellable:(id<SharedKotlinSuspendFunction0>)receiver completion:(id<SharedKotlinContinuation>)completion __attribute__((swift_name("startCoroutineCancellable(_:completion:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("BroadcastChannelKt")))
@interface SharedBroadcastChannelKt : SharedBase
+ (id<SharedBroadcastChannel>)BroadcastChannelCapacity:(int32_t)capacity __attribute__((swift_name("BroadcastChannel(capacity:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ChannelKt")))
@interface SharedChannelKt : SharedBase
+ (id<SharedChannel>)ChannelCapacity:(int32_t)capacity onBufferOverflow:(SharedBufferOverflow *)onBufferOverflow onUndeliveredElement:(void (^ _Nullable)(id _Nullable))onUndeliveredElement __attribute__((swift_name("Channel(capacity:onBufferOverflow:onUndeliveredElement:)")));
+ (id _Nullable)getOrElse:(id _Nullable)receiver onFailure:(id _Nullable (^)(SharedKotlinThrowable * _Nullable))onFailure __attribute__((swift_name("getOrElse(_:onFailure:)")));
+ (id _Nullable)onClosed:(id _Nullable)receiver action:(void (^)(SharedKotlinThrowable * _Nullable))action __attribute__((swift_name("onClosed(_:action:)")));
+ (id _Nullable)onFailure:(id _Nullable)receiver action:(void (^)(SharedKotlinThrowable * _Nullable))action __attribute__((swift_name("onFailure(_:action:)")));
+ (id _Nullable)onSuccess:(id _Nullable)receiver action:(void (^)(id _Nullable))action __attribute__((swift_name("onSuccess(_:action:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ProduceKt")))
@interface SharedProduceKt : SharedBase

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)awaitClose:(id<SharedProducerScope>)receiver block:(void (^)(void))block completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("awaitClose(_:block:completionHandler:)")));
+ (id<SharedReceiveChannel>)produce:(id<SharedCoroutineScope>)receiver context:(id<SharedKotlinCoroutineContext>)context capacity:(int32_t)capacity start:(SharedCoroutineStart *)start onCompletion:(void (^ _Nullable)(SharedKotlinThrowable * _Nullable))onCompletion block:(id<SharedKotlinSuspendFunction1>)block __attribute__((swift_name("produce(_:context:capacity:start:onCompletion:block:)")));
+ (id<SharedReceiveChannel>)produce:(id<SharedCoroutineScope>)receiver context:(id<SharedKotlinCoroutineContext>)context capacity:(int32_t)capacity block:(id<SharedKotlinSuspendFunction1>)block __attribute__((swift_name("produce(_:context:capacity:block:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("BroadcastKt")))
@interface SharedBroadcastKt : SharedBase
+ (id<SharedBroadcastChannel>)broadcast:(id<SharedCoroutineScope>)receiver context:(id<SharedKotlinCoroutineContext>)context capacity:(int32_t)capacity start:(SharedCoroutineStart *)start onCompletion:(void (^ _Nullable)(SharedKotlinThrowable * _Nullable))onCompletion block:(id<SharedKotlinSuspendFunction1>)block __attribute__((swift_name("broadcast(_:context:capacity:start:onCompletion:block:)")));
+ (id<SharedBroadcastChannel>)broadcast:(id<SharedReceiveChannel>)receiver capacity:(int32_t)capacity start:(SharedCoroutineStart *)start __attribute__((swift_name("broadcast(_:capacity:start:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Channels_commonKt")))
@interface SharedChannels_commonKt : SharedBase
+ (id _Nullable)consume:(id<SharedBroadcastChannel>)receiver block:(id _Nullable (^)(id<SharedReceiveChannel>))block __attribute__((swift_name("consume(_:block:)")));
+ (id _Nullable)consume:(id<SharedReceiveChannel>)receiver block_:(id _Nullable (^)(id<SharedReceiveChannel>))block __attribute__((swift_name("consume(_:block_:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)consumeEach:(id<SharedBroadcastChannel>)receiver action:(void (^)(id _Nullable))action completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("consumeEach(_:action:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)consumeEach:(id<SharedReceiveChannel>)receiver action:(void (^)(id _Nullable))action completionHandler_:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("consumeEach(_:action:completionHandler_:)")));
+ (id<SharedSelectClause1>)onReceiveOrNull:(id<SharedReceiveChannel>)receiver __attribute__((swift_name("onReceiveOrNull(_:)"))) __attribute__((unavailable("Deprecated in the favour of 'onReceiveCatching'")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)receiveOrNull:(id<SharedReceiveChannel>)receiver completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("receiveOrNull(_:completionHandler:)"))) __attribute__((unavailable("Deprecated in the favour of 'receiveCatching'")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)toList:(id<SharedReceiveChannel>)receiver completionHandler:(void (^)(NSArray<id> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("toList(_:completionHandler:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ChannelsKt")))
@interface SharedChannelsKt : SharedBase
+ (void)sendBlocking:(id<SharedSendChannel>)receiver element:(id _Nullable)element __attribute__((swift_name("sendBlocking(_:element:)"))) __attribute__((unavailable("Deprecated in the favour of 'trySendBlocking'. Consider handling the result of 'trySendBlocking' explicitly and rethrow exception if necessary")));
+ (id _Nullable)trySendBlocking:(id<SharedSendChannel>)receiver element:(id _Nullable)element __attribute__((swift_name("trySendBlocking(_:element:)")));
+ (id<SharedFlow>)asFlow:(id<SharedBroadcastChannel>)receiver __attribute__((swift_name("asFlow(_:)"))) __attribute__((deprecated("'BroadcastChannel' is obsolete and all corresponding operators are deprecated in the favour of StateFlow and SharedFlow")));
+ (id<SharedFlow>)consumeAsFlow:(id<SharedReceiveChannel>)receiver __attribute__((swift_name("consumeAsFlow(_:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)emitAll:(id<SharedFlowCollector>)receiver channel:(id<SharedReceiveChannel>)channel completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("emitAll(_:channel:completionHandler:)")));
+ (id<SharedReceiveChannel>)produceIn:(id<SharedFlow>)receiver scope:(id<SharedCoroutineScope>)scope __attribute__((swift_name("produceIn(_:scope:)")));
+ (id<SharedFlow>)receiveAsFlow:(id<SharedReceiveChannel>)receiver __attribute__((swift_name("receiveAsFlow(_:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MergeKt")))
@interface SharedMergeKt : SharedBase
+ (id<SharedFlow>)mergeFlows:(SharedKotlinArray<id<SharedFlow>> *)flows __attribute__((swift_name("merge(flows:)")));
+ (id<SharedFlow>)flatMapConcat:(id<SharedFlow>)receiver transform:(id<SharedKotlinSuspendFunction1>)transform __attribute__((swift_name("flatMapConcat(_:transform:)")));
+ (id<SharedFlow>)flatMapLatest:(id<SharedFlow>)receiver transform:(id<SharedKotlinSuspendFunction1>)transform __attribute__((swift_name("flatMapLatest(_:transform:)")));
+ (id<SharedFlow>)flatMapMerge:(id<SharedFlow>)receiver concurrency:(int32_t)concurrency transform:(id<SharedKotlinSuspendFunction1>)transform __attribute__((swift_name("flatMapMerge(_:concurrency:transform:)")));
+ (id<SharedFlow>)flattenConcat:(id<SharedFlow>)receiver __attribute__((swift_name("flattenConcat(_:)")));
+ (id<SharedFlow>)flattenMerge:(id<SharedFlow>)receiver concurrency:(int32_t)concurrency __attribute__((swift_name("flattenMerge(_:concurrency:)")));
+ (id<SharedFlow>)mapLatest:(id<SharedFlow>)receiver transform:(id<SharedKotlinSuspendFunction1>)transform __attribute__((swift_name("mapLatest(_:transform:)")));
+ (id<SharedFlow>)merge:(id)receiver __attribute__((swift_name("merge(_:)")));
+ (id<SharedFlow>)transformLatest:(id<SharedFlow>)receiver transform:(id<SharedKotlinSuspendFunction2>)transform __attribute__((swift_name("transformLatest(_:transform:)")));
@property (class, readonly) int32_t DEFAULT_CONCURRENCY __attribute__((swift_name("DEFAULT_CONCURRENCY")));
@property (class, readonly) NSString *DEFAULT_CONCURRENCY_PROPERTY_NAME __attribute__((swift_name("DEFAULT_CONCURRENCY_PROPERTY_NAME")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LintKt")))
@interface SharedLintKt : SharedBase
+ (id<SharedKotlinCoroutineContext>)coroutineContext:(id<SharedFlowCollector>)receiver __attribute__((swift_name("coroutineContext(_:)"))) __attribute__((unavailable("coroutineContext is resolved into the property of outer CoroutineScope which is likely to be an error.Use currentCoroutineContext() instead or specify the receiver of coroutineContext explicitly")));
+ (BOOL)isActive:(id<SharedFlowCollector>)receiver __attribute__((swift_name("isActive(_:)"))) __attribute__((unavailable("isActive is resolved into the extension of outer CoroutineScope which is likely to be an error.Use currentCoroutineContext().isActive or cancellable() operator instead or specify the receiver of isActive explicitly. Additionally, flow {} builder emissions are cancellable by default.")));
+ (void)cancel:(id<SharedFlowCollector>)receiver cause:(SharedKotlinCancellationException * _Nullable)cause __attribute__((swift_name("cancel(_:cause:)"))) __attribute__((unavailable("cancel() is resolved into the extension of outer CoroutineScope which is likely to be an error.Use currentCoroutineContext().cancel() instead or specify the receiver of cancel() explicitly")));
+ (id<SharedFlow>)cancellable:(id<SharedSharedFlow>)receiver __attribute__((swift_name("cancellable(_:)"))) __attribute__((unavailable("Applying 'cancellable' to a SharedFlow has no effect. See the SharedFlow documentation on Operator Fusion.")));
+ (id<SharedFlow>)catch:(id<SharedSharedFlow>)receiver action:(id<SharedKotlinSuspendFunction2>)action __attribute__((swift_name("catch(_:action:)"))) __attribute__((deprecated("SharedFlow never completes, so this operator typically has not effect, it can only catch exceptions from 'onSubscribe' operator")));
+ (id<SharedFlow>)conflate:(id<SharedStateFlow>)receiver __attribute__((swift_name("conflate(_:)"))) __attribute__((unavailable("Applying 'conflate' to StateFlow has no effect. See the StateFlow documentation on Operator Fusion.")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)count:(id<SharedSharedFlow>)receiver completionHandler:(void (^)(SharedInt * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("count(_:completionHandler:)"))) __attribute__((deprecated("SharedFlow never completes, so this terminal operation never completes.")));
+ (id<SharedFlow>)distinctUntilChanged:(id<SharedStateFlow>)receiver __attribute__((swift_name("distinctUntilChanged(_:)"))) __attribute__((unavailable("Applying 'distinctUntilChanged' to StateFlow has no effect. See the StateFlow documentation on Operator Fusion.")));
+ (id<SharedFlow>)flowOn:(id<SharedSharedFlow>)receiver context:(id<SharedKotlinCoroutineContext>)context __attribute__((swift_name("flowOn(_:context:)"))) __attribute__((unavailable("Applying 'flowOn' to SharedFlow has no effect. See the SharedFlow documentation on Operator Fusion.")));
+ (id<SharedFlow>)retry:(id<SharedSharedFlow>)receiver retries:(int64_t)retries predicate:(id<SharedKotlinSuspendFunction1>)predicate __attribute__((swift_name("retry(_:retries:predicate:)"))) __attribute__((deprecated("SharedFlow never completes, so this operator has no effect.")));
+ (id<SharedFlow>)retryWhen:(id<SharedSharedFlow>)receiver predicate:(id<SharedKotlinSuspendFunction3>)predicate __attribute__((swift_name("retryWhen(_:predicate:)"))) __attribute__((deprecated("SharedFlow never completes, so this operator has no effect.")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)toList:(id<SharedSharedFlow>)receiver completionHandler:(void (^)(NSArray<id> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("toList(_:completionHandler:)"))) __attribute__((deprecated("SharedFlow never completes, so this terminal operation never completes.")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)toSet:(id<SharedSharedFlow>)receiver completionHandler:(void (^)(NSSet<id> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("toSet(_:completionHandler:)"))) __attribute__((deprecated("SharedFlow never completes, so this terminal operation never completes.")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SharedFlowKt")))
@interface SharedSharedFlowKt : SharedBase
+ (id<SharedMutableSharedFlow>)MutableSharedFlowReplay:(int32_t)replay extraBufferCapacity:(int32_t)extraBufferCapacity onBufferOverflow:(SharedBufferOverflow *)onBufferOverflow __attribute__((swift_name("MutableSharedFlow(replay:extraBufferCapacity:onBufferOverflow:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StateFlowKt")))
@interface SharedStateFlowKt : SharedBase
+ (id<SharedMutableStateFlow>)MutableStateFlowValue:(id _Nullable)value __attribute__((swift_name("MutableStateFlow(value:)")));
+ (id _Nullable)getAndUpdate:(id<SharedMutableStateFlow>)receiver function:(id _Nullable (^)(id _Nullable))function __attribute__((swift_name("getAndUpdate(_:function:)")));
+ (void)update:(id<SharedMutableStateFlow>)receiver function:(id _Nullable (^)(id _Nullable))function __attribute__((swift_name("update(_:function:)")));
+ (id _Nullable)updateAndGet:(id<SharedMutableStateFlow>)receiver function:(id _Nullable (^)(id _Nullable))function __attribute__((swift_name("updateAndGet(_:function:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ZipKt")))
@interface SharedZipKt : SharedBase
+ (id<SharedFlow>)combineFlows:(SharedKotlinArray<id<SharedFlow>> *)flows transform:(id<SharedKotlinSuspendFunction1>)transform __attribute__((swift_name("combine(flows:transform:)")));
+ (id<SharedFlow>)combineFlows:(id)flows transform_:(id<SharedKotlinSuspendFunction1>)transform __attribute__((swift_name("combine(flows:transform_:)")));
+ (id<SharedFlow>)combineFlow:(id<SharedFlow>)flow flow2:(id<SharedFlow>)flow2 flow3:(id<SharedFlow>)flow3 flow4:(id<SharedFlow>)flow4 flow5:(id<SharedFlow>)flow5 transform:(id<SharedKotlinSuspendFunction5>)transform __attribute__((swift_name("combine(flow:flow2:flow3:flow4:flow5:transform:)")));
+ (id<SharedFlow>)combineFlow:(id<SharedFlow>)flow flow2:(id<SharedFlow>)flow2 flow3:(id<SharedFlow>)flow3 flow4:(id<SharedFlow>)flow4 transform:(id<SharedKotlinSuspendFunction4>)transform __attribute__((swift_name("combine(flow:flow2:flow3:flow4:transform:)")));
+ (id<SharedFlow>)combineFlow:(id<SharedFlow>)flow flow2:(id<SharedFlow>)flow2 flow3:(id<SharedFlow>)flow3 transform:(id<SharedKotlinSuspendFunction3>)transform __attribute__((swift_name("combine(flow:flow2:flow3:transform:)")));
+ (id<SharedFlow>)combineFlow:(id<SharedFlow>)flow flow2:(id<SharedFlow>)flow2 transform:(id<SharedKotlinSuspendFunction2>)transform __attribute__((swift_name("combine(flow:flow2:transform:)")));
+ (id<SharedFlow>)combineTransformFlows:(SharedKotlinArray<id<SharedFlow>> *)flows transform:(id<SharedKotlinSuspendFunction2>)transform __attribute__((swift_name("combineTransform(flows:transform:)")));
+ (id<SharedFlow>)combineTransformFlows:(id)flows transform_:(id<SharedKotlinSuspendFunction2>)transform __attribute__((swift_name("combineTransform(flows:transform_:)")));
+ (id<SharedFlow>)combineTransformFlow:(id<SharedFlow>)flow flow2:(id<SharedFlow>)flow2 flow3:(id<SharedFlow>)flow3 flow4:(id<SharedFlow>)flow4 flow5:(id<SharedFlow>)flow5 transform:(id<SharedKotlinSuspendFunction6>)transform __attribute__((swift_name("combineTransform(flow:flow2:flow3:flow4:flow5:transform:)")));
+ (id<SharedFlow>)combineTransformFlow:(id<SharedFlow>)flow flow2:(id<SharedFlow>)flow2 flow3:(id<SharedFlow>)flow3 flow4:(id<SharedFlow>)flow4 transform:(id<SharedKotlinSuspendFunction5>)transform __attribute__((swift_name("combineTransform(flow:flow2:flow3:flow4:transform:)")));
+ (id<SharedFlow>)combineTransformFlow:(id<SharedFlow>)flow flow2:(id<SharedFlow>)flow2 flow3:(id<SharedFlow>)flow3 transform:(id<SharedKotlinSuspendFunction4>)transform __attribute__((swift_name("combineTransform(flow:flow2:flow3:transform:)")));
+ (id<SharedFlow>)combineTransformFlow:(id<SharedFlow>)flow flow2:(id<SharedFlow>)flow2 transform:(id<SharedKotlinSuspendFunction3>)transform __attribute__((swift_name("combineTransform(flow:flow2:transform:)")));
+ (id<SharedFlow>)combine:(id<SharedFlow>)receiver flow:(id<SharedFlow>)flow transform:(id<SharedKotlinSuspendFunction2>)transform __attribute__((swift_name("combine(_:flow:transform:)")));
+ (id<SharedFlow>)combineTransform:(id<SharedFlow>)receiver flow:(id<SharedFlow>)flow transform:(id<SharedKotlinSuspendFunction3>)transform __attribute__((swift_name("combineTransform(_:flow:transform:)")));
+ (id<SharedFlow>)zip:(id<SharedFlow>)receiver other:(id<SharedFlow>)other transform:(id<SharedKotlinSuspendFunction2>)transform __attribute__((swift_name("zip(_:other:transform:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ShareKt")))
@interface SharedShareKt : SharedBase
+ (id<SharedSharedFlow>)asSharedFlow:(id<SharedMutableSharedFlow>)receiver __attribute__((swift_name("asSharedFlow(_:)")));
+ (id<SharedStateFlow>)asStateFlow:(id<SharedMutableStateFlow>)receiver __attribute__((swift_name("asStateFlow(_:)")));
+ (id<SharedSharedFlow>)onSubscription:(id<SharedSharedFlow>)receiver action:(id<SharedKotlinSuspendFunction1>)action __attribute__((swift_name("onSubscription(_:action:)")));
+ (id<SharedSharedFlow>)shareIn:(id<SharedFlow>)receiver scope:(id<SharedCoroutineScope>)scope started:(id<SharedSharingStarted>)started replay:(int32_t)replay __attribute__((swift_name("shareIn(_:scope:started:replay:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)stateIn:(id<SharedFlow>)receiver scope:(id<SharedCoroutineScope>)scope completionHandler:(void (^)(id<SharedStateFlow> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("stateIn(_:scope:completionHandler:)")));
+ (id<SharedStateFlow>)stateIn:(id<SharedFlow>)receiver scope:(id<SharedCoroutineScope>)scope started:(id<SharedSharingStarted>)started initialValue:(id _Nullable)initialValue __attribute__((swift_name("stateIn(_:scope:started:initialValue:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContextKt")))
@interface SharedContextKt : SharedBase
+ (id<SharedFlow>)buffer:(id<SharedFlow>)receiver capacity:(int32_t)capacity onBufferOverflow:(SharedBufferOverflow *)onBufferOverflow __attribute__((swift_name("buffer(_:capacity:onBufferOverflow:)")));
+ (id<SharedFlow>)cancellable:(id<SharedFlow>)receiver __attribute__((swift_name("cancellable(_:)")));
+ (id<SharedFlow>)conflate:(id<SharedFlow>)receiver __attribute__((swift_name("conflate(_:)")));
+ (id<SharedFlow>)flowOn:(id<SharedFlow>)receiver context:(id<SharedKotlinCoroutineContext>)context __attribute__((swift_name("flowOn(_:context:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MigrationKt")))
@interface SharedMigrationKt : SharedBase
+ (id<SharedFlow>)cache:(id<SharedFlow>)receiver __attribute__((swift_name("cache(_:)"))) __attribute__((unavailable("Flow analogue of 'cache()' is 'shareIn' with unlimited replay and 'started = SharingStared.Lazily' argument'")));
+ (id<SharedFlow>)combineLatest:(id<SharedFlow>)receiver other:(id<SharedFlow>)other other2:(id<SharedFlow>)other2 other3:(id<SharedFlow>)other3 other4:(id<SharedFlow>)other4 transform:(id<SharedKotlinSuspendFunction5>)transform __attribute__((swift_name("combineLatest(_:other:other2:other3:other4:transform:)"))) __attribute__((unavailable("Flow analogue of 'combineLatest' is 'combine'")));
+ (id<SharedFlow>)combineLatest:(id<SharedFlow>)receiver other:(id<SharedFlow>)other other2:(id<SharedFlow>)other2 other3:(id<SharedFlow>)other3 transform:(id<SharedKotlinSuspendFunction4>)transform __attribute__((swift_name("combineLatest(_:other:other2:other3:transform:)"))) __attribute__((unavailable("Flow analogue of 'combineLatest' is 'combine'")));
+ (id<SharedFlow>)combineLatest:(id<SharedFlow>)receiver other:(id<SharedFlow>)other other2:(id<SharedFlow>)other2 transform:(id<SharedKotlinSuspendFunction3>)transform __attribute__((swift_name("combineLatest(_:other:other2:transform:)"))) __attribute__((unavailable("Flow analogue of 'combineLatest' is 'combine'")));
+ (id<SharedFlow>)combineLatest:(id<SharedFlow>)receiver other:(id<SharedFlow>)other transform:(id<SharedKotlinSuspendFunction2>)transform __attribute__((swift_name("combineLatest(_:other:transform:)"))) __attribute__((unavailable("Flow analogue of 'combineLatest' is 'combine'")));
+ (id<SharedFlow>)compose:(id<SharedFlow>)receiver transformer:(id<SharedFlow> (^)(id<SharedFlow>))transformer __attribute__((swift_name("compose(_:transformer:)"))) __attribute__((unavailable("Flow analogue of 'compose' is 'let'")));
+ (id<SharedFlow>)concatMap:(id<SharedFlow>)receiver mapper:(id<SharedFlow> (^)(id _Nullable))mapper __attribute__((swift_name("concatMap(_:mapper:)"))) __attribute__((unavailable("Flow analogue of 'concatMap' is 'flatMapConcat'")));
+ (id<SharedFlow>)concatWith:(id<SharedFlow>)receiver value:(id _Nullable)value __attribute__((swift_name("concatWith(_:value:)"))) __attribute__((unavailable("Flow analogue of 'concatWith' is 'onCompletion'. Use 'onCompletion { emit(value) }'")));
+ (id<SharedFlow>)concatWith:(id<SharedFlow>)receiver other:(id<SharedFlow>)other __attribute__((swift_name("concatWith(_:other:)"))) __attribute__((unavailable("Flow analogue of 'concatWith' is 'onCompletion'. Use 'onCompletion { if (it == null) emitAll(other) }'")));
+ (id<SharedFlow>)delayEach:(id<SharedFlow>)receiver timeMillis:(int64_t)timeMillis __attribute__((swift_name("delayEach(_:timeMillis:)"))) __attribute__((unavailable("Use 'onEach { delay(timeMillis) }'")));
+ (id<SharedFlow>)delayFlow:(id<SharedFlow>)receiver timeMillis:(int64_t)timeMillis __attribute__((swift_name("delayFlow(_:timeMillis:)"))) __attribute__((unavailable("Use 'onStart { delay(timeMillis) }'")));
+ (id<SharedFlow>)flatMap:(id<SharedFlow>)receiver mapper:(id<SharedKotlinSuspendFunction1>)mapper __attribute__((swift_name("flatMap(_:mapper:)"))) __attribute__((unavailable("Flow analogue is 'flatMapConcat'")));
+ (id<SharedFlow>)flatten:(id<SharedFlow>)receiver __attribute__((swift_name("flatten(_:)"))) __attribute__((unavailable("Flow analogue of 'flatten' is 'flattenConcat'")));
+ (void)forEach:(id<SharedFlow>)receiver action:(id<SharedKotlinSuspendFunction1>)action __attribute__((swift_name("forEach(_:action:)"))) __attribute__((unavailable("Flow analogue of 'forEach' is 'collect'")));
+ (id<SharedFlow>)merge:(id<SharedFlow>)receiver __attribute__((swift_name("merge(_:)"))) __attribute__((unavailable("Flow analogue of 'merge' is 'flattenConcat'")));
+ (id<SharedFlow>)observeOn:(id<SharedFlow>)receiver context:(id<SharedKotlinCoroutineContext>)context __attribute__((swift_name("observeOn(_:context:)"))) __attribute__((unavailable("Collect flow in the desired context instead")));
+ (id<SharedFlow>)onErrorResume:(id<SharedFlow>)receiver fallback:(id<SharedFlow>)fallback __attribute__((swift_name("onErrorResume(_:fallback:)"))) __attribute__((unavailable("Flow analogue of 'onErrorXxx' is 'catch'. Use 'catch { emitAll(fallback) }'")));
+ (id<SharedFlow>)onErrorResumeNext:(id<SharedFlow>)receiver fallback:(id<SharedFlow>)fallback __attribute__((swift_name("onErrorResumeNext(_:fallback:)"))) __attribute__((unavailable("Flow analogue of 'onErrorXxx' is 'catch'. Use 'catch { emitAll(fallback) }'")));
+ (id<SharedFlow>)onErrorReturn:(id<SharedFlow>)receiver fallback:(id _Nullable)fallback __attribute__((swift_name("onErrorReturn(_:fallback:)"))) __attribute__((unavailable("Flow analogue of 'onErrorXxx' is 'catch'. Use 'catch { emit(fallback) }'")));
+ (id<SharedFlow>)onErrorReturn:(id<SharedFlow>)receiver fallback:(id _Nullable)fallback predicate:(SharedBoolean *(^)(SharedKotlinThrowable *))predicate __attribute__((swift_name("onErrorReturn(_:fallback:predicate:)"))) __attribute__((unavailable("Flow analogue of 'onErrorXxx' is 'catch'. Use 'catch { e -> if (predicate(e)) emit(fallback) else throw e }'")));
+ (id<SharedFlow>)publish:(id<SharedFlow>)receiver __attribute__((swift_name("publish(_:)"))) __attribute__((unavailable("Flow analogue of 'publish()' is 'shareIn'. \npublish().connect() is the default strategy (no extra call is needed), \npublish().autoConnect() translates to 'started = SharingStared.Lazily' argument, \npublish().refCount() translates to 'started = SharingStared.WhileSubscribed()' argument.")));
+ (id<SharedFlow>)publish:(id<SharedFlow>)receiver bufferSize:(int32_t)bufferSize __attribute__((swift_name("publish(_:bufferSize:)"))) __attribute__((unavailable("Flow analogue of 'publish(bufferSize)' is 'buffer' followed by 'shareIn'. \npublish().connect() is the default strategy (no extra call is needed), \npublish().autoConnect() translates to 'started = SharingStared.Lazily' argument, \npublish().refCount() translates to 'started = SharingStared.WhileSubscribed()' argument.")));
+ (id<SharedFlow>)publishOn:(id<SharedFlow>)receiver context:(id<SharedKotlinCoroutineContext>)context __attribute__((swift_name("publishOn(_:context:)"))) __attribute__((unavailable("Collect flow in the desired context instead")));
+ (id<SharedFlow>)replay:(id<SharedFlow>)receiver __attribute__((swift_name("replay(_:)"))) __attribute__((unavailable("Flow analogue of 'replay()' is 'shareIn' with unlimited replay. \nreplay().connect() is the default strategy (no extra call is needed), \nreplay().autoConnect() translates to 'started = SharingStared.Lazily' argument, \nreplay().refCount() translates to 'started = SharingStared.WhileSubscribed()' argument.")));
+ (id<SharedFlow>)replay:(id<SharedFlow>)receiver bufferSize:(int32_t)bufferSize __attribute__((swift_name("replay(_:bufferSize:)"))) __attribute__((unavailable("Flow analogue of 'replay(bufferSize)' is 'shareIn' with the specified replay parameter. \nreplay().connect() is the default strategy (no extra call is needed), \nreplay().autoConnect() translates to 'started = SharingStared.Lazily' argument, \nreplay().refCount() translates to 'started = SharingStared.WhileSubscribed()' argument.")));
+ (id<SharedFlow>)scanFold:(id<SharedFlow>)receiver initial:(id _Nullable)initial operation:(id<SharedKotlinSuspendFunction2>)operation __attribute__((swift_name("scanFold(_:initial:operation:)"))) __attribute__((unavailable("Flow has less verbose 'scan' shortcut")));
+ (id<SharedFlow>)scanReduce:(id<SharedFlow>)receiver operation:(id<SharedKotlinSuspendFunction2>)operation __attribute__((swift_name("scanReduce(_:operation:)"))) __attribute__((unavailable("'scanReduce' was renamed to 'runningReduce' to be consistent with Kotlin standard library")));
+ (id<SharedFlow>)skip:(id<SharedFlow>)receiver count:(int32_t)count __attribute__((swift_name("skip(_:count:)"))) __attribute__((unavailable("Flow analogue of 'skip' is 'drop'")));
+ (id<SharedFlow>)startWith:(id<SharedFlow>)receiver value:(id _Nullable)value __attribute__((swift_name("startWith(_:value:)"))) __attribute__((unavailable("Flow analogue of 'startWith' is 'onStart'. Use 'onStart { emit(value) }'")));
+ (id<SharedFlow>)startWith:(id<SharedFlow>)receiver other:(id<SharedFlow>)other __attribute__((swift_name("startWith(_:other:)"))) __attribute__((unavailable("Flow analogue of 'startWith' is 'onStart'. Use 'onStart { emitAll(other) }'")));
+ (void)subscribe:(id<SharedFlow>)receiver __attribute__((swift_name("subscribe(_:)"))) __attribute__((unavailable("Use 'launchIn' with 'onEach', 'onCompletion' and 'catch' instead")));
+ (void)subscribe:(id<SharedFlow>)receiver onEach:(id<SharedKotlinSuspendFunction1>)onEach __attribute__((swift_name("subscribe(_:onEach:)"))) __attribute__((unavailable("Use 'launchIn' with 'onEach', 'onCompletion' and 'catch' instead")));
+ (void)subscribe:(id<SharedFlow>)receiver onEach:(id<SharedKotlinSuspendFunction1>)onEach onError:(id<SharedKotlinSuspendFunction1>)onError __attribute__((swift_name("subscribe(_:onEach:onError:)"))) __attribute__((unavailable("Use 'launchIn' with 'onEach', 'onCompletion' and 'catch' instead")));
+ (id<SharedFlow>)subscribeOn:(id<SharedFlow>)receiver context:(id<SharedKotlinCoroutineContext>)context __attribute__((swift_name("subscribeOn(_:context:)"))) __attribute__((unavailable("Use 'flowOn' instead")));
+ (id<SharedFlow>)switchMap:(id<SharedFlow>)receiver transform:(id<SharedKotlinSuspendFunction1>)transform __attribute__((swift_name("switchMap(_:transform:)"))) __attribute__((unavailable("Flow analogues of 'switchMap' are 'transformLatest', 'flatMapLatest' and 'mapLatest'")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ErrorsKt_")))
@interface SharedErrorsKt_ : SharedBase
+ (id<SharedFlow>)catch:(id<SharedFlow>)receiver action:(id<SharedKotlinSuspendFunction2>)action __attribute__((swift_name("catch(_:action:)")));
+ (id<SharedFlow>)retry:(id<SharedFlow>)receiver retries:(int64_t)retries predicate:(id<SharedKotlinSuspendFunction1>)predicate __attribute__((swift_name("retry(_:retries:predicate:)")));
+ (id<SharedFlow>)retryWhen:(id<SharedFlow>)receiver predicate:(id<SharedKotlinSuspendFunction3>)predicate __attribute__((swift_name("retryWhen(_:predicate:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CollectKt")))
@interface SharedCollectKt : SharedBase

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)collect:(id<SharedFlow>)receiver completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("collect(_:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)collectIndexed:(id<SharedFlow>)receiver action:(id<SharedKotlinSuspendFunction2>)action completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("collectIndexed(_:action:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)collectLatest:(id<SharedFlow>)receiver action:(id<SharedKotlinSuspendFunction1>)action completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("collectLatest(_:action:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)emitAll:(id<SharedFlowCollector>)receiver flow:(id<SharedFlow>)flow completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("emitAll(_:flow:completionHandler:)")));
+ (id<SharedJob>)launchIn:(id<SharedFlow>)receiver scope:(id<SharedCoroutineScope>)scope __attribute__((swift_name("launchIn(_:scope:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CountKt")))
@interface SharedCountKt : SharedBase

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)count:(id<SharedFlow>)receiver completionHandler:(void (^)(SharedInt * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("count(_:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)count:(id<SharedFlow>)receiver predicate:(id<SharedKotlinSuspendFunction1>)predicate completionHandler:(void (^)(SharedInt * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("count(_:predicate:completionHandler:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DistinctKt")))
@interface SharedDistinctKt : SharedBase
+ (id<SharedFlow>)distinctUntilChanged:(id<SharedFlow>)receiver __attribute__((swift_name("distinctUntilChanged(_:)")));
+ (id<SharedFlow>)distinctUntilChanged:(id<SharedFlow>)receiver areEquivalent:(SharedBoolean *(^)(id _Nullable, id _Nullable))areEquivalent __attribute__((swift_name("distinctUntilChanged(_:areEquivalent:)")));
+ (id<SharedFlow>)distinctUntilChangedBy:(id<SharedFlow>)receiver keySelector:(id _Nullable (^)(id _Nullable))keySelector __attribute__((swift_name("distinctUntilChangedBy(_:keySelector:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LimitKt")))
@interface SharedLimitKt : SharedBase
+ (id<SharedFlow>)drop:(id<SharedFlow>)receiver count:(int32_t)count __attribute__((swift_name("drop(_:count:)")));
+ (id<SharedFlow>)dropWhile:(id<SharedFlow>)receiver predicate:(id<SharedKotlinSuspendFunction1>)predicate __attribute__((swift_name("dropWhile(_:predicate:)")));
+ (id<SharedFlow>)take:(id<SharedFlow>)receiver count:(int32_t)count __attribute__((swift_name("take(_:count:)")));
+ (id<SharedFlow>)takeWhile:(id<SharedFlow>)receiver predicate:(id<SharedKotlinSuspendFunction1>)predicate __attribute__((swift_name("takeWhile(_:predicate:)")));
+ (id<SharedFlow>)transformWhile:(id<SharedFlow>)receiver transform:(id<SharedKotlinSuspendFunction2>)transform __attribute__((swift_name("transformWhile(_:transform:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TransformKt")))
@interface SharedTransformKt : SharedBase
+ (id<SharedFlow>)filter:(id<SharedFlow>)receiver predicate:(id<SharedKotlinSuspendFunction1>)predicate __attribute__((swift_name("filter(_:predicate:)")));
+ (id<SharedFlow>)filterIsInstance:(id<SharedFlow>)receiver __attribute__((swift_name("filterIsInstance(_:)")));
+ (id<SharedFlow>)filterNot:(id<SharedFlow>)receiver predicate:(id<SharedKotlinSuspendFunction1>)predicate __attribute__((swift_name("filterNot(_:predicate:)")));
+ (id<SharedFlow>)filterNotNull:(id<SharedFlow>)receiver __attribute__((swift_name("filterNotNull(_:)")));
+ (id<SharedFlow>)map:(id<SharedFlow>)receiver transform:(id<SharedKotlinSuspendFunction1>)transform __attribute__((swift_name("map(_:transform:)")));
+ (id<SharedFlow>)mapNotNull:(id<SharedFlow>)receiver transform:(id<SharedKotlinSuspendFunction1>)transform __attribute__((swift_name("mapNotNull(_:transform:)")));
+ (id<SharedFlow>)onEach:(id<SharedFlow>)receiver action:(id<SharedKotlinSuspendFunction1>)action __attribute__((swift_name("onEach(_:action:)")));
+ (id<SharedFlow>)runningFold:(id<SharedFlow>)receiver initial:(id _Nullable)initial operation:(id<SharedKotlinSuspendFunction2>)operation __attribute__((swift_name("runningFold(_:initial:operation:)")));
+ (id<SharedFlow>)runningReduce:(id<SharedFlow>)receiver operation:(id<SharedKotlinSuspendFunction2>)operation __attribute__((swift_name("runningReduce(_:operation:)")));
+ (id<SharedFlow>)scan:(id<SharedFlow>)receiver initial:(id _Nullable)initial operation:(id<SharedKotlinSuspendFunction2>)operation __attribute__((swift_name("scan(_:initial:operation:)")));
+ (id<SharedFlow>)withIndex:(id<SharedFlow>)receiver __attribute__((swift_name("withIndex(_:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ReduceKt")))
@interface SharedReduceKt : SharedBase

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)first:(id<SharedFlow>)receiver completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("first(_:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)first:(id<SharedFlow>)receiver predicate:(id<SharedKotlinSuspendFunction1>)predicate completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("first(_:predicate:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)firstOrNull:(id<SharedFlow>)receiver completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("firstOrNull(_:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)firstOrNull:(id<SharedFlow>)receiver predicate:(id<SharedKotlinSuspendFunction1>)predicate completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("firstOrNull(_:predicate:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)fold:(id<SharedFlow>)receiver initial:(id _Nullable)initial operation:(id<SharedKotlinSuspendFunction2>)operation completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("fold(_:initial:operation:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)last:(id<SharedFlow>)receiver completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("last(_:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)lastOrNull:(id<SharedFlow>)receiver completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("lastOrNull(_:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)reduce:(id<SharedFlow>)receiver operation:(id<SharedKotlinSuspendFunction2>)operation completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("reduce(_:operation:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)single:(id<SharedFlow>)receiver completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("single(_:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)singleOrNull:(id<SharedFlow>)receiver completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("singleOrNull(_:completionHandler:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("EmittersKt")))
@interface SharedEmittersKt : SharedBase
+ (id<SharedFlow>)onCompletion:(id<SharedFlow>)receiver action:(id<SharedKotlinSuspendFunction2>)action __attribute__((swift_name("onCompletion(_:action:)")));
+ (id<SharedFlow>)onEmpty:(id<SharedFlow>)receiver action:(id<SharedKotlinSuspendFunction1>)action __attribute__((swift_name("onEmpty(_:action:)")));
+ (id<SharedFlow>)onStart:(id<SharedFlow>)receiver action:(id<SharedKotlinSuspendFunction1>)action __attribute__((swift_name("onStart(_:action:)")));
+ (id<SharedFlow>)transform:(id<SharedFlow>)receiver transform:(id<SharedKotlinSuspendFunction2>)transform __attribute__((swift_name("transform(_:transform:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CollectionKt")))
@interface SharedCollectionKt : SharedBase

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)toCollection:(id<SharedFlow>)receiver destination:(id)destination completionHandler:(void (^)(id _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("toCollection(_:destination:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)toList:(id<SharedFlow>)receiver destination:(NSMutableArray<id> *)destination completionHandler:(void (^)(NSArray<id> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("toList(_:destination:completionHandler:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)toSet:(id<SharedFlow>)receiver destination:(SharedMutableSet<id> *)destination completionHandler:(void (^)(NSSet<id> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("toSet(_:destination:completionHandler:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SelectKt")))
@interface SharedSelectKt : SharedBase

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)selectBuilder:(void (^)(id<SharedSelectBuilder>))builder completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("select(builder:completionHandler:)")));
+ (void)onTimeout:(id<SharedSelectBuilder>)receiver timeout:(int64_t)timeout block:(id<SharedKotlinSuspendFunction0>)block __attribute__((swift_name("onTimeout(_:timeout:block:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SelectUnbiasedKt")))
@interface SharedSelectUnbiasedKt : SharedBase

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)selectUnbiasedBuilder:(void (^)(id<SharedSelectBuilder>))builder completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("selectUnbiased(builder:completionHandler:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WhileSelectKt")))
@interface SharedWhileSelectKt : SharedBase

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)whileSelectBuilder:(void (^)(id<SharedSelectBuilder>))builder completionHandler:(void (^)(SharedKotlinUnit * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("whileSelect(builder:completionHandler:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SynchronizedKt")))
@interface SharedSynchronizedKt : SharedBase
+ (id _Nullable)synchronizedLock:(SharedSynchronizedObject *)lock block:(id _Nullable (^)(void))block __attribute__((swift_name("synchronized(lock:block:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DispatchedContinuationKt")))
@interface SharedDispatchedContinuationKt : SharedBase
+ (void)resumeCancellableWith:(id<SharedKotlinContinuation>)receiver result:(id _Nullable)result onCancellation:(void (^ _Nullable)(SharedKotlinThrowable *))onCancellation __attribute__((swift_name("resumeCancellableWith(_:result:onCancellation:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MutexKt")))
@interface SharedMutexKt : SharedBase
+ (id<SharedMutex>)MutexLocked:(BOOL)locked __attribute__((swift_name("Mutex(locked:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)withLock:(id<SharedMutex>)receiver owner:(id _Nullable)owner action:(id _Nullable (^)(void))action completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("withLock(_:owner:action:completionHandler:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SemaphoreKt")))
@interface SharedSemaphoreKt : SharedBase
+ (id<SharedSemaphore>)SemaphorePermits:(int32_t)permits acquiredPermits:(int32_t)acquiredPermits __attribute__((swift_name("Semaphore(permits:acquiredPermits:)")));

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
+ (void)withPermit:(id<SharedSemaphore>)receiver action:(id _Nullable (^)(void))action completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("withPermit(_:action:completionHandler:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("EnumColumnAdapterKt")))
@interface SharedEnumColumnAdapterKt : SharedBase
+ (SharedEnumColumnAdapter<SharedKotlinEnum *> *)EnumColumnAdapter __attribute__((swift_name("EnumColumnAdapter()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("QueryKt_")))
@interface SharedQueryKt_ : SharedBase
+ (SharedQuery<id> *)QueryIdentifier:(int32_t)identifier queries:(NSMutableArray<SharedQuery<id> *> *)queries driver:(id<SharedSqlDriver>)driver query:(NSString *)query mapper:(id (^)(id<SharedSqlCursor>))mapper __attribute__((swift_name("Query(identifier:queries:driver:query:mapper:)")));
+ (SharedQuery<id> *)QueryIdentifier:(int32_t)identifier queries:(NSMutableArray<SharedQuery<id> *> *)queries driver:(id<SharedSqlDriver>)driver fileName:(NSString *)fileName label:(NSString *)label query:(NSString *)query mapper:(id (^)(id<SharedSqlCursor>))mapper __attribute__((swift_name("Query(identifier:queries:driver:fileName:label:query:mapper:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SqlDriverKt")))
@interface SharedSqlDriverKt : SharedBase
+ (void)migrateWithCallbacks:(id<SharedSqlDriverSchema>)receiver driver:(id<SharedSqlDriver>)driver oldVersion:(int32_t)oldVersion newVersion:(int32_t)newVersion callbacks:(SharedKotlinArray<SharedAfterVersion *> *)callbacks __attribute__((swift_name("migrateWithCallbacks(_:driver:oldVersion:newVersion:callbacks:)")));
+ (void)migrateWithCallbacks:(id<SharedSqlDriverSchema>)receiver driver:(id<SharedSqlDriver>)driver oldVersion:(int32_t)oldVersion newVersion:(int32_t)newVersion callbacks_:(SharedKotlinArray<SharedAfterVersionWithDriver *> *)callbacks __attribute__((swift_name("migrateWithCallbacks(_:driver:oldVersion:newVersion:callbacks_:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CloseableKt_")))
@interface SharedCloseableKt_ : SharedBase
+ (id _Nullable)use:(id<SharedCloseable__> _Nullable)receiver body:(id _Nullable (^)(id<SharedCloseable__> _Nullable))body __attribute__((swift_name("use(_:body:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FunctionsKt")))
@interface SharedFunctionsKt : SharedBase
+ (NSMutableArray<SharedQuery<id> *> *)doCopyOnWriteList __attribute__((swift_name("doCopyOnWriteList()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FunctionsKt_")))
@interface SharedFunctionsKt_ : SharedBase
+ (NSMutableArray<id> *)frozenCopyOnWriteListCollection:(id _Nullable)collection __attribute__((swift_name("frozenCopyOnWriteList(collection:)")));
+ (SharedMutableDictionary<id, id> *)frozenHashMapInitialCapacity:(int32_t)initialCapacity loadFactor:(float)loadFactor __attribute__((swift_name("frozenHashMap(initialCapacity:loadFactor:)"))) __attribute__((deprecated("Replacing Atomic collections with isolated state collections (modele `stately-iso-collections`)")));
+ (SharedMutableSet<id> *)frozenHashSet __attribute__((swift_name("frozenHashSet()"))) __attribute__((deprecated("Replacing Atomic collections with isolated state collections (modele `stately-iso-collections`)")));
+ (NSMutableArray<id> *)frozenLinkedListStableIterator:(BOOL)stableIterator __attribute__((swift_name("frozenLinkedList(stableIterator:)"))) __attribute__((deprecated("Replacing Atomic collections with isolated state collections (modele `stately-iso-collections`)")));
+ (id<SharedLruCache>)frozenLruCacheMaxCacheSize:(int32_t)maxCacheSize onRemove:(void (^)(id<SharedKotlinMutableMapMutableEntry>))onRemove __attribute__((swift_name("frozenLruCache(maxCacheSize:onRemove:)")));
+ (NSArray<id> *)toList:(id<SharedKotlinIterator>)receiver __attribute__((swift_name("toList(_:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SharedCollectionsKt")))
@interface SharedSharedCollectionsKt : SharedBase
+ (NSMutableArray<id> *)sharedList __attribute__((swift_name("sharedList()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LockKt")))
@interface SharedLockKt : SharedBase
+ (void)close:(NSRecursiveLock *)receiver __attribute__((swift_name("close(_:)")));
+ (id _Nullable)withLock:(NSRecursiveLock *)receiver block:(id _Nullable (^)(void))block __attribute__((swift_name("withLock(_:block:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MatcherKt")))
@interface SharedMatcherKt : SharedBase
+ (id<SharedMatcher>)neverNullMatcherT:(id<SharedMatcherResult> (^)(id))t __attribute__((swift_name("neverNullMatcher(t:)")));
+ (id<SharedMatcher>)and:(id<SharedMatcher>)receiver other:(id<SharedMatcher>)other __attribute__((swift_name("and(_:other:)")));
+ (id<SharedMatcher>)or:(id<SharedMatcher>)receiver other:(id<SharedMatcher>)other __attribute__((swift_name("or(_:other:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TraceKt")))
@interface SharedTraceKt : SharedBase
+ (SharedTraceBase *)TraceSize:(int32_t)size format:(SharedTraceFormat *)format __attribute__((swift_name("Trace(size:format:)")));
@property (class, readonly) SharedTraceFormat *traceFormatDefault __attribute__((swift_name("traceFormatDefault")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TraceFormatKt")))
@interface SharedTraceFormatKt : SharedBase
+ (SharedTraceFormat *)TraceFormatFormat:(NSString *(^)(SharedInt *, id))format __attribute__((swift_name("TraceFormat(format:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AtomicFUKt")))
@interface SharedAtomicFUKt : SharedBase
+ (id)atomicInitial:(id _Nullable)initial __attribute__((swift_name("atomic(initial:)")));
+ (id)atomicInitial:(id _Nullable)initial trace:(SharedTraceBase *)trace __attribute__((swift_name("atomic(initial:trace:)")));
+ (id)atomicInitial_:(BOOL)initial __attribute__((swift_name("atomic(initial_:)")));
+ (id)atomicInitial:(BOOL)initial trace_:(SharedTraceBase *)trace __attribute__((swift_name("atomic(initial:trace_:)")));
+ (id)atomicInitial__:(int32_t)initial __attribute__((swift_name("atomic(initial__:)")));
+ (id)atomicInitial:(int32_t)initial trace__:(SharedTraceBase *)trace __attribute__((swift_name("atomic(initial:trace__:)")));
+ (id)atomicInitial___:(int64_t)initial __attribute__((swift_name("atomic(initial___:)")));
+ (id)atomicInitial:(int64_t)initial trace___:(SharedTraceBase *)trace __attribute__((swift_name("atomic(initial:trace___:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AtomicFU_commonKt")))
@interface SharedAtomicFU_commonKt : SharedBase
+ (SharedAtomicArray<id> *)atomicArrayOfNullsSize:(int32_t)size __attribute__((swift_name("atomicArrayOfNulls(size:)")));
+ (BOOL)getAndUpdate:(id)receiver function:(SharedBoolean *(^)(SharedBoolean *))function __attribute__((swift_name("getAndUpdate(_:function:)")));
+ (int32_t)getAndUpdate:(id)receiver function_:(SharedInt *(^)(SharedInt *))function __attribute__((swift_name("getAndUpdate(_:function_:)")));
+ (int64_t)getAndUpdate:(id)receiver function__:(SharedLong *(^)(SharedLong *))function __attribute__((swift_name("getAndUpdate(_:function__:)")));
+ (id _Nullable)getAndUpdate:(id)receiver function___:(id _Nullable (^)(id _Nullable))function __attribute__((swift_name("getAndUpdate(_:function___:)")));
+ (void)loop:(id)receiver action:(void (^)(SharedBoolean *))action __attribute__((swift_name("loop(_:action:)")));
+ (void)loop:(id)receiver action_:(void (^)(SharedInt *))action __attribute__((swift_name("loop(_:action_:)")));
+ (void)loop:(id)receiver action__:(void (^)(SharedLong *))action __attribute__((swift_name("loop(_:action__:)")));
+ (void)loop:(id)receiver action___:(void (^)(id _Nullable))action __attribute__((swift_name("loop(_:action___:)")));
+ (void)update:(id)receiver function:(SharedBoolean *(^)(SharedBoolean *))function __attribute__((swift_name("update(_:function:)")));
+ (void)update:(id)receiver function_:(SharedInt *(^)(SharedInt *))function __attribute__((swift_name("update(_:function_:)")));
+ (void)update:(id)receiver function__:(SharedLong *(^)(SharedLong *))function __attribute__((swift_name("update(_:function__:)")));
+ (void)update:(id)receiver function___:(id _Nullable (^)(id _Nullable))function __attribute__((swift_name("update(_:function___:)")));
+ (BOOL)updateAndGet:(id)receiver function:(SharedBoolean *(^)(SharedBoolean *))function __attribute__((swift_name("updateAndGet(_:function:)")));
+ (int32_t)updateAndGet:(id)receiver function_:(SharedInt *(^)(SharedInt *))function __attribute__((swift_name("updateAndGet(_:function_:)")));
+ (int64_t)updateAndGet:(id)receiver function__:(SharedLong *(^)(SharedLong *))function __attribute__((swift_name("updateAndGet(_:function__:)")));
+ (id _Nullable)updateAndGet:(id)receiver function___:(id _Nullable (^)(id _Nullable))function __attribute__((swift_name("updateAndGet(_:function___:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SynchronizedKt_")))
@interface SharedSynchronizedKt_ : SharedBase
+ (SharedSynchronizedObject *)reentrantLock __attribute__((swift_name("reentrantLock()")));
+ (id _Nullable)synchronizedLock:(SharedSynchronizedObject *)lock block:(id _Nullable (^)(void))block __attribute__((swift_name("synchronized(lock:block:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("JsonKt")))
@interface SharedJsonKt : SharedBase
+ (SharedJson *)JsonFrom:(SharedJson *)from builderAction:(void (^)(SharedJsonBuilder *))builderAction __attribute__((swift_name("Json(from:builderAction:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("JsonElementKt")))
@interface SharedJsonElementKt : SharedBase
+ (SharedJsonPrimitive *)JsonPrimitiveValue:(SharedBoolean * _Nullable)value __attribute__((swift_name("JsonPrimitive(value:)")));
+ (SharedJsonPrimitive *)JsonPrimitiveValue_:(id _Nullable)value __attribute__((swift_name("JsonPrimitive(value_:)")));
+ (SharedJsonPrimitive *)JsonPrimitiveValue__:(NSString * _Nullable)value __attribute__((swift_name("JsonPrimitive(value__:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("JsonElementBuildersKt")))
@interface SharedJsonElementBuildersKt : SharedBase
+ (NSArray<SharedJsonElement *> *)buildJsonArrayBuilderAction:(void (^)(SharedJsonArrayBuilder *))builderAction __attribute__((swift_name("buildJsonArray(builderAction:)")));
+ (NSDictionary<NSString *, SharedJsonElement *> *)buildJsonObjectBuilderAction:(void (^)(SharedJsonObjectBuilder *))builderAction __attribute__((swift_name("buildJsonObject(builderAction:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HelpersKt")))
@interface SharedHelpersKt : SharedBase
+ (BOOL)isFrozen:(id _Nullable)receiver __attribute__((swift_name("isFrozen(_:)")));
+ (void)ensureNeverFrozen:(id)receiver __attribute__((swift_name("ensureNeverFrozen(_:)")));
+ (id _Nullable)freeze:(id _Nullable)receiver __attribute__((swift_name("freeze(_:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DatabaseConnectionKt")))
@interface SharedDatabaseConnectionKt : SharedBase
+ (SharedJournalMode *)journalMode:(id<SharedDatabaseConnection>)receiver __attribute__((swift_name("journalMode(_:)")));
+ (int32_t)getVersion:(id<SharedDatabaseConnection>)receiver __attribute__((swift_name("getVersion(_:)")));
+ (int64_t)longForQuery:(id<SharedDatabaseConnection>)receiver sql:(NSString *)sql __attribute__((swift_name("longForQuery(_:sql:)")));
+ (void)resetCipherKey:(id<SharedDatabaseConnection>)receiver oldKey:(NSString *)oldKey newKey:(NSString *)newKey __attribute__((swift_name("resetCipherKey(_:oldKey:newKey:)")));
+ (void)setCipherKey:(id<SharedDatabaseConnection>)receiver cipherKey:(NSString *)cipherKey __attribute__((swift_name("setCipherKey(_:cipherKey:)")));
+ (void)setVersion:(id<SharedDatabaseConnection>)receiver version:(int32_t)version __attribute__((swift_name("setVersion(_:version:)")));
+ (NSString *)stringForQuery:(id<SharedDatabaseConnection>)receiver sql:(NSString *)sql __attribute__((swift_name("stringForQuery(_:sql:)")));
+ (void)updateForeignKeyConstraints:(id<SharedDatabaseConnection>)receiver enabled:(BOOL)enabled __attribute__((swift_name("updateForeignKeyConstraints(_:enabled:)")));
+ (SharedJournalMode *)updateJournalMode:(id<SharedDatabaseConnection>)receiver value:(SharedJournalMode *)value __attribute__((swift_name("updateJournalMode(_:value:)")));
+ (void)updateRecursiveTriggers:(id<SharedDatabaseConnection>)receiver enabled:(BOOL)enabled __attribute__((swift_name("updateRecursiveTriggers(_:enabled:)")));
+ (void)updateSynchronousFlag:(id<SharedDatabaseConnection>)receiver flag:(SharedSynchronousFlag *)flag __attribute__((swift_name("updateSynchronousFlag(_:flag:)")));
+ (id _Nullable)withStatement:(id<SharedDatabaseConnection>)receiver sql:(NSString *)sql proc:(id _Nullable (^)(id<SharedStatement>))proc __attribute__((swift_name("withStatement(_:sql:proc:)")));
+ (id _Nullable)withTransaction:(id<SharedDatabaseConnection>)receiver proc:(id _Nullable (^)(id<SharedDatabaseConnection>))proc __attribute__((swift_name("withTransaction(_:proc:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CreateDatabaseManagerKt")))
@interface SharedCreateDatabaseManagerKt : SharedBase
+ (id<SharedDatabaseManager>)createDatabaseManagerConfiguration:(SharedDatabaseConfiguration *)configuration __attribute__((swift_name("createDatabaseManager(configuration:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StatementKt")))
@interface SharedStatementKt : SharedBase
+ (void)bindBlob:(id<SharedStatement>)receiver index:(int32_t)index value:(SharedKotlinByteArray * _Nullable)value __attribute__((swift_name("bindBlob(_:index:value:)")));
+ (void)bindDouble:(id<SharedStatement>)receiver index:(int32_t)index value:(SharedDouble * _Nullable)value __attribute__((swift_name("bindDouble(_:index:value:)")));
+ (void)bindLong:(id<SharedStatement>)receiver index:(int32_t)index value:(SharedLong * _Nullable)value __attribute__((swift_name("bindLong(_:index:value:)")));
+ (void)bindString:(id<SharedStatement>)receiver index:(int32_t)index value:(NSString * _Nullable)value __attribute__((swift_name("bindString(_:index:value:)")));
+ (int64_t)longForQuery:(id<SharedStatement>)receiver __attribute__((swift_name("longForQuery(_:)")));
+ (NSString *)stringForQuery:(id<SharedStatement>)receiver __attribute__((swift_name("stringForQuery(_:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CursorKt")))
@interface SharedCursorKt : SharedBase
+ (int64_t)forLong:(id<SharedCursor>)receiver __attribute__((swift_name("forLong(_:)")));
+ (SharedKotlinByteArray * _Nullable)getBytesOrNull:(id<SharedCursor>)receiver index:(int32_t)index __attribute__((swift_name("getBytesOrNull(_:index:)")));
+ (int32_t)getColumnIndexOrThrow:(id<SharedCursor>)receiver name:(NSString *)name __attribute__((swift_name("getColumnIndexOrThrow(_:name:)")));
+ (SharedDouble * _Nullable)getDoubleOrNull:(id<SharedCursor>)receiver index:(int32_t)index __attribute__((swift_name("getDoubleOrNull(_:index:)")));
+ (SharedLong * _Nullable)getLongOrNull:(id<SharedCursor>)receiver index:(int32_t)index __attribute__((swift_name("getLongOrNull(_:index:)")));
+ (NSString * _Nullable)getStringOrNull:(id<SharedCursor>)receiver index:(int32_t)index __attribute__((swift_name("getStringOrNull(_:index:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DatabaseManagerKt")))
@interface SharedDatabaseManagerKt : SharedBase
+ (id _Nullable)withConnection:(id<SharedDatabaseManager>)receiver block:(id _Nullable (^)(id<SharedDatabaseConnection>))block __attribute__((swift_name("withConnection(_:block:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("UsleepKt")))
@interface SharedUsleepKt : SharedBase
+ (void)usleepSeconds:(uint32_t)seconds __attribute__((swift_name("usleep(seconds:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LockKt_")))
@interface SharedLockKt_ : SharedBase
+ (void)close:(NSRecursiveLock *)receiver __attribute__((swift_name("close(_:)")));
+ (id _Nullable)withLock:(NSRecursiveLock *)receiver block:(id _Nullable (^)(void))block __attribute__((swift_name("withLock(_:block:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PlatformKt__")))
@interface SharedPlatformKt__ : SharedBase
+ (NSString *)bytesToStringBv:(void *)bv __attribute__((swift_name("bytesToString(bv:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SqliteDatabaseKt")))
@interface SharedSqliteDatabaseKt : SharedBase
+ (SharedSqliteDatabase *)dbOpenPath:(NSString *)path openFlags:(NSArray<SharedOpenFlags *> *)openFlags label:(NSString *)label enableTrace:(BOOL)enableTrace enableProfile:(BOOL)enableProfile lookasideSlotSize:(int32_t)lookasideSlotSize lookasideSlotCount:(int32_t)lookasideSlotCount busyTimeout:(int32_t)busyTimeout logging:(id<SharedLogger_>)logging verboseDataCalls:(BOOL)verboseDataCalls __attribute__((swift_name("dbOpen(path:openFlags:label:enableTrace:enableProfile:lookasideSlotSize:lookasideSlotCount:busyTimeout:logging:verboseDataCalls:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LoggerKt_")))
@interface SharedLoggerKt_ : SharedBase
+ (void)e:(id<SharedLogger_>)receiver exception:(SharedKotlinThrowable * _Nullable)exception block:(NSString *(^)(void))block __attribute__((swift_name("e(_:exception:block:)")));
+ (void)v:(id<SharedLogger_>)receiver block:(NSString *(^)(void))block __attribute__((swift_name("v(_:block:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SerializersKt")))
@interface SharedSerializersKt : SharedBase
+ (id<SharedKSerializer>)serializer __attribute__((swift_name("serializer()")));
+ (id<SharedKSerializer>)serializerType:(id<SharedKotlinKType>)type __attribute__((swift_name("serializer(type:)")));
+ (id<SharedKSerializer> _Nullable)serializerOrNullType:(id<SharedKotlinKType>)type __attribute__((swift_name("serializerOrNull(type:)")));
+ (id<SharedKSerializer>)serializer:(id<SharedKotlinKClass>)receiver __attribute__((swift_name("serializer(_:)")));
+ (id<SharedKSerializer> _Nullable)serializerOrNull:(id<SharedKotlinKClass>)receiver __attribute__((swift_name("serializerOrNull(_:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SerialFormatKt")))
@interface SharedSerialFormatKt : SharedBase
+ (id _Nullable)decodeFromByteArray:(id<SharedBinaryFormat>)receiver bytes:(SharedKotlinByteArray *)bytes __attribute__((swift_name("decodeFromByteArray(_:bytes:)")));
+ (id _Nullable)decodeFromHexString:(id<SharedBinaryFormat>)receiver hex:(NSString *)hex __attribute__((swift_name("decodeFromHexString(_:hex:)")));
+ (id _Nullable)decodeFromHexString:(id<SharedBinaryFormat>)receiver deserializer:(id<SharedDeserializationStrategy>)deserializer hex:(NSString *)hex __attribute__((swift_name("decodeFromHexString(_:deserializer:hex:)")));
+ (id _Nullable)decodeFromString:(id<SharedStringFormat>)receiver string:(NSString *)string __attribute__((swift_name("decodeFromString(_:string:)")));
+ (SharedKotlinByteArray *)encodeToByteArray:(id<SharedBinaryFormat>)receiver value:(id _Nullable)value __attribute__((swift_name("encodeToByteArray(_:value:)")));
+ (NSString *)encodeToHexString:(id<SharedBinaryFormat>)receiver value:(id _Nullable)value __attribute__((swift_name("encodeToHexString(_:value:)")));
+ (NSString *)encodeToHexString:(id<SharedBinaryFormat>)receiver serializer:(id<SharedSerializationStrategy>)serializer value:(id _Nullable)value __attribute__((swift_name("encodeToHexString(_:serializer:value:)")));
+ (NSString *)encodeToString:(id<SharedStringFormat>)receiver value:(id _Nullable)value __attribute__((swift_name("encodeToString(_:value:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PluginExceptionsKt")))
@interface SharedPluginExceptionsKt : SharedBase
+ (void)throwArrayMissingFieldExceptionSeenArray:(SharedKotlinIntArray *)seenArray goldenMaskArray:(SharedKotlinIntArray *)goldenMaskArray descriptor:(id<SharedSerialDescriptor>)descriptor __attribute__((swift_name("throwArrayMissingFieldException(seenArray:goldenMaskArray:descriptor:)")));
+ (void)throwMissingFieldExceptionSeen:(int32_t)seen goldenMask:(int32_t)goldenMask descriptor:(id<SharedSerialDescriptor>)descriptor __attribute__((swift_name("throwMissingFieldException(seen:goldenMask:descriptor:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("JsonInternalDependenciesKt")))
@interface SharedJsonInternalDependenciesKt : SharedBase
+ (NSSet<NSString *> *)jsonCachedSerialNames:(id<SharedSerialDescriptor>)receiver __attribute__((swift_name("jsonCachedSerialNames(_:)"))) __attribute__((unavailable("Should not be used")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SerializersModuleKt")))
@interface SharedSerializersModuleKt : SharedBase
@property (class, readonly) SharedSerializersModule *EmptySerializersModule __attribute__((swift_name("EmptySerializersModule")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SerializersModuleBuildersKt")))
@interface SharedSerializersModuleBuildersKt : SharedBase
+ (SharedSerializersModule *)SerializersModuleBuilderAction:(void (^)(SharedSerializersModuleBuilder *))builderAction __attribute__((swift_name("SerializersModule(builderAction:)")));
+ (SharedSerializersModule *)serializersModuleOfKClass:(id<SharedKotlinKClass>)kClass serializer:(id<SharedKSerializer>)serializer __attribute__((swift_name("serializersModuleOf(kClass:serializer:)")));
+ (SharedSerializersModule *)serializersModuleOfSerializer:(id<SharedKSerializer>)serializer __attribute__((swift_name("serializersModuleOf(serializer:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContextAwareKt")))
@interface SharedContextAwareKt : SharedBase
+ (id<SharedKotlinKClass> _Nullable)capturedKClass:(id<SharedSerialDescriptor>)receiver __attribute__((swift_name("capturedKClass(_:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SerialDescriptorKt")))
@interface SharedSerialDescriptorKt : SharedBase
+ (id)elementDescriptors:(id<SharedSerialDescriptor>)receiver __attribute__((swift_name("elementDescriptors(_:)")));
+ (id)elementNames:(id<SharedSerialDescriptor>)receiver __attribute__((swift_name("elementNames(_:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SerialDescriptorsKt")))
@interface SharedSerialDescriptorsKt : SharedBase
+ (id<SharedSerialDescriptor>)nullable:(id<SharedSerialDescriptor>)receiver __attribute__((swift_name("nullable(_:)")));
+ (id<SharedSerialDescriptor>)PrimitiveSerialDescriptorSerialName:(NSString *)serialName kind:(SharedPrimitiveKind *)kind __attribute__((swift_name("PrimitiveSerialDescriptor(serialName:kind:)")));
+ (id<SharedSerialDescriptor>)SerialDescriptorSerialName:(NSString *)serialName original:(id<SharedSerialDescriptor>)original __attribute__((swift_name("SerialDescriptor(serialName:original:)")));
+ (id<SharedSerialDescriptor>)buildClassSerialDescriptorSerialName:(NSString *)serialName typeParameters:(SharedKotlinArray<id<SharedSerialDescriptor>> *)typeParameters builderAction:(void (^)(SharedClassSerialDescriptorBuilder *))builderAction __attribute__((swift_name("buildClassSerialDescriptor(serialName:typeParameters:builderAction:)")));
+ (id<SharedSerialDescriptor>)buildSerialDescriptorSerialName:(NSString *)serialName kind:(SharedSerialKind *)kind typeParameters:(SharedKotlinArray<id<SharedSerialDescriptor>> *)typeParameters builder:(void (^)(SharedClassSerialDescriptorBuilder *))builder __attribute__((swift_name("buildSerialDescriptor(serialName:kind:typeParameters:builder:)")));
+ (id<SharedSerialDescriptor>)listSerialDescriptor __attribute__((swift_name("listSerialDescriptor()")));
+ (id<SharedSerialDescriptor>)listSerialDescriptorElementDescriptor:(id<SharedSerialDescriptor>)elementDescriptor __attribute__((swift_name("listSerialDescriptor(elementDescriptor:)")));
+ (id<SharedSerialDescriptor>)mapSerialDescriptor __attribute__((swift_name("mapSerialDescriptor()")));
+ (id<SharedSerialDescriptor>)mapSerialDescriptorKeyDescriptor:(id<SharedSerialDescriptor>)keyDescriptor valueDescriptor:(id<SharedSerialDescriptor>)valueDescriptor __attribute__((swift_name("mapSerialDescriptor(keyDescriptor:valueDescriptor:)")));
+ (id<SharedSerialDescriptor>)serialDescriptor __attribute__((swift_name("serialDescriptor()")));
+ (id<SharedSerialDescriptor>)serialDescriptorType:(id<SharedKotlinKType>)type __attribute__((swift_name("serialDescriptor(type:)")));
+ (id<SharedSerialDescriptor>)setSerialDescriptor __attribute__((swift_name("setSerialDescriptor()")));
+ (id<SharedSerialDescriptor>)setSerialDescriptorElementDescriptor:(id<SharedSerialDescriptor>)elementDescriptor __attribute__((swift_name("setSerialDescriptor(elementDescriptor:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("BuiltinSerializersKt")))
@interface SharedBuiltinSerializersKt : SharedBase
+ (id<SharedKSerializer>)nullable:(id<SharedKSerializer>)receiver __attribute__((swift_name("nullable(_:)")));
+ (id<SharedKSerializer>)ArraySerializerKClass:(id<SharedKotlinKClass>)kClass elementSerializer:(id<SharedKSerializer>)elementSerializer __attribute__((swift_name("ArraySerializer(kClass:elementSerializer:)")));
+ (id<SharedKSerializer>)ArraySerializerElementSerializer:(id<SharedKSerializer>)elementSerializer __attribute__((swift_name("ArraySerializer(elementSerializer:)")));
+ (id<SharedKSerializer>)BooleanArraySerializer __attribute__((swift_name("BooleanArraySerializer()")));
+ (id<SharedKSerializer>)ByteArraySerializer __attribute__((swift_name("ByteArraySerializer()")));
+ (id<SharedKSerializer>)CharArraySerializer __attribute__((swift_name("CharArraySerializer()")));
+ (id<SharedKSerializer>)DoubleArraySerializer __attribute__((swift_name("DoubleArraySerializer()")));
+ (id<SharedKSerializer>)FloatArraySerializer __attribute__((swift_name("FloatArraySerializer()")));
+ (id<SharedKSerializer>)IntArraySerializer __attribute__((swift_name("IntArraySerializer()")));
+ (id<SharedKSerializer>)ListSerializerElementSerializer:(id<SharedKSerializer>)elementSerializer __attribute__((swift_name("ListSerializer(elementSerializer:)")));
+ (id<SharedKSerializer>)LongArraySerializer __attribute__((swift_name("LongArraySerializer()")));
+ (id<SharedKSerializer>)MapEntrySerializerKeySerializer:(id<SharedKSerializer>)keySerializer valueSerializer:(id<SharedKSerializer>)valueSerializer __attribute__((swift_name("MapEntrySerializer(keySerializer:valueSerializer:)")));
+ (id<SharedKSerializer>)MapSerializerKeySerializer:(id<SharedKSerializer>)keySerializer valueSerializer:(id<SharedKSerializer>)valueSerializer __attribute__((swift_name("MapSerializer(keySerializer:valueSerializer:)")));
+ (id<SharedKSerializer>)PairSerializerKeySerializer:(id<SharedKSerializer>)keySerializer valueSerializer:(id<SharedKSerializer>)valueSerializer __attribute__((swift_name("PairSerializer(keySerializer:valueSerializer:)")));
+ (id<SharedKSerializer>)SetSerializerElementSerializer:(id<SharedKSerializer>)elementSerializer __attribute__((swift_name("SetSerializer(elementSerializer:)")));
+ (id<SharedKSerializer>)ShortArraySerializer __attribute__((swift_name("ShortArraySerializer()")));
+ (id<SharedKSerializer>)TripleSerializerASerializer:(id<SharedKSerializer>)aSerializer bSerializer:(id<SharedKSerializer>)bSerializer cSerializer:(id<SharedKSerializer>)cSerializer __attribute__((swift_name("TripleSerializer(aSerializer:bSerializer:cSerializer:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DecodingKt")))
@interface SharedDecodingKt : SharedBase
+ (id _Nullable)decodeStructure:(id<SharedDecoder>)receiver descriptor:(id<SharedSerialDescriptor>)descriptor block:(id _Nullable (^)(id<SharedCompositeDecoder>))block __attribute__((swift_name("decodeStructure(_:descriptor:block:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("EncodingKt")))
@interface SharedEncodingKt : SharedBase
+ (void)encodeStructure:(id<SharedEncoder_>)receiver descriptor:(id<SharedSerialDescriptor>)descriptor block:(void (^)(id<SharedCompositeEncoder>))block __attribute__((swift_name("encodeStructure(_:descriptor:block:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinEnumCompanion")))
@interface SharedKotlinEnumCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedKotlinEnumCompanion *shared __attribute__((swift_name("shared")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinNothing")))
@interface SharedKotlinNothing : SharedBase
@end;

__attribute__((swift_name("KotlinKDeclarationContainer")))
@protocol SharedKotlinKDeclarationContainer
@required
@end;

__attribute__((swift_name("KotlinKAnnotatedElement")))
@protocol SharedKotlinKAnnotatedElement
@required
@end;

__attribute__((swift_name("KotlinKClassifier")))
@protocol SharedKotlinKClassifier
@required
@end;

__attribute__((swift_name("KotlinKClass")))
@protocol SharedKotlinKClass <SharedKotlinKDeclarationContainer, SharedKotlinKAnnotatedElement, SharedKotlinKClassifier>
@required
- (BOOL)isInstanceValue:(id _Nullable)value __attribute__((swift_name("isInstance(value:)")));
@property (readonly) NSString * _Nullable qualifiedName __attribute__((swift_name("qualifiedName")));
@property (readonly) NSString * _Nullable simpleName __attribute__((swift_name("simpleName")));
@end;

__attribute__((swift_name("KotlinFunction")))
@protocol SharedKotlinFunction
@required
@end;

__attribute__((swift_name("KotlinSuspendFunction0")))
@protocol SharedKotlinSuspendFunction0 <SharedKotlinFunction>
@required

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)invokeWithCompletionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("invoke(completionHandler:)")));
@end;

__attribute__((swift_name("KotlinSequence")))
@protocol SharedKotlinSequence
@required
- (id<SharedKotlinIterator>)iterator __attribute__((swift_name("iterator()")));
@end;

__attribute__((swift_name("KotlinLazy")))
@protocol SharedKotlinLazy
@required
- (BOOL)isInitialized __attribute__((swift_name("isInitialized()")));
@property (readonly, getter=value_) id _Nullable value __attribute__((swift_name("value")));
@end;

__attribute__((swift_name("KotlinSuspendFunction1")))
@protocol SharedKotlinSuspendFunction1 <SharedKotlinFunction>
@required

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)invokeP1:(id _Nullable)p1 completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("invoke(p1:completionHandler:)")));
@end;

__attribute__((swift_name("KotlinUIntProgression")))
@interface SharedKotlinUIntProgression : SharedBase <SharedKotlinIterable>
@property (class, readonly, getter=companion) SharedKotlinUIntProgressionCompanion *companion __attribute__((swift_name("companion")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (BOOL)isEmpty __attribute__((swift_name("isEmpty()")));
- (id<SharedKotlinIterator>)iterator __attribute__((swift_name("iterator()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) uint32_t first __attribute__((swift_name("first")));
@property (readonly) uint32_t last __attribute__((swift_name("last")));
@property (readonly, getter=step_) int32_t step __attribute__((swift_name("step")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinUIntRange")))
@interface SharedKotlinUIntRange : SharedKotlinUIntProgression <SharedKotlinClosedRange>
- (instancetype)initWithStart:(uint32_t)start endInclusive:(uint32_t)endInclusive __attribute__((swift_name("init(start:endInclusive:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedKotlinUIntRangeCompanion *companion __attribute__((swift_name("companion")));
- (BOOL)containsValue:(SharedUInt *)value __attribute__((swift_name("contains(value:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (BOOL)isEmpty __attribute__((swift_name("isEmpty()")));
- (BOOL)isEmpty_ __attribute__((swift_name("isEmpty()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedUInt *endInclusive __attribute__((swift_name("endInclusive")));
@property (readonly, getter=start_) SharedUInt *start __attribute__((swift_name("start")));
@end;

__attribute__((swift_name("KotlinULongProgression")))
@interface SharedKotlinULongProgression : SharedBase <SharedKotlinIterable>
@property (class, readonly, getter=companion) SharedKotlinULongProgressionCompanion *companion __attribute__((swift_name("companion")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (BOOL)isEmpty __attribute__((swift_name("isEmpty()")));
- (id<SharedKotlinIterator>)iterator __attribute__((swift_name("iterator()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) uint64_t first __attribute__((swift_name("first")));
@property (readonly) uint64_t last __attribute__((swift_name("last")));
@property (readonly, getter=step_) int64_t step __attribute__((swift_name("step")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinULongRange")))
@interface SharedKotlinULongRange : SharedKotlinULongProgression <SharedKotlinClosedRange>
- (instancetype)initWithStart:(uint64_t)start endInclusive:(uint64_t)endInclusive __attribute__((swift_name("init(start:endInclusive:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedKotlinULongRangeCompanion *companion __attribute__((swift_name("companion")));
- (BOOL)containsValue:(SharedULong *)value __attribute__((swift_name("contains(value:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (BOOL)isEmpty __attribute__((swift_name("isEmpty()")));
- (BOOL)isEmpty_ __attribute__((swift_name("isEmpty()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedULong *endInclusive __attribute__((swift_name("endInclusive")));
@property (readonly, getter=start_) SharedULong *start __attribute__((swift_name("start")));
@end;

__attribute__((swift_name("KotlinTimeMark")))
@interface SharedKotlinTimeMark : SharedBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (int64_t)elapsedNow __attribute__((swift_name("elapsedNow()")));
- (BOOL)hasNotPassedNow __attribute__((swift_name("hasNotPassedNow()")));
- (BOOL)hasPassedNow __attribute__((swift_name("hasPassedNow()")));
- (SharedKotlinTimeMark *)minusDuration:(int64_t)duration __attribute__((swift_name("minus(duration:)")));
- (SharedKotlinTimeMark *)plusDuration:(int64_t)duration __attribute__((swift_name("plus(duration:)")));
@end;

__attribute__((swift_name("KotlinAnnotation")))
@protocol SharedKotlinAnnotation
@required
@end;

__attribute__((swift_name("KotlinKType")))
@protocol SharedKotlinKType
@required
@property (readonly) NSArray<SharedKotlinKTypeProjection *> *arguments __attribute__((swift_name("arguments")));
@property (readonly) id<SharedKotlinKClassifier> _Nullable classifier __attribute__((swift_name("classifier")));
@property (readonly) BOOL isMarkedNullable __attribute__((swift_name("isMarkedNullable")));
@end;

__attribute__((swift_name("KotlinKCallable")))
@protocol SharedKotlinKCallable <SharedKotlinKAnnotatedElement>
@required
@property (readonly) NSString *name_ __attribute__((swift_name("name_")));
@property (readonly) id<SharedKotlinKType> returnType __attribute__((swift_name("returnType")));
@end;

__attribute__((swift_name("KotlinKProperty")))
@protocol SharedKotlinKProperty <SharedKotlinKCallable>
@required
@end;

__attribute__((swift_name("KotlinSuspendFunction2")))
@protocol SharedKotlinSuspendFunction2 <SharedKotlinFunction>
@required

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)invokeP1:(id _Nullable)p1 p2:(id _Nullable)p2 completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("invoke(p1:p2:completionHandler:)")));
@end;

__attribute__((swift_name("KotlinIterator")))
@protocol SharedKotlinIterator
@required
- (BOOL)hasNext __attribute__((swift_name("hasNext()")));
- (id _Nullable)next_ __attribute__((swift_name("next()")));
@end;

__attribute__((swift_name("KotlinSuspendFunction3")))
@protocol SharedKotlinSuspendFunction3 <SharedKotlinFunction>
@required

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)invokeP1:(id _Nullable)p1 p2:(id _Nullable)p2 p3:(id _Nullable)p3 completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("invoke(p1:p2:p3:completionHandler:)")));
@end;

__attribute__((swift_name("KotlinMutableIterator")))
@protocol SharedKotlinMutableIterator <SharedKotlinIterator>
@required
- (void)remove_ __attribute__((swift_name("remove_()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinCharArray")))
@interface SharedKotlinCharArray : SharedBase
+ (instancetype)arrayWithSize:(int32_t)size __attribute__((swift_name("init(size:)")));
+ (instancetype)arrayWithSize:(int32_t)size init:(id (^)(SharedInt *))init __attribute__((swift_name("init(size:init:)")));
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (unichar)getIndex:(int32_t)index __attribute__((swift_name("get(index:)")));
- (SharedKotlinCharIterator *)iterator __attribute__((swift_name("iterator()")));
- (void)setIndex:(int32_t)index value:(unichar)value __attribute__((swift_name("set(index:value:)")));
@property (readonly) int32_t size __attribute__((swift_name("size")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AbstractSharedLinkedListNode")))
@interface SharedAbstractSharedLinkedListNode<T> : SharedBase
- (instancetype)initWithList:(NSMutableArray<id> *)list __attribute__((swift_name("init(list:)"))) __attribute__((objc_designated_initializer));
- (BOOL)addT:(T _Nullable)t __attribute__((swift_name("add(t:)")));
- (void)readd __attribute__((swift_name("readd()")));
- (void)removePermanent:(BOOL)permanent __attribute__((swift_name("remove(permanent:)")));
- (void)setT:(T _Nullable)t __attribute__((swift_name("set(t:)")));
@property (readonly) BOOL isRemoved __attribute__((swift_name("isRemoved")));
@property (readonly) NSMutableArray<id> *list __attribute__((swift_name("list")));
@property (readonly) SharedAtomicReference_<SharedAbstractSharedLinkedListNode<T> *> *next __attribute__((swift_name("next")));
@property (readonly) T _Nullable nodeValue __attribute__((swift_name("nodeValue")));
@property (readonly) SharedAtomicReference_<SharedAbstractSharedLinkedListNode<T> *> *prev __attribute__((swift_name("prev")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinRegexOption")))
@interface SharedKotlinRegexOption : SharedKotlinEnum<SharedKotlinRegexOption *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedKotlinRegexOption *ignoreCase __attribute__((swift_name("ignoreCase")));
@property (class, readonly) SharedKotlinRegexOption *multiline __attribute__((swift_name("multiline")));
@property (class, readonly) SharedKotlinRegexOption *literal __attribute__((swift_name("literal")));
@property (class, readonly) SharedKotlinRegexOption *unixLines __attribute__((swift_name("unixLines")));
@property (class, readonly) SharedKotlinRegexOption *comments __attribute__((swift_name("comments")));
@property (class, readonly) SharedKotlinRegexOption *dotMatchesAll __attribute__((swift_name("dotMatchesAll")));
@property (class, readonly) SharedKotlinRegexOption *canonEq __attribute__((swift_name("canonEq")));
+ (SharedKotlinArray<SharedKotlinRegexOption *> *)values __attribute__((swift_name("values()")));
@property (readonly) int32_t mask __attribute__((swift_name("mask")));
@property (readonly, getter=value) int32_t value_ __attribute__((swift_name("value_")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinRegex.Companion")))
@interface SharedKotlinRegexCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedKotlinRegexCompanion *shared __attribute__((swift_name("shared")));
- (NSString *)escapeLiteral:(NSString *)literal __attribute__((swift_name("escape(literal:)")));
- (NSString *)escapeReplacementLiteral:(NSString *)literal __attribute__((swift_name("escapeReplacement(literal:)")));
- (SharedKotlinRegex *)fromLiteralLiteral:(NSString *)literal __attribute__((swift_name("fromLiteral(literal:)")));
@end;

__attribute__((swift_name("KotlinMatchResult")))
@protocol SharedKotlinMatchResult
@required
- (id<SharedKotlinMatchResult> _Nullable)next_ __attribute__((swift_name("next()")));
@property (readonly) SharedKotlinMatchResultDestructured *destructured __attribute__((swift_name("destructured")));
@property (readonly) NSArray<NSString *> *groupValues __attribute__((swift_name("groupValues")));
@property (readonly) id<SharedKotlinMatchGroupCollection> groups __attribute__((swift_name("groups")));
@property (readonly) SharedKotlinIntRange *range __attribute__((swift_name("range")));
@property (readonly, getter=value_) NSString *value __attribute__((swift_name("value")));
@end;

__attribute__((swift_name("KotlinComparator")))
@protocol SharedKotlinComparator
@required
- (int32_t)compareA:(id _Nullable)a b:(id _Nullable)b __attribute__((swift_name("compare(a:b:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinRandom.Default")))
@interface SharedKotlinRandomDefault : SharedKotlinRandom
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
+ (instancetype)default_ __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedKotlinRandomDefault *shared __attribute__((swift_name("shared")));
- (int32_t)nextBitsBitCount:(int32_t)bitCount __attribute__((swift_name("nextBits(bitCount:)")));
- (BOOL)nextBoolean __attribute__((swift_name("nextBoolean()")));
- (SharedKotlinByteArray *)nextBytesArray:(SharedKotlinByteArray *)array __attribute__((swift_name("nextBytes(array:)")));
- (SharedKotlinByteArray *)nextBytesArray:(SharedKotlinByteArray *)array fromIndex:(int32_t)fromIndex toIndex:(int32_t)toIndex __attribute__((swift_name("nextBytes(array:fromIndex:toIndex:)")));
- (SharedKotlinByteArray *)nextBytesSize:(int32_t)size __attribute__((swift_name("nextBytes(size:)")));
- (double)nextDouble __attribute__((swift_name("nextDouble()")));
- (double)nextDoubleUntil:(double)until __attribute__((swift_name("nextDouble(until:)")));
- (double)nextDoubleFrom:(double)from until:(double)until __attribute__((swift_name("nextDouble(from:until:)")));
- (float)nextFloat __attribute__((swift_name("nextFloat()")));
- (int32_t)nextInt __attribute__((swift_name("nextInt()")));
- (int32_t)nextIntUntil:(int32_t)until __attribute__((swift_name("nextInt(until:)")));
- (int32_t)nextIntFrom:(int32_t)from until:(int32_t)until __attribute__((swift_name("nextInt(from:until:)")));
- (int64_t)nextLong __attribute__((swift_name("nextLong()")));
- (int64_t)nextLongUntil:(int64_t)until __attribute__((swift_name("nextLong(until:)")));
- (int64_t)nextLongFrom:(int64_t)from until:(int64_t)until __attribute__((swift_name("nextLong(from:until:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinBooleanArray")))
@interface SharedKotlinBooleanArray : SharedBase
+ (instancetype)arrayWithSize:(int32_t)size __attribute__((swift_name("init(size:)")));
+ (instancetype)arrayWithSize:(int32_t)size init:(SharedBoolean *(^)(SharedInt *))init __attribute__((swift_name("init(size:init:)")));
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (BOOL)getIndex:(int32_t)index __attribute__((swift_name("get(index:)")));
- (SharedKotlinBooleanIterator *)iterator __attribute__((swift_name("iterator()")));
- (void)setIndex:(int32_t)index value:(BOOL)value __attribute__((swift_name("set(index:value:)")));
@property (readonly) int32_t size __attribute__((swift_name("size")));
@end;

__attribute__((swift_name("KotlinCharProgression")))
@interface SharedKotlinCharProgression : SharedBase <SharedKotlinIterable>
@property (class, readonly, getter=companion) SharedKotlinCharProgressionCompanion *companion __attribute__((swift_name("companion")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (BOOL)isEmpty __attribute__((swift_name("isEmpty()")));
- (SharedKotlinCharIterator *)iterator __attribute__((swift_name("iterator()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) unichar first __attribute__((swift_name("first")));
@property (readonly) unichar last __attribute__((swift_name("last")));
@property (readonly, getter=step_) int32_t step __attribute__((swift_name("step")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinCharRange")))
@interface SharedKotlinCharRange : SharedKotlinCharProgression <SharedKotlinClosedRange>
- (instancetype)initWithStart:(unichar)start endInclusive:(unichar)endInclusive __attribute__((swift_name("init(start:endInclusive:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedKotlinCharRangeCompanion *companion __attribute__((swift_name("companion")));
- (BOOL)containsValue:(id)value __attribute__((swift_name("contains(value:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (BOOL)isEmpty __attribute__((swift_name("isEmpty()")));
- (BOOL)isEmpty_ __attribute__((swift_name("isEmpty()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) id endInclusive __attribute__((swift_name("endInclusive")));
@property (readonly, getter=start_) id start __attribute__((swift_name("start")));
@end;

__attribute__((swift_name("KotlinClosedFloatingPointRange")))
@protocol SharedKotlinClosedFloatingPointRange <SharedKotlinClosedRange>
@required
- (BOOL)lessThanOrEqualsA:(id)a b:(id)b __attribute__((swift_name("lessThanOrEquals(a:b:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinDoubleArray")))
@interface SharedKotlinDoubleArray : SharedBase
+ (instancetype)arrayWithSize:(int32_t)size __attribute__((swift_name("init(size:)")));
+ (instancetype)arrayWithSize:(int32_t)size init:(SharedDouble *(^)(SharedInt *))init __attribute__((swift_name("init(size:init:)")));
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (double)getIndex:(int32_t)index __attribute__((swift_name("get(index:)")));
- (SharedKotlinDoubleIterator *)iterator __attribute__((swift_name("iterator()")));
- (void)setIndex:(int32_t)index value:(double)value __attribute__((swift_name("set(index:value:)")));
@property (readonly) int32_t size __attribute__((swift_name("size")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinFloatArray")))
@interface SharedKotlinFloatArray : SharedBase
+ (instancetype)arrayWithSize:(int32_t)size __attribute__((swift_name("init(size:)")));
+ (instancetype)arrayWithSize:(int32_t)size init:(SharedFloat *(^)(SharedInt *))init __attribute__((swift_name("init(size:init:)")));
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (float)getIndex:(int32_t)index __attribute__((swift_name("get(index:)")));
- (SharedKotlinFloatIterator *)iterator __attribute__((swift_name("iterator()")));
- (void)setIndex:(int32_t)index value:(float)value __attribute__((swift_name("set(index:value:)")));
@property (readonly) int32_t size __attribute__((swift_name("size")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinShortArray")))
@interface SharedKotlinShortArray : SharedBase
+ (instancetype)arrayWithSize:(int32_t)size __attribute__((swift_name("init(size:)")));
+ (instancetype)arrayWithSize:(int32_t)size init:(SharedShort *(^)(SharedInt *))init __attribute__((swift_name("init(size:init:)")));
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (int16_t)getIndex:(int32_t)index __attribute__((swift_name("get(index:)")));
- (SharedKotlinShortIterator *)iterator __attribute__((swift_name("iterator()")));
- (void)setIndex:(int32_t)index value:(int16_t)value __attribute__((swift_name("set(index:value:)")));
@property (readonly) int32_t size __attribute__((swift_name("size")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinLongProgression.Companion")))
@interface SharedKotlinLongProgressionCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedKotlinLongProgressionCompanion *shared __attribute__((swift_name("shared")));
- (SharedKotlinLongProgression *)fromClosedRangeRangeStart:(int64_t)rangeStart rangeEnd:(int64_t)rangeEnd step:(int64_t)step __attribute__((swift_name("fromClosedRange(rangeStart:rangeEnd:step:)")));
@end;

__attribute__((swift_name("KotlinLongIterator")))
@interface SharedKotlinLongIterator : SharedBase <SharedKotlinIterator>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (SharedLong *)next_ __attribute__((swift_name("next()")));
- (int64_t)nextLong __attribute__((swift_name("nextLong()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinLongRange.Companion")))
@interface SharedKotlinLongRangeCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedKotlinLongRangeCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) SharedKotlinLongRange *EMPTY __attribute__((swift_name("EMPTY")));
@end;

__attribute__((swift_name("KotlinByteIterator")))
@interface SharedKotlinByteIterator : SharedBase <SharedKotlinIterator>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (SharedByte *)next_ __attribute__((swift_name("next()")));
- (int8_t)nextByte __attribute__((swift_name("nextByte()")));
@end;

__attribute__((swift_name("KotlinIntIterator")))
@interface SharedKotlinIntIterator : SharedBase <SharedKotlinIterator>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (SharedInt *)next_ __attribute__((swift_name("next()")));
- (int32_t)nextInt __attribute__((swift_name("nextInt()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinIntProgression.Companion")))
@interface SharedKotlinIntProgressionCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedKotlinIntProgressionCompanion *shared __attribute__((swift_name("shared")));
- (SharedKotlinIntProgression *)fromClosedRangeRangeStart:(int32_t)rangeStart rangeEnd:(int32_t)rangeEnd step:(int32_t)step __attribute__((swift_name("fromClosedRange(rangeStart:rangeEnd:step:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinIntRange.Companion")))
@interface SharedKotlinIntRangeCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedKotlinIntRangeCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) SharedKotlinIntRange *EMPTY __attribute__((swift_name("EMPTY")));
@end;

__attribute__((swift_name("KotlinSuspendFunction13")))
@protocol SharedKotlinSuspendFunction13 <SharedKotlinFunction>
@required

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)invokeP1:(id _Nullable)p1 p2:(id _Nullable)p2 p3:(id _Nullable)p3 p4:(id _Nullable)p4 p5:(id _Nullable)p5 p6:(id _Nullable)p6 p7:(id _Nullable)p7 p8:(id _Nullable)p8 p9:(id _Nullable)p9 p10:(id _Nullable)p10 p11:(id _Nullable)p11 p12:(id _Nullable)p12 p13:(id _Nullable)p13 completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("invoke(p1:p2:p3:p4:p5:p6:p7:p8:p9:p10:p11:p12:p13:completionHandler:)")));
@end;

__attribute__((swift_name("KotlinSuspendFunction12")))
@protocol SharedKotlinSuspendFunction12 <SharedKotlinFunction>
@required

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)invokeP1:(id _Nullable)p1 p2:(id _Nullable)p2 p3:(id _Nullable)p3 p4:(id _Nullable)p4 p5:(id _Nullable)p5 p6:(id _Nullable)p6 p7:(id _Nullable)p7 p8:(id _Nullable)p8 p9:(id _Nullable)p9 p10:(id _Nullable)p10 p11:(id _Nullable)p11 p12:(id _Nullable)p12 completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("invoke(p1:p2:p3:p4:p5:p6:p7:p8:p9:p10:p11:p12:completionHandler:)")));
@end;

__attribute__((swift_name("KotlinSuspendFunction11")))
@protocol SharedKotlinSuspendFunction11 <SharedKotlinFunction>
@required

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)invokeP1:(id _Nullable)p1 p2:(id _Nullable)p2 p3:(id _Nullable)p3 p4:(id _Nullable)p4 p5:(id _Nullable)p5 p6:(id _Nullable)p6 p7:(id _Nullable)p7 p8:(id _Nullable)p8 p9:(id _Nullable)p9 p10:(id _Nullable)p10 p11:(id _Nullable)p11 completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("invoke(p1:p2:p3:p4:p5:p6:p7:p8:p9:p10:p11:completionHandler:)")));
@end;

__attribute__((swift_name("KotlinSuspendFunction10")))
@protocol SharedKotlinSuspendFunction10 <SharedKotlinFunction>
@required

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)invokeP1:(id _Nullable)p1 p2:(id _Nullable)p2 p3:(id _Nullable)p3 p4:(id _Nullable)p4 p5:(id _Nullable)p5 p6:(id _Nullable)p6 p7:(id _Nullable)p7 p8:(id _Nullable)p8 p9:(id _Nullable)p9 p10:(id _Nullable)p10 completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("invoke(p1:p2:p3:p4:p5:p6:p7:p8:p9:p10:completionHandler:)")));
@end;

__attribute__((swift_name("KotlinSuspendFunction9")))
@protocol SharedKotlinSuspendFunction9 <SharedKotlinFunction>
@required

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)invokeP1:(id _Nullable)p1 p2:(id _Nullable)p2 p3:(id _Nullable)p3 p4:(id _Nullable)p4 p5:(id _Nullable)p5 p6:(id _Nullable)p6 p7:(id _Nullable)p7 p8:(id _Nullable)p8 p9:(id _Nullable)p9 completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("invoke(p1:p2:p3:p4:p5:p6:p7:p8:p9:completionHandler:)")));
@end;

__attribute__((swift_name("KotlinSuspendFunction8")))
@protocol SharedKotlinSuspendFunction8 <SharedKotlinFunction>
@required

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)invokeP1:(id _Nullable)p1 p2:(id _Nullable)p2 p3:(id _Nullable)p3 p4:(id _Nullable)p4 p5:(id _Nullable)p5 p6:(id _Nullable)p6 p7:(id _Nullable)p7 p8:(id _Nullable)p8 completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("invoke(p1:p2:p3:p4:p5:p6:p7:p8:completionHandler:)")));
@end;

__attribute__((swift_name("KotlinSuspendFunction7")))
@protocol SharedKotlinSuspendFunction7 <SharedKotlinFunction>
@required

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)invokeP1:(id _Nullable)p1 p2:(id _Nullable)p2 p3:(id _Nullable)p3 p4:(id _Nullable)p4 p5:(id _Nullable)p5 p6:(id _Nullable)p6 p7:(id _Nullable)p7 completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("invoke(p1:p2:p3:p4:p5:p6:p7:completionHandler:)")));
@end;

__attribute__((swift_name("KotlinSuspendFunction6")))
@protocol SharedKotlinSuspendFunction6 <SharedKotlinFunction>
@required

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)invokeP1:(id _Nullable)p1 p2:(id _Nullable)p2 p3:(id _Nullable)p3 p4:(id _Nullable)p4 p5:(id _Nullable)p5 p6:(id _Nullable)p6 completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("invoke(p1:p2:p3:p4:p5:p6:completionHandler:)")));
@end;

__attribute__((swift_name("KotlinSuspendFunction5")))
@protocol SharedKotlinSuspendFunction5 <SharedKotlinFunction>
@required

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)invokeP1:(id _Nullable)p1 p2:(id _Nullable)p2 p3:(id _Nullable)p3 p4:(id _Nullable)p4 p5:(id _Nullable)p5 completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("invoke(p1:p2:p3:p4:p5:completionHandler:)")));
@end;

__attribute__((swift_name("KotlinSuspendFunction4")))
@protocol SharedKotlinSuspendFunction4 <SharedKotlinFunction>
@required

/**
 @note This method converts instances of CancellationException to errors.
 Other uncaught Kotlin exceptions are fatal.
*/
- (void)invokeP1:(id _Nullable)p1 p2:(id _Nullable)p2 p3:(id _Nullable)p3 p4:(id _Nullable)p4 completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("invoke(p1:p2:p3:p4:completionHandler:)")));
@end;

__attribute__((swift_name("KotlinCharSequence")))
@protocol SharedKotlinCharSequence
@required
- (unichar)getIndex:(int32_t)index __attribute__((swift_name("get(index:)")));
- (id)subSequenceStartIndex:(int32_t)startIndex endIndex:(int32_t)endIndex __attribute__((swift_name("subSequence(startIndex:endIndex:)")));
@property (readonly) int32_t length __attribute__((swift_name("length")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinStringBuilder")))
@interface SharedKotlinStringBuilder : SharedBase <SharedKotlinCharSequence, SharedKotlinAppendable>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (instancetype)initWithCapacity:(int32_t)capacity __attribute__((swift_name("init(capacity:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithContent:(NSString *)content __attribute__((swift_name("init(content:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithContent_:(id)content __attribute__((swift_name("init(content_:)"))) __attribute__((objc_designated_initializer));
- (SharedKotlinStringBuilder *)appendValue__:(id _Nullable)value __attribute__((swift_name("append(value__:)")));
- (SharedKotlinStringBuilder *)appendValue___:(BOOL)value __attribute__((swift_name("append(value___:)")));
- (SharedKotlinStringBuilder *)appendValue____:(int8_t)value __attribute__((swift_name("append(value____:)")));
- (SharedKotlinStringBuilder *)appendValue:(unichar)value __attribute__((swift_name("append(value:)")));
- (SharedKotlinStringBuilder *)appendValue_____:(SharedKotlinCharArray *)value __attribute__((swift_name("append(value_____:)")));
- (SharedKotlinStringBuilder *)appendValue_:(id _Nullable)value __attribute__((swift_name("append(value_:)")));
- (SharedKotlinStringBuilder *)appendValue:(id _Nullable)value startIndex:(int32_t)startIndex endIndex:(int32_t)endIndex __attribute__((swift_name("append(value:startIndex:endIndex:)")));
- (SharedKotlinStringBuilder *)appendValue______:(double)value __attribute__((swift_name("append(value______:)")));
- (SharedKotlinStringBuilder *)appendValue_______:(float)value __attribute__((swift_name("append(value_______:)")));
- (SharedKotlinStringBuilder *)appendValue________:(int32_t)value __attribute__((swift_name("append(value________:)")));
- (SharedKotlinStringBuilder *)appendValue_________:(int64_t)value __attribute__((swift_name("append(value_________:)")));
- (SharedKotlinStringBuilder *)appendValue__________:(int16_t)value __attribute__((swift_name("append(value__________:)")));
- (SharedKotlinStringBuilder *)appendValue___________:(NSString * _Nullable)value __attribute__((swift_name("append(value___________:)")));
- (SharedKotlinStringBuilder *)appendRangeValue:(SharedKotlinCharArray *)value startIndex:(int32_t)startIndex endIndex:(int32_t)endIndex __attribute__((swift_name("appendRange(value:startIndex:endIndex:)")));
- (SharedKotlinStringBuilder *)appendRangeValue:(id)value startIndex:(int32_t)startIndex endIndex_:(int32_t)endIndex __attribute__((swift_name("appendRange(value:startIndex:endIndex_:)")));
- (int32_t)capacity __attribute__((swift_name("capacity()")));
- (SharedKotlinStringBuilder *)deleteAtIndex:(int32_t)index __attribute__((swift_name("deleteAt(index:)")));
- (SharedKotlinStringBuilder *)deleteRangeStartIndex:(int32_t)startIndex endIndex:(int32_t)endIndex __attribute__((swift_name("deleteRange(startIndex:endIndex:)")));
- (void)ensureCapacityMinimumCapacity:(int32_t)minimumCapacity __attribute__((swift_name("ensureCapacity(minimumCapacity:)")));
- (unichar)getIndex:(int32_t)index __attribute__((swift_name("get(index:)")));
- (int32_t)indexOfString:(NSString *)string __attribute__((swift_name("indexOf(string:)")));
- (int32_t)indexOfString:(NSString *)string startIndex:(int32_t)startIndex __attribute__((swift_name("indexOf(string:startIndex:)")));
- (SharedKotlinStringBuilder *)insertIndex:(int32_t)index value:(id _Nullable)value __attribute__((swift_name("insert(index:value:)")));
- (SharedKotlinStringBuilder *)insertIndex:(int32_t)index value_:(BOOL)value __attribute__((swift_name("insert(index:value_:)")));
- (SharedKotlinStringBuilder *)insertIndex:(int32_t)index value__:(int8_t)value __attribute__((swift_name("insert(index:value__:)")));
- (SharedKotlinStringBuilder *)insertIndex:(int32_t)index value___:(unichar)value __attribute__((swift_name("insert(index:value___:)")));
- (SharedKotlinStringBuilder *)insertIndex:(int32_t)index value____:(SharedKotlinCharArray *)value __attribute__((swift_name("insert(index:value____:)")));
- (SharedKotlinStringBuilder *)insertIndex:(int32_t)index value_____:(id _Nullable)value __attribute__((swift_name("insert(index:value_____:)")));
- (SharedKotlinStringBuilder *)insertIndex:(int32_t)index value______:(double)value __attribute__((swift_name("insert(index:value______:)")));
- (SharedKotlinStringBuilder *)insertIndex:(int32_t)index value_______:(float)value __attribute__((swift_name("insert(index:value_______:)")));
- (SharedKotlinStringBuilder *)insertIndex:(int32_t)index value________:(int32_t)value __attribute__((swift_name("insert(index:value________:)")));
- (SharedKotlinStringBuilder *)insertIndex:(int32_t)index value_________:(int64_t)value __attribute__((swift_name("insert(index:value_________:)")));
- (SharedKotlinStringBuilder *)insertIndex:(int32_t)index value__________:(int16_t)value __attribute__((swift_name("insert(index:value__________:)")));
- (SharedKotlinStringBuilder *)insertIndex:(int32_t)index value___________:(NSString * _Nullable)value __attribute__((swift_name("insert(index:value___________:)")));
- (SharedKotlinStringBuilder *)insertRangeIndex:(int32_t)index value:(SharedKotlinCharArray *)value startIndex:(int32_t)startIndex endIndex:(int32_t)endIndex __attribute__((swift_name("insertRange(index:value:startIndex:endIndex:)")));
- (SharedKotlinStringBuilder *)insertRangeIndex:(int32_t)index value:(id)value startIndex:(int32_t)startIndex endIndex_:(int32_t)endIndex __attribute__((swift_name("insertRange(index:value:startIndex:endIndex_:)")));
- (int32_t)lastIndexOfString:(NSString *)string __attribute__((swift_name("lastIndexOf(string:)")));
- (int32_t)lastIndexOfString:(NSString *)string startIndex:(int32_t)startIndex __attribute__((swift_name("lastIndexOf(string:startIndex:)")));
- (SharedKotlinStringBuilder *)reverse __attribute__((swift_name("reverse()")));
- (void)setIndex:(int32_t)index value:(unichar)value __attribute__((swift_name("set(index:value:)")));
- (void)setLengthNewLength:(int32_t)newLength __attribute__((swift_name("setLength(newLength:)")));
- (SharedKotlinStringBuilder *)setRangeStartIndex:(int32_t)startIndex endIndex:(int32_t)endIndex value:(NSString *)value __attribute__((swift_name("setRange(startIndex:endIndex:value:)")));
- (id)subSequenceStartIndex:(int32_t)startIndex endIndex:(int32_t)endIndex __attribute__((swift_name("subSequence(startIndex:endIndex:)")));
- (NSString *)substringStartIndex:(int32_t)startIndex __attribute__((swift_name("substring(startIndex:)")));
- (NSString *)substringStartIndex:(int32_t)startIndex endIndex:(int32_t)endIndex __attribute__((swift_name("substring(startIndex:endIndex:)")));
- (void)toCharArrayDestination:(SharedKotlinCharArray *)destination destinationOffset:(int32_t)destinationOffset startIndex:(int32_t)startIndex endIndex:(int32_t)endIndex __attribute__((swift_name("toCharArray(destination:destinationOffset:startIndex:endIndex:)")));
- (NSString *)description __attribute__((swift_name("description()")));
- (void)trimToSize __attribute__((swift_name("trimToSize()")));
@property (readonly) int32_t length __attribute__((swift_name("length")));
@end;

__attribute__((swift_name("KotlinNativePlacement")))
@protocol SharedKotlinNativePlacement
@required
- (void *)doAllocSize:(int32_t)size align:(int32_t)align __attribute__((swift_name("doAlloc(size:align:)")));
- (void *)doAllocSize:(int64_t)size align_:(int32_t)align __attribute__((swift_name("doAlloc(size:align_:)")));
@end;

__attribute__((swift_name("KotlinNativeFreeablePlacement")))
@protocol SharedKotlinNativeFreeablePlacement <SharedKotlinNativePlacement>
@required
- (void)freeMem:(void * _Nullable)mem __attribute__((swift_name("free(mem:)")));
@end;

__attribute__((swift_name("KotlinCValuesRef")))
@interface SharedKotlinCValuesRef<T> : SharedBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (void *)getPointerScope:(SharedKotlinAutofreeScope *)scope __attribute__((swift_name("getPointer(scope:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinUIntProgression.Companion")))
@interface SharedKotlinUIntProgressionCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedKotlinUIntProgressionCompanion *shared __attribute__((swift_name("shared")));
- (SharedKotlinUIntProgression *)fromClosedRangeRangeStart:(uint32_t)rangeStart rangeEnd:(uint32_t)rangeEnd step:(int32_t)step __attribute__((swift_name("fromClosedRange(rangeStart:rangeEnd:step:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinUIntRange.Companion")))
@interface SharedKotlinUIntRangeCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedKotlinUIntRangeCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) SharedKotlinUIntRange *EMPTY __attribute__((swift_name("EMPTY")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinULongProgression.Companion")))
@interface SharedKotlinULongProgressionCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedKotlinULongProgressionCompanion *shared __attribute__((swift_name("shared")));
- (SharedKotlinULongProgression *)fromClosedRangeRangeStart:(uint64_t)rangeStart rangeEnd:(uint64_t)rangeEnd step:(int64_t)step __attribute__((swift_name("fromClosedRange(rangeStart:rangeEnd:step:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinULongRange.Companion")))
@interface SharedKotlinULongRangeCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedKotlinULongRangeCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) SharedKotlinULongRange *EMPTY __attribute__((swift_name("EMPTY")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinKTypeProjection")))
@interface SharedKotlinKTypeProjection : SharedBase
- (instancetype)initWithVariance:(SharedKotlinKVariance * _Nullable)variance type:(id<SharedKotlinKType> _Nullable)type __attribute__((swift_name("init(variance:type:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedKotlinKTypeProjectionCompanion *companion __attribute__((swift_name("companion")));
- (SharedKotlinKVariance * _Nullable)component1 __attribute__((swift_name("component1()")));
- (id<SharedKotlinKType> _Nullable)component2 __attribute__((swift_name("component2()")));
- (SharedKotlinKTypeProjection *)doCopyVariance:(SharedKotlinKVariance * _Nullable)variance type:(id<SharedKotlinKType> _Nullable)type __attribute__((swift_name("doCopy(variance:type:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) id<SharedKotlinKType> _Nullable type __attribute__((swift_name("type")));
@property (readonly) SharedKotlinKVariance * _Nullable variance __attribute__((swift_name("variance")));
@end;

__attribute__((swift_name("KotlinCharIterator")))
@interface SharedKotlinCharIterator : SharedBase <SharedKotlinIterator>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (id)next_ __attribute__((swift_name("next()")));
- (unichar)nextChar __attribute__((swift_name("nextChar()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinMatchResultDestructured")))
@interface SharedKotlinMatchResultDestructured : SharedBase
- (NSString *)component1 __attribute__((swift_name("component1()")));
- (NSString *)component10 __attribute__((swift_name("component10()")));
- (NSString *)component2 __attribute__((swift_name("component2()")));
- (NSString *)component3 __attribute__((swift_name("component3()")));
- (NSString *)component4 __attribute__((swift_name("component4()")));
- (NSString *)component5 __attribute__((swift_name("component5()")));
- (NSString *)component6 __attribute__((swift_name("component6()")));
- (NSString *)component7 __attribute__((swift_name("component7()")));
- (NSString *)component8 __attribute__((swift_name("component8()")));
- (NSString *)component9 __attribute__((swift_name("component9()")));
- (NSArray<NSString *> *)toList __attribute__((swift_name("toList()")));
@property (readonly) id<SharedKotlinMatchResult> match __attribute__((swift_name("match")));
@end;

__attribute__((swift_name("KotlinMatchGroupCollection")))
@protocol SharedKotlinMatchGroupCollection <SharedKotlinCollection>
@required
- (SharedKotlinMatchGroup * _Nullable)getIndex_:(int32_t)index __attribute__((swift_name("get(index_:)")));
@end;

__attribute__((swift_name("KotlinBooleanIterator")))
@interface SharedKotlinBooleanIterator : SharedBase <SharedKotlinIterator>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (SharedBoolean *)next_ __attribute__((swift_name("next()")));
- (BOOL)nextBoolean __attribute__((swift_name("nextBoolean()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinCharProgression.Companion")))
@interface SharedKotlinCharProgressionCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedKotlinCharProgressionCompanion *shared __attribute__((swift_name("shared")));
- (SharedKotlinCharProgression *)fromClosedRangeRangeStart:(unichar)rangeStart rangeEnd:(unichar)rangeEnd step:(int32_t)step __attribute__((swift_name("fromClosedRange(rangeStart:rangeEnd:step:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinCharRange.Companion")))
@interface SharedKotlinCharRangeCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedKotlinCharRangeCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) SharedKotlinCharRange *EMPTY __attribute__((swift_name("EMPTY")));
@end;

__attribute__((swift_name("KotlinDoubleIterator")))
@interface SharedKotlinDoubleIterator : SharedBase <SharedKotlinIterator>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (SharedDouble *)next_ __attribute__((swift_name("next()")));
- (double)nextDouble __attribute__((swift_name("nextDouble()")));
@end;

__attribute__((swift_name("KotlinFloatIterator")))
@interface SharedKotlinFloatIterator : SharedBase <SharedKotlinIterator>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (SharedFloat *)next_ __attribute__((swift_name("next()")));
- (float)nextFloat __attribute__((swift_name("nextFloat()")));
@end;

__attribute__((swift_name("KotlinShortIterator")))
@interface SharedKotlinShortIterator : SharedBase <SharedKotlinIterator>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (SharedShort *)next_ __attribute__((swift_name("next()")));
- (int16_t)nextShort __attribute__((swift_name("nextShort()")));
@end;

__attribute__((swift_name("KotlinDeferScope")))
@interface SharedKotlinDeferScope : SharedBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (void)deferBlock:(void (^)(void))block __attribute__((swift_name("defer(block:)")));
@end;

__attribute__((swift_name("KotlinAutofreeScope")))
@interface SharedKotlinAutofreeScope : SharedKotlinDeferScope <SharedKotlinNativePlacement>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (void *)doAllocSize:(int64_t)size align_:(int32_t)align __attribute__((swift_name("doAlloc(size:align_:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinKVariance")))
@interface SharedKotlinKVariance : SharedKotlinEnum<SharedKotlinKVariance *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedKotlinKVariance *invariant __attribute__((swift_name("invariant")));
@property (class, readonly) SharedKotlinKVariance *in __attribute__((swift_name("in")));
@property (class, readonly) SharedKotlinKVariance *out __attribute__((swift_name("out")));
+ (SharedKotlinArray<SharedKotlinKVariance *> *)values __attribute__((swift_name("values()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinKTypeProjection.Companion")))
@interface SharedKotlinKTypeProjectionCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedKotlinKTypeProjectionCompanion *shared __attribute__((swift_name("shared")));
- (SharedKotlinKTypeProjection *)contravariantType:(id<SharedKotlinKType>)type __attribute__((swift_name("contravariant(type:)")));
- (SharedKotlinKTypeProjection *)covariantType:(id<SharedKotlinKType>)type __attribute__((swift_name("covariant(type:)")));
- (SharedKotlinKTypeProjection *)invariantType:(id<SharedKotlinKType>)type __attribute__((swift_name("invariant(type:)")));
@property (readonly) SharedKotlinKTypeProjection *STAR __attribute__((swift_name("STAR")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinMatchGroup")))
@interface SharedKotlinMatchGroup : SharedBase
- (instancetype)initWithValue:(NSString *)value range:(SharedKotlinIntRange *)range __attribute__((swift_name("init(value:range:)"))) __attribute__((objc_designated_initializer));
- (NSString *)component1 __attribute__((swift_name("component1()")));
- (SharedKotlinIntRange *)component2 __attribute__((swift_name("component2()")));
- (SharedKotlinMatchGroup *)doCopyValue:(NSString *)value range:(SharedKotlinIntRange *)range __attribute__((swift_name("doCopy(value:range:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedKotlinIntRange *range __attribute__((swift_name("range")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end;

#pragma pop_macro("_Nullable_result")
#pragma clang diagnostic pop
NS_ASSUME_NONNULL_END
